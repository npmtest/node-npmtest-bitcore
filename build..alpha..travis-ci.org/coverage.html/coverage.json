{"/home/travis/build/npmtest/node-npmtest-bitcore/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_bitcore */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/lib.npmtest_bitcore.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/lib.npmtest_bitcore.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":58}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_bitcore */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_bitcore = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_bitcore = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":51}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":65},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-bitcore && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_bitcore */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_bitcore","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_bitcore.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_bitcore.rollup.js'] =","            local.assetsDict['/assets.npmtest_bitcore.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_bitcore.__dirname + '/lib.npmtest_bitcore.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}}},"branchMap":{},"code":["'use strict';","","var bitcore = require('bitcore-lib');","","module.exports = bitcore;",""],"l":{"3":1,"5":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1},"b":{"1":[0,1]},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":23},"end":{"line":7,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"3":{"start":{"line":7,"column":0},"end":{"line":14,"column":2}},"4":{"start":{"line":8,"column":2},"end":{"line":13,"column":3}},"5":{"start":{"line":9,"column":4},"end":{"line":11,"column":60}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":29}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":20}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":47}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":53}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":51}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":55}},"14":{"start":{"line":24,"column":0},"end":{"line":24,"column":53}},"15":{"start":{"line":25,"column":0},"end":{"line":25,"column":61}},"16":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}},"17":{"start":{"line":29,"column":0},"end":{"line":29,"column":59}},"18":{"start":{"line":30,"column":0},"end":{"line":30,"column":69}},"19":{"start":{"line":31,"column":0},"end":{"line":31,"column":71}},"20":{"start":{"line":32,"column":0},"end":{"line":32,"column":71}},"21":{"start":{"line":33,"column":0},"end":{"line":33,"column":59}},"22":{"start":{"line":36,"column":0},"end":{"line":36,"column":18}},"23":{"start":{"line":37,"column":0},"end":{"line":37,"column":51}},"24":{"start":{"line":38,"column":0},"end":{"line":38,"column":43}},"25":{"start":{"line":39,"column":0},"end":{"line":39,"column":65}},"26":{"start":{"line":42,"column":0},"end":{"line":42,"column":41}},"27":{"start":{"line":45,"column":0},"end":{"line":45,"column":43}},"28":{"start":{"line":46,"column":0},"end":{"line":46,"column":39}},"29":{"start":{"line":47,"column":0},"end":{"line":47,"column":57}},"30":{"start":{"line":48,"column":0},"end":{"line":48,"column":57}},"31":{"start":{"line":49,"column":0},"end":{"line":49,"column":56}},"32":{"start":{"line":50,"column":0},"end":{"line":50,"column":54}},"33":{"start":{"line":51,"column":0},"end":{"line":51,"column":45}},"34":{"start":{"line":52,"column":0},"end":{"line":52,"column":41}},"35":{"start":{"line":53,"column":0},"end":{"line":53,"column":49}},"36":{"start":{"line":54,"column":0},"end":{"line":54,"column":47}},"37":{"start":{"line":55,"column":0},"end":{"line":55,"column":41}},"38":{"start":{"line":56,"column":0},"end":{"line":56,"column":51}},"39":{"start":{"line":57,"column":0},"end":{"line":57,"column":35}},"40":{"start":{"line":58,"column":0},"end":{"line":58,"column":37}},"41":{"start":{"line":61,"column":0},"end":{"line":61,"column":18}},"42":{"start":{"line":62,"column":0},"end":{"line":62,"column":37}},"43":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}},"44":{"start":{"line":64,"column":0},"end":{"line":64,"column":29}},"45":{"start":{"line":65,"column":0},"end":{"line":65,"column":44}},"46":{"start":{"line":66,"column":0},"end":{"line":66,"column":35}},"47":{"start":{"line":69,"column":0},"end":{"line":69,"column":50}},"48":{"start":{"line":70,"column":0},"end":{"line":70,"column":67}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]}},"code":["'use strict';","","var bitcore = module.exports;","","// module information","bitcore.version = 'v' + require('./package.json').version;","bitcore.versionGuard = function(version) {","  if (version !== undefined) {","    var message = 'More than one instance of bitcore-lib found. ' + ","      'Please make sure to require bitcore-lib and check that submodules do' +","      ' not also include their own bitcore-lib dependency.';","    throw new Error(message);","  }","};","bitcore.versionGuard(global._bitcore);","global._bitcore = bitcore.version;","","// crypto","bitcore.crypto = {};","bitcore.crypto.BN = require('./lib/crypto/bn');","bitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');","bitcore.crypto.Hash = require('./lib/crypto/hash');","bitcore.crypto.Random = require('./lib/crypto/random');","bitcore.crypto.Point = require('./lib/crypto/point');","bitcore.crypto.Signature = require('./lib/crypto/signature');","","// encoding","bitcore.encoding = {};","bitcore.encoding.Base58 = require('./lib/encoding/base58');","bitcore.encoding.Base58Check = require('./lib/encoding/base58check');","bitcore.encoding.BufferReader = require('./lib/encoding/bufferreader');","bitcore.encoding.BufferWriter = require('./lib/encoding/bufferwriter');","bitcore.encoding.Varint = require('./lib/encoding/varint');","","// utilities","bitcore.util = {};","bitcore.util.buffer = require('./lib/util/buffer');","bitcore.util.js = require('./lib/util/js');","bitcore.util.preconditions = require('./lib/util/preconditions');","","// errors thrown by the library","bitcore.errors = require('./lib/errors');","","// main bitcoin library","bitcore.Address = require('./lib/address');","bitcore.Block = require('./lib/block');","bitcore.MerkleBlock = require('./lib/block/merkleblock');","bitcore.BlockHeader = require('./lib/block/blockheader');","bitcore.HDPrivateKey = require('./lib/hdprivatekey.js');","bitcore.HDPublicKey = require('./lib/hdpublickey.js');","bitcore.Networks = require('./lib/networks');","bitcore.Opcode = require('./lib/opcode');","bitcore.PrivateKey = require('./lib/privatekey');","bitcore.PublicKey = require('./lib/publickey');","bitcore.Script = require('./lib/script');","bitcore.Transaction = require('./lib/transaction');","bitcore.URI = require('./lib/uri');","bitcore.Unit = require('./lib/unit');","","// dependencies, subject to change","bitcore.deps = {};","bitcore.deps.bnjs = require('bn.js');","bitcore.deps.bs58 = require('bs58');","bitcore.deps.Buffer = Buffer;","bitcore.deps.elliptic = require('elliptic');","bitcore.deps._ = require('lodash');","","// Internal usage, exposed for testing/advanced tweaking","bitcore._HDKeyCache = require('./lib/hdkeycache');","bitcore.Transaction.sighash = require('./lib/transaction/sighash');",""],"l":{"3":1,"6":1,"7":1,"8":1,"9":0,"12":0,"15":1,"16":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"36":1,"37":1,"38":1,"39":1,"42":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"69":1,"70":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/bn.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/bn.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":1,"88":0,"89":1,"90":0,"91":1,"92":0,"93":1,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":31}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":16},"end":{"line":19,"column":28}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":36}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":16},"end":{"line":29,"column":36}}},"5":{"name":"(anonymous_5)","line":42,"loc":{"start":{"line":42,"column":12},"end":{"line":42,"column":32}}},"6":{"name":"(anonymous_6)","line":67,"loc":{"start":{"line":67,"column":24},"end":{"line":67,"column":35}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":24},"end":{"line":71,"column":39}}},"8":{"name":"(anonymous_8)","line":97,"loc":{"start":{"line":97,"column":29},"end":{"line":97,"column":40}}},"9":{"name":"(anonymous_9)","line":119,"loc":{"start":{"line":119,"column":20},"end":{"line":119,"column":35}}},"10":{"name":"(anonymous_10)","line":137,"loc":{"start":{"line":137,"column":25},"end":{"line":137,"column":62}}},"11":{"name":"(anonymous_11)","line":169,"loc":{"start":{"line":169,"column":33},"end":{"line":169,"column":44}}},"12":{"name":"(anonymous_12)","line":175,"loc":{"start":{"line":175,"column":18},"end":{"line":175,"column":30}}},"13":{"name":"(anonymous_13)","line":179,"loc":{"start":{"line":179,"column":19},"end":{"line":179,"column":31}}},"14":{"name":"(anonymous_14)","line":183,"loc":{"start":{"line":183,"column":18},"end":{"line":183,"column":30}}},"15":{"name":"(anonymous_15)","line":187,"loc":{"start":{"line":187,"column":10},"end":{"line":187,"column":32}}},"16":{"name":"(anonymous_16)","line":191,"loc":{"start":{"line":191,"column":9},"end":{"line":191,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"4":{"start":{"line":7,"column":0},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":36}},"6":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":38}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":14}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":20}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":19}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":23}},"12":{"start":{"line":19,"column":0},"end":{"line":22,"column":2}},"13":{"start":{"line":20,"column":2},"end":{"line":20,"column":33}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":19}},"15":{"start":{"line":24,"column":0},"end":{"line":27,"column":2}},"16":{"start":{"line":25,"column":2},"end":{"line":25,"column":35}},"17":{"start":{"line":26,"column":2},"end":{"line":26,"column":27}},"18":{"start":{"line":29,"column":0},"end":{"line":36,"column":2}},"19":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"20":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"21":{"start":{"line":33,"column":2},"end":{"line":33,"column":32}},"22":{"start":{"line":34,"column":2},"end":{"line":34,"column":27}},"23":{"start":{"line":35,"column":2},"end":{"line":35,"column":12}},"24":{"start":{"line":42,"column":0},"end":{"line":64,"column":2}},"25":{"start":{"line":43,"column":2},"end":{"line":43,"column":10}},"26":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"28":{"start":{"line":48,"column":2},"end":{"line":48,"column":21}},"29":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"30":{"start":{"line":50,"column":4},"end":{"line":50,"column":25}},"31":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"32":{"start":{"line":53,"column":4},"end":{"line":53,"column":26}},"33":{"start":{"line":56,"column":2},"end":{"line":62,"column":3}},"34":{"start":{"line":57,"column":4},"end":{"line":57,"column":27}},"35":{"start":{"line":58,"column":4},"end":{"line":58,"column":29}},"36":{"start":{"line":59,"column":4},"end":{"line":59,"column":24}},"37":{"start":{"line":61,"column":4},"end":{"line":61,"column":29}},"38":{"start":{"line":63,"column":2},"end":{"line":63,"column":13}},"39":{"start":{"line":67,"column":0},"end":{"line":69,"column":2}},"40":{"start":{"line":68,"column":2},"end":{"line":68,"column":41}},"41":{"start":{"line":71,"column":0},"end":{"line":95,"column":2}},"42":{"start":{"line":72,"column":2},"end":{"line":72,"column":15}},"43":{"start":{"line":73,"column":2},"end":{"line":88,"column":3}},"44":{"start":{"line":74,"column":4},"end":{"line":74,"column":31}},"45":{"start":{"line":75,"column":4},"end":{"line":75,"column":32}},"46":{"start":{"line":76,"column":4},"end":{"line":76,"column":33}},"47":{"start":{"line":78,"column":4},"end":{"line":84,"column":5}},"48":{"start":{"line":79,"column":6},"end":{"line":79,"column":16}},"49":{"start":{"line":80,"column":11},"end":{"line":84,"column":5}},"50":{"start":{"line":81,"column":6},"end":{"line":81,"column":33}},"51":{"start":{"line":82,"column":11},"end":{"line":84,"column":5}},"52":{"start":{"line":83,"column":6},"end":{"line":83,"column":43}},"53":{"start":{"line":86,"column":4},"end":{"line":86,"column":31}},"54":{"start":{"line":87,"column":4},"end":{"line":87,"column":33}},"55":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"56":{"start":{"line":91,"column":4},"end":{"line":91,"column":26}},"57":{"start":{"line":94,"column":2},"end":{"line":94,"column":13}},"58":{"start":{"line":97,"column":0},"end":{"line":117,"column":2}},"59":{"start":{"line":98,"column":2},"end":{"line":98,"column":10}},"60":{"start":{"line":99,"column":2},"end":{"line":111,"column":3}},"61":{"start":{"line":100,"column":4},"end":{"line":100,"column":32}},"62":{"start":{"line":101,"column":4},"end":{"line":105,"column":5}},"63":{"start":{"line":102,"column":6},"end":{"line":102,"column":53}},"64":{"start":{"line":104,"column":6},"end":{"line":104,"column":29}},"65":{"start":{"line":107,"column":4},"end":{"line":107,"column":26}},"66":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"67":{"start":{"line":109,"column":6},"end":{"line":109,"column":53}},"68":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"69":{"start":{"line":114,"column":4},"end":{"line":114,"column":25}},"70":{"start":{"line":116,"column":2},"end":{"line":116,"column":13}},"71":{"start":{"line":119,"column":0},"end":{"line":127,"column":2}},"72":{"start":{"line":120,"column":2},"end":{"line":120,"column":42}},"73":{"start":{"line":121,"column":2},"end":{"line":121,"column":33}},"74":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"75":{"start":{"line":124,"column":4},"end":{"line":124,"column":26}},"76":{"start":{"line":126,"column":2},"end":{"line":126,"column":13}},"77":{"start":{"line":137,"column":0},"end":{"line":161,"column":2}},"78":{"start":{"line":138,"column":2},"end":{"line":138,"column":30}},"79":{"start":{"line":139,"column":2},"end":{"line":139,"column":82}},"80":{"start":{"line":140,"column":2},"end":{"line":157,"column":3}},"81":{"start":{"line":147,"column":4},"end":{"line":156,"column":5}},"82":{"start":{"line":153,"column":6},"end":{"line":155,"column":7}},"83":{"start":{"line":154,"column":8},"end":{"line":154,"column":63}},"84":{"start":{"line":158,"column":2},"end":{"line":160,"column":5}},"85":{"start":{"line":169,"column":0},"end":{"line":173,"column":2}},"86":{"start":{"line":170,"column":2},"end":{"line":172,"column":5}},"87":{"start":{"line":175,"column":0},"end":{"line":177,"column":2}},"88":{"start":{"line":176,"column":2},"end":{"line":176,"column":25}},"89":{"start":{"line":179,"column":0},"end":{"line":181,"column":2}},"90":{"start":{"line":180,"column":2},"end":{"line":180,"column":26}},"91":{"start":{"line":183,"column":0},"end":{"line":185,"column":2}},"92":{"start":{"line":184,"column":2},"end":{"line":184,"column":25}},"93":{"start":{"line":187,"column":0},"end":{"line":189,"column":2}},"94":{"start":{"line":188,"column":2},"end":{"line":188,"column":52}},"95":{"start":{"line":191,"column":0},"end":{"line":200,"column":2}},"96":{"start":{"line":192,"column":2},"end":{"line":192,"column":30}},"97":{"start":{"line":193,"column":2},"end":{"line":195,"column":3}},"98":{"start":{"line":194,"column":4},"end":{"line":194,"column":56}},"99":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"100":{"start":{"line":197,"column":4},"end":{"line":197,"column":16}},"101":{"start":{"line":199,"column":2},"end":{"line":199,"column":14}},"102":{"start":{"line":202,"column":0},"end":{"line":202,"column":20}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":33}},{"start":{"line":30,"column":37},"end":{"line":30,"column":61}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"8":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":10}},{"start":{"line":73,"column":14},"end":{"line":73,"column":23}}]},"9":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"10":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":11},"end":{"line":80,"column":11}},{"start":{"line":80,"column":11},"end":{"line":80,"column":11}}]},"11":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":11},"end":{"line":82,"column":11}},{"start":{"line":82,"column":11},"end":{"line":82,"column":11}}]},"12":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"13":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":33}},{"start":{"line":90,"column":37},"end":{"line":90,"column":61}}]},"14":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"15":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"16":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"17":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"18":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":22},"end":{"line":120,"column":33}},{"start":{"line":120,"column":36},"end":{"line":120,"column":41}}]},"19":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"20":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":20},"end":{"line":138,"column":24}},{"start":{"line":138,"column":28},"end":{"line":138,"column":29}}]},"21":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"22":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":21}},{"start":{"line":140,"column":25},"end":{"line":140,"column":39}}]},"23":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"24":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":6},"end":{"line":153,"column":6}},{"start":{"line":153,"column":6},"end":{"line":153,"column":6}}]},"25":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":10},"end":{"line":153,"column":25}},{"start":{"line":153,"column":29},"end":{"line":153,"column":63}}]}},"code":["'use strict';","","var BN = require('bn.js');","var $ = require('../util/preconditions');","var _ = require('lodash');","","var reversebuf = function(buf) {","  var buf2 = new Buffer(buf.length);","  for (var i = 0; i < buf.length; i++) {","    buf2[i] = buf[buf.length - 1 - i];","  }","  return buf2;","};","","BN.Zero = new BN(0);","BN.One = new BN(1);","BN.Minus1 = new BN(-1);","","BN.fromNumber = function(n) {","  $.checkArgument(_.isNumber(n));","  return new BN(n);","};","","BN.fromString = function(str, base) {","  $.checkArgument(_.isString(str));","  return new BN(str, base);","};","","BN.fromBuffer = function(buf, opts) {","  if (typeof opts !== 'undefined' && opts.endian === 'little') {","    buf = reversebuf(buf);","  }","  var hex = buf.toString('hex');","  var bn = new BN(hex, 16);","  return bn;","};","","/**"," * Instantiate a BigNumber from a \"signed magnitude buffer\""," * (a buffer where the most significant bit represents the sign (0 = positive, -1 = negative))"," */","BN.fromSM = function(buf, opts) {","  var ret;","  if (buf.length === 0) {","    return BN.fromBuffer(new Buffer([0]));","  }","","  var endian = 'big';","  if (opts) {","    endian = opts.endian;","  }","  if (endian === 'little') {","    buf = reversebuf(buf);","  }","","  if (buf[0] & 0x80) {","    buf[0] = buf[0] & 0x7f;","    ret = BN.fromBuffer(buf);","    ret.neg().copy(ret);","  } else {","    ret = BN.fromBuffer(buf);","  }","  return ret;","};","","","BN.prototype.toNumber = function() {","  return parseInt(this.toString(10), 10);","};","","BN.prototype.toBuffer = function(opts) {","  var buf, hex;","  if (opts && opts.size) {","    hex = this.toString(16, 2);","    var natlen = hex.length / 2;","    buf = new Buffer(hex, 'hex');","","    if (natlen === opts.size) {","      buf = buf;","    } else if (natlen > opts.size) {","      buf = BN.trim(buf, natlen);","    } else if (natlen < opts.size) {","      buf = BN.pad(buf, natlen, opts.size);","    }","  } else {","    hex = this.toString(16, 2);","    buf = new Buffer(hex, 'hex');","  }","","  if (typeof opts !== 'undefined' && opts.endian === 'little') {","    buf = reversebuf(buf);","  }","","  return buf;","};","","BN.prototype.toSMBigEndian = function() {","  var buf;","  if (this.cmp(BN.Zero) === -1) {","    buf = this.neg().toBuffer();","    if (buf[0] & 0x80) {","      buf = Buffer.concat([new Buffer([0x80]), buf]);","    } else {","      buf[0] = buf[0] | 0x80;","    }","  } else {","    buf = this.toBuffer();","    if (buf[0] & 0x80) {","      buf = Buffer.concat([new Buffer([0x00]), buf]);","    }","  }","","  if (buf.length === 1 & buf[0] === 0) {","    buf = new Buffer([]);","  }","  return buf;","};","","BN.prototype.toSM = function(opts) {","  var endian = opts ? opts.endian : 'big';","  var buf = this.toSMBigEndian();","","  if (endian === 'little') {","    buf = reversebuf(buf);","  }","  return buf;","};","","/**"," * Create a BN from a \"ScriptNum\":"," * This is analogous to the constructor for CScriptNum in bitcoind. Many ops in"," * bitcoind's script interpreter use CScriptNum, which is not really a proper"," * bignum. Instead, an error is thrown if trying to input a number bigger than"," * 4 bytes. We copy that behavior here. A third argument, `size`, is provided to"," * extend the hard limit of 4 bytes, as some usages require more than 4 bytes."," */","BN.fromScriptNumBuffer = function(buf, fRequireMinimal, size) {","  var nMaxNumSize = size || 4;","  $.checkArgument(buf.length <= nMaxNumSize, new Error('script number overflow'));","  if (fRequireMinimal && buf.length > 0) {","    // Check that the number is encoded with the minimum possible","    // number of bytes.","    //","    // If the most-significant-byte - excluding the sign bit - is zero","    // then we're not minimal. Note how this test also rejects the","    // negative-zero encoding, 0x80.","    if ((buf[buf.length - 1] & 0x7f) === 0) {","      // One exception: if there's more than one byte and the most","      // significant bit of the second-most-significant-byte is set","      // it would conflict with the sign bit. An example of this case","      // is +-255, which encode to 0xff00 and 0xff80 respectively.","      // (big-endian).","      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {","        throw new Error('non-minimally encoded script number');","      }","    }","  }","  return BN.fromSM(buf, {","    endian: 'little'","  });","};","","/**"," * The corollary to the above, with the notable exception that we do not throw"," * an error if the output is larger than four bytes. (Which can happen if"," * performing a numerical operation that results in an overflow to more than 4"," * bytes)."," */","BN.prototype.toScriptNumBuffer = function() {","  return this.toSM({","    endian: 'little'","  });","};","","BN.prototype.gt = function(b) {","  return this.cmp(b) > 0;","};","","BN.prototype.gte = function(b) {","  return this.cmp(b) >= 0;","};","","BN.prototype.lt = function(b) {","  return this.cmp(b) < 0;","};","","BN.trim = function(buf, natlen) {","  return buf.slice(natlen - buf.length, buf.length);","};","","BN.pad = function(buf, natlen, size) {","  var rbuf = new Buffer(size);","  for (var i = 0; i < buf.length; i++) {","    rbuf[rbuf.length - 1 - i] = buf[buf.length - 1 - i];","  }","  for (i = 0; i < size - natlen; i++) {","    rbuf[i] = 0;","  }","  return rbuf;","};","","module.exports = BN;",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"9":0,"10":0,"12":0,"15":1,"16":1,"17":1,"19":1,"20":0,"21":0,"24":1,"25":0,"26":0,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"42":1,"43":0,"44":0,"45":0,"48":0,"49":0,"50":0,"52":0,"53":0,"56":0,"57":0,"58":0,"59":0,"61":0,"63":0,"67":1,"68":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"86":0,"87":0,"90":0,"91":0,"94":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"104":0,"107":0,"108":0,"109":0,"113":0,"114":0,"116":0,"119":1,"120":0,"121":0,"123":0,"124":0,"126":0,"137":1,"138":0,"139":0,"140":0,"147":0,"153":0,"154":0,"158":0,"169":1,"170":0,"175":1,"176":0,"179":1,"180":0,"183":1,"184":0,"187":1,"188":0,"191":1,"192":0,"193":0,"194":0,"196":0,"197":0,"199":0,"202":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/bn.js/lib/bn.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/bn.js/lib/bn.js","s":{"1":1,"2":1,"3":4617,"4":0,"5":1,"6":5,"7":5,"8":5,"9":5,"10":5,"11":1,"12":1535,"13":152,"14":1383,"15":1383,"16":1383,"17":1383,"18":1383,"19":0,"20":0,"21":1383,"22":413,"23":1,"24":1,"25":0,"26":1,"27":1,"28":1,"29":413,"30":15,"31":1,"32":1,"33":15,"34":14,"35":14,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":15,"43":398,"44":0,"45":398,"46":1,"47":398,"48":398,"49":398,"50":398,"51":1,"52":398,"53":398,"54":0,"55":398,"56":1,"57":398,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":4338,"90":4338,"91":4338,"92":25186,"93":25186,"94":25186,"95":9419,"96":15767,"97":0,"98":15767,"99":4338,"100":1,"101":398,"102":398,"103":398,"104":4338,"105":398,"106":398,"107":3940,"108":3940,"109":3940,"110":3940,"111":3940,"112":3544,"113":3544,"114":398,"115":398,"116":398,"117":398,"118":398,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":499,"159":499,"160":4864,"161":499,"162":499,"163":499,"164":1,"165":499,"166":499,"167":499,"168":1,"169":2767,"170":422,"171":2767,"172":1,"173":2896,"174":16,"175":2896,"176":1,"177":0,"178":1,"179":1,"180":1,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":1,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":1,"237":1,"238":936,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":1,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":1,"276":936,"277":936,"278":936,"279":936,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":1,"291":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":1,"306":0,"307":0,"308":0,"309":1,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":1,"340":0,"341":0,"342":0,"343":1,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":1,"354":1105,"355":129,"356":129,"357":129,"358":129,"359":976,"360":0,"361":0,"362":0,"363":0,"364":976,"365":976,"366":976,"367":466,"368":466,"369":510,"370":510,"371":976,"372":976,"373":6421,"374":6421,"375":6421,"376":976,"377":20,"378":20,"379":20,"380":976,"381":976,"382":0,"383":0,"384":976,"385":510,"386":3302,"387":976,"388":1,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":1,"403":388,"404":0,"405":0,"406":0,"407":0,"408":388,"409":0,"410":0,"411":0,"412":0,"413":388,"414":388,"415":2,"416":2,"417":2,"418":2,"419":386,"420":386,"421":386,"422":143,"423":143,"424":243,"425":243,"426":386,"427":386,"428":3833,"429":3833,"430":3833,"431":386,"432":0,"433":0,"434":0,"435":386,"436":2,"437":18,"438":386,"439":386,"440":243,"441":386,"442":1,"443":79,"444":1,"445":470,"446":470,"447":470,"448":470,"449":8867,"450":8867,"451":8867,"452":8867,"453":46451,"454":46451,"455":46451,"456":46451,"457":46451,"458":46451,"459":46451,"460":46451,"461":46451,"462":8867,"463":8867,"464":470,"465":464,"466":6,"467":470,"468":1,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":1,"498":470,"499":470,"500":470,"501":0,"502":470,"503":1,"504":470,"505":470,"506":470,"507":1,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":1,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":1,"555":0,"556":1,"557":0,"558":1,"559":1,"560":1,"561":1,"562":1,"563":1,"564":1,"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":0,"572":0,"573":1,"574":1,"575":1,"576":1,"577":9,"578":1,"579":1,"580":1,"581":136,"582":136,"583":136,"584":0,"585":136,"586":136,"587":136,"588":136,"589":136,"590":136,"591":136,"592":136,"593":0,"594":0,"595":0,"596":136,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":136,"604":136,"605":750,"606":750,"607":750,"608":136,"609":0,"610":136,"611":0,"612":0,"613":136,"614":136,"615":1,"616":0,"617":1,"618":0,"619":1,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":1,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":1,"641":0,"642":1,"643":23,"644":23,"645":0,"646":23,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":23,"656":1,"657":23,"658":23,"659":4,"660":4,"661":0,"662":4,"663":23,"664":23,"665":1,"666":43,"667":43,"668":23,"669":20,"670":0,"671":0,"672":0,"673":0,"674":20,"675":20,"676":0,"677":0,"678":20,"679":1,"680":0,"681":1,"682":0,"683":1,"684":0,"685":0,"686":1,"687":0,"688":1,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":1,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":1,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":1,"792":0,"793":1,"794":0,"795":1,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":1,"807":1,"808":1,"809":1,"810":1,"811":10,"812":1,"813":1,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":1,"822":0,"823":1,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":1,"866":1,"867":1,"868":1,"869":1,"870":1,"871":0,"872":1,"873":1,"874":1,"875":1,"876":1,"877":1,"878":1,"879":1,"880":0,"881":1,"882":1,"883":0,"884":0,"885":0,"886":0,"887":1,"888":0,"889":0,"890":1,"891":1,"892":1,"893":1,"894":0,"895":1,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":1,"922":0,"923":1,"924":4,"925":1,"926":134,"927":1,"928":176,"929":1,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":1,"952":599,"953":599,"954":1,"955":599,"956":112,"957":487,"958":0,"959":487,"960":487,"961":487,"962":487,"963":448,"964":39,"965":39,"966":487,"967":1,"968":487,"969":1,"970":429,"971":0,"972":429,"973":0,"974":429,"975":429,"976":0,"977":429,"978":1,"979":682,"980":1,"981":681,"982":3,"983":678,"984":678,"985":696,"986":696,"987":696,"988":20,"989":676,"990":510,"991":166,"992":166,"993":676,"994":678,"995":1,"996":1,"997":1,"998":397,"999":397,"1000":397,"1001":1,"1002":2,"1003":2,"1004":1,"1005":963,"1006":963,"1007":1,"1008":0,"1009":0,"1010":1,"1011":0,"1012":0,"1013":1,"1014":40,"1015":40,"1016":1,"1017":78,"1018":78,"1019":1,"1020":153,"1021":153,"1022":1,"1023":0,"1024":0,"1025":1,"1026":344,"1027":344,"1028":344,"1029":1,"1030":0,"1031":0,"1032":0,"1033":1,"1034":126,"1035":126,"1036":126,"1037":1,"1038":0,"1039":0,"1040":0,"1041":1,"1042":0,"1043":0,"1044":0,"1045":1,"1046":1,"1047":1,"1048":1,"1049":1,"1050":17,"1051":17,"1052":17,"1053":1,"1054":0,"1055":0,"1056":0,"1057":1,"1058":1,"1059":1,"1060":1,"1061":1,"1062":1,"1063":1,"1064":1,"1065":1,"1066":1,"1067":1,"1068":1,"1069":471,"1070":471,"1071":471,"1072":935,"1073":935,"1074":935,"1075":935,"1076":471,"1077":471,"1078":0,"1079":0,"1080":471,"1081":0,"1082":471,"1083":471,"1084":1,"1085":0,"1086":1,"1087":0,"1088":1,"1089":1,"1090":1,"1091":1,"1092":935,"1093":935,"1094":935,"1095":8399,"1096":935,"1097":935,"1098":2,"1099":2,"1100":2,"1101":933,"1102":933,"1103":933,"1104":5315,"1105":5315,"1106":5315,"1107":933,"1108":933,"1109":1,"1110":935,"1111":935,"1112":935,"1113":935,"1114":935,"1115":935,"1116":8120,"1117":8120,"1118":8120,"1119":8120,"1120":8120,"1121":8120,"1122":8120,"1123":935,"1124":935,"1125":935,"1126":472,"1127":935,"1128":1,"1129":0,"1130":1,"1131":1,"1132":0,"1133":1,"1134":1,"1135":0,"1136":1,"1137":1,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":1,"1149":1,"1150":0,"1151":1,"1152":1,"1153":1,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":1,"1162":1,"1163":1,"1164":1,"1165":1,"1166":1,"1167":1,"1168":0,"1169":0,"1170":1,"1171":144,"1172":144,"1173":1,"1174":1085,"1175":1085,"1176":1,"1177":471,"1178":471,"1179":0,"1180":1,"1181":17,"1182":17,"1183":17,"1184":1,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":1,"1191":40,"1192":40,"1193":40,"1194":24,"1195":40,"1196":1,"1197":78,"1198":78,"1199":78,"1200":35,"1201":78,"1202":1,"1203":153,"1204":153,"1205":153,"1206":77,"1207":153,"1208":1,"1209":0,"1210":0,"1211":1,"1212":0,"1213":0,"1214":1,"1215":470,"1216":470,"1217":1,"1218":0,"1219":1,"1220":126,"1221":1,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":1,"1259":1,"1260":1,"1261":0,"1262":0,"1263":1,"1264":1,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":1,"1283":397,"1284":1,"1285":2,"1286":2,"1287":2,"1288":1,"1289":0,"1290":1,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":1,"1302":1,"1303":0,"1304":1,"1305":0,"1306":0,"1307":0,"1308":1,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":1,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":1,"1335":0,"1336":0},"b":{"1":[0,4617],"2":[0,0],"3":[152,1383],"4":[1535,565,152],"5":[0,1383],"6":[1383,1383],"7":[413,970],"8":[413,8],"9":[413,13],"10":[413,413],"11":[1,0],"12":[15,398],"13":[1,14],"14":[14,1],"15":[1,0],"16":[0,398],"17":[1,397],"18":[398,398,398],"19":[1,397],"20":[398,0],"21":[1,397],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[9419,15767],"28":[25186,9419],"29":[0,15767],"30":[15767,0],"31":[3544,396],"32":[398,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[3189,3126],"39":[16,2880],"40":[2896,63],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[1,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[129,976],"82":[1105,129],"83":[0,976],"84":[976,976],"85":[466,510],"86":[996,20],"87":[0,976],"88":[510,466],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,388],"95":[0,388],"96":[2,386],"97":[143,243],"98":[386,0],"99":[2,384],"100":[386,386,3],"101":[243,143],"102":[464,6],"103":[0,0],"104":[470,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[1,1],"109":[1,0],"110":[0,1],"111":[1,0],"112":[136,136],"113":[0,136],"114":[0,136],"115":[136,0],"116":[0,0],"117":[886,750,288],"118":[0,136],"119":[136,0],"120":[0,136],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,23],"127":[0,23],"128":[0,0],"129":[0,0],"130":[27,27],"131":[0,4],"132":[23,20],"133":[0,20],"134":[20,20],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,1],"175":[2,1],"176":[0,1],"177":[0,0],"178":[0,1],"179":[1,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[1,598],"190":[112,487],"191":[599,113],"192":[0,487],"193":[487,486],"194":[448,39],"195":[12,27],"196":[1,26],"197":[1,486],"198":[0,429],"199":[429,0],"200":[0,429],"201":[429,429],"202":[0,429],"203":[1,681],"204":[3,678],"205":[20,676],"206":[510,166],"207":[166,0],"208":[0,0],"209":[218,253],"210":[0,471],"211":[0,471],"212":[2,933],"213":[935,0],"214":[472,463],"215":[0,0],"216":[0,1],"217":[1,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[1,0],"222":[1085,1085],"223":[1085,1085],"224":[471,0],"225":[0,0],"226":[24,16],"227":[35,43],"228":[77,76],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,1],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[1,1]},"f":{"1":1,"2":4617,"3":5,"4":5,"5":1535,"6":413,"7":0,"8":4338,"9":398,"10":0,"11":0,"12":499,"13":499,"14":2767,"15":2896,"16":0,"17":0,"18":0,"19":0,"20":936,"21":0,"22":0,"23":936,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1105,"35":0,"36":388,"37":79,"38":470,"39":0,"40":470,"41":470,"42":0,"43":0,"44":0,"45":0,"46":1,"47":136,"48":0,"49":0,"50":0,"51":0,"52":0,"53":23,"54":23,"55":43,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":4,"74":134,"75":176,"76":0,"77":599,"78":429,"79":682,"80":1,"81":397,"82":2,"83":963,"84":0,"85":0,"86":40,"87":78,"88":153,"89":0,"90":344,"91":0,"92":126,"93":0,"94":0,"95":1,"96":17,"97":0,"98":1,"99":1,"100":471,"101":0,"102":0,"103":1,"104":935,"105":935,"106":0,"107":0,"108":0,"109":0,"110":1,"111":1,"112":144,"113":1085,"114":471,"115":17,"116":0,"117":40,"118":78,"119":153,"120":0,"121":0,"122":470,"123":0,"124":126,"125":0,"126":1,"127":0,"128":397,"129":2,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":28}}},"2":{"name":"assert","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}}},"3":{"name":"inherits","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":29}}},"5":{"name":"BN","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}}},"6":{"name":"init","line":55,"loc":{"start":{"line":55,"column":21},"end":{"line":55,"column":57}}},"7":{"name":"_initArray","line":103,"loc":{"start":{"line":103,"column":26},"end":{"line":103,"column":68}}},"8":{"name":"parseHex","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":35}}},"9":{"name":"_parseHex","line":167,"loc":{"start":{"line":167,"column":25},"end":{"line":167,"column":59}}},"10":{"name":"parseBase","line":194,"loc":{"start":{"line":194,"column":0},"end":{"line":194,"column":41}}},"11":{"name":"_parseBase","line":217,"loc":{"start":{"line":217,"column":26},"end":{"line":217,"column":67}}},"12":{"name":"copy","line":257,"loc":{"start":{"line":257,"column":20},"end":{"line":257,"column":40}}},"13":{"name":"clone","line":266,"loc":{"start":{"line":266,"column":21},"end":{"line":266,"column":38}}},"14":{"name":"strip","line":273,"loc":{"start":{"line":273,"column":21},"end":{"line":273,"column":38}}},"15":{"name":"_normSign","line":279,"loc":{"start":{"line":279,"column":25},"end":{"line":279,"column":46}}},"16":{"name":"inspect","line":286,"loc":{"start":{"line":286,"column":23},"end":{"line":286,"column":42}}},"17":{"name":"toString","line":367,"loc":{"start":{"line":367,"column":24},"end":{"line":367,"column":57}}},"18":{"name":"toJSON","line":422,"loc":{"start":{"line":422,"column":22},"end":{"line":422,"column":40}}},"19":{"name":"toArray","line":426,"loc":{"start":{"line":426,"column":23},"end":{"line":426,"column":42}}},"20":{"name":"_countBits","line":444,"loc":{"start":{"line":444,"column":28},"end":{"line":444,"column":51}}},"21":{"name":"_countBits","line":448,"loc":{"start":{"line":448,"column":28},"end":{"line":448,"column":51}}},"22":{"name":"_zeroBits","line":471,"loc":{"start":{"line":471,"column":25},"end":{"line":471,"column":47}}},"23":{"name":"bitLength","line":500,"loc":{"start":{"line":500,"column":25},"end":{"line":500,"column":46}}},"24":{"name":"zeroBits","line":508,"loc":{"start":{"line":508,"column":24},"end":{"line":508,"column":44}}},"25":{"name":"byteLength","line":522,"loc":{"start":{"line":522,"column":26},"end":{"line":522,"column":48}}},"26":{"name":"neg","line":527,"loc":{"start":{"line":527,"column":19},"end":{"line":527,"column":34}}},"27":{"name":"ior","line":538,"loc":{"start":{"line":538,"column":19},"end":{"line":538,"column":37}}},"28":{"name":"or","line":552,"loc":{"start":{"line":552,"column":18},"end":{"line":552,"column":35}}},"29":{"name":"iand","line":561,"loc":{"start":{"line":561,"column":20},"end":{"line":561,"column":39}}},"30":{"name":"and","line":581,"loc":{"start":{"line":581,"column":19},"end":{"line":581,"column":37}}},"31":{"name":"ixor","line":590,"loc":{"start":{"line":590,"column":20},"end":{"line":590,"column":39}}},"32":{"name":"xor","line":618,"loc":{"start":{"line":618,"column":19},"end":{"line":618,"column":37}}},"33":{"name":"setn","line":627,"loc":{"start":{"line":627,"column":20},"end":{"line":627,"column":44}}},"34":{"name":"iadd","line":646,"loc":{"start":{"line":646,"column":20},"end":{"line":646,"column":39}}},"35":{"name":"add","line":699,"loc":{"start":{"line":699,"column":19},"end":{"line":699,"column":37}}},"36":{"name":"isub","line":719,"loc":{"start":{"line":719,"column":20},"end":{"line":719,"column":39}}},"37":{"name":"sub","line":782,"loc":{"start":{"line":782,"column":19},"end":{"line":782,"column":37}}},"38":{"name":"_smallMulTo","line":824,"loc":{"start":{"line":824,"column":27},"end":{"line":824,"column":58}}},"39":{"name":"_bigMulTo","line":859,"loc":{"start":{"line":859,"column":25},"end":{"line":859,"column":54}}},"40":{"name":"mulTo","line":900,"loc":{"start":{"line":900,"column":21},"end":{"line":900,"column":46}}},"41":{"name":"mul","line":910,"loc":{"start":{"line":910,"column":19},"end":{"line":910,"column":37}}},"42":{"name":"imul","line":917,"loc":{"start":{"line":917,"column":20},"end":{"line":917,"column":39}}},"43":{"name":"imuln","line":965,"loc":{"start":{"line":965,"column":21},"end":{"line":965,"column":41}}},"44":{"name":"sqr","line":989,"loc":{"start":{"line":989,"column":19},"end":{"line":989,"column":34}}},"45":{"name":"isqr","line":994,"loc":{"start":{"line":994,"column":20},"end":{"line":994,"column":36}}},"46":{"name":"ishln","line":999,"loc":{"start":{"line":999,"column":21},"end":{"line":999,"column":42}}},"47":{"name":"ishrn","line":1033,"loc":{"start":{"line":1033,"column":21},"end":{"line":1033,"column":58}}},"48":{"name":"shln","line":1089,"loc":{"start":{"line":1089,"column":20},"end":{"line":1089,"column":40}}},"49":{"name":"shrn","line":1094,"loc":{"start":{"line":1094,"column":20},"end":{"line":1094,"column":40}}},"50":{"name":"testn","line":1099,"loc":{"start":{"line":1099,"column":21},"end":{"line":1099,"column":41}}},"51":{"name":"imaskn","line":1117,"loc":{"start":{"line":1117,"column":22},"end":{"line":1117,"column":44}}},"52":{"name":"maskn","line":1137,"loc":{"start":{"line":1137,"column":21},"end":{"line":1137,"column":42}}},"53":{"name":"iaddn","line":1142,"loc":{"start":{"line":1142,"column":21},"end":{"line":1142,"column":41}}},"54":{"name":"_iaddn","line":1165,"loc":{"start":{"line":1165,"column":22},"end":{"line":1165,"column":43}}},"55":{"name":"isubn","line":1182,"loc":{"start":{"line":1182,"column":21},"end":{"line":1182,"column":41}}},"56":{"name":"addn","line":1205,"loc":{"start":{"line":1205,"column":20},"end":{"line":1205,"column":39}}},"57":{"name":"subn","line":1209,"loc":{"start":{"line":1209,"column":20},"end":{"line":1209,"column":39}}},"58":{"name":"iabs","line":1213,"loc":{"start":{"line":1213,"column":20},"end":{"line":1213,"column":36}}},"59":{"name":"abs","line":1219,"loc":{"start":{"line":1219,"column":19},"end":{"line":1219,"column":34}}},"60":{"name":"_ishlnsubmul","line":1223,"loc":{"start":{"line":1223,"column":28},"end":{"line":1223,"column":67}}},"61":{"name":"_wordDiv","line":1271,"loc":{"start":{"line":1271,"column":24},"end":{"line":1271,"column":53}}},"62":{"name":"divmod","line":1334,"loc":{"start":{"line":1334,"column":22},"end":{"line":1334,"column":49}}},"63":{"name":"div","line":1381,"loc":{"start":{"line":1381,"column":19},"end":{"line":1381,"column":37}}},"64":{"name":"mod","line":1386,"loc":{"start":{"line":1386,"column":19},"end":{"line":1386,"column":37}}},"65":{"name":"divRound","line":1391,"loc":{"start":{"line":1391,"column":24},"end":{"line":1391,"column":47}}},"66":{"name":"modn","line":1412,"loc":{"start":{"line":1412,"column":20},"end":{"line":1412,"column":39}}},"67":{"name":"idivn","line":1424,"loc":{"start":{"line":1424,"column":21},"end":{"line":1424,"column":41}}},"68":{"name":"divn","line":1437,"loc":{"start":{"line":1437,"column":20},"end":{"line":1437,"column":39}}},"69":{"name":"egcd","line":1441,"loc":{"start":{"line":1441,"column":20},"end":{"line":1441,"column":37}}},"70":{"name":"_invmp","line":1516,"loc":{"start":{"line":1516,"column":22},"end":{"line":1516,"column":41}}},"71":{"name":"gcd","line":1562,"loc":{"start":{"line":1562,"column":19},"end":{"line":1562,"column":37}}},"72":{"name":"invm","line":1602,"loc":{"start":{"line":1602,"column":20},"end":{"line":1602,"column":39}}},"73":{"name":"isEven","line":1606,"loc":{"start":{"line":1606,"column":22},"end":{"line":1606,"column":40}}},"74":{"name":"isOdd","line":1610,"loc":{"start":{"line":1610,"column":21},"end":{"line":1610,"column":38}}},"75":{"name":"andln","line":1615,"loc":{"start":{"line":1615,"column":21},"end":{"line":1615,"column":41}}},"76":{"name":"bincn","line":1620,"loc":{"start":{"line":1620,"column":21},"end":{"line":1620,"column":41}}},"77":{"name":"cmpn","line":1651,"loc":{"start":{"line":1651,"column":20},"end":{"line":1651,"column":39}}},"78":{"name":"cmp","line":1680,"loc":{"start":{"line":1680,"column":19},"end":{"line":1680,"column":37}}},"79":{"name":"ucmp","line":1694,"loc":{"start":{"line":1694,"column":20},"end":{"line":1694,"column":39}}},"80":{"name":"red","line":1721,"loc":{"start":{"line":1721,"column":9},"end":{"line":1721,"column":27}}},"81":{"name":"toRed","line":1725,"loc":{"start":{"line":1725,"column":21},"end":{"line":1725,"column":41}}},"82":{"name":"fromRed","line":1731,"loc":{"start":{"line":1731,"column":23},"end":{"line":1731,"column":42}}},"83":{"name":"_forceRed","line":1736,"loc":{"start":{"line":1736,"column":25},"end":{"line":1736,"column":49}}},"84":{"name":"forceRed","line":1741,"loc":{"start":{"line":1741,"column":24},"end":{"line":1741,"column":47}}},"85":{"name":"redAdd","line":1746,"loc":{"start":{"line":1746,"column":22},"end":{"line":1746,"column":43}}},"86":{"name":"redIAdd","line":1751,"loc":{"start":{"line":1751,"column":23},"end":{"line":1751,"column":45}}},"87":{"name":"redSub","line":1756,"loc":{"start":{"line":1756,"column":22},"end":{"line":1756,"column":43}}},"88":{"name":"redISub","line":1761,"loc":{"start":{"line":1761,"column":23},"end":{"line":1761,"column":45}}},"89":{"name":"redShl","line":1766,"loc":{"start":{"line":1766,"column":22},"end":{"line":1766,"column":43}}},"90":{"name":"redMul","line":1771,"loc":{"start":{"line":1771,"column":22},"end":{"line":1771,"column":43}}},"91":{"name":"redIMul","line":1777,"loc":{"start":{"line":1777,"column":23},"end":{"line":1777,"column":45}}},"92":{"name":"redSqr","line":1783,"loc":{"start":{"line":1783,"column":22},"end":{"line":1783,"column":40}}},"93":{"name":"redISqr","line":1789,"loc":{"start":{"line":1789,"column":23},"end":{"line":1789,"column":42}}},"94":{"name":"redSqrt","line":1796,"loc":{"start":{"line":1796,"column":23},"end":{"line":1796,"column":42}}},"95":{"name":"redInvm","line":1802,"loc":{"start":{"line":1802,"column":23},"end":{"line":1802,"column":42}}},"96":{"name":"redNeg","line":1809,"loc":{"start":{"line":1809,"column":22},"end":{"line":1809,"column":40}}},"97":{"name":"redPow","line":1815,"loc":{"start":{"line":1815,"column":22},"end":{"line":1815,"column":43}}},"98":{"name":"MPrime","line":1830,"loc":{"start":{"line":1830,"column":0},"end":{"line":1830,"column":25}}},"99":{"name":"_tmp","line":1840,"loc":{"start":{"line":1840,"column":24},"end":{"line":1840,"column":40}}},"100":{"name":"ireduce","line":1846,"loc":{"start":{"line":1846,"column":27},"end":{"line":1846,"column":49}}},"101":{"name":"split","line":1872,"loc":{"start":{"line":1872,"column":25},"end":{"line":1872,"column":52}}},"102":{"name":"imulK","line":1876,"loc":{"start":{"line":1876,"column":25},"end":{"line":1876,"column":45}}},"103":{"name":"K256","line":1880,"loc":{"start":{"line":1880,"column":0},"end":{"line":1880,"column":16}}},"104":{"name":"split","line":1888,"loc":{"start":{"line":1888,"column":23},"end":{"line":1888,"column":53}}},"105":{"name":"imulK","line":1916,"loc":{"start":{"line":1916,"column":23},"end":{"line":1916,"column":43}}},"106":{"name":"P224","line":1946,"loc":{"start":{"line":1946,"column":0},"end":{"line":1946,"column":16}}},"107":{"name":"P192","line":1954,"loc":{"start":{"line":1954,"column":0},"end":{"line":1954,"column":16}}},"108":{"name":"P25519","line":1962,"loc":{"start":{"line":1962,"column":0},"end":{"line":1962,"column":18}}},"109":{"name":"imulK","line":1971,"loc":{"start":{"line":1971,"column":25},"end":{"line":1971,"column":45}}},"110":{"name":"prime","line":1988,"loc":{"start":{"line":1988,"column":12},"end":{"line":1988,"column":33}}},"111":{"name":"Red","line":2012,"loc":{"start":{"line":2012,"column":0},"end":{"line":2012,"column":16}}},"112":{"name":"_verify1","line":2023,"loc":{"start":{"line":2023,"column":25},"end":{"line":2023,"column":46}}},"113":{"name":"_verify2","line":2028,"loc":{"start":{"line":2028,"column":25},"end":{"line":2028,"column":49}}},"114":{"name":"imod","line":2034,"loc":{"start":{"line":2034,"column":21},"end":{"line":2034,"column":38}}},"115":{"name":"neg","line":2040,"loc":{"start":{"line":2040,"column":20},"end":{"line":2040,"column":36}}},"116":{"name":"add","line":2046,"loc":{"start":{"line":2046,"column":20},"end":{"line":2046,"column":39}}},"117":{"name":"iadd","line":2055,"loc":{"start":{"line":2055,"column":21},"end":{"line":2055,"column":41}}},"118":{"name":"sub","line":2064,"loc":{"start":{"line":2064,"column":20},"end":{"line":2064,"column":39}}},"119":{"name":"isub","line":2073,"loc":{"start":{"line":2073,"column":21},"end":{"line":2073,"column":41}}},"120":{"name":"shl","line":2082,"loc":{"start":{"line":2082,"column":20},"end":{"line":2082,"column":41}}},"121":{"name":"imul","line":2087,"loc":{"start":{"line":2087,"column":21},"end":{"line":2087,"column":41}}},"122":{"name":"mul","line":2092,"loc":{"start":{"line":2092,"column":20},"end":{"line":2092,"column":39}}},"123":{"name":"isqr","line":2097,"loc":{"start":{"line":2097,"column":21},"end":{"line":2097,"column":38}}},"124":{"name":"sqr","line":2101,"loc":{"start":{"line":2101,"column":20},"end":{"line":2101,"column":36}}},"125":{"name":"sqrt","line":2105,"loc":{"start":{"line":2105,"column":21},"end":{"line":2105,"column":38}}},"126":{"name":"invm","line":2161,"loc":{"start":{"line":2161,"column":21},"end":{"line":2161,"column":38}}},"127":{"name":"pow","line":2171,"loc":{"start":{"line":2171,"column":20},"end":{"line":2171,"column":41}}},"128":{"name":"convertTo","line":2201,"loc":{"start":{"line":2201,"column":26},"end":{"line":2201,"column":50}}},"129":{"name":"convertFrom","line":2205,"loc":{"start":{"line":2205,"column":28},"end":{"line":2205,"column":54}}},"130":{"name":"mont","line":2215,"loc":{"start":{"line":2215,"column":10},"end":{"line":2215,"column":29}}},"131":{"name":"Mont","line":2219,"loc":{"start":{"line":2219,"column":0},"end":{"line":2219,"column":17}}},"132":{"name":"convertTo","line":2235,"loc":{"start":{"line":2235,"column":27},"end":{"line":2235,"column":51}}},"133":{"name":"convertFrom","line":2239,"loc":{"start":{"line":2239,"column":29},"end":{"line":2239,"column":55}}},"134":{"name":"imul","line":2245,"loc":{"start":{"line":2245,"column":22},"end":{"line":2245,"column":42}}},"135":{"name":"mul","line":2264,"loc":{"start":{"line":2264,"column":21},"end":{"line":2264,"column":40}}},"136":{"name":"invm","line":2280,"loc":{"start":{"line":2280,"column":22},"end":{"line":2280,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2286,"column":50}},"2":{"start":{"line":7,"column":0},"end":{"line":10,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":9,"column":47}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":47}},"5":{"start":{"line":14,"column":0},"end":{"line":20,"column":1}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":26}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":32}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":43}},"9":{"start":{"line":18,"column":2},"end":{"line":18,"column":34}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":36}},"11":{"start":{"line":24,"column":0},"end":{"line":46,"column":1}},"12":{"start":{"line":26,"column":2},"end":{"line":30,"column":3}},"13":{"start":{"line":29,"column":4},"end":{"line":29,"column":18}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":20}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":20}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"17":{"start":{"line":37,"column":2},"end":{"line":37,"column":18}},"18":{"start":{"line":39,"column":2},"end":{"line":42,"column":3}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":18}},"20":{"start":{"line":41,"column":4},"end":{"line":41,"column":14}},"21":{"start":{"line":44,"column":2},"end":{"line":45,"column":56}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":56}},"23":{"start":{"line":47,"column":0},"end":{"line":50,"column":18}},"24":{"start":{"line":48,"column":2},"end":{"line":48,"column":22}},"25":{"start":{"line":50,"column":2},"end":{"line":50,"column":18}},"26":{"start":{"line":52,"column":0},"end":{"line":52,"column":11}},"27":{"start":{"line":53,"column":0},"end":{"line":53,"column":17}},"28":{"start":{"line":55,"column":0},"end":{"line":101,"column":2}},"29":{"start":{"line":56,"column":2},"end":{"line":82,"column":3}},"30":{"start":{"line":57,"column":4},"end":{"line":60,"column":5}},"31":{"start":{"line":58,"column":6},"end":{"line":58,"column":23}},"32":{"start":{"line":59,"column":6},"end":{"line":59,"column":23}},"33":{"start":{"line":61,"column":4},"end":{"line":78,"column":5}},"34":{"start":{"line":62,"column":6},"end":{"line":62,"column":42}},"35":{"start":{"line":63,"column":6},"end":{"line":63,"column":22}},"36":{"start":{"line":64,"column":11},"end":{"line":78,"column":5}},"37":{"start":{"line":65,"column":6},"end":{"line":68,"column":8}},"38":{"start":{"line":69,"column":6},"end":{"line":69,"column":22}},"39":{"start":{"line":71,"column":6},"end":{"line":71,"column":40}},"40":{"start":{"line":72,"column":6},"end":{"line":76,"column":8}},"41":{"start":{"line":77,"column":6},"end":{"line":77,"column":22}},"42":{"start":{"line":79,"column":4},"end":{"line":79,"column":11}},"43":{"start":{"line":80,"column":9},"end":{"line":82,"column":3}},"44":{"start":{"line":81,"column":4},"end":{"line":81,"column":49}},"45":{"start":{"line":83,"column":2},"end":{"line":84,"column":14}},"46":{"start":{"line":84,"column":4},"end":{"line":84,"column":14}},"47":{"start":{"line":85,"column":2},"end":{"line":85,"column":57}},"48":{"start":{"line":87,"column":2},"end":{"line":87,"column":49}},"49":{"start":{"line":88,"column":2},"end":{"line":88,"column":16}},"50":{"start":{"line":89,"column":2},"end":{"line":90,"column":12}},"51":{"start":{"line":90,"column":4},"end":{"line":90,"column":12}},"52":{"start":{"line":92,"column":2},"end":{"line":95,"column":41}},"53":{"start":{"line":93,"column":4},"end":{"line":93,"column":34}},"54":{"start":{"line":95,"column":4},"end":{"line":95,"column":41}},"55":{"start":{"line":97,"column":2},"end":{"line":98,"column":21}},"56":{"start":{"line":98,"column":4},"end":{"line":98,"column":21}},"57":{"start":{"line":100,"column":2},"end":{"line":100,"column":15}},"58":{"start":{"line":103,"column":0},"end":{"line":142,"column":2}},"59":{"start":{"line":105,"column":2},"end":{"line":105,"column":44}},"60":{"start":{"line":106,"column":2},"end":{"line":110,"column":3}},"61":{"start":{"line":107,"column":4},"end":{"line":107,"column":23}},"62":{"start":{"line":108,"column":4},"end":{"line":108,"column":20}},"63":{"start":{"line":109,"column":4},"end":{"line":109,"column":16}},"64":{"start":{"line":112,"column":2},"end":{"line":112,"column":45}},"65":{"start":{"line":113,"column":2},"end":{"line":113,"column":38}},"66":{"start":{"line":114,"column":2},"end":{"line":115,"column":22}},"67":{"start":{"line":115,"column":4},"end":{"line":115,"column":22}},"68":{"start":{"line":117,"column":2},"end":{"line":117,"column":14}},"69":{"start":{"line":118,"column":2},"end":{"line":140,"column":3}},"70":{"start":{"line":119,"column":4},"end":{"line":128,"column":5}},"71":{"start":{"line":120,"column":6},"end":{"line":120,"column":71}},"72":{"start":{"line":121,"column":6},"end":{"line":121,"column":46}},"73":{"start":{"line":122,"column":6},"end":{"line":122,"column":57}},"74":{"start":{"line":123,"column":6},"end":{"line":123,"column":16}},"75":{"start":{"line":124,"column":6},"end":{"line":127,"column":7}},"76":{"start":{"line":125,"column":8},"end":{"line":125,"column":18}},"77":{"start":{"line":126,"column":8},"end":{"line":126,"column":12}},"78":{"start":{"line":129,"column":9},"end":{"line":140,"column":3}},"79":{"start":{"line":130,"column":4},"end":{"line":139,"column":5}},"80":{"start":{"line":131,"column":6},"end":{"line":131,"column":71}},"81":{"start":{"line":132,"column":6},"end":{"line":132,"column":46}},"82":{"start":{"line":133,"column":6},"end":{"line":133,"column":57}},"83":{"start":{"line":134,"column":6},"end":{"line":134,"column":16}},"84":{"start":{"line":135,"column":6},"end":{"line":138,"column":7}},"85":{"start":{"line":136,"column":8},"end":{"line":136,"column":18}},"86":{"start":{"line":137,"column":8},"end":{"line":137,"column":12}},"87":{"start":{"line":141,"column":2},"end":{"line":141,"column":22}},"88":{"start":{"line":144,"column":0},"end":{"line":165,"column":1}},"89":{"start":{"line":145,"column":2},"end":{"line":145,"column":12}},"90":{"start":{"line":146,"column":2},"end":{"line":146,"column":38}},"91":{"start":{"line":147,"column":2},"end":{"line":163,"column":3}},"92":{"start":{"line":148,"column":4},"end":{"line":148,"column":35}},"93":{"start":{"line":150,"column":4},"end":{"line":150,"column":12}},"94":{"start":{"line":153,"column":4},"end":{"line":162,"column":19}},"95":{"start":{"line":154,"column":6},"end":{"line":154,"column":24}},"96":{"start":{"line":157,"column":9},"end":{"line":162,"column":19}},"97":{"start":{"line":158,"column":6},"end":{"line":158,"column":24}},"98":{"start":{"line":162,"column":6},"end":{"line":162,"column":19}},"99":{"start":{"line":164,"column":2},"end":{"line":164,"column":11}},"100":{"start":{"line":167,"column":0},"end":{"line":192,"column":2}},"101":{"start":{"line":169,"column":2},"end":{"line":169,"column":55}},"102":{"start":{"line":170,"column":2},"end":{"line":170,"column":38}},"103":{"start":{"line":171,"column":2},"end":{"line":172,"column":22}},"104":{"start":{"line":172,"column":4},"end":{"line":172,"column":22}},"105":{"start":{"line":175,"column":2},"end":{"line":175,"column":14}},"106":{"start":{"line":176,"column":2},"end":{"line":185,"column":3}},"107":{"start":{"line":177,"column":4},"end":{"line":177,"column":39}},"108":{"start":{"line":178,"column":4},"end":{"line":178,"column":44}},"109":{"start":{"line":179,"column":4},"end":{"line":179,"column":53}},"110":{"start":{"line":180,"column":4},"end":{"line":180,"column":14}},"111":{"start":{"line":181,"column":4},"end":{"line":184,"column":5}},"112":{"start":{"line":182,"column":6},"end":{"line":182,"column":16}},"113":{"start":{"line":183,"column":6},"end":{"line":183,"column":10}},"114":{"start":{"line":186,"column":2},"end":{"line":190,"column":3}},"115":{"start":{"line":187,"column":4},"end":{"line":187,"column":43}},"116":{"start":{"line":188,"column":4},"end":{"line":188,"column":44}},"117":{"start":{"line":189,"column":4},"end":{"line":189,"column":53}},"118":{"start":{"line":191,"column":2},"end":{"line":191,"column":15}},"119":{"start":{"line":194,"column":0},"end":{"line":215,"column":1}},"120":{"start":{"line":195,"column":2},"end":{"line":195,"column":12}},"121":{"start":{"line":196,"column":2},"end":{"line":196,"column":38}},"122":{"start":{"line":197,"column":2},"end":{"line":213,"column":3}},"123":{"start":{"line":198,"column":4},"end":{"line":198,"column":35}},"124":{"start":{"line":200,"column":4},"end":{"line":200,"column":13}},"125":{"start":{"line":203,"column":4},"end":{"line":212,"column":13}},"126":{"start":{"line":204,"column":6},"end":{"line":204,"column":24}},"127":{"start":{"line":207,"column":9},"end":{"line":212,"column":13}},"128":{"start":{"line":208,"column":6},"end":{"line":208,"column":24}},"129":{"start":{"line":212,"column":6},"end":{"line":212,"column":13}},"130":{"start":{"line":214,"column":2},"end":{"line":214,"column":11}},"131":{"start":{"line":217,"column":0},"end":{"line":255,"column":2}},"132":{"start":{"line":219,"column":2},"end":{"line":219,"column":21}},"133":{"start":{"line":220,"column":2},"end":{"line":220,"column":18}},"134":{"start":{"line":223,"column":2},"end":{"line":224,"column":14}},"135":{"start":{"line":224,"column":4},"end":{"line":224,"column":14}},"136":{"start":{"line":225,"column":2},"end":{"line":225,"column":12}},"137":{"start":{"line":226,"column":2},"end":{"line":226,"column":33}},"138":{"start":{"line":228,"column":2},"end":{"line":228,"column":36}},"139":{"start":{"line":229,"column":2},"end":{"line":229,"column":28}},"140":{"start":{"line":230,"column":2},"end":{"line":230,"column":49}},"141":{"start":{"line":232,"column":2},"end":{"line":232,"column":15}},"142":{"start":{"line":233,"column":2},"end":{"line":241,"column":3}},"143":{"start":{"line":234,"column":4},"end":{"line":234,"column":51}},"144":{"start":{"line":236,"column":4},"end":{"line":236,"column":24}},"145":{"start":{"line":237,"column":4},"end":{"line":240,"column":24}},"146":{"start":{"line":238,"column":6},"end":{"line":238,"column":28}},"147":{"start":{"line":240,"column":6},"end":{"line":240,"column":24}},"148":{"start":{"line":243,"column":2},"end":{"line":254,"column":3}},"149":{"start":{"line":244,"column":4},"end":{"line":244,"column":16}},"150":{"start":{"line":245,"column":4},"end":{"line":245,"column":57}},"151":{"start":{"line":247,"column":4},"end":{"line":248,"column":18}},"152":{"start":{"line":248,"column":6},"end":{"line":248,"column":18}},"153":{"start":{"line":249,"column":4},"end":{"line":249,"column":20}},"154":{"start":{"line":250,"column":4},"end":{"line":253,"column":24}},"155":{"start":{"line":251,"column":6},"end":{"line":251,"column":28}},"156":{"start":{"line":253,"column":6},"end":{"line":253,"column":24}},"157":{"start":{"line":257,"column":0},"end":{"line":264,"column":2}},"158":{"start":{"line":258,"column":2},"end":{"line":258,"column":38}},"159":{"start":{"line":259,"column":2},"end":{"line":260,"column":34}},"160":{"start":{"line":260,"column":4},"end":{"line":260,"column":34}},"161":{"start":{"line":261,"column":2},"end":{"line":261,"column":28}},"162":{"start":{"line":262,"column":2},"end":{"line":262,"column":24}},"163":{"start":{"line":263,"column":2},"end":{"line":263,"column":22}},"164":{"start":{"line":266,"column":0},"end":{"line":270,"column":2}},"165":{"start":{"line":267,"column":2},"end":{"line":267,"column":23}},"166":{"start":{"line":268,"column":2},"end":{"line":268,"column":15}},"167":{"start":{"line":269,"column":2},"end":{"line":269,"column":11}},"168":{"start":{"line":273,"column":0},"end":{"line":277,"column":2}},"169":{"start":{"line":274,"column":2},"end":{"line":275,"column":18}},"170":{"start":{"line":275,"column":4},"end":{"line":275,"column":18}},"171":{"start":{"line":276,"column":2},"end":{"line":276,"column":26}},"172":{"start":{"line":279,"column":0},"end":{"line":284,"column":2}},"173":{"start":{"line":281,"column":2},"end":{"line":282,"column":22}},"174":{"start":{"line":282,"column":4},"end":{"line":282,"column":22}},"175":{"start":{"line":283,"column":2},"end":{"line":283,"column":14}},"176":{"start":{"line":286,"column":0},"end":{"line":288,"column":2}},"177":{"start":{"line":287,"column":2},"end":{"line":287,"column":68}},"178":{"start":{"line":320,"column":0},"end":{"line":347,"column":2}},"179":{"start":{"line":349,"column":0},"end":{"line":356,"column":2}},"180":{"start":{"line":358,"column":0},"end":{"line":365,"column":2}},"181":{"start":{"line":367,"column":0},"end":{"line":420,"column":2}},"182":{"start":{"line":368,"column":2},"end":{"line":368,"column":20}},"183":{"start":{"line":369,"column":2},"end":{"line":419,"column":3}},"184":{"start":{"line":370,"column":4},"end":{"line":370,"column":17}},"185":{"start":{"line":371,"column":4},"end":{"line":371,"column":16}},"186":{"start":{"line":372,"column":4},"end":{"line":372,"column":35}},"187":{"start":{"line":373,"column":4},"end":{"line":373,"column":18}},"188":{"start":{"line":374,"column":4},"end":{"line":387,"column":5}},"189":{"start":{"line":375,"column":6},"end":{"line":375,"column":28}},"190":{"start":{"line":376,"column":6},"end":{"line":376,"column":64}},"191":{"start":{"line":377,"column":6},"end":{"line":377,"column":44}},"192":{"start":{"line":378,"column":6},"end":{"line":381,"column":25}},"193":{"start":{"line":379,"column":8},"end":{"line":379,"column":50}},"194":{"start":{"line":381,"column":8},"end":{"line":381,"column":25}},"195":{"start":{"line":382,"column":6},"end":{"line":382,"column":15}},"196":{"start":{"line":383,"column":6},"end":{"line":386,"column":7}},"197":{"start":{"line":384,"column":8},"end":{"line":384,"column":18}},"198":{"start":{"line":385,"column":8},"end":{"line":385,"column":12}},"199":{"start":{"line":388,"column":4},"end":{"line":389,"column":37}},"200":{"start":{"line":389,"column":6},"end":{"line":389,"column":37}},"201":{"start":{"line":390,"column":4},"end":{"line":391,"column":22}},"202":{"start":{"line":391,"column":6},"end":{"line":391,"column":22}},"203":{"start":{"line":392,"column":4},"end":{"line":393,"column":22}},"204":{"start":{"line":393,"column":6},"end":{"line":393,"column":22}},"205":{"start":{"line":394,"column":4},"end":{"line":394,"column":15}},"206":{"start":{"line":395,"column":9},"end":{"line":419,"column":3}},"207":{"start":{"line":397,"column":4},"end":{"line":397,"column":37}},"208":{"start":{"line":399,"column":4},"end":{"line":399,"column":37}},"209":{"start":{"line":400,"column":4},"end":{"line":400,"column":17}},"210":{"start":{"line":401,"column":4},"end":{"line":401,"column":25}},"211":{"start":{"line":402,"column":4},"end":{"line":402,"column":19}},"212":{"start":{"line":403,"column":4},"end":{"line":411,"column":5}},"213":{"start":{"line":404,"column":6},"end":{"line":404,"column":47}},"214":{"start":{"line":405,"column":6},"end":{"line":405,"column":29}},"215":{"start":{"line":407,"column":6},"end":{"line":410,"column":22}},"216":{"start":{"line":408,"column":8},"end":{"line":408,"column":52}},"217":{"start":{"line":410,"column":8},"end":{"line":410,"column":22}},"218":{"start":{"line":412,"column":4},"end":{"line":413,"column":22}},"219":{"start":{"line":413,"column":6},"end":{"line":413,"column":22}},"220":{"start":{"line":414,"column":4},"end":{"line":415,"column":22}},"221":{"start":{"line":415,"column":6},"end":{"line":415,"column":22}},"222":{"start":{"line":416,"column":4},"end":{"line":416,"column":15}},"223":{"start":{"line":418,"column":4},"end":{"line":418,"column":53}},"224":{"start":{"line":422,"column":0},"end":{"line":424,"column":2}},"225":{"start":{"line":423,"column":2},"end":{"line":423,"column":27}},"226":{"start":{"line":426,"column":0},"end":{"line":441,"column":2}},"227":{"start":{"line":427,"column":2},"end":{"line":427,"column":15}},"228":{"start":{"line":428,"column":2},"end":{"line":428,"column":41}},"229":{"start":{"line":429,"column":2},"end":{"line":429,"column":13}},"230":{"start":{"line":431,"column":2},"end":{"line":431,"column":23}},"231":{"start":{"line":432,"column":2},"end":{"line":438,"column":3}},"232":{"start":{"line":433,"column":4},"end":{"line":433,"column":26}},"233":{"start":{"line":434,"column":4},"end":{"line":434,"column":15}},"234":{"start":{"line":437,"column":4},"end":{"line":437,"column":32}},"235":{"start":{"line":440,"column":2},"end":{"line":440,"column":13}},"236":{"start":{"line":443,"column":0},"end":{"line":469,"column":1}},"237":{"start":{"line":444,"column":2},"end":{"line":446,"column":4}},"238":{"start":{"line":445,"column":4},"end":{"line":445,"column":30}},"239":{"start":{"line":448,"column":2},"end":{"line":468,"column":4}},"240":{"start":{"line":449,"column":4},"end":{"line":449,"column":14}},"241":{"start":{"line":450,"column":4},"end":{"line":450,"column":14}},"242":{"start":{"line":451,"column":4},"end":{"line":454,"column":5}},"243":{"start":{"line":452,"column":6},"end":{"line":452,"column":14}},"244":{"start":{"line":453,"column":6},"end":{"line":453,"column":16}},"245":{"start":{"line":455,"column":4},"end":{"line":458,"column":5}},"246":{"start":{"line":456,"column":6},"end":{"line":456,"column":13}},"247":{"start":{"line":457,"column":6},"end":{"line":457,"column":15}},"248":{"start":{"line":459,"column":4},"end":{"line":462,"column":5}},"249":{"start":{"line":460,"column":6},"end":{"line":460,"column":13}},"250":{"start":{"line":461,"column":6},"end":{"line":461,"column":15}},"251":{"start":{"line":463,"column":4},"end":{"line":466,"column":5}},"252":{"start":{"line":464,"column":6},"end":{"line":464,"column":13}},"253":{"start":{"line":465,"column":6},"end":{"line":465,"column":15}},"254":{"start":{"line":467,"column":4},"end":{"line":467,"column":17}},"255":{"start":{"line":471,"column":0},"end":{"line":497,"column":2}},"256":{"start":{"line":473,"column":2},"end":{"line":474,"column":14}},"257":{"start":{"line":474,"column":4},"end":{"line":474,"column":14}},"258":{"start":{"line":476,"column":2},"end":{"line":476,"column":12}},"259":{"start":{"line":477,"column":2},"end":{"line":477,"column":12}},"260":{"start":{"line":478,"column":2},"end":{"line":481,"column":3}},"261":{"start":{"line":479,"column":4},"end":{"line":479,"column":12}},"262":{"start":{"line":480,"column":4},"end":{"line":480,"column":14}},"263":{"start":{"line":482,"column":2},"end":{"line":485,"column":3}},"264":{"start":{"line":483,"column":4},"end":{"line":483,"column":11}},"265":{"start":{"line":484,"column":4},"end":{"line":484,"column":13}},"266":{"start":{"line":486,"column":2},"end":{"line":489,"column":3}},"267":{"start":{"line":487,"column":4},"end":{"line":487,"column":11}},"268":{"start":{"line":488,"column":4},"end":{"line":488,"column":13}},"269":{"start":{"line":490,"column":2},"end":{"line":493,"column":3}},"270":{"start":{"line":491,"column":4},"end":{"line":491,"column":11}},"271":{"start":{"line":492,"column":4},"end":{"line":492,"column":13}},"272":{"start":{"line":494,"column":2},"end":{"line":495,"column":8}},"273":{"start":{"line":495,"column":4},"end":{"line":495,"column":8}},"274":{"start":{"line":496,"column":2},"end":{"line":496,"column":11}},"275":{"start":{"line":500,"column":0},"end":{"line":505,"column":2}},"276":{"start":{"line":501,"column":2},"end":{"line":501,"column":13}},"277":{"start":{"line":502,"column":2},"end":{"line":502,"column":38}},"278":{"start":{"line":503,"column":2},"end":{"line":503,"column":30}},"279":{"start":{"line":504,"column":2},"end":{"line":504,"column":37}},"280":{"start":{"line":508,"column":0},"end":{"line":520,"column":2}},"281":{"start":{"line":509,"column":2},"end":{"line":510,"column":13}},"282":{"start":{"line":510,"column":4},"end":{"line":510,"column":13}},"283":{"start":{"line":512,"column":2},"end":{"line":512,"column":12}},"284":{"start":{"line":513,"column":2},"end":{"line":518,"column":3}},"285":{"start":{"line":514,"column":4},"end":{"line":514,"column":42}},"286":{"start":{"line":515,"column":4},"end":{"line":515,"column":11}},"287":{"start":{"line":516,"column":4},"end":{"line":517,"column":12}},"288":{"start":{"line":517,"column":6},"end":{"line":517,"column":12}},"289":{"start":{"line":519,"column":2},"end":{"line":519,"column":11}},"290":{"start":{"line":522,"column":0},"end":{"line":524,"column":2}},"291":{"start":{"line":523,"column":2},"end":{"line":523,"column":41}},"292":{"start":{"line":527,"column":0},"end":{"line":534,"column":2}},"293":{"start":{"line":528,"column":2},"end":{"line":529,"column":24}},"294":{"start":{"line":529,"column":4},"end":{"line":529,"column":24}},"295":{"start":{"line":531,"column":2},"end":{"line":531,"column":23}},"296":{"start":{"line":532,"column":2},"end":{"line":532,"column":22}},"297":{"start":{"line":533,"column":2},"end":{"line":533,"column":11}},"298":{"start":{"line":538,"column":0},"end":{"line":548,"column":2}},"299":{"start":{"line":539,"column":2},"end":{"line":539,"column":36}},"300":{"start":{"line":541,"column":2},"end":{"line":542,"column":34}},"301":{"start":{"line":542,"column":4},"end":{"line":542,"column":34}},"302":{"start":{"line":544,"column":2},"end":{"line":545,"column":49}},"303":{"start":{"line":545,"column":4},"end":{"line":545,"column":49}},"304":{"start":{"line":547,"column":2},"end":{"line":547,"column":22}},"305":{"start":{"line":552,"column":0},"end":{"line":557,"column":2}},"306":{"start":{"line":553,"column":2},"end":{"line":556,"column":33}},"307":{"start":{"line":554,"column":4},"end":{"line":554,"column":33}},"308":{"start":{"line":556,"column":4},"end":{"line":556,"column":33}},"309":{"start":{"line":561,"column":0},"end":{"line":577,"column":2}},"310":{"start":{"line":562,"column":2},"end":{"line":562,"column":36}},"311":{"start":{"line":565,"column":2},"end":{"line":565,"column":8}},"312":{"start":{"line":566,"column":2},"end":{"line":569,"column":13}},"313":{"start":{"line":567,"column":4},"end":{"line":567,"column":12}},"314":{"start":{"line":569,"column":4},"end":{"line":569,"column":13}},"315":{"start":{"line":571,"column":2},"end":{"line":572,"column":49}},"316":{"start":{"line":572,"column":4},"end":{"line":572,"column":49}},"317":{"start":{"line":574,"column":2},"end":{"line":574,"column":25}},"318":{"start":{"line":576,"column":2},"end":{"line":576,"column":22}},"319":{"start":{"line":581,"column":0},"end":{"line":586,"column":2}},"320":{"start":{"line":582,"column":2},"end":{"line":585,"column":34}},"321":{"start":{"line":583,"column":4},"end":{"line":583,"column":34}},"322":{"start":{"line":585,"column":4},"end":{"line":585,"column":34}},"323":{"start":{"line":590,"column":0},"end":{"line":614,"column":2}},"324":{"start":{"line":591,"column":2},"end":{"line":591,"column":36}},"325":{"start":{"line":594,"column":2},"end":{"line":594,"column":8}},"326":{"start":{"line":595,"column":2},"end":{"line":595,"column":8}},"327":{"start":{"line":596,"column":2},"end":{"line":602,"column":3}},"328":{"start":{"line":597,"column":4},"end":{"line":597,"column":13}},"329":{"start":{"line":598,"column":4},"end":{"line":598,"column":12}},"330":{"start":{"line":600,"column":4},"end":{"line":600,"column":12}},"331":{"start":{"line":601,"column":4},"end":{"line":601,"column":13}},"332":{"start":{"line":604,"column":2},"end":{"line":605,"column":44}},"333":{"start":{"line":605,"column":4},"end":{"line":605,"column":44}},"334":{"start":{"line":607,"column":2},"end":{"line":609,"column":33}},"335":{"start":{"line":608,"column":4},"end":{"line":609,"column":33}},"336":{"start":{"line":609,"column":6},"end":{"line":609,"column":33}},"337":{"start":{"line":611,"column":2},"end":{"line":611,"column":25}},"338":{"start":{"line":613,"column":2},"end":{"line":613,"column":22}},"339":{"start":{"line":618,"column":0},"end":{"line":623,"column":2}},"340":{"start":{"line":619,"column":2},"end":{"line":622,"column":34}},"341":{"start":{"line":620,"column":4},"end":{"line":620,"column":34}},"342":{"start":{"line":622,"column":4},"end":{"line":622,"column":34}},"343":{"start":{"line":627,"column":0},"end":{"line":642,"column":2}},"344":{"start":{"line":628,"column":2},"end":{"line":628,"column":46}},"345":{"start":{"line":630,"column":2},"end":{"line":630,"column":27}},"346":{"start":{"line":631,"column":2},"end":{"line":631,"column":22}},"347":{"start":{"line":633,"column":2},"end":{"line":634,"column":34}},"348":{"start":{"line":634,"column":4},"end":{"line":634,"column":34}},"349":{"start":{"line":636,"column":2},"end":{"line":639,"column":53}},"350":{"start":{"line":637,"column":4},"end":{"line":637,"column":52}},"351":{"start":{"line":639,"column":4},"end":{"line":639,"column":53}},"352":{"start":{"line":641,"column":2},"end":{"line":641,"column":22}},"353":{"start":{"line":646,"column":0},"end":{"line":696,"column":2}},"354":{"start":{"line":648,"column":2},"end":{"line":660,"column":3}},"355":{"start":{"line":649,"column":4},"end":{"line":649,"column":22}},"356":{"start":{"line":650,"column":4},"end":{"line":650,"column":27}},"357":{"start":{"line":651,"column":4},"end":{"line":651,"column":27}},"358":{"start":{"line":652,"column":4},"end":{"line":652,"column":28}},"359":{"start":{"line":655,"column":9},"end":{"line":660,"column":3}},"360":{"start":{"line":656,"column":4},"end":{"line":656,"column":21}},"361":{"start":{"line":657,"column":4},"end":{"line":657,"column":27}},"362":{"start":{"line":658,"column":4},"end":{"line":658,"column":20}},"363":{"start":{"line":659,"column":4},"end":{"line":659,"column":25}},"364":{"start":{"line":663,"column":2},"end":{"line":663,"column":8}},"365":{"start":{"line":664,"column":2},"end":{"line":664,"column":8}},"366":{"start":{"line":665,"column":2},"end":{"line":671,"column":3}},"367":{"start":{"line":666,"column":4},"end":{"line":666,"column":13}},"368":{"start":{"line":667,"column":4},"end":{"line":667,"column":12}},"369":{"start":{"line":669,"column":4},"end":{"line":669,"column":12}},"370":{"start":{"line":670,"column":4},"end":{"line":670,"column":13}},"371":{"start":{"line":673,"column":2},"end":{"line":673,"column":16}},"372":{"start":{"line":674,"column":2},"end":{"line":678,"column":3}},"373":{"start":{"line":675,"column":4},"end":{"line":675,"column":44}},"374":{"start":{"line":676,"column":4},"end":{"line":676,"column":34}},"375":{"start":{"line":677,"column":4},"end":{"line":677,"column":21}},"376":{"start":{"line":679,"column":2},"end":{"line":683,"column":3}},"377":{"start":{"line":680,"column":4},"end":{"line":680,"column":31}},"378":{"start":{"line":681,"column":4},"end":{"line":681,"column":34}},"379":{"start":{"line":682,"column":4},"end":{"line":682,"column":21}},"380":{"start":{"line":685,"column":2},"end":{"line":685,"column":25}},"381":{"start":{"line":686,"column":2},"end":{"line":693,"column":3}},"382":{"start":{"line":687,"column":4},"end":{"line":687,"column":36}},"383":{"start":{"line":688,"column":4},"end":{"line":688,"column":18}},"384":{"start":{"line":690,"column":9},"end":{"line":693,"column":3}},"385":{"start":{"line":691,"column":4},"end":{"line":692,"column":33}},"386":{"start":{"line":692,"column":6},"end":{"line":692,"column":33}},"387":{"start":{"line":695,"column":2},"end":{"line":695,"column":14}},"388":{"start":{"line":699,"column":0},"end":{"line":716,"column":2}},"389":{"start":{"line":700,"column":2},"end":{"line":710,"column":3}},"390":{"start":{"line":701,"column":4},"end":{"line":701,"column":21}},"391":{"start":{"line":702,"column":4},"end":{"line":702,"column":28}},"392":{"start":{"line":703,"column":4},"end":{"line":703,"column":20}},"393":{"start":{"line":704,"column":4},"end":{"line":704,"column":15}},"394":{"start":{"line":705,"column":9},"end":{"line":710,"column":3}},"395":{"start":{"line":706,"column":4},"end":{"line":706,"column":22}},"396":{"start":{"line":707,"column":4},"end":{"line":707,"column":28}},"397":{"start":{"line":708,"column":4},"end":{"line":708,"column":21}},"398":{"start":{"line":709,"column":4},"end":{"line":709,"column":15}},"399":{"start":{"line":712,"column":2},"end":{"line":715,"column":34}},"400":{"start":{"line":713,"column":4},"end":{"line":713,"column":34}},"401":{"start":{"line":715,"column":4},"end":{"line":715,"column":34}},"402":{"start":{"line":719,"column":0},"end":{"line":779,"column":2}},"403":{"start":{"line":721,"column":2},"end":{"line":733,"column":3}},"404":{"start":{"line":722,"column":4},"end":{"line":722,"column":21}},"405":{"start":{"line":723,"column":4},"end":{"line":723,"column":27}},"406":{"start":{"line":724,"column":4},"end":{"line":724,"column":20}},"407":{"start":{"line":725,"column":4},"end":{"line":725,"column":25}},"408":{"start":{"line":728,"column":9},"end":{"line":733,"column":3}},"409":{"start":{"line":729,"column":4},"end":{"line":729,"column":22}},"410":{"start":{"line":730,"column":4},"end":{"line":730,"column":19}},"411":{"start":{"line":731,"column":4},"end":{"line":731,"column":21}},"412":{"start":{"line":732,"column":4},"end":{"line":732,"column":28}},"413":{"start":{"line":736,"column":2},"end":{"line":736,"column":26}},"414":{"start":{"line":739,"column":2},"end":{"line":744,"column":3}},"415":{"start":{"line":740,"column":4},"end":{"line":740,"column":22}},"416":{"start":{"line":741,"column":4},"end":{"line":741,"column":20}},"417":{"start":{"line":742,"column":4},"end":{"line":742,"column":22}},"418":{"start":{"line":743,"column":4},"end":{"line":743,"column":16}},"419":{"start":{"line":747,"column":2},"end":{"line":747,"column":8}},"420":{"start":{"line":748,"column":2},"end":{"line":748,"column":8}},"421":{"start":{"line":749,"column":2},"end":{"line":755,"column":3}},"422":{"start":{"line":750,"column":4},"end":{"line":750,"column":13}},"423":{"start":{"line":751,"column":4},"end":{"line":751,"column":12}},"424":{"start":{"line":753,"column":4},"end":{"line":753,"column":12}},"425":{"start":{"line":754,"column":4},"end":{"line":754,"column":13}},"426":{"start":{"line":757,"column":2},"end":{"line":757,"column":16}},"427":{"start":{"line":758,"column":2},"end":{"line":762,"column":3}},"428":{"start":{"line":759,"column":4},"end":{"line":759,"column":44}},"429":{"start":{"line":760,"column":4},"end":{"line":760,"column":20}},"430":{"start":{"line":761,"column":4},"end":{"line":761,"column":34}},"431":{"start":{"line":763,"column":2},"end":{"line":767,"column":3}},"432":{"start":{"line":764,"column":4},"end":{"line":764,"column":31}},"433":{"start":{"line":765,"column":4},"end":{"line":765,"column":20}},"434":{"start":{"line":766,"column":4},"end":{"line":766,"column":34}},"435":{"start":{"line":770,"column":2},"end":{"line":772,"column":33}},"436":{"start":{"line":771,"column":4},"end":{"line":772,"column":33}},"437":{"start":{"line":772,"column":6},"end":{"line":772,"column":33}},"438":{"start":{"line":773,"column":2},"end":{"line":773,"column":41}},"439":{"start":{"line":775,"column":2},"end":{"line":776,"column":21}},"440":{"start":{"line":776,"column":4},"end":{"line":776,"column":21}},"441":{"start":{"line":778,"column":2},"end":{"line":778,"column":22}},"442":{"start":{"line":782,"column":0},"end":{"line":784,"column":2}},"443":{"start":{"line":783,"column":2},"end":{"line":783,"column":32}},"444":{"start":{"line":824,"column":0},"end":{"line":857,"column":2}},"445":{"start":{"line":825,"column":2},"end":{"line":825,"column":36}},"446":{"start":{"line":826,"column":2},"end":{"line":826,"column":40}},"447":{"start":{"line":828,"column":2},"end":{"line":828,"column":16}},"448":{"start":{"line":829,"column":2},"end":{"line":849,"column":3}},"449":{"start":{"line":832,"column":4},"end":{"line":832,"column":30}},"450":{"start":{"line":833,"column":4},"end":{"line":833,"column":34}},"451":{"start":{"line":834,"column":4},"end":{"line":834,"column":43}},"452":{"start":{"line":835,"column":4},"end":{"line":846,"column":5}},"453":{"start":{"line":836,"column":6},"end":{"line":836,"column":20}},"454":{"start":{"line":837,"column":6},"end":{"line":837,"column":32}},"455":{"start":{"line":838,"column":6},"end":{"line":838,"column":31}},"456":{"start":{"line":839,"column":6},"end":{"line":839,"column":20}},"457":{"start":{"line":841,"column":6},"end":{"line":841,"column":29}},"458":{"start":{"line":842,"column":6},"end":{"line":842,"column":52}},"459":{"start":{"line":843,"column":6},"end":{"line":843,"column":28}},"460":{"start":{"line":844,"column":6},"end":{"line":844,"column":29}},"461":{"start":{"line":845,"column":6},"end":{"line":845,"column":42}},"462":{"start":{"line":847,"column":4},"end":{"line":847,"column":25}},"463":{"start":{"line":848,"column":4},"end":{"line":848,"column":19}},"464":{"start":{"line":850,"column":2},"end":{"line":854,"column":3}},"465":{"start":{"line":851,"column":4},"end":{"line":851,"column":25}},"466":{"start":{"line":853,"column":4},"end":{"line":853,"column":17}},"467":{"start":{"line":856,"column":2},"end":{"line":856,"column":21}},"468":{"start":{"line":859,"column":0},"end":{"line":898,"column":2}},"469":{"start":{"line":860,"column":2},"end":{"line":860,"column":36}},"470":{"start":{"line":861,"column":2},"end":{"line":861,"column":40}},"471":{"start":{"line":863,"column":2},"end":{"line":863,"column":16}},"472":{"start":{"line":864,"column":2},"end":{"line":864,"column":18}},"473":{"start":{"line":865,"column":2},"end":{"line":890,"column":3}},"474":{"start":{"line":868,"column":4},"end":{"line":868,"column":25}},"475":{"start":{"line":869,"column":4},"end":{"line":869,"column":16}},"476":{"start":{"line":870,"column":4},"end":{"line":870,"column":34}},"477":{"start":{"line":871,"column":4},"end":{"line":871,"column":43}},"478":{"start":{"line":872,"column":4},"end":{"line":886,"column":5}},"479":{"start":{"line":873,"column":6},"end":{"line":873,"column":20}},"480":{"start":{"line":874,"column":6},"end":{"line":874,"column":32}},"481":{"start":{"line":875,"column":6},"end":{"line":875,"column":31}},"482":{"start":{"line":876,"column":6},"end":{"line":876,"column":20}},"483":{"start":{"line":878,"column":6},"end":{"line":878,"column":29}},"484":{"start":{"line":879,"column":6},"end":{"line":879,"column":52}},"485":{"start":{"line":880,"column":6},"end":{"line":880,"column":28}},"486":{"start":{"line":881,"column":6},"end":{"line":881,"column":29}},"487":{"start":{"line":882,"column":6},"end":{"line":882,"column":42}},"488":{"start":{"line":884,"column":6},"end":{"line":884,"column":31}},"489":{"start":{"line":885,"column":6},"end":{"line":885,"column":26}},"490":{"start":{"line":887,"column":4},"end":{"line":887,"column":25}},"491":{"start":{"line":888,"column":4},"end":{"line":888,"column":19}},"492":{"start":{"line":889,"column":4},"end":{"line":889,"column":21}},"493":{"start":{"line":891,"column":2},"end":{"line":895,"column":3}},"494":{"start":{"line":892,"column":4},"end":{"line":892,"column":25}},"495":{"start":{"line":894,"column":4},"end":{"line":894,"column":17}},"496":{"start":{"line":897,"column":2},"end":{"line":897,"column":21}},"497":{"start":{"line":900,"column":0},"end":{"line":907,"column":2}},"498":{"start":{"line":901,"column":2},"end":{"line":901,"column":10}},"499":{"start":{"line":902,"column":2},"end":{"line":905,"column":35}},"500":{"start":{"line":903,"column":4},"end":{"line":903,"column":37}},"501":{"start":{"line":905,"column":4},"end":{"line":905,"column":35}},"502":{"start":{"line":906,"column":2},"end":{"line":906,"column":13}},"503":{"start":{"line":910,"column":0},"end":{"line":914,"column":2}},"504":{"start":{"line":911,"column":2},"end":{"line":911,"column":25}},"505":{"start":{"line":912,"column":2},"end":{"line":912,"column":50}},"506":{"start":{"line":913,"column":2},"end":{"line":913,"column":30}},"507":{"start":{"line":917,"column":0},"end":{"line":963,"column":2}},"508":{"start":{"line":918,"column":2},"end":{"line":922,"column":3}},"509":{"start":{"line":919,"column":4},"end":{"line":919,"column":22}},"510":{"start":{"line":920,"column":4},"end":{"line":920,"column":20}},"511":{"start":{"line":921,"column":4},"end":{"line":921,"column":16}},"512":{"start":{"line":924,"column":2},"end":{"line":924,"column":25}},"513":{"start":{"line":925,"column":2},"end":{"line":925,"column":24}},"514":{"start":{"line":927,"column":2},"end":{"line":927,"column":37}},"515":{"start":{"line":928,"column":2},"end":{"line":928,"column":41}},"516":{"start":{"line":929,"column":2},"end":{"line":929,"column":34}},"517":{"start":{"line":931,"column":2},"end":{"line":952,"column":3}},"518":{"start":{"line":934,"column":4},"end":{"line":934,"column":18}},"519":{"start":{"line":935,"column":4},"end":{"line":935,"column":18}},"520":{"start":{"line":936,"column":4},"end":{"line":936,"column":37}},"521":{"start":{"line":937,"column":4},"end":{"line":948,"column":5}},"522":{"start":{"line":938,"column":6},"end":{"line":938,"column":20}},"523":{"start":{"line":939,"column":6},"end":{"line":939,"column":28}},"524":{"start":{"line":940,"column":6},"end":{"line":940,"column":27}},"525":{"start":{"line":941,"column":6},"end":{"line":941,"column":20}},"526":{"start":{"line":943,"column":6},"end":{"line":943,"column":29}},"527":{"start":{"line":944,"column":6},"end":{"line":944,"column":35}},"528":{"start":{"line":945,"column":6},"end":{"line":945,"column":18}},"529":{"start":{"line":946,"column":6},"end":{"line":946,"column":29}},"530":{"start":{"line":947,"column":6},"end":{"line":947,"column":25}},"531":{"start":{"line":949,"column":4},"end":{"line":949,"column":26}},"532":{"start":{"line":950,"column":4},"end":{"line":950,"column":31}},"533":{"start":{"line":951,"column":4},"end":{"line":951,"column":14}},"534":{"start":{"line":955,"column":2},"end":{"line":955,"column":16}},"535":{"start":{"line":956,"column":2},"end":{"line":960,"column":3}},"536":{"start":{"line":957,"column":4},"end":{"line":957,"column":34}},"537":{"start":{"line":958,"column":4},"end":{"line":958,"column":34}},"538":{"start":{"line":959,"column":4},"end":{"line":959,"column":21}},"539":{"start":{"line":962,"column":2},"end":{"line":962,"column":22}},"540":{"start":{"line":965,"column":0},"end":{"line":986,"column":2}},"541":{"start":{"line":966,"column":2},"end":{"line":966,"column":34}},"542":{"start":{"line":969,"column":2},"end":{"line":969,"column":16}},"543":{"start":{"line":970,"column":2},"end":{"line":978,"column":3}},"544":{"start":{"line":971,"column":4},"end":{"line":971,"column":32}},"545":{"start":{"line":972,"column":4},"end":{"line":972,"column":51}},"546":{"start":{"line":973,"column":4},"end":{"line":973,"column":17}},"547":{"start":{"line":974,"column":4},"end":{"line":974,"column":33}},"548":{"start":{"line":976,"column":4},"end":{"line":976,"column":23}},"549":{"start":{"line":977,"column":4},"end":{"line":977,"column":35}},"550":{"start":{"line":980,"column":2},"end":{"line":983,"column":3}},"551":{"start":{"line":981,"column":4},"end":{"line":981,"column":26}},"552":{"start":{"line":982,"column":4},"end":{"line":982,"column":18}},"553":{"start":{"line":985,"column":2},"end":{"line":985,"column":14}},"554":{"start":{"line":989,"column":0},"end":{"line":991,"column":2}},"555":{"start":{"line":990,"column":2},"end":{"line":990,"column":24}},"556":{"start":{"line":994,"column":0},"end":{"line":996,"column":2}},"557":{"start":{"line":995,"column":2},"end":{"line":995,"column":24}},"558":{"start":{"line":999,"column":0},"end":{"line":1028,"column":2}},"559":{"start":{"line":1000,"column":2},"end":{"line":1000,"column":48}},"560":{"start":{"line":1001,"column":2},"end":{"line":1001,"column":20}},"561":{"start":{"line":1002,"column":2},"end":{"line":1002,"column":26}},"562":{"start":{"line":1003,"column":2},"end":{"line":1003,"column":55}},"563":{"start":{"line":1005,"column":2},"end":{"line":1017,"column":3}},"564":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":18}},"565":{"start":{"line":1007,"column":4},"end":{"line":1012,"column":5}},"566":{"start":{"line":1008,"column":6},"end":{"line":1008,"column":47}},"567":{"start":{"line":1009,"column":6},"end":{"line":1009,"column":46}},"568":{"start":{"line":1010,"column":6},"end":{"line":1010,"column":32}},"569":{"start":{"line":1011,"column":6},"end":{"line":1011,"column":36}},"570":{"start":{"line":1013,"column":4},"end":{"line":1016,"column":5}},"571":{"start":{"line":1014,"column":6},"end":{"line":1014,"column":28}},"572":{"start":{"line":1015,"column":6},"end":{"line":1015,"column":20}},"573":{"start":{"line":1019,"column":2},"end":{"line":1025,"column":3}},"574":{"start":{"line":1020,"column":4},"end":{"line":1021,"column":40}},"575":{"start":{"line":1021,"column":6},"end":{"line":1021,"column":40}},"576":{"start":{"line":1022,"column":4},"end":{"line":1023,"column":24}},"577":{"start":{"line":1023,"column":6},"end":{"line":1023,"column":24}},"578":{"start":{"line":1024,"column":4},"end":{"line":1024,"column":21}},"579":{"start":{"line":1027,"column":2},"end":{"line":1027,"column":22}},"580":{"start":{"line":1033,"column":0},"end":{"line":1086,"column":2}},"581":{"start":{"line":1034,"column":2},"end":{"line":1034,"column":48}},"582":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":8}},"583":{"start":{"line":1036,"column":2},"end":{"line":1039,"column":10}},"584":{"start":{"line":1037,"column":4},"end":{"line":1037,"column":34}},"585":{"start":{"line":1039,"column":4},"end":{"line":1039,"column":10}},"586":{"start":{"line":1041,"column":2},"end":{"line":1041,"column":20}},"587":{"start":{"line":1042,"column":2},"end":{"line":1042,"column":49}},"588":{"start":{"line":1043,"column":2},"end":{"line":1043,"column":50}},"589":{"start":{"line":1044,"column":2},"end":{"line":1044,"column":29}},"590":{"start":{"line":1046,"column":2},"end":{"line":1046,"column":9}},"591":{"start":{"line":1047,"column":2},"end":{"line":1047,"column":21}},"592":{"start":{"line":1050,"column":2},"end":{"line":1054,"column":3}},"593":{"start":{"line":1051,"column":4},"end":{"line":1052,"column":43}},"594":{"start":{"line":1052,"column":6},"end":{"line":1052,"column":43}},"595":{"start":{"line":1053,"column":4},"end":{"line":1053,"column":27}},"596":{"start":{"line":1056,"column":2},"end":{"line":1065,"column":3}},"597":{"start":{"line":1058,"column":9},"end":{"line":1065,"column":3}},"598":{"start":{"line":1059,"column":4},"end":{"line":1059,"column":21}},"599":{"start":{"line":1060,"column":4},"end":{"line":1061,"column":40}},"600":{"start":{"line":1061,"column":6},"end":{"line":1061,"column":40}},"601":{"start":{"line":1063,"column":4},"end":{"line":1063,"column":22}},"602":{"start":{"line":1064,"column":4},"end":{"line":1064,"column":20}},"603":{"start":{"line":1067,"column":2},"end":{"line":1067,"column":16}},"604":{"start":{"line":1068,"column":2},"end":{"line":1072,"column":3}},"605":{"start":{"line":1069,"column":4},"end":{"line":1069,"column":29}},"606":{"start":{"line":1070,"column":4},"end":{"line":1070,"column":55}},"607":{"start":{"line":1071,"column":4},"end":{"line":1071,"column":24}},"608":{"start":{"line":1075,"column":2},"end":{"line":1076,"column":52}},"609":{"start":{"line":1076,"column":4},"end":{"line":1076,"column":52}},"610":{"start":{"line":1078,"column":2},"end":{"line":1081,"column":3}},"611":{"start":{"line":1079,"column":4},"end":{"line":1079,"column":22}},"612":{"start":{"line":1080,"column":4},"end":{"line":1080,"column":20}},"613":{"start":{"line":1083,"column":2},"end":{"line":1083,"column":15}},"614":{"start":{"line":1085,"column":2},"end":{"line":1085,"column":14}},"615":{"start":{"line":1089,"column":0},"end":{"line":1091,"column":2}},"616":{"start":{"line":1090,"column":2},"end":{"line":1090,"column":34}},"617":{"start":{"line":1094,"column":0},"end":{"line":1096,"column":2}},"618":{"start":{"line":1095,"column":2},"end":{"line":1095,"column":34}},"619":{"start":{"line":1099,"column":0},"end":{"line":1114,"column":2}},"620":{"start":{"line":1100,"column":2},"end":{"line":1100,"column":46}},"621":{"start":{"line":1101,"column":2},"end":{"line":1101,"column":19}},"622":{"start":{"line":1102,"column":2},"end":{"line":1102,"column":25}},"623":{"start":{"line":1103,"column":2},"end":{"line":1103,"column":17}},"624":{"start":{"line":1106,"column":2},"end":{"line":1108,"column":3}},"625":{"start":{"line":1107,"column":4},"end":{"line":1107,"column":17}},"626":{"start":{"line":1111,"column":2},"end":{"line":1111,"column":24}},"627":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":19}},"628":{"start":{"line":1117,"column":0},"end":{"line":1134,"column":2}},"629":{"start":{"line":1118,"column":2},"end":{"line":1118,"column":48}},"630":{"start":{"line":1119,"column":2},"end":{"line":1119,"column":20}},"631":{"start":{"line":1120,"column":2},"end":{"line":1120,"column":26}},"632":{"start":{"line":1122,"column":2},"end":{"line":1122,"column":64}},"633":{"start":{"line":1124,"column":2},"end":{"line":1125,"column":8}},"634":{"start":{"line":1125,"column":4},"end":{"line":1125,"column":8}},"635":{"start":{"line":1126,"column":2},"end":{"line":1126,"column":41}},"636":{"start":{"line":1128,"column":2},"end":{"line":1131,"column":3}},"637":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":52}},"638":{"start":{"line":1130,"column":4},"end":{"line":1130,"column":40}},"639":{"start":{"line":1133,"column":2},"end":{"line":1133,"column":22}},"640":{"start":{"line":1137,"column":0},"end":{"line":1139,"column":2}},"641":{"start":{"line":1138,"column":2},"end":{"line":1138,"column":35}},"642":{"start":{"line":1142,"column":0},"end":{"line":1163,"column":2}},"643":{"start":{"line":1143,"column":2},"end":{"line":1143,"column":34}},"644":{"start":{"line":1144,"column":2},"end":{"line":1145,"column":28}},"645":{"start":{"line":1145,"column":4},"end":{"line":1145,"column":28}},"646":{"start":{"line":1148,"column":2},"end":{"line":1159,"column":3}},"647":{"start":{"line":1149,"column":4},"end":{"line":1153,"column":5}},"648":{"start":{"line":1150,"column":6},"end":{"line":1150,"column":42}},"649":{"start":{"line":1151,"column":6},"end":{"line":1151,"column":24}},"650":{"start":{"line":1152,"column":6},"end":{"line":1152,"column":18}},"651":{"start":{"line":1155,"column":4},"end":{"line":1155,"column":22}},"652":{"start":{"line":1156,"column":4},"end":{"line":1156,"column":20}},"653":{"start":{"line":1157,"column":4},"end":{"line":1157,"column":21}},"654":{"start":{"line":1158,"column":4},"end":{"line":1158,"column":16}},"655":{"start":{"line":1162,"column":2},"end":{"line":1162,"column":26}},"656":{"start":{"line":1165,"column":0},"end":{"line":1179,"column":2}},"657":{"start":{"line":1166,"column":2},"end":{"line":1166,"column":23}},"658":{"start":{"line":1169,"column":2},"end":{"line":1175,"column":3}},"659":{"start":{"line":1170,"column":4},"end":{"line":1170,"column":31}},"660":{"start":{"line":1171,"column":4},"end":{"line":1174,"column":26}},"661":{"start":{"line":1172,"column":6},"end":{"line":1172,"column":28}},"662":{"start":{"line":1174,"column":6},"end":{"line":1174,"column":26}},"663":{"start":{"line":1176,"column":2},"end":{"line":1176,"column":45}},"664":{"start":{"line":1178,"column":2},"end":{"line":1178,"column":14}},"665":{"start":{"line":1182,"column":0},"end":{"line":1203,"column":2}},"666":{"start":{"line":1183,"column":2},"end":{"line":1183,"column":34}},"667":{"start":{"line":1184,"column":2},"end":{"line":1185,"column":28}},"668":{"start":{"line":1185,"column":4},"end":{"line":1185,"column":28}},"669":{"start":{"line":1187,"column":2},"end":{"line":1192,"column":3}},"670":{"start":{"line":1188,"column":4},"end":{"line":1188,"column":22}},"671":{"start":{"line":1189,"column":4},"end":{"line":1189,"column":20}},"672":{"start":{"line":1190,"column":4},"end":{"line":1190,"column":21}},"673":{"start":{"line":1191,"column":4},"end":{"line":1191,"column":16}},"674":{"start":{"line":1194,"column":2},"end":{"line":1194,"column":23}},"675":{"start":{"line":1197,"column":2},"end":{"line":1200,"column":3}},"676":{"start":{"line":1198,"column":4},"end":{"line":1198,"column":31}},"677":{"start":{"line":1199,"column":4},"end":{"line":1199,"column":27}},"678":{"start":{"line":1202,"column":2},"end":{"line":1202,"column":22}},"679":{"start":{"line":1205,"column":0},"end":{"line":1207,"column":2}},"680":{"start":{"line":1206,"column":2},"end":{"line":1206,"column":33}},"681":{"start":{"line":1209,"column":0},"end":{"line":1211,"column":2}},"682":{"start":{"line":1210,"column":2},"end":{"line":1210,"column":33}},"683":{"start":{"line":1213,"column":0},"end":{"line":1217,"column":2}},"684":{"start":{"line":1214,"column":2},"end":{"line":1214,"column":20}},"685":{"start":{"line":1216,"column":2},"end":{"line":1216,"column":14}},"686":{"start":{"line":1219,"column":0},"end":{"line":1221,"column":2}},"687":{"start":{"line":1220,"column":2},"end":{"line":1220,"column":29}},"688":{"start":{"line":1223,"column":0},"end":{"line":1269,"column":2}},"689":{"start":{"line":1225,"column":2},"end":{"line":1225,"column":31}},"690":{"start":{"line":1226,"column":2},"end":{"line":1226,"column":8}},"691":{"start":{"line":1227,"column":2},"end":{"line":1234,"column":3}},"692":{"start":{"line":1228,"column":4},"end":{"line":1228,"column":27}},"693":{"start":{"line":1229,"column":4},"end":{"line":1230,"column":27}},"694":{"start":{"line":1230,"column":6},"end":{"line":1230,"column":27}},"695":{"start":{"line":1231,"column":4},"end":{"line":1231,"column":19}},"696":{"start":{"line":1233,"column":4},"end":{"line":1233,"column":20}},"697":{"start":{"line":1237,"column":2},"end":{"line":1237,"column":43}},"698":{"start":{"line":1238,"column":2},"end":{"line":1239,"column":22}},"699":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":22}},"700":{"start":{"line":1241,"column":2},"end":{"line":1241,"column":16}},"701":{"start":{"line":1242,"column":2},"end":{"line":1248,"column":3}},"702":{"start":{"line":1243,"column":4},"end":{"line":1243,"column":42}},"703":{"start":{"line":1244,"column":4},"end":{"line":1244,"column":35}},"704":{"start":{"line":1245,"column":4},"end":{"line":1245,"column":27}},"705":{"start":{"line":1246,"column":4},"end":{"line":1246,"column":50}},"706":{"start":{"line":1247,"column":4},"end":{"line":1247,"column":42}},"707":{"start":{"line":1249,"column":2},"end":{"line":1253,"column":3}},"708":{"start":{"line":1250,"column":4},"end":{"line":1250,"column":42}},"709":{"start":{"line":1251,"column":4},"end":{"line":1251,"column":20}},"710":{"start":{"line":1252,"column":4},"end":{"line":1252,"column":42}},"711":{"start":{"line":1255,"column":2},"end":{"line":1256,"column":24}},"712":{"start":{"line":1256,"column":4},"end":{"line":1256,"column":24}},"713":{"start":{"line":1259,"column":2},"end":{"line":1259,"column":23}},"714":{"start":{"line":1260,"column":2},"end":{"line":1260,"column":12}},"715":{"start":{"line":1261,"column":2},"end":{"line":1265,"column":3}},"716":{"start":{"line":1262,"column":4},"end":{"line":1262,"column":35}},"717":{"start":{"line":1263,"column":4},"end":{"line":1263,"column":20}},"718":{"start":{"line":1264,"column":4},"end":{"line":1264,"column":34}},"719":{"start":{"line":1266,"column":2},"end":{"line":1266,"column":19}},"720":{"start":{"line":1268,"column":2},"end":{"line":1268,"column":22}},"721":{"start":{"line":1271,"column":0},"end":{"line":1332,"column":2}},"722":{"start":{"line":1272,"column":2},"end":{"line":1272,"column":39}},"723":{"start":{"line":1274,"column":2},"end":{"line":1274,"column":23}},"724":{"start":{"line":1275,"column":2},"end":{"line":1275,"column":14}},"725":{"start":{"line":1278,"column":2},"end":{"line":1278,"column":34}},"726":{"start":{"line":1279,"column":2},"end":{"line":1279,"column":37}},"727":{"start":{"line":1280,"column":2},"end":{"line":1280,"column":23}},"728":{"start":{"line":1281,"column":2},"end":{"line":1285,"column":3}},"729":{"start":{"line":1282,"column":4},"end":{"line":1282,"column":22}},"730":{"start":{"line":1283,"column":4},"end":{"line":1283,"column":19}},"731":{"start":{"line":1284,"column":4},"end":{"line":1284,"column":32}},"732":{"start":{"line":1288,"column":2},"end":{"line":1288,"column":30}},"733":{"start":{"line":1289,"column":2},"end":{"line":1289,"column":8}},"734":{"start":{"line":1291,"column":2},"end":{"line":1297,"column":3}},"735":{"start":{"line":1292,"column":4},"end":{"line":1292,"column":21}},"736":{"start":{"line":1293,"column":4},"end":{"line":1293,"column":21}},"737":{"start":{"line":1294,"column":4},"end":{"line":1294,"column":34}},"738":{"start":{"line":1295,"column":4},"end":{"line":1296,"column":21}},"739":{"start":{"line":1296,"column":6},"end":{"line":1296,"column":21}},"740":{"start":{"line":1299,"column":2},"end":{"line":1299,"column":45}},"741":{"start":{"line":1300,"column":2},"end":{"line":1304,"column":3}},"742":{"start":{"line":1301,"column":4},"end":{"line":1301,"column":13}},"743":{"start":{"line":1302,"column":4},"end":{"line":1303,"column":21}},"744":{"start":{"line":1303,"column":6},"end":{"line":1303,"column":21}},"745":{"start":{"line":1306,"column":2},"end":{"line":1323,"column":3}},"746":{"start":{"line":1307,"column":4},"end":{"line":1307,"column":75}},"747":{"start":{"line":1311,"column":4},"end":{"line":1311,"column":45}},"748":{"start":{"line":1313,"column":4},"end":{"line":1313,"column":29}},"749":{"start":{"line":1314,"column":4},"end":{"line":1320,"column":5}},"750":{"start":{"line":1315,"column":6},"end":{"line":1315,"column":11}},"751":{"start":{"line":1316,"column":6},"end":{"line":1316,"column":21}},"752":{"start":{"line":1317,"column":6},"end":{"line":1317,"column":30}},"753":{"start":{"line":1318,"column":6},"end":{"line":1319,"column":25}},"754":{"start":{"line":1319,"column":8},"end":{"line":1319,"column":25}},"755":{"start":{"line":1321,"column":4},"end":{"line":1322,"column":22}},"756":{"start":{"line":1322,"column":6},"end":{"line":1322,"column":22}},"757":{"start":{"line":1324,"column":2},"end":{"line":1325,"column":14}},"758":{"start":{"line":1325,"column":4},"end":{"line":1325,"column":14}},"759":{"start":{"line":1326,"column":2},"end":{"line":1326,"column":12}},"760":{"start":{"line":1329,"column":2},"end":{"line":1330,"column":19}},"761":{"start":{"line":1330,"column":4},"end":{"line":1330,"column":19}},"762":{"start":{"line":1331,"column":2},"end":{"line":1331,"column":39}},"763":{"start":{"line":1334,"column":0},"end":{"line":1378,"column":2}},"764":{"start":{"line":1335,"column":2},"end":{"line":1335,"column":28}},"765":{"start":{"line":1337,"column":2},"end":{"line":1357,"column":3}},"766":{"start":{"line":1338,"column":4},"end":{"line":1338,"column":43}},"767":{"start":{"line":1339,"column":4},"end":{"line":1339,"column":12}},"768":{"start":{"line":1340,"column":4},"end":{"line":1340,"column":12}},"769":{"start":{"line":1341,"column":4},"end":{"line":1342,"column":26}},"770":{"start":{"line":1342,"column":6},"end":{"line":1342,"column":26}},"771":{"start":{"line":1343,"column":4},"end":{"line":1344,"column":63}},"772":{"start":{"line":1344,"column":6},"end":{"line":1344,"column":63}},"773":{"start":{"line":1345,"column":4},"end":{"line":1348,"column":6}},"774":{"start":{"line":1349,"column":9},"end":{"line":1357,"column":3}},"775":{"start":{"line":1350,"column":4},"end":{"line":1350,"column":43}},"776":{"start":{"line":1351,"column":4},"end":{"line":1351,"column":12}},"777":{"start":{"line":1352,"column":4},"end":{"line":1353,"column":26}},"778":{"start":{"line":1353,"column":6},"end":{"line":1353,"column":26}},"779":{"start":{"line":1354,"column":4},"end":{"line":1354,"column":38}},"780":{"start":{"line":1355,"column":9},"end":{"line":1357,"column":3}},"781":{"start":{"line":1356,"column":4},"end":{"line":1356,"column":46}},"782":{"start":{"line":1362,"column":2},"end":{"line":1363,"column":41}},"783":{"start":{"line":1363,"column":4},"end":{"line":1363,"column":41}},"784":{"start":{"line":1366,"column":2},"end":{"line":1375,"column":3}},"785":{"start":{"line":1367,"column":4},"end":{"line":1370,"column":65}},"786":{"start":{"line":1368,"column":6},"end":{"line":1368,"column":57}},"787":{"start":{"line":1369,"column":9},"end":{"line":1370,"column":65}},"788":{"start":{"line":1370,"column":6},"end":{"line":1370,"column":65}},"789":{"start":{"line":1371,"column":4},"end":{"line":1374,"column":6}},"790":{"start":{"line":1377,"column":2},"end":{"line":1377,"column":34}},"791":{"start":{"line":1381,"column":0},"end":{"line":1383,"column":2}},"792":{"start":{"line":1382,"column":2},"end":{"line":1382,"column":37}},"793":{"start":{"line":1386,"column":0},"end":{"line":1388,"column":2}},"794":{"start":{"line":1387,"column":2},"end":{"line":1387,"column":37}},"795":{"start":{"line":1391,"column":0},"end":{"line":1410,"column":2}},"796":{"start":{"line":1392,"column":2},"end":{"line":1392,"column":28}},"797":{"start":{"line":1395,"column":2},"end":{"line":1396,"column":18}},"798":{"start":{"line":1396,"column":4},"end":{"line":1396,"column":18}},"799":{"start":{"line":1398,"column":2},"end":{"line":1398,"column":52}},"800":{"start":{"line":1400,"column":2},"end":{"line":1400,"column":25}},"801":{"start":{"line":1401,"column":2},"end":{"line":1401,"column":24}},"802":{"start":{"line":1402,"column":2},"end":{"line":1402,"column":26}},"803":{"start":{"line":1405,"column":2},"end":{"line":1406,"column":18}},"804":{"start":{"line":1406,"column":4},"end":{"line":1406,"column":18}},"805":{"start":{"line":1409,"column":2},"end":{"line":1409,"column":57}},"806":{"start":{"line":1412,"column":0},"end":{"line":1421,"column":2}},"807":{"start":{"line":1413,"column":2},"end":{"line":1413,"column":27}},"808":{"start":{"line":1414,"column":2},"end":{"line":1414,"column":26}},"809":{"start":{"line":1416,"column":2},"end":{"line":1416,"column":14}},"810":{"start":{"line":1417,"column":2},"end":{"line":1418,"column":42}},"811":{"start":{"line":1418,"column":4},"end":{"line":1418,"column":42}},"812":{"start":{"line":1420,"column":2},"end":{"line":1420,"column":13}},"813":{"start":{"line":1424,"column":0},"end":{"line":1435,"column":2}},"814":{"start":{"line":1425,"column":2},"end":{"line":1425,"column":27}},"815":{"start":{"line":1427,"column":2},"end":{"line":1427,"column":16}},"816":{"start":{"line":1428,"column":2},"end":{"line":1432,"column":3}},"817":{"start":{"line":1429,"column":4},"end":{"line":1429,"column":46}},"818":{"start":{"line":1430,"column":4},"end":{"line":1430,"column":34}},"819":{"start":{"line":1431,"column":4},"end":{"line":1431,"column":20}},"820":{"start":{"line":1434,"column":2},"end":{"line":1434,"column":22}},"821":{"start":{"line":1437,"column":0},"end":{"line":1439,"column":2}},"822":{"start":{"line":1438,"column":2},"end":{"line":1438,"column":33}},"823":{"start":{"line":1441,"column":0},"end":{"line":1511,"column":2}},"824":{"start":{"line":1442,"column":2},"end":{"line":1442,"column":18}},"825":{"start":{"line":1443,"column":2},"end":{"line":1443,"column":26}},"826":{"start":{"line":1445,"column":2},"end":{"line":1445,"column":15}},"827":{"start":{"line":1446,"column":2},"end":{"line":1446,"column":20}},"828":{"start":{"line":1448,"column":2},"end":{"line":1451,"column":18}},"829":{"start":{"line":1449,"column":4},"end":{"line":1449,"column":17}},"830":{"start":{"line":1451,"column":4},"end":{"line":1451,"column":18}},"831":{"start":{"line":1454,"column":2},"end":{"line":1454,"column":20}},"832":{"start":{"line":1455,"column":2},"end":{"line":1455,"column":20}},"833":{"start":{"line":1458,"column":2},"end":{"line":1458,"column":20}},"834":{"start":{"line":1459,"column":2},"end":{"line":1459,"column":20}},"835":{"start":{"line":1461,"column":2},"end":{"line":1461,"column":12}},"836":{"start":{"line":1463,"column":2},"end":{"line":1467,"column":3}},"837":{"start":{"line":1464,"column":4},"end":{"line":1464,"column":15}},"838":{"start":{"line":1465,"column":4},"end":{"line":1465,"column":15}},"839":{"start":{"line":1466,"column":4},"end":{"line":1466,"column":8}},"840":{"start":{"line":1469,"column":2},"end":{"line":1469,"column":21}},"841":{"start":{"line":1470,"column":2},"end":{"line":1470,"column":21}},"842":{"start":{"line":1472,"column":2},"end":{"line":1504,"column":3}},"843":{"start":{"line":1473,"column":4},"end":{"line":1482,"column":5}},"844":{"start":{"line":1474,"column":6},"end":{"line":1474,"column":17}},"845":{"start":{"line":1475,"column":6},"end":{"line":1481,"column":7}},"846":{"start":{"line":1476,"column":8},"end":{"line":1476,"column":19}},"847":{"start":{"line":1477,"column":8},"end":{"line":1477,"column":19}},"848":{"start":{"line":1479,"column":8},"end":{"line":1479,"column":28}},"849":{"start":{"line":1480,"column":8},"end":{"line":1480,"column":28}},"850":{"start":{"line":1484,"column":4},"end":{"line":1493,"column":5}},"851":{"start":{"line":1485,"column":6},"end":{"line":1485,"column":17}},"852":{"start":{"line":1486,"column":6},"end":{"line":1492,"column":7}},"853":{"start":{"line":1487,"column":8},"end":{"line":1487,"column":19}},"854":{"start":{"line":1488,"column":8},"end":{"line":1488,"column":19}},"855":{"start":{"line":1490,"column":8},"end":{"line":1490,"column":28}},"856":{"start":{"line":1491,"column":8},"end":{"line":1491,"column":28}},"857":{"start":{"line":1495,"column":4},"end":{"line":1503,"column":5}},"858":{"start":{"line":1496,"column":6},"end":{"line":1496,"column":16}},"859":{"start":{"line":1497,"column":6},"end":{"line":1497,"column":16}},"860":{"start":{"line":1498,"column":6},"end":{"line":1498,"column":16}},"861":{"start":{"line":1500,"column":6},"end":{"line":1500,"column":16}},"862":{"start":{"line":1501,"column":6},"end":{"line":1501,"column":16}},"863":{"start":{"line":1502,"column":6},"end":{"line":1502,"column":16}},"864":{"start":{"line":1506,"column":2},"end":{"line":1510,"column":4}},"865":{"start":{"line":1516,"column":0},"end":{"line":1560,"column":2}},"866":{"start":{"line":1517,"column":2},"end":{"line":1517,"column":18}},"867":{"start":{"line":1518,"column":2},"end":{"line":1518,"column":26}},"868":{"start":{"line":1520,"column":2},"end":{"line":1520,"column":15}},"869":{"start":{"line":1521,"column":2},"end":{"line":1521,"column":20}},"870":{"start":{"line":1523,"column":2},"end":{"line":1526,"column":18}},"871":{"start":{"line":1524,"column":4},"end":{"line":1524,"column":17}},"872":{"start":{"line":1526,"column":4},"end":{"line":1526,"column":18}},"873":{"start":{"line":1528,"column":2},"end":{"line":1528,"column":21}},"874":{"start":{"line":1529,"column":2},"end":{"line":1529,"column":21}},"875":{"start":{"line":1531,"column":2},"end":{"line":1531,"column":24}},"876":{"start":{"line":1533,"column":2},"end":{"line":1555,"column":3}},"877":{"start":{"line":1534,"column":4},"end":{"line":1540,"column":5}},"878":{"start":{"line":1535,"column":6},"end":{"line":1535,"column":17}},"879":{"start":{"line":1536,"column":6},"end":{"line":1539,"column":32}},"880":{"start":{"line":1537,"column":8},"end":{"line":1537,"column":20}},"881":{"start":{"line":1539,"column":8},"end":{"line":1539,"column":32}},"882":{"start":{"line":1541,"column":4},"end":{"line":1547,"column":5}},"883":{"start":{"line":1542,"column":6},"end":{"line":1542,"column":17}},"884":{"start":{"line":1543,"column":6},"end":{"line":1546,"column":32}},"885":{"start":{"line":1544,"column":8},"end":{"line":1544,"column":20}},"886":{"start":{"line":1546,"column":8},"end":{"line":1546,"column":32}},"887":{"start":{"line":1548,"column":4},"end":{"line":1554,"column":5}},"888":{"start":{"line":1549,"column":6},"end":{"line":1549,"column":16}},"889":{"start":{"line":1550,"column":6},"end":{"line":1550,"column":18}},"890":{"start":{"line":1552,"column":6},"end":{"line":1552,"column":16}},"891":{"start":{"line":1553,"column":6},"end":{"line":1553,"column":18}},"892":{"start":{"line":1556,"column":2},"end":{"line":1559,"column":14}},"893":{"start":{"line":1557,"column":4},"end":{"line":1557,"column":14}},"894":{"start":{"line":1559,"column":4},"end":{"line":1559,"column":14}},"895":{"start":{"line":1562,"column":0},"end":{"line":1599,"column":2}},"896":{"start":{"line":1563,"column":2},"end":{"line":1564,"column":23}},"897":{"start":{"line":1564,"column":4},"end":{"line":1564,"column":23}},"898":{"start":{"line":1565,"column":2},"end":{"line":1566,"column":24}},"899":{"start":{"line":1566,"column":4},"end":{"line":1566,"column":24}},"900":{"start":{"line":1568,"column":2},"end":{"line":1568,"column":23}},"901":{"start":{"line":1569,"column":2},"end":{"line":1569,"column":22}},"902":{"start":{"line":1570,"column":2},"end":{"line":1570,"column":17}},"903":{"start":{"line":1571,"column":2},"end":{"line":1571,"column":17}},"904":{"start":{"line":1574,"column":2},"end":{"line":1577,"column":3}},"905":{"start":{"line":1575,"column":4},"end":{"line":1575,"column":15}},"906":{"start":{"line":1576,"column":4},"end":{"line":1576,"column":15}},"907":{"start":{"line":1579,"column":2},"end":{"line":1596,"column":17}},"908":{"start":{"line":1580,"column":4},"end":{"line":1581,"column":17}},"909":{"start":{"line":1581,"column":6},"end":{"line":1581,"column":17}},"910":{"start":{"line":1582,"column":4},"end":{"line":1583,"column":17}},"911":{"start":{"line":1583,"column":6},"end":{"line":1583,"column":17}},"912":{"start":{"line":1585,"column":4},"end":{"line":1585,"column":21}},"913":{"start":{"line":1586,"column":4},"end":{"line":1593,"column":5}},"914":{"start":{"line":1588,"column":6},"end":{"line":1588,"column":16}},"915":{"start":{"line":1589,"column":6},"end":{"line":1589,"column":12}},"916":{"start":{"line":1590,"column":6},"end":{"line":1590,"column":12}},"917":{"start":{"line":1591,"column":11},"end":{"line":1593,"column":5}},"918":{"start":{"line":1592,"column":6},"end":{"line":1592,"column":12}},"919":{"start":{"line":1595,"column":4},"end":{"line":1595,"column":14}},"920":{"start":{"line":1598,"column":2},"end":{"line":1598,"column":24}},"921":{"start":{"line":1602,"column":0},"end":{"line":1604,"column":2}},"922":{"start":{"line":1603,"column":2},"end":{"line":1603,"column":35}},"923":{"start":{"line":1606,"column":0},"end":{"line":1608,"column":2}},"924":{"start":{"line":1607,"column":2},"end":{"line":1607,"column":35}},"925":{"start":{"line":1610,"column":0},"end":{"line":1612,"column":2}},"926":{"start":{"line":1611,"column":2},"end":{"line":1611,"column":35}},"927":{"start":{"line":1615,"column":0},"end":{"line":1617,"column":2}},"928":{"start":{"line":1616,"column":2},"end":{"line":1616,"column":29}},"929":{"start":{"line":1620,"column":0},"end":{"line":1649,"column":2}},"930":{"start":{"line":1621,"column":2},"end":{"line":1621,"column":34}},"931":{"start":{"line":1622,"column":2},"end":{"line":1622,"column":19}},"932":{"start":{"line":1623,"column":2},"end":{"line":1623,"column":25}},"933":{"start":{"line":1624,"column":2},"end":{"line":1624,"column":17}},"934":{"start":{"line":1627,"column":2},"end":{"line":1633,"column":3}},"935":{"start":{"line":1628,"column":4},"end":{"line":1629,"column":24}},"936":{"start":{"line":1629,"column":6},"end":{"line":1629,"column":24}},"937":{"start":{"line":1630,"column":4},"end":{"line":1630,"column":23}},"938":{"start":{"line":1631,"column":4},"end":{"line":1631,"column":24}},"939":{"start":{"line":1632,"column":4},"end":{"line":1632,"column":16}},"940":{"start":{"line":1636,"column":2},"end":{"line":1636,"column":16}},"941":{"start":{"line":1637,"column":2},"end":{"line":1643,"column":3}},"942":{"start":{"line":1638,"column":4},"end":{"line":1638,"column":26}},"943":{"start":{"line":1639,"column":4},"end":{"line":1639,"column":15}},"944":{"start":{"line":1640,"column":4},"end":{"line":1640,"column":21}},"945":{"start":{"line":1641,"column":4},"end":{"line":1641,"column":19}},"946":{"start":{"line":1642,"column":4},"end":{"line":1642,"column":22}},"947":{"start":{"line":1644,"column":2},"end":{"line":1647,"column":3}},"948":{"start":{"line":1645,"column":4},"end":{"line":1645,"column":26}},"949":{"start":{"line":1646,"column":4},"end":{"line":1646,"column":18}},"950":{"start":{"line":1648,"column":2},"end":{"line":1648,"column":14}},"951":{"start":{"line":1651,"column":0},"end":{"line":1674,"column":2}},"952":{"start":{"line":1652,"column":2},"end":{"line":1652,"column":21}},"953":{"start":{"line":1653,"column":2},"end":{"line":1654,"column":15}},"954":{"start":{"line":1654,"column":4},"end":{"line":1654,"column":15}},"955":{"start":{"line":1656,"column":2},"end":{"line":1659,"column":13}},"956":{"start":{"line":1657,"column":4},"end":{"line":1657,"column":14}},"957":{"start":{"line":1658,"column":7},"end":{"line":1659,"column":13}},"958":{"start":{"line":1659,"column":4},"end":{"line":1659,"column":13}},"959":{"start":{"line":1661,"column":2},"end":{"line":1661,"column":19}},"960":{"start":{"line":1662,"column":2},"end":{"line":1662,"column":15}},"961":{"start":{"line":1664,"column":2},"end":{"line":1664,"column":10}},"962":{"start":{"line":1665,"column":2},"end":{"line":1670,"column":3}},"963":{"start":{"line":1666,"column":4},"end":{"line":1666,"column":12}},"964":{"start":{"line":1668,"column":4},"end":{"line":1668,"column":26}},"965":{"start":{"line":1669,"column":4},"end":{"line":1669,"column":43}},"966":{"start":{"line":1671,"column":2},"end":{"line":1672,"column":15}},"967":{"start":{"line":1672,"column":4},"end":{"line":1672,"column":15}},"968":{"start":{"line":1673,"column":2},"end":{"line":1673,"column":13}},"969":{"start":{"line":1680,"column":0},"end":{"line":1691,"column":2}},"970":{"start":{"line":1681,"column":2},"end":{"line":1684,"column":13}},"971":{"start":{"line":1682,"column":4},"end":{"line":1682,"column":14}},"972":{"start":{"line":1683,"column":7},"end":{"line":1684,"column":13}},"973":{"start":{"line":1684,"column":4},"end":{"line":1684,"column":13}},"974":{"start":{"line":1686,"column":2},"end":{"line":1686,"column":27}},"975":{"start":{"line":1687,"column":2},"end":{"line":1690,"column":15}},"976":{"start":{"line":1688,"column":4},"end":{"line":1688,"column":16}},"977":{"start":{"line":1690,"column":4},"end":{"line":1690,"column":15}},"978":{"start":{"line":1694,"column":0},"end":{"line":1715,"column":2}},"979":{"start":{"line":1696,"column":2},"end":{"line":1699,"column":14}},"980":{"start":{"line":1697,"column":4},"end":{"line":1697,"column":13}},"981":{"start":{"line":1698,"column":7},"end":{"line":1699,"column":14}},"982":{"start":{"line":1699,"column":4},"end":{"line":1699,"column":14}},"983":{"start":{"line":1701,"column":2},"end":{"line":1701,"column":14}},"984":{"start":{"line":1702,"column":2},"end":{"line":1713,"column":3}},"985":{"start":{"line":1703,"column":4},"end":{"line":1703,"column":26}},"986":{"start":{"line":1704,"column":4},"end":{"line":1704,"column":25}},"987":{"start":{"line":1706,"column":4},"end":{"line":1707,"column":15}},"988":{"start":{"line":1707,"column":6},"end":{"line":1707,"column":15}},"989":{"start":{"line":1708,"column":4},"end":{"line":1711,"column":14}},"990":{"start":{"line":1709,"column":6},"end":{"line":1709,"column":15}},"991":{"start":{"line":1710,"column":9},"end":{"line":1711,"column":14}},"992":{"start":{"line":1711,"column":6},"end":{"line":1711,"column":14}},"993":{"start":{"line":1712,"column":4},"end":{"line":1712,"column":10}},"994":{"start":{"line":1714,"column":2},"end":{"line":1714,"column":13}},"995":{"start":{"line":1721,"column":0},"end":{"line":1723,"column":2}},"996":{"start":{"line":1722,"column":2},"end":{"line":1722,"column":22}},"997":{"start":{"line":1725,"column":0},"end":{"line":1729,"column":2}},"998":{"start":{"line":1726,"column":2},"end":{"line":1726,"column":61}},"999":{"start":{"line":1727,"column":2},"end":{"line":1727,"column":54}},"1000":{"start":{"line":1728,"column":2},"end":{"line":1728,"column":44}},"1001":{"start":{"line":1731,"column":0},"end":{"line":1734,"column":2}},"1002":{"start":{"line":1732,"column":2},"end":{"line":1732,"column":75}},"1003":{"start":{"line":1733,"column":2},"end":{"line":1733,"column":36}},"1004":{"start":{"line":1736,"column":0},"end":{"line":1739,"column":2}},"1005":{"start":{"line":1737,"column":2},"end":{"line":1737,"column":17}},"1006":{"start":{"line":1738,"column":2},"end":{"line":1738,"column":14}},"1007":{"start":{"line":1741,"column":0},"end":{"line":1744,"column":2}},"1008":{"start":{"line":1742,"column":2},"end":{"line":1742,"column":61}},"1009":{"start":{"line":1743,"column":2},"end":{"line":1743,"column":29}},"1010":{"start":{"line":1746,"column":0},"end":{"line":1749,"column":2}},"1011":{"start":{"line":1747,"column":2},"end":{"line":1747,"column":57}},"1012":{"start":{"line":1748,"column":2},"end":{"line":1748,"column":33}},"1013":{"start":{"line":1751,"column":0},"end":{"line":1754,"column":2}},"1014":{"start":{"line":1752,"column":2},"end":{"line":1752,"column":58}},"1015":{"start":{"line":1753,"column":2},"end":{"line":1753,"column":34}},"1016":{"start":{"line":1756,"column":0},"end":{"line":1759,"column":2}},"1017":{"start":{"line":1757,"column":2},"end":{"line":1757,"column":57}},"1018":{"start":{"line":1758,"column":2},"end":{"line":1758,"column":33}},"1019":{"start":{"line":1761,"column":0},"end":{"line":1764,"column":2}},"1020":{"start":{"line":1762,"column":2},"end":{"line":1762,"column":58}},"1021":{"start":{"line":1763,"column":2},"end":{"line":1763,"column":34}},"1022":{"start":{"line":1766,"column":0},"end":{"line":1769,"column":2}},"1023":{"start":{"line":1767,"column":2},"end":{"line":1767,"column":57}},"1024":{"start":{"line":1768,"column":2},"end":{"line":1768,"column":33}},"1025":{"start":{"line":1771,"column":0},"end":{"line":1775,"column":2}},"1026":{"start":{"line":1772,"column":2},"end":{"line":1772,"column":57}},"1027":{"start":{"line":1773,"column":2},"end":{"line":1773,"column":31}},"1028":{"start":{"line":1774,"column":2},"end":{"line":1774,"column":33}},"1029":{"start":{"line":1777,"column":0},"end":{"line":1781,"column":2}},"1030":{"start":{"line":1778,"column":2},"end":{"line":1778,"column":57}},"1031":{"start":{"line":1779,"column":2},"end":{"line":1779,"column":31}},"1032":{"start":{"line":1780,"column":2},"end":{"line":1780,"column":34}},"1033":{"start":{"line":1783,"column":0},"end":{"line":1787,"column":2}},"1034":{"start":{"line":1784,"column":2},"end":{"line":1784,"column":57}},"1035":{"start":{"line":1785,"column":2},"end":{"line":1785,"column":26}},"1036":{"start":{"line":1786,"column":2},"end":{"line":1786,"column":28}},"1037":{"start":{"line":1789,"column":0},"end":{"line":1793,"column":2}},"1038":{"start":{"line":1790,"column":2},"end":{"line":1790,"column":58}},"1039":{"start":{"line":1791,"column":2},"end":{"line":1791,"column":26}},"1040":{"start":{"line":1792,"column":2},"end":{"line":1792,"column":29}},"1041":{"start":{"line":1796,"column":0},"end":{"line":1800,"column":2}},"1042":{"start":{"line":1797,"column":2},"end":{"line":1797,"column":58}},"1043":{"start":{"line":1798,"column":2},"end":{"line":1798,"column":26}},"1044":{"start":{"line":1799,"column":2},"end":{"line":1799,"column":29}},"1045":{"start":{"line":1802,"column":0},"end":{"line":1806,"column":2}},"1046":{"start":{"line":1803,"column":2},"end":{"line":1803,"column":58}},"1047":{"start":{"line":1804,"column":2},"end":{"line":1804,"column":26}},"1048":{"start":{"line":1805,"column":2},"end":{"line":1805,"column":29}},"1049":{"start":{"line":1809,"column":0},"end":{"line":1813,"column":2}},"1050":{"start":{"line":1810,"column":2},"end":{"line":1810,"column":57}},"1051":{"start":{"line":1811,"column":2},"end":{"line":1811,"column":26}},"1052":{"start":{"line":1812,"column":2},"end":{"line":1812,"column":28}},"1053":{"start":{"line":1815,"column":0},"end":{"line":1819,"column":2}},"1054":{"start":{"line":1816,"column":2},"end":{"line":1816,"column":52}},"1055":{"start":{"line":1817,"column":2},"end":{"line":1817,"column":26}},"1056":{"start":{"line":1818,"column":2},"end":{"line":1818,"column":33}},"1057":{"start":{"line":1822,"column":0},"end":{"line":1827,"column":2}},"1058":{"start":{"line":1830,"column":0},"end":{"line":1838,"column":1}},"1059":{"start":{"line":1832,"column":2},"end":{"line":1832,"column":19}},"1060":{"start":{"line":1833,"column":2},"end":{"line":1833,"column":25}},"1061":{"start":{"line":1834,"column":2},"end":{"line":1834,"column":30}},"1062":{"start":{"line":1835,"column":2},"end":{"line":1835,"column":48}},"1063":{"start":{"line":1837,"column":2},"end":{"line":1837,"column":25}},"1064":{"start":{"line":1840,"column":0},"end":{"line":1844,"column":2}},"1065":{"start":{"line":1841,"column":2},"end":{"line":1841,"column":25}},"1066":{"start":{"line":1842,"column":2},"end":{"line":1842,"column":48}},"1067":{"start":{"line":1843,"column":2},"end":{"line":1843,"column":13}},"1068":{"start":{"line":1846,"column":0},"end":{"line":1870,"column":2}},"1069":{"start":{"line":1849,"column":2},"end":{"line":1849,"column":14}},"1070":{"start":{"line":1850,"column":2},"end":{"line":1850,"column":11}},"1071":{"start":{"line":1852,"column":2},"end":{"line":1857,"column":26}},"1072":{"start":{"line":1853,"column":4},"end":{"line":1853,"column":28}},"1073":{"start":{"line":1854,"column":4},"end":{"line":1854,"column":22}},"1074":{"start":{"line":1855,"column":4},"end":{"line":1855,"column":25}},"1075":{"start":{"line":1856,"column":4},"end":{"line":1856,"column":25}},"1076":{"start":{"line":1859,"column":2},"end":{"line":1859,"column":48}},"1077":{"start":{"line":1860,"column":2},"end":{"line":1867,"column":3}},"1078":{"start":{"line":1861,"column":4},"end":{"line":1861,"column":19}},"1079":{"start":{"line":1862,"column":4},"end":{"line":1862,"column":17}},"1080":{"start":{"line":1863,"column":9},"end":{"line":1867,"column":3}},"1081":{"start":{"line":1864,"column":4},"end":{"line":1864,"column":19}},"1082":{"start":{"line":1866,"column":4},"end":{"line":1866,"column":14}},"1083":{"start":{"line":1869,"column":2},"end":{"line":1869,"column":11}},"1084":{"start":{"line":1872,"column":0},"end":{"line":1874,"column":2}},"1085":{"start":{"line":1873,"column":2},"end":{"line":1873,"column":30}},"1086":{"start":{"line":1876,"column":0},"end":{"line":1878,"column":2}},"1087":{"start":{"line":1877,"column":2},"end":{"line":1877,"column":26}},"1088":{"start":{"line":1880,"column":0},"end":{"line":1885,"column":1}},"1089":{"start":{"line":1881,"column":2},"end":{"line":1884,"column":79}},"1090":{"start":{"line":1886,"column":0},"end":{"line":1886,"column":23}},"1091":{"start":{"line":1888,"column":0},"end":{"line":1914,"column":2}},"1092":{"start":{"line":1890,"column":2},"end":{"line":1890,"column":22}},"1093":{"start":{"line":1892,"column":2},"end":{"line":1892,"column":41}},"1094":{"start":{"line":1893,"column":2},"end":{"line":1894,"column":37}},"1095":{"start":{"line":1894,"column":4},"end":{"line":1894,"column":37}},"1096":{"start":{"line":1895,"column":2},"end":{"line":1895,"column":25}},"1097":{"start":{"line":1897,"column":2},"end":{"line":1901,"column":3}},"1098":{"start":{"line":1898,"column":4},"end":{"line":1898,"column":23}},"1099":{"start":{"line":1899,"column":4},"end":{"line":1899,"column":21}},"1100":{"start":{"line":1900,"column":4},"end":{"line":1900,"column":11}},"1101":{"start":{"line":1904,"column":2},"end":{"line":1904,"column":28}},"1102":{"start":{"line":1905,"column":2},"end":{"line":1905,"column":46}},"1103":{"start":{"line":1907,"column":2},"end":{"line":1911,"column":3}},"1104":{"start":{"line":1908,"column":4},"end":{"line":1908,"column":30}},"1105":{"start":{"line":1909,"column":4},"end":{"line":1909,"column":63}},"1106":{"start":{"line":1910,"column":4},"end":{"line":1910,"column":16}},"1107":{"start":{"line":1912,"column":2},"end":{"line":1912,"column":36}},"1108":{"start":{"line":1913,"column":2},"end":{"line":1913,"column":20}},"1109":{"start":{"line":1916,"column":0},"end":{"line":1944,"column":2}},"1110":{"start":{"line":1918,"column":2},"end":{"line":1918,"column":28}},"1111":{"start":{"line":1919,"column":2},"end":{"line":1919,"column":32}},"1112":{"start":{"line":1920,"column":2},"end":{"line":1920,"column":18}},"1113":{"start":{"line":1923,"column":2},"end":{"line":1923,"column":9}},"1114":{"start":{"line":1924,"column":2},"end":{"line":1924,"column":13}},"1115":{"start":{"line":1925,"column":2},"end":{"line":1935,"column":3}},"1116":{"start":{"line":1926,"column":4},"end":{"line":1926,"column":25}},"1117":{"start":{"line":1927,"column":4},"end":{"line":1927,"column":18}},"1118":{"start":{"line":1928,"column":4},"end":{"line":1928,"column":20}},"1119":{"start":{"line":1929,"column":4},"end":{"line":1929,"column":31}},"1120":{"start":{"line":1930,"column":4},"end":{"line":1930,"column":20}},"1121":{"start":{"line":1932,"column":4},"end":{"line":1932,"column":22}},"1122":{"start":{"line":1934,"column":4},"end":{"line":1934,"column":12}},"1123":{"start":{"line":1938,"column":2},"end":{"line":1942,"column":3}},"1124":{"start":{"line":1939,"column":4},"end":{"line":1939,"column":17}},"1125":{"start":{"line":1940,"column":4},"end":{"line":1941,"column":19}},"1126":{"start":{"line":1941,"column":6},"end":{"line":1941,"column":19}},"1127":{"start":{"line":1943,"column":2},"end":{"line":1943,"column":13}},"1128":{"start":{"line":1946,"column":0},"end":{"line":1951,"column":1}},"1129":{"start":{"line":1947,"column":2},"end":{"line":1950,"column":70}},"1130":{"start":{"line":1952,"column":0},"end":{"line":1952,"column":23}},"1131":{"start":{"line":1954,"column":0},"end":{"line":1959,"column":1}},"1132":{"start":{"line":1955,"column":2},"end":{"line":1958,"column":61}},"1133":{"start":{"line":1960,"column":0},"end":{"line":1960,"column":23}},"1134":{"start":{"line":1962,"column":0},"end":{"line":1968,"column":1}},"1135":{"start":{"line":1964,"column":2},"end":{"line":1967,"column":75}},"1136":{"start":{"line":1969,"column":0},"end":{"line":1969,"column":25}},"1137":{"start":{"line":1971,"column":0},"end":{"line":1985,"column":2}},"1138":{"start":{"line":1973,"column":2},"end":{"line":1973,"column":16}},"1139":{"start":{"line":1974,"column":2},"end":{"line":1981,"column":3}},"1140":{"start":{"line":1975,"column":4},"end":{"line":1975,"column":41}},"1141":{"start":{"line":1976,"column":4},"end":{"line":1976,"column":28}},"1142":{"start":{"line":1977,"column":4},"end":{"line":1977,"column":15}},"1143":{"start":{"line":1979,"column":4},"end":{"line":1979,"column":22}},"1144":{"start":{"line":1980,"column":4},"end":{"line":1980,"column":15}},"1145":{"start":{"line":1982,"column":2},"end":{"line":1983,"column":36}},"1146":{"start":{"line":1983,"column":4},"end":{"line":1983,"column":36}},"1147":{"start":{"line":1984,"column":2},"end":{"line":1984,"column":13}},"1148":{"start":{"line":1988,"column":0},"end":{"line":2007,"column":2}},"1149":{"start":{"line":1990,"column":2},"end":{"line":1991,"column":24}},"1150":{"start":{"line":1991,"column":4},"end":{"line":1991,"column":24}},"1151":{"start":{"line":1993,"column":2},"end":{"line":1993,"column":12}},"1152":{"start":{"line":1994,"column":2},"end":{"line":2003,"column":45}},"1153":{"start":{"line":1995,"column":4},"end":{"line":1995,"column":23}},"1154":{"start":{"line":1996,"column":7},"end":{"line":2003,"column":45}},"1155":{"start":{"line":1997,"column":4},"end":{"line":1997,"column":23}},"1156":{"start":{"line":1998,"column":7},"end":{"line":2003,"column":45}},"1157":{"start":{"line":1999,"column":4},"end":{"line":1999,"column":23}},"1158":{"start":{"line":2000,"column":7},"end":{"line":2003,"column":45}},"1159":{"start":{"line":2001,"column":4},"end":{"line":2001,"column":25}},"1160":{"start":{"line":2003,"column":4},"end":{"line":2003,"column":45}},"1161":{"start":{"line":2004,"column":2},"end":{"line":2004,"column":23}},"1162":{"start":{"line":2006,"column":2},"end":{"line":2006,"column":15}},"1163":{"start":{"line":2012,"column":0},"end":{"line":2021,"column":1}},"1164":{"start":{"line":2013,"column":2},"end":{"line":2020,"column":3}},"1165":{"start":{"line":2014,"column":4},"end":{"line":2014,"column":29}},"1166":{"start":{"line":2015,"column":4},"end":{"line":2015,"column":21}},"1167":{"start":{"line":2016,"column":4},"end":{"line":2016,"column":23}},"1168":{"start":{"line":2018,"column":4},"end":{"line":2018,"column":15}},"1169":{"start":{"line":2019,"column":4},"end":{"line":2019,"column":22}},"1170":{"start":{"line":2023,"column":0},"end":{"line":2026,"column":2}},"1171":{"start":{"line":2024,"column":2},"end":{"line":2024,"column":51}},"1172":{"start":{"line":2025,"column":2},"end":{"line":2025,"column":51}},"1173":{"start":{"line":2028,"column":0},"end":{"line":2032,"column":2}},"1174":{"start":{"line":2029,"column":2},"end":{"line":2029,"column":62}},"1175":{"start":{"line":2030,"column":2},"end":{"line":2031,"column":44}},"1176":{"start":{"line":2034,"column":0},"end":{"line":2038,"column":2}},"1177":{"start":{"line":2035,"column":2},"end":{"line":2036,"column":49}},"1178":{"start":{"line":2036,"column":4},"end":{"line":2036,"column":49}},"1179":{"start":{"line":2037,"column":2},"end":{"line":2037,"column":39}},"1180":{"start":{"line":2040,"column":0},"end":{"line":2044,"column":2}},"1181":{"start":{"line":2041,"column":2},"end":{"line":2041,"column":20}},"1182":{"start":{"line":2042,"column":2},"end":{"line":2042,"column":19}},"1183":{"start":{"line":2043,"column":2},"end":{"line":2043,"column":40}},"1184":{"start":{"line":2046,"column":0},"end":{"line":2053,"column":2}},"1185":{"start":{"line":2047,"column":2},"end":{"line":2047,"column":22}},"1186":{"start":{"line":2049,"column":2},"end":{"line":2049,"column":21}},"1187":{"start":{"line":2050,"column":2},"end":{"line":2051,"column":21}},"1188":{"start":{"line":2051,"column":4},"end":{"line":2051,"column":21}},"1189":{"start":{"line":2052,"column":2},"end":{"line":2052,"column":29}},"1190":{"start":{"line":2055,"column":0},"end":{"line":2062,"column":2}},"1191":{"start":{"line":2056,"column":2},"end":{"line":2056,"column":22}},"1192":{"start":{"line":2058,"column":2},"end":{"line":2058,"column":22}},"1193":{"start":{"line":2059,"column":2},"end":{"line":2060,"column":21}},"1194":{"start":{"line":2060,"column":4},"end":{"line":2060,"column":21}},"1195":{"start":{"line":2061,"column":2},"end":{"line":2061,"column":13}},"1196":{"start":{"line":2064,"column":0},"end":{"line":2071,"column":2}},"1197":{"start":{"line":2065,"column":2},"end":{"line":2065,"column":22}},"1198":{"start":{"line":2067,"column":2},"end":{"line":2067,"column":21}},"1199":{"start":{"line":2068,"column":2},"end":{"line":2069,"column":21}},"1200":{"start":{"line":2069,"column":4},"end":{"line":2069,"column":21}},"1201":{"start":{"line":2070,"column":2},"end":{"line":2070,"column":29}},"1202":{"start":{"line":2073,"column":0},"end":{"line":2080,"column":2}},"1203":{"start":{"line":2074,"column":2},"end":{"line":2074,"column":22}},"1204":{"start":{"line":2076,"column":2},"end":{"line":2076,"column":22}},"1205":{"start":{"line":2077,"column":2},"end":{"line":2078,"column":21}},"1206":{"start":{"line":2078,"column":4},"end":{"line":2078,"column":21}},"1207":{"start":{"line":2079,"column":2},"end":{"line":2079,"column":13}},"1208":{"start":{"line":2082,"column":0},"end":{"line":2085,"column":2}},"1209":{"start":{"line":2083,"column":2},"end":{"line":2083,"column":19}},"1210":{"start":{"line":2084,"column":2},"end":{"line":2084,"column":32}},"1211":{"start":{"line":2087,"column":0},"end":{"line":2090,"column":2}},"1212":{"start":{"line":2088,"column":2},"end":{"line":2088,"column":22}},"1213":{"start":{"line":2089,"column":2},"end":{"line":2089,"column":30}},"1214":{"start":{"line":2092,"column":0},"end":{"line":2095,"column":2}},"1215":{"start":{"line":2093,"column":2},"end":{"line":2093,"column":22}},"1216":{"start":{"line":2094,"column":2},"end":{"line":2094,"column":29}},"1217":{"start":{"line":2097,"column":0},"end":{"line":2099,"column":2}},"1218":{"start":{"line":2098,"column":2},"end":{"line":2098,"column":25}},"1219":{"start":{"line":2101,"column":0},"end":{"line":2103,"column":2}},"1220":{"start":{"line":2102,"column":2},"end":{"line":2102,"column":24}},"1221":{"start":{"line":2105,"column":0},"end":{"line":2159,"column":2}},"1222":{"start":{"line":2106,"column":2},"end":{"line":2107,"column":21}},"1223":{"start":{"line":2107,"column":4},"end":{"line":2107,"column":21}},"1224":{"start":{"line":2109,"column":2},"end":{"line":2109,"column":29}},"1225":{"start":{"line":2110,"column":2},"end":{"line":2110,"column":25}},"1226":{"start":{"line":2113,"column":2},"end":{"line":2117,"column":3}},"1227":{"start":{"line":2114,"column":4},"end":{"line":2114,"column":45}},"1228":{"start":{"line":2115,"column":4},"end":{"line":2115,"column":29}},"1229":{"start":{"line":2116,"column":4},"end":{"line":2116,"column":13}},"1230":{"start":{"line":2122,"column":2},"end":{"line":2122,"column":25}},"1231":{"start":{"line":2123,"column":2},"end":{"line":2123,"column":12}},"1232":{"start":{"line":2124,"column":2},"end":{"line":2127,"column":3}},"1233":{"start":{"line":2125,"column":4},"end":{"line":2125,"column":8}},"1234":{"start":{"line":2126,"column":4},"end":{"line":2126,"column":15}},"1235":{"start":{"line":2128,"column":2},"end":{"line":2128,"column":26}},"1236":{"start":{"line":2130,"column":2},"end":{"line":2130,"column":34}},"1237":{"start":{"line":2131,"column":2},"end":{"line":2131,"column":26}},"1238":{"start":{"line":2135,"column":2},"end":{"line":2135,"column":37}},"1239":{"start":{"line":2136,"column":2},"end":{"line":2136,"column":29}},"1240":{"start":{"line":2137,"column":2},"end":{"line":2137,"column":36}},"1241":{"start":{"line":2138,"column":2},"end":{"line":2139,"column":20}},"1242":{"start":{"line":2139,"column":4},"end":{"line":2139,"column":20}},"1243":{"start":{"line":2141,"column":2},"end":{"line":2141,"column":25}},"1244":{"start":{"line":2142,"column":2},"end":{"line":2142,"column":42}},"1245":{"start":{"line":2143,"column":2},"end":{"line":2143,"column":25}},"1246":{"start":{"line":2144,"column":2},"end":{"line":2144,"column":12}},"1247":{"start":{"line":2145,"column":2},"end":{"line":2156,"column":3}},"1248":{"start":{"line":2146,"column":4},"end":{"line":2146,"column":16}},"1249":{"start":{"line":2147,"column":4},"end":{"line":2148,"column":25}},"1250":{"start":{"line":2148,"column":6},"end":{"line":2148,"column":25}},"1251":{"start":{"line":2149,"column":4},"end":{"line":2149,"column":18}},"1252":{"start":{"line":2150,"column":4},"end":{"line":2150,"column":52}},"1253":{"start":{"line":2152,"column":4},"end":{"line":2152,"column":20}},"1254":{"start":{"line":2153,"column":4},"end":{"line":2153,"column":19}},"1255":{"start":{"line":2154,"column":4},"end":{"line":2154,"column":20}},"1256":{"start":{"line":2155,"column":4},"end":{"line":2155,"column":10}},"1257":{"start":{"line":2158,"column":2},"end":{"line":2158,"column":11}},"1258":{"start":{"line":2161,"column":0},"end":{"line":2169,"column":2}},"1259":{"start":{"line":2162,"column":2},"end":{"line":2162,"column":29}},"1260":{"start":{"line":2163,"column":2},"end":{"line":2168,"column":3}},"1261":{"start":{"line":2164,"column":4},"end":{"line":2164,"column":21}},"1262":{"start":{"line":2165,"column":4},"end":{"line":2165,"column":35}},"1263":{"start":{"line":2167,"column":4},"end":{"line":2167,"column":26}},"1264":{"start":{"line":2171,"column":0},"end":{"line":2199,"column":2}},"1265":{"start":{"line":2172,"column":2},"end":{"line":2172,"column":13}},"1266":{"start":{"line":2174,"column":2},"end":{"line":2175,"column":21}},"1267":{"start":{"line":2175,"column":4},"end":{"line":2175,"column":21}},"1268":{"start":{"line":2177,"column":2},"end":{"line":2177,"column":22}},"1269":{"start":{"line":2179,"column":2},"end":{"line":2182,"column":3}},"1270":{"start":{"line":2180,"column":4},"end":{"line":2180,"column":23}},"1271":{"start":{"line":2181,"column":4},"end":{"line":2181,"column":15}},"1272":{"start":{"line":2185,"column":2},"end":{"line":2185,"column":14}},"1273":{"start":{"line":2186,"column":2},"end":{"line":2188,"column":12}},"1274":{"start":{"line":2187,"column":4},"end":{"line":2188,"column":12}},"1275":{"start":{"line":2188,"column":6},"end":{"line":2188,"column":12}},"1276":{"start":{"line":2190,"column":2},"end":{"line":2196,"column":3}},"1277":{"start":{"line":2191,"column":4},"end":{"line":2195,"column":5}},"1278":{"start":{"line":2192,"column":6},"end":{"line":2193,"column":17}},"1279":{"start":{"line":2193,"column":8},"end":{"line":2193,"column":17}},"1280":{"start":{"line":2194,"column":6},"end":{"line":2194,"column":29}},"1281":{"start":{"line":2198,"column":2},"end":{"line":2198,"column":13}},"1282":{"start":{"line":2201,"column":0},"end":{"line":2203,"column":2}},"1283":{"start":{"line":2202,"column":2},"end":{"line":2202,"column":21}},"1284":{"start":{"line":2205,"column":0},"end":{"line":2209,"column":2}},"1285":{"start":{"line":2206,"column":2},"end":{"line":2206,"column":24}},"1286":{"start":{"line":2207,"column":2},"end":{"line":2207,"column":17}},"1287":{"start":{"line":2208,"column":2},"end":{"line":2208,"column":13}},"1288":{"start":{"line":2215,"column":0},"end":{"line":2217,"column":2}},"1289":{"start":{"line":2216,"column":2},"end":{"line":2216,"column":23}},"1290":{"start":{"line":2219,"column":0},"end":{"line":2232,"column":1}},"1291":{"start":{"line":2220,"column":2},"end":{"line":2220,"column":20}},"1292":{"start":{"line":2222,"column":2},"end":{"line":2222,"column":34}},"1293":{"start":{"line":2223,"column":2},"end":{"line":2224,"column":41}},"1294":{"start":{"line":2224,"column":4},"end":{"line":2224,"column":41}},"1295":{"start":{"line":2225,"column":2},"end":{"line":2225,"column":39}},"1296":{"start":{"line":2226,"column":2},"end":{"line":2226,"column":36}},"1297":{"start":{"line":2227,"column":2},"end":{"line":2227,"column":36}},"1298":{"start":{"line":2229,"column":2},"end":{"line":2229,"column":57}},"1299":{"start":{"line":2230,"column":2},"end":{"line":2230,"column":24}},"1300":{"start":{"line":2231,"column":2},"end":{"line":2231,"column":36}},"1301":{"start":{"line":2233,"column":0},"end":{"line":2233,"column":20}},"1302":{"start":{"line":2235,"column":0},"end":{"line":2237,"column":2}},"1303":{"start":{"line":2236,"column":2},"end":{"line":2236,"column":41}},"1304":{"start":{"line":2239,"column":0},"end":{"line":2243,"column":2}},"1305":{"start":{"line":2240,"column":2},"end":{"line":2240,"column":40}},"1306":{"start":{"line":2241,"column":2},"end":{"line":2241,"column":15}},"1307":{"start":{"line":2242,"column":2},"end":{"line":2242,"column":11}},"1308":{"start":{"line":2245,"column":0},"end":{"line":2262,"column":2}},"1309":{"start":{"line":2246,"column":2},"end":{"line":2250,"column":3}},"1310":{"start":{"line":2247,"column":4},"end":{"line":2247,"column":19}},"1311":{"start":{"line":2248,"column":4},"end":{"line":2248,"column":17}},"1312":{"start":{"line":2249,"column":4},"end":{"line":2249,"column":13}},"1313":{"start":{"line":2252,"column":2},"end":{"line":2252,"column":20}},"1314":{"start":{"line":2253,"column":2},"end":{"line":2253,"column":76}},"1315":{"start":{"line":2254,"column":2},"end":{"line":2254,"column":38}},"1316":{"start":{"line":2255,"column":2},"end":{"line":2255,"column":14}},"1317":{"start":{"line":2256,"column":2},"end":{"line":2259,"column":25}},"1318":{"start":{"line":2257,"column":4},"end":{"line":2257,"column":25}},"1319":{"start":{"line":2258,"column":7},"end":{"line":2259,"column":25}},"1320":{"start":{"line":2259,"column":4},"end":{"line":2259,"column":25}},"1321":{"start":{"line":2261,"column":2},"end":{"line":2261,"column":29}},"1322":{"start":{"line":2264,"column":0},"end":{"line":2278,"column":2}},"1323":{"start":{"line":2265,"column":2},"end":{"line":2266,"column":37}},"1324":{"start":{"line":2266,"column":4},"end":{"line":2266,"column":37}},"1325":{"start":{"line":2268,"column":2},"end":{"line":2268,"column":19}},"1326":{"start":{"line":2269,"column":2},"end":{"line":2269,"column":76}},"1327":{"start":{"line":2270,"column":2},"end":{"line":2270,"column":38}},"1328":{"start":{"line":2271,"column":2},"end":{"line":2271,"column":14}},"1329":{"start":{"line":2272,"column":2},"end":{"line":2275,"column":25}},"1330":{"start":{"line":2273,"column":4},"end":{"line":2273,"column":25}},"1331":{"start":{"line":2274,"column":7},"end":{"line":2275,"column":25}},"1332":{"start":{"line":2275,"column":4},"end":{"line":2275,"column":25}},"1333":{"start":{"line":2277,"column":2},"end":{"line":2277,"column":29}},"1334":{"start":{"line":2280,"column":0},"end":{"line":2284,"column":2}},"1335":{"start":{"line":2282,"column":2},"end":{"line":2282,"column":53}},"1336":{"start":{"line":2283,"column":2},"end":{"line":2283,"column":29}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":20},"end":{"line":9,"column":23}},{"start":{"line":9,"column":27},"end":{"line":9,"column":45}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"4":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":21}},{"start":{"line":27,"column":6},"end":{"line":27,"column":32}},{"start":{"line":28,"column":6},"end":{"line":28,"column":33}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"6":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":19}},{"start":{"line":39,"column":23},"end":{"line":39,"column":36}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"8":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":15},"end":{"line":45,"column":21}},{"start":{"line":45,"column":25},"end":{"line":45,"column":26}}]},"9":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":28},"end":{"line":45,"column":32}},{"start":{"line":45,"column":36},"end":{"line":45,"column":38}}]},"10":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":40},"end":{"line":45,"column":46}},{"start":{"line":45,"column":50},"end":{"line":45,"column":54}}]},"11":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":0},"end":{"line":47,"column":0}},{"start":{"line":47,"column":0},"end":{"line":47,"column":0}}]},"12":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"13":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"14":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"15":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":11},"end":{"line":64,"column":11}},{"start":{"line":64,"column":11},"end":{"line":64,"column":11}}]},"16":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":9},"end":{"line":80,"column":9}},{"start":{"line":80,"column":9},"end":{"line":80,"column":9}}]},"17":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"18":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":9},"end":{"line":85,"column":28}},{"start":{"line":85,"column":32},"end":{"line":85,"column":41}},{"start":{"line":85,"column":45},"end":{"line":85,"column":55}}]},"19":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"20":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"21":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"22":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"23":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"24":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":6}},{"start":{"line":124,"column":6},"end":{"line":124,"column":6}}]},"25":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":9},"end":{"line":129,"column":9}},{"start":{"line":129,"column":9},"end":{"line":129,"column":9}}]},"26":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"27":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"28":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":15}},{"start":{"line":153,"column":19},"end":{"line":153,"column":26}}]},"29":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":9},"end":{"line":157,"column":9}},{"start":{"line":157,"column":9},"end":{"line":157,"column":9}}]},"30":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":13},"end":{"line":157,"column":20}},{"start":{"line":157,"column":24},"end":{"line":157,"column":31}}]},"31":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"32":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"33":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"34":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":9},"end":{"line":207,"column":9}},{"start":{"line":207,"column":9},"end":{"line":207,"column":9}}]},"35":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"36":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"37":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"38":{"line":274,"type":"binary-expr","locations":[{"start":{"line":274,"column":9},"end":{"line":274,"column":24}},{"start":{"line":274,"column":28},"end":{"line":274,"column":61}}]},"39":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":2},"end":{"line":281,"column":2}},{"start":{"line":281,"column":2},"end":{"line":281,"column":2}}]},"40":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":23}},{"start":{"line":281,"column":27},"end":{"line":281,"column":46}}]},"41":{"line":287,"type":"cond-expr","locations":[{"start":{"line":287,"column":21},"end":{"line":287,"column":30}},{"start":{"line":287,"column":33},"end":{"line":287,"column":40}}]},"42":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":9},"end":{"line":368,"column":13}},{"start":{"line":368,"column":17},"end":{"line":368,"column":19}}]},"43":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":2},"end":{"line":369,"column":2}},{"start":{"line":369,"column":2},"end":{"line":369,"column":2}}]},"44":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":6},"end":{"line":369,"column":17}},{"start":{"line":369,"column":21},"end":{"line":369,"column":35}}]},"45":{"line":372,"type":"binary-expr","locations":[{"start":{"line":372,"column":18},"end":{"line":372,"column":29}},{"start":{"line":372,"column":33},"end":{"line":372,"column":34}}]},"46":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":6},"end":{"line":378,"column":6}},{"start":{"line":378,"column":6},"end":{"line":378,"column":6}}]},"47":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":10},"end":{"line":378,"column":21}},{"start":{"line":378,"column":25},"end":{"line":378,"column":46}}]},"48":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":6},"end":{"line":383,"column":6}},{"start":{"line":383,"column":6},"end":{"line":383,"column":6}}]},"49":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":4}},{"start":{"line":388,"column":4},"end":{"line":388,"column":4}}]},"50":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":4},"end":{"line":392,"column":4}},{"start":{"line":392,"column":4},"end":{"line":392,"column":4}}]},"51":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":9},"end":{"line":395,"column":9}},{"start":{"line":395,"column":9},"end":{"line":395,"column":9}}]},"52":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":13},"end":{"line":395,"column":32}},{"start":{"line":395,"column":36},"end":{"line":395,"column":45}},{"start":{"line":395,"column":49},"end":{"line":395,"column":59}}]},"53":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":6},"end":{"line":407,"column":6}},{"start":{"line":407,"column":6},"end":{"line":407,"column":6}}]},"54":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":4},"end":{"line":412,"column":4}},{"start":{"line":412,"column":4},"end":{"line":412,"column":4}}]},"55":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":4},"end":{"line":414,"column":4}},{"start":{"line":414,"column":4},"end":{"line":414,"column":4}}]},"56":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":0},"end":{"line":443,"column":0}},{"start":{"line":443,"column":0},"end":{"line":443,"column":0}}]},"57":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":4},"end":{"line":451,"column":4}},{"start":{"line":451,"column":4},"end":{"line":451,"column":4}}]},"58":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":4},"end":{"line":455,"column":4}},{"start":{"line":455,"column":4},"end":{"line":455,"column":4}}]},"59":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":4},"end":{"line":459,"column":4}},{"start":{"line":459,"column":4},"end":{"line":459,"column":4}}]},"60":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":4},"end":{"line":463,"column":4}},{"start":{"line":463,"column":4},"end":{"line":463,"column":4}}]},"61":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":2},"end":{"line":473,"column":2}},{"start":{"line":473,"column":2},"end":{"line":473,"column":2}}]},"62":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":2},"end":{"line":478,"column":2}},{"start":{"line":478,"column":2},"end":{"line":478,"column":2}}]},"63":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":2},"end":{"line":482,"column":2}},{"start":{"line":482,"column":2},"end":{"line":482,"column":2}}]},"64":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":486,"column":2}},{"start":{"line":486,"column":2},"end":{"line":486,"column":2}}]},"65":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":2},"end":{"line":490,"column":2}},{"start":{"line":490,"column":2},"end":{"line":490,"column":2}}]},"66":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":2},"end":{"line":494,"column":2}},{"start":{"line":494,"column":2},"end":{"line":494,"column":2}}]},"67":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":2},"end":{"line":509,"column":2}},{"start":{"line":509,"column":2},"end":{"line":509,"column":2}}]},"68":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":4},"end":{"line":516,"column":4}},{"start":{"line":516,"column":4},"end":{"line":516,"column":4}}]},"69":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":2},"end":{"line":528,"column":2}},{"start":{"line":528,"column":2},"end":{"line":528,"column":2}}]},"70":{"line":539,"type":"binary-expr","locations":[{"start":{"line":539,"column":14},"end":{"line":539,"column":23}},{"start":{"line":539,"column":27},"end":{"line":539,"column":35}}]},"71":{"line":553,"type":"if","locations":[{"start":{"line":553,"column":2},"end":{"line":553,"column":2}},{"start":{"line":553,"column":2},"end":{"line":553,"column":2}}]},"72":{"line":562,"type":"binary-expr","locations":[{"start":{"line":562,"column":14},"end":{"line":562,"column":23}},{"start":{"line":562,"column":27},"end":{"line":562,"column":35}}]},"73":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":2},"end":{"line":566,"column":2}},{"start":{"line":566,"column":2},"end":{"line":566,"column":2}}]},"74":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":2},"end":{"line":582,"column":2}},{"start":{"line":582,"column":2},"end":{"line":582,"column":2}}]},"75":{"line":591,"type":"binary-expr","locations":[{"start":{"line":591,"column":14},"end":{"line":591,"column":23}},{"start":{"line":591,"column":27},"end":{"line":591,"column":35}}]},"76":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":2},"end":{"line":596,"column":2}},{"start":{"line":596,"column":2},"end":{"line":596,"column":2}}]},"77":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":2},"end":{"line":607,"column":2}},{"start":{"line":607,"column":2},"end":{"line":607,"column":2}}]},"78":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":2},"end":{"line":619,"column":2}},{"start":{"line":619,"column":2},"end":{"line":619,"column":2}}]},"79":{"line":628,"type":"binary-expr","locations":[{"start":{"line":628,"column":9},"end":{"line":628,"column":32}},{"start":{"line":628,"column":36},"end":{"line":628,"column":44}}]},"80":{"line":636,"type":"if","locations":[{"start":{"line":636,"column":2},"end":{"line":636,"column":2}},{"start":{"line":636,"column":2},"end":{"line":636,"column":2}}]},"81":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":2},"end":{"line":648,"column":2}},{"start":{"line":648,"column":2},"end":{"line":648,"column":2}}]},"82":{"line":648,"type":"binary-expr","locations":[{"start":{"line":648,"column":6},"end":{"line":648,"column":15}},{"start":{"line":648,"column":19},"end":{"line":648,"column":28}}]},"83":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":9},"end":{"line":655,"column":9}},{"start":{"line":655,"column":9},"end":{"line":655,"column":9}}]},"84":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":13},"end":{"line":655,"column":23}},{"start":{"line":655,"column":27},"end":{"line":655,"column":35}}]},"85":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":2},"end":{"line":665,"column":2}},{"start":{"line":665,"column":2},"end":{"line":665,"column":2}}]},"86":{"line":679,"type":"binary-expr","locations":[{"start":{"line":679,"column":9},"end":{"line":679,"column":20}},{"start":{"line":679,"column":24},"end":{"line":679,"column":36}}]},"87":{"line":686,"type":"if","locations":[{"start":{"line":686,"column":2},"end":{"line":686,"column":2}},{"start":{"line":686,"column":2},"end":{"line":686,"column":2}}]},"88":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":9},"end":{"line":690,"column":9}},{"start":{"line":690,"column":9},"end":{"line":690,"column":9}}]},"89":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":2},"end":{"line":700,"column":2}},{"start":{"line":700,"column":2},"end":{"line":700,"column":2}}]},"90":{"line":700,"type":"binary-expr","locations":[{"start":{"line":700,"column":6},"end":{"line":700,"column":14}},{"start":{"line":700,"column":18},"end":{"line":700,"column":28}}]},"91":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":9},"end":{"line":705,"column":9}},{"start":{"line":705,"column":9},"end":{"line":705,"column":9}}]},"92":{"line":705,"type":"binary-expr","locations":[{"start":{"line":705,"column":13},"end":{"line":705,"column":22}},{"start":{"line":705,"column":26},"end":{"line":705,"column":35}}]},"93":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":2},"end":{"line":712,"column":2}},{"start":{"line":712,"column":2},"end":{"line":712,"column":2}}]},"94":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":2},"end":{"line":721,"column":2}},{"start":{"line":721,"column":2},"end":{"line":721,"column":2}}]},"95":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":9},"end":{"line":728,"column":9}},{"start":{"line":728,"column":9},"end":{"line":728,"column":9}}]},"96":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":2},"end":{"line":739,"column":2}},{"start":{"line":739,"column":2},"end":{"line":739,"column":2}}]},"97":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":2},"end":{"line":749,"column":2}},{"start":{"line":749,"column":2},"end":{"line":749,"column":2}}]},"98":{"line":763,"type":"binary-expr","locations":[{"start":{"line":763,"column":9},"end":{"line":763,"column":20}},{"start":{"line":763,"column":24},"end":{"line":763,"column":36}}]},"99":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":2},"end":{"line":770,"column":2}},{"start":{"line":770,"column":2},"end":{"line":770,"column":2}}]},"100":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":6},"end":{"line":770,"column":17}},{"start":{"line":770,"column":21},"end":{"line":770,"column":33}},{"start":{"line":770,"column":37},"end":{"line":770,"column":47}}]},"101":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":2},"end":{"line":775,"column":2}},{"start":{"line":775,"column":2},"end":{"line":775,"column":2}}]},"102":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":2},"end":{"line":850,"column":2}},{"start":{"line":850,"column":2},"end":{"line":850,"column":2}}]},"103":{"line":891,"type":"if","locations":[{"start":{"line":891,"column":2},"end":{"line":891,"column":2}},{"start":{"line":891,"column":2},"end":{"line":891,"column":2}}]},"104":{"line":902,"type":"if","locations":[{"start":{"line":902,"column":2},"end":{"line":902,"column":2}},{"start":{"line":902,"column":2},"end":{"line":902,"column":2}}]},"105":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":2},"end":{"line":918,"column":2}},{"start":{"line":918,"column":2},"end":{"line":918,"column":2}}]},"106":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":6},"end":{"line":918,"column":24}},{"start":{"line":918,"column":28},"end":{"line":918,"column":45}}]},"107":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":2},"end":{"line":980,"column":2}},{"start":{"line":980,"column":2},"end":{"line":980,"column":2}}]},"108":{"line":1000,"type":"binary-expr","locations":[{"start":{"line":1000,"column":9},"end":{"line":1000,"column":33}},{"start":{"line":1000,"column":37},"end":{"line":1000,"column":46}}]},"109":{"line":1005,"type":"if","locations":[{"start":{"line":1005,"column":2},"end":{"line":1005,"column":2}},{"start":{"line":1005,"column":2},"end":{"line":1005,"column":2}}]},"110":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":4},"end":{"line":1013,"column":4}},{"start":{"line":1013,"column":4},"end":{"line":1013,"column":4}}]},"111":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":2},"end":{"line":1019,"column":2}},{"start":{"line":1019,"column":2},"end":{"line":1019,"column":2}}]},"112":{"line":1034,"type":"binary-expr","locations":[{"start":{"line":1034,"column":9},"end":{"line":1034,"column":33}},{"start":{"line":1034,"column":37},"end":{"line":1034,"column":46}}]},"113":{"line":1036,"type":"if","locations":[{"start":{"line":1036,"column":2},"end":{"line":1036,"column":2}},{"start":{"line":1036,"column":2},"end":{"line":1036,"column":2}}]},"114":{"line":1050,"type":"if","locations":[{"start":{"line":1050,"column":2},"end":{"line":1050,"column":2}},{"start":{"line":1050,"column":2},"end":{"line":1050,"column":2}}]},"115":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":2},"end":{"line":1056,"column":2}},{"start":{"line":1056,"column":2},"end":{"line":1056,"column":2}}]},"116":{"line":1058,"type":"if","locations":[{"start":{"line":1058,"column":9},"end":{"line":1058,"column":9}},{"start":{"line":1058,"column":9},"end":{"line":1058,"column":9}}]},"117":{"line":1068,"type":"binary-expr","locations":[{"start":{"line":1068,"column":32},"end":{"line":1068,"column":38}},{"start":{"line":1068,"column":43},"end":{"line":1068,"column":54}},{"start":{"line":1068,"column":58},"end":{"line":1068,"column":64}}]},"118":{"line":1075,"type":"if","locations":[{"start":{"line":1075,"column":2},"end":{"line":1075,"column":2}},{"start":{"line":1075,"column":2},"end":{"line":1075,"column":2}}]},"119":{"line":1075,"type":"binary-expr","locations":[{"start":{"line":1075,"column":6},"end":{"line":1075,"column":17}},{"start":{"line":1075,"column":21},"end":{"line":1075,"column":32}}]},"120":{"line":1078,"type":"if","locations":[{"start":{"line":1078,"column":2},"end":{"line":1078,"column":2}},{"start":{"line":1078,"column":2},"end":{"line":1078,"column":2}}]},"121":{"line":1100,"type":"binary-expr","locations":[{"start":{"line":1100,"column":9},"end":{"line":1100,"column":32}},{"start":{"line":1100,"column":36},"end":{"line":1100,"column":44}}]},"122":{"line":1106,"type":"if","locations":[{"start":{"line":1106,"column":2},"end":{"line":1106,"column":2}},{"start":{"line":1106,"column":2},"end":{"line":1106,"column":2}}]},"123":{"line":1118,"type":"binary-expr","locations":[{"start":{"line":1118,"column":9},"end":{"line":1118,"column":33}},{"start":{"line":1118,"column":37},"end":{"line":1118,"column":46}}]},"124":{"line":1124,"type":"if","locations":[{"start":{"line":1124,"column":2},"end":{"line":1124,"column":2}},{"start":{"line":1124,"column":2},"end":{"line":1124,"column":2}}]},"125":{"line":1128,"type":"if","locations":[{"start":{"line":1128,"column":2},"end":{"line":1128,"column":2}},{"start":{"line":1128,"column":2},"end":{"line":1128,"column":2}}]},"126":{"line":1144,"type":"if","locations":[{"start":{"line":1144,"column":2},"end":{"line":1144,"column":2}},{"start":{"line":1144,"column":2},"end":{"line":1144,"column":2}}]},"127":{"line":1148,"type":"if","locations":[{"start":{"line":1148,"column":2},"end":{"line":1148,"column":2}},{"start":{"line":1148,"column":2},"end":{"line":1148,"column":2}}]},"128":{"line":1149,"type":"if","locations":[{"start":{"line":1149,"column":4},"end":{"line":1149,"column":4}},{"start":{"line":1149,"column":4},"end":{"line":1149,"column":4}}]},"129":{"line":1149,"type":"binary-expr","locations":[{"start":{"line":1149,"column":8},"end":{"line":1149,"column":25}},{"start":{"line":1149,"column":29},"end":{"line":1149,"column":48}}]},"130":{"line":1169,"type":"binary-expr","locations":[{"start":{"line":1169,"column":18},"end":{"line":1169,"column":33}},{"start":{"line":1169,"column":37},"end":{"line":1169,"column":63}}]},"131":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":4},"end":{"line":1171,"column":4}},{"start":{"line":1171,"column":4},"end":{"line":1171,"column":4}}]},"132":{"line":1184,"type":"if","locations":[{"start":{"line":1184,"column":2},"end":{"line":1184,"column":2}},{"start":{"line":1184,"column":2},"end":{"line":1184,"column":2}}]},"133":{"line":1187,"type":"if","locations":[{"start":{"line":1187,"column":2},"end":{"line":1187,"column":2}},{"start":{"line":1187,"column":2},"end":{"line":1187,"column":2}}]},"134":{"line":1197,"type":"binary-expr","locations":[{"start":{"line":1197,"column":18},"end":{"line":1197,"column":33}},{"start":{"line":1197,"column":37},"end":{"line":1197,"column":54}}]},"135":{"line":1227,"type":"if","locations":[{"start":{"line":1227,"column":2},"end":{"line":1227,"column":2}},{"start":{"line":1227,"column":2},"end":{"line":1227,"column":2}}]},"136":{"line":1255,"type":"if","locations":[{"start":{"line":1255,"column":2},"end":{"line":1255,"column":2}},{"start":{"line":1255,"column":2},"end":{"line":1255,"column":2}}]},"137":{"line":1281,"type":"if","locations":[{"start":{"line":1281,"column":2},"end":{"line":1281,"column":2}},{"start":{"line":1281,"column":2},"end":{"line":1281,"column":2}}]},"138":{"line":1291,"type":"if","locations":[{"start":{"line":1291,"column":2},"end":{"line":1291,"column":2}},{"start":{"line":1291,"column":2},"end":{"line":1291,"column":2}}]},"139":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":2},"end":{"line":1300,"column":2}},{"start":{"line":1300,"column":2},"end":{"line":1300,"column":2}}]},"140":{"line":1302,"type":"if","locations":[{"start":{"line":1302,"column":4},"end":{"line":1302,"column":4}},{"start":{"line":1302,"column":4},"end":{"line":1302,"column":4}}]},"141":{"line":1318,"type":"if","locations":[{"start":{"line":1318,"column":6},"end":{"line":1318,"column":6}},{"start":{"line":1318,"column":6},"end":{"line":1318,"column":6}}]},"142":{"line":1321,"type":"if","locations":[{"start":{"line":1321,"column":4},"end":{"line":1321,"column":4}},{"start":{"line":1321,"column":4},"end":{"line":1321,"column":4}}]},"143":{"line":1324,"type":"if","locations":[{"start":{"line":1324,"column":2},"end":{"line":1324,"column":2}},{"start":{"line":1324,"column":2},"end":{"line":1324,"column":2}}]},"144":{"line":1329,"type":"if","locations":[{"start":{"line":1329,"column":2},"end":{"line":1329,"column":2}},{"start":{"line":1329,"column":2},"end":{"line":1329,"column":2}}]},"145":{"line":1329,"type":"binary-expr","locations":[{"start":{"line":1329,"column":6},"end":{"line":1329,"column":20}},{"start":{"line":1329,"column":24},"end":{"line":1329,"column":35}}]},"146":{"line":1331,"type":"cond-expr","locations":[{"start":{"line":1331,"column":20},"end":{"line":1331,"column":21}},{"start":{"line":1331,"column":24},"end":{"line":1331,"column":28}}]},"147":{"line":1337,"type":"if","locations":[{"start":{"line":1337,"column":2},"end":{"line":1337,"column":2}},{"start":{"line":1337,"column":2},"end":{"line":1337,"column":2}}]},"148":{"line":1337,"type":"binary-expr","locations":[{"start":{"line":1337,"column":6},"end":{"line":1337,"column":15}},{"start":{"line":1337,"column":19},"end":{"line":1337,"column":28}}]},"149":{"line":1341,"type":"if","locations":[{"start":{"line":1341,"column":4},"end":{"line":1341,"column":4}},{"start":{"line":1341,"column":4},"end":{"line":1341,"column":4}}]},"150":{"line":1343,"type":"if","locations":[{"start":{"line":1343,"column":4},"end":{"line":1343,"column":4}},{"start":{"line":1343,"column":4},"end":{"line":1343,"column":4}}]},"151":{"line":1344,"type":"cond-expr","locations":[{"start":{"line":1344,"column":36},"end":{"line":1344,"column":43}},{"start":{"line":1344,"column":46},"end":{"line":1344,"column":62}}]},"152":{"line":1349,"type":"if","locations":[{"start":{"line":1349,"column":9},"end":{"line":1349,"column":9}},{"start":{"line":1349,"column":9},"end":{"line":1349,"column":9}}]},"153":{"line":1349,"type":"binary-expr","locations":[{"start":{"line":1349,"column":13},"end":{"line":1349,"column":23}},{"start":{"line":1349,"column":27},"end":{"line":1349,"column":35}}]},"154":{"line":1352,"type":"if","locations":[{"start":{"line":1352,"column":4},"end":{"line":1352,"column":4}},{"start":{"line":1352,"column":4},"end":{"line":1352,"column":4}}]},"155":{"line":1355,"type":"if","locations":[{"start":{"line":1355,"column":9},"end":{"line":1355,"column":9}},{"start":{"line":1355,"column":9},"end":{"line":1355,"column":9}}]},"156":{"line":1355,"type":"binary-expr","locations":[{"start":{"line":1355,"column":13},"end":{"line":1355,"column":22}},{"start":{"line":1355,"column":26},"end":{"line":1355,"column":34}}]},"157":{"line":1362,"type":"if","locations":[{"start":{"line":1362,"column":2},"end":{"line":1362,"column":2}},{"start":{"line":1362,"column":2},"end":{"line":1362,"column":2}}]},"158":{"line":1362,"type":"binary-expr","locations":[{"start":{"line":1362,"column":6},"end":{"line":1362,"column":30}},{"start":{"line":1362,"column":34},"end":{"line":1362,"column":51}}]},"159":{"line":1366,"type":"if","locations":[{"start":{"line":1366,"column":2},"end":{"line":1366,"column":2}},{"start":{"line":1366,"column":2},"end":{"line":1366,"column":2}}]},"160":{"line":1367,"type":"if","locations":[{"start":{"line":1367,"column":4},"end":{"line":1367,"column":4}},{"start":{"line":1367,"column":4},"end":{"line":1367,"column":4}}]},"161":{"line":1369,"type":"if","locations":[{"start":{"line":1369,"column":9},"end":{"line":1369,"column":9}},{"start":{"line":1369,"column":9},"end":{"line":1369,"column":9}}]},"162":{"line":1395,"type":"if","locations":[{"start":{"line":1395,"column":2},"end":{"line":1395,"column":2}},{"start":{"line":1395,"column":2},"end":{"line":1395,"column":2}}]},"163":{"line":1398,"type":"cond-expr","locations":[{"start":{"line":1398,"column":26},"end":{"line":1398,"column":42}},{"start":{"line":1398,"column":45},"end":{"line":1398,"column":51}}]},"164":{"line":1405,"type":"if","locations":[{"start":{"line":1405,"column":2},"end":{"line":1405,"column":2}},{"start":{"line":1405,"column":2},"end":{"line":1405,"column":2}}]},"165":{"line":1405,"type":"binary-expr","locations":[{"start":{"line":1405,"column":6},"end":{"line":1405,"column":13}},{"start":{"line":1405,"column":17},"end":{"line":1405,"column":25}},{"start":{"line":1405,"column":29},"end":{"line":1405,"column":38}}]},"166":{"line":1409,"type":"cond-expr","locations":[{"start":{"line":1409,"column":23},"end":{"line":1409,"column":38}},{"start":{"line":1409,"column":41},"end":{"line":1409,"column":56}}]},"167":{"line":1448,"type":"if","locations":[{"start":{"line":1448,"column":2},"end":{"line":1448,"column":2}},{"start":{"line":1448,"column":2},"end":{"line":1448,"column":2}}]},"168":{"line":1463,"type":"binary-expr","locations":[{"start":{"line":1463,"column":9},"end":{"line":1463,"column":19}},{"start":{"line":1463,"column":23},"end":{"line":1463,"column":33}}]},"169":{"line":1475,"type":"if","locations":[{"start":{"line":1475,"column":6},"end":{"line":1475,"column":6}},{"start":{"line":1475,"column":6},"end":{"line":1475,"column":6}}]},"170":{"line":1475,"type":"binary-expr","locations":[{"start":{"line":1475,"column":10},"end":{"line":1475,"column":20}},{"start":{"line":1475,"column":24},"end":{"line":1475,"column":34}}]},"171":{"line":1486,"type":"if","locations":[{"start":{"line":1486,"column":6},"end":{"line":1486,"column":6}},{"start":{"line":1486,"column":6},"end":{"line":1486,"column":6}}]},"172":{"line":1486,"type":"binary-expr","locations":[{"start":{"line":1486,"column":10},"end":{"line":1486,"column":20}},{"start":{"line":1486,"column":24},"end":{"line":1486,"column":34}}]},"173":{"line":1495,"type":"if","locations":[{"start":{"line":1495,"column":4},"end":{"line":1495,"column":4}},{"start":{"line":1495,"column":4},"end":{"line":1495,"column":4}}]},"174":{"line":1523,"type":"if","locations":[{"start":{"line":1523,"column":2},"end":{"line":1523,"column":2}},{"start":{"line":1523,"column":2},"end":{"line":1523,"column":2}}]},"175":{"line":1533,"type":"binary-expr","locations":[{"start":{"line":1533,"column":9},"end":{"line":1533,"column":22}},{"start":{"line":1533,"column":26},"end":{"line":1533,"column":39}}]},"176":{"line":1536,"type":"if","locations":[{"start":{"line":1536,"column":6},"end":{"line":1536,"column":6}},{"start":{"line":1536,"column":6},"end":{"line":1536,"column":6}}]},"177":{"line":1543,"type":"if","locations":[{"start":{"line":1543,"column":6},"end":{"line":1543,"column":6}},{"start":{"line":1543,"column":6},"end":{"line":1543,"column":6}}]},"178":{"line":1548,"type":"if","locations":[{"start":{"line":1548,"column":4},"end":{"line":1548,"column":4}},{"start":{"line":1548,"column":4},"end":{"line":1548,"column":4}}]},"179":{"line":1556,"type":"if","locations":[{"start":{"line":1556,"column":2},"end":{"line":1556,"column":2}},{"start":{"line":1556,"column":2},"end":{"line":1556,"column":2}}]},"180":{"line":1563,"type":"if","locations":[{"start":{"line":1563,"column":2},"end":{"line":1563,"column":2}},{"start":{"line":1563,"column":2},"end":{"line":1563,"column":2}}]},"181":{"line":1565,"type":"if","locations":[{"start":{"line":1565,"column":2},"end":{"line":1565,"column":2}},{"start":{"line":1565,"column":2},"end":{"line":1565,"column":2}}]},"182":{"line":1574,"type":"binary-expr","locations":[{"start":{"line":1574,"column":22},"end":{"line":1574,"column":32}},{"start":{"line":1574,"column":36},"end":{"line":1574,"column":46}}]},"183":{"line":1586,"type":"if","locations":[{"start":{"line":1586,"column":4},"end":{"line":1586,"column":4}},{"start":{"line":1586,"column":4},"end":{"line":1586,"column":4}}]},"184":{"line":1591,"type":"if","locations":[{"start":{"line":1591,"column":11},"end":{"line":1591,"column":11}},{"start":{"line":1591,"column":11},"end":{"line":1591,"column":11}}]},"185":{"line":1591,"type":"binary-expr","locations":[{"start":{"line":1591,"column":15},"end":{"line":1591,"column":22}},{"start":{"line":1591,"column":26},"end":{"line":1591,"column":41}}]},"186":{"line":1627,"type":"if","locations":[{"start":{"line":1627,"column":2},"end":{"line":1627,"column":2}},{"start":{"line":1627,"column":2},"end":{"line":1627,"column":2}}]},"187":{"line":1637,"type":"binary-expr","locations":[{"start":{"line":1637,"column":18},"end":{"line":1637,"column":29}},{"start":{"line":1637,"column":33},"end":{"line":1637,"column":48}}]},"188":{"line":1644,"type":"if","locations":[{"start":{"line":1644,"column":2},"end":{"line":1644,"column":2}},{"start":{"line":1644,"column":2},"end":{"line":1644,"column":2}}]},"189":{"line":1653,"type":"if","locations":[{"start":{"line":1653,"column":2},"end":{"line":1653,"column":2}},{"start":{"line":1653,"column":2},"end":{"line":1653,"column":2}}]},"190":{"line":1656,"type":"if","locations":[{"start":{"line":1656,"column":2},"end":{"line":1656,"column":2}},{"start":{"line":1656,"column":2},"end":{"line":1656,"column":2}}]},"191":{"line":1656,"type":"binary-expr","locations":[{"start":{"line":1656,"column":6},"end":{"line":1656,"column":15}},{"start":{"line":1656,"column":19},"end":{"line":1656,"column":24}}]},"192":{"line":1658,"type":"if","locations":[{"start":{"line":1658,"column":7},"end":{"line":1658,"column":7}},{"start":{"line":1658,"column":7},"end":{"line":1658,"column":7}}]},"193":{"line":1658,"type":"binary-expr","locations":[{"start":{"line":1658,"column":11},"end":{"line":1658,"column":21}},{"start":{"line":1658,"column":25},"end":{"line":1658,"column":29}}]},"194":{"line":1665,"type":"if","locations":[{"start":{"line":1665,"column":2},"end":{"line":1665,"column":2}},{"start":{"line":1665,"column":2},"end":{"line":1665,"column":2}}]},"195":{"line":1669,"type":"cond-expr","locations":[{"start":{"line":1669,"column":22},"end":{"line":1669,"column":23}},{"start":{"line":1669,"column":26},"end":{"line":1669,"column":42}}]},"196":{"line":1669,"type":"cond-expr","locations":[{"start":{"line":1669,"column":36},"end":{"line":1669,"column":38}},{"start":{"line":1669,"column":41},"end":{"line":1669,"column":42}}]},"197":{"line":1671,"type":"if","locations":[{"start":{"line":1671,"column":2},"end":{"line":1671,"column":2}},{"start":{"line":1671,"column":2},"end":{"line":1671,"column":2}}]},"198":{"line":1681,"type":"if","locations":[{"start":{"line":1681,"column":2},"end":{"line":1681,"column":2}},{"start":{"line":1681,"column":2},"end":{"line":1681,"column":2}}]},"199":{"line":1681,"type":"binary-expr","locations":[{"start":{"line":1681,"column":6},"end":{"line":1681,"column":15}},{"start":{"line":1681,"column":19},"end":{"line":1681,"column":28}}]},"200":{"line":1683,"type":"if","locations":[{"start":{"line":1683,"column":7},"end":{"line":1683,"column":7}},{"start":{"line":1683,"column":7},"end":{"line":1683,"column":7}}]},"201":{"line":1683,"type":"binary-expr","locations":[{"start":{"line":1683,"column":11},"end":{"line":1683,"column":21}},{"start":{"line":1683,"column":25},"end":{"line":1683,"column":33}}]},"202":{"line":1687,"type":"if","locations":[{"start":{"line":1687,"column":2},"end":{"line":1687,"column":2}},{"start":{"line":1687,"column":2},"end":{"line":1687,"column":2}}]},"203":{"line":1696,"type":"if","locations":[{"start":{"line":1696,"column":2},"end":{"line":1696,"column":2}},{"start":{"line":1696,"column":2},"end":{"line":1696,"column":2}}]},"204":{"line":1698,"type":"if","locations":[{"start":{"line":1698,"column":7},"end":{"line":1698,"column":7}},{"start":{"line":1698,"column":7},"end":{"line":1698,"column":7}}]},"205":{"line":1706,"type":"if","locations":[{"start":{"line":1706,"column":4},"end":{"line":1706,"column":4}},{"start":{"line":1706,"column":4},"end":{"line":1706,"column":4}}]},"206":{"line":1708,"type":"if","locations":[{"start":{"line":1708,"column":4},"end":{"line":1708,"column":4}},{"start":{"line":1708,"column":4},"end":{"line":1708,"column":4}}]},"207":{"line":1710,"type":"if","locations":[{"start":{"line":1710,"column":9},"end":{"line":1710,"column":9}},{"start":{"line":1710,"column":9},"end":{"line":1710,"column":9}}]},"208":{"line":1816,"type":"binary-expr","locations":[{"start":{"line":1816,"column":9},"end":{"line":1816,"column":17}},{"start":{"line":1816,"column":21},"end":{"line":1816,"column":29}}]},"209":{"line":1859,"type":"cond-expr","locations":[{"start":{"line":1859,"column":28},"end":{"line":1859,"column":30}},{"start":{"line":1859,"column":33},"end":{"line":1859,"column":47}}]},"210":{"line":1860,"type":"if","locations":[{"start":{"line":1860,"column":2},"end":{"line":1860,"column":2}},{"start":{"line":1860,"column":2},"end":{"line":1860,"column":2}}]},"211":{"line":1863,"type":"if","locations":[{"start":{"line":1863,"column":9},"end":{"line":1863,"column":9}},{"start":{"line":1863,"column":9},"end":{"line":1863,"column":9}}]},"212":{"line":1897,"type":"if","locations":[{"start":{"line":1897,"column":2},"end":{"line":1897,"column":2}},{"start":{"line":1897,"column":2},"end":{"line":1897,"column":2}}]},"213":{"line":1938,"type":"if","locations":[{"start":{"line":1938,"column":2},"end":{"line":1938,"column":2}},{"start":{"line":1938,"column":2},"end":{"line":1938,"column":2}}]},"214":{"line":1940,"type":"if","locations":[{"start":{"line":1940,"column":4},"end":{"line":1940,"column":4}},{"start":{"line":1940,"column":4},"end":{"line":1940,"column":4}}]},"215":{"line":1982,"type":"if","locations":[{"start":{"line":1982,"column":2},"end":{"line":1982,"column":2}},{"start":{"line":1982,"column":2},"end":{"line":1982,"column":2}}]},"216":{"line":1990,"type":"if","locations":[{"start":{"line":1990,"column":2},"end":{"line":1990,"column":2}},{"start":{"line":1990,"column":2},"end":{"line":1990,"column":2}}]},"217":{"line":1994,"type":"if","locations":[{"start":{"line":1994,"column":2},"end":{"line":1994,"column":2}},{"start":{"line":1994,"column":2},"end":{"line":1994,"column":2}}]},"218":{"line":1996,"type":"if","locations":[{"start":{"line":1996,"column":7},"end":{"line":1996,"column":7}},{"start":{"line":1996,"column":7},"end":{"line":1996,"column":7}}]},"219":{"line":1998,"type":"if","locations":[{"start":{"line":1998,"column":7},"end":{"line":1998,"column":7}},{"start":{"line":1998,"column":7},"end":{"line":1998,"column":7}}]},"220":{"line":2000,"type":"if","locations":[{"start":{"line":2000,"column":7},"end":{"line":2000,"column":7}},{"start":{"line":2000,"column":7},"end":{"line":2000,"column":7}}]},"221":{"line":2013,"type":"if","locations":[{"start":{"line":2013,"column":2},"end":{"line":2013,"column":2}},{"start":{"line":2013,"column":2},"end":{"line":2013,"column":2}}]},"222":{"line":2029,"type":"binary-expr","locations":[{"start":{"line":2029,"column":9},"end":{"line":2029,"column":16}},{"start":{"line":2029,"column":20},"end":{"line":2029,"column":27}}]},"223":{"line":2030,"type":"binary-expr","locations":[{"start":{"line":2030,"column":9},"end":{"line":2030,"column":14}},{"start":{"line":2030,"column":18},"end":{"line":2030,"column":33}}]},"224":{"line":2035,"type":"if","locations":[{"start":{"line":2035,"column":2},"end":{"line":2035,"column":2}},{"start":{"line":2035,"column":2},"end":{"line":2035,"column":2}}]},"225":{"line":2050,"type":"if","locations":[{"start":{"line":2050,"column":2},"end":{"line":2050,"column":2}},{"start":{"line":2050,"column":2},"end":{"line":2050,"column":2}}]},"226":{"line":2059,"type":"if","locations":[{"start":{"line":2059,"column":2},"end":{"line":2059,"column":2}},{"start":{"line":2059,"column":2},"end":{"line":2059,"column":2}}]},"227":{"line":2068,"type":"if","locations":[{"start":{"line":2068,"column":2},"end":{"line":2068,"column":2}},{"start":{"line":2068,"column":2},"end":{"line":2068,"column":2}}]},"228":{"line":2077,"type":"if","locations":[{"start":{"line":2077,"column":2},"end":{"line":2077,"column":2}},{"start":{"line":2077,"column":2},"end":{"line":2077,"column":2}}]},"229":{"line":2106,"type":"if","locations":[{"start":{"line":2106,"column":2},"end":{"line":2106,"column":2}},{"start":{"line":2106,"column":2},"end":{"line":2106,"column":2}}]},"230":{"line":2113,"type":"if","locations":[{"start":{"line":2113,"column":2},"end":{"line":2113,"column":2}},{"start":{"line":2113,"column":2},"end":{"line":2113,"column":2}}]},"231":{"line":2124,"type":"binary-expr","locations":[{"start":{"line":2124,"column":9},"end":{"line":2124,"column":24}},{"start":{"line":2124,"column":28},"end":{"line":2124,"column":44}}]},"232":{"line":2163,"type":"if","locations":[{"start":{"line":2163,"column":2},"end":{"line":2163,"column":2}},{"start":{"line":2163,"column":2},"end":{"line":2163,"column":2}}]},"233":{"line":2174,"type":"if","locations":[{"start":{"line":2174,"column":2},"end":{"line":2174,"column":2}},{"start":{"line":2174,"column":2},"end":{"line":2174,"column":2}}]},"234":{"line":2187,"type":"if","locations":[{"start":{"line":2187,"column":4},"end":{"line":2187,"column":4}},{"start":{"line":2187,"column":4},"end":{"line":2187,"column":4}}]},"235":{"line":2190,"type":"if","locations":[{"start":{"line":2190,"column":2},"end":{"line":2190,"column":2}},{"start":{"line":2190,"column":2},"end":{"line":2190,"column":2}}]},"236":{"line":2192,"type":"if","locations":[{"start":{"line":2192,"column":6},"end":{"line":2192,"column":6}},{"start":{"line":2192,"column":6},"end":{"line":2192,"column":6}}]},"237":{"line":2223,"type":"if","locations":[{"start":{"line":2223,"column":2},"end":{"line":2223,"column":2}},{"start":{"line":2223,"column":2},"end":{"line":2223,"column":2}}]},"238":{"line":2246,"type":"if","locations":[{"start":{"line":2246,"column":2},"end":{"line":2246,"column":2}},{"start":{"line":2246,"column":2},"end":{"line":2246,"column":2}}]},"239":{"line":2246,"type":"binary-expr","locations":[{"start":{"line":2246,"column":6},"end":{"line":2246,"column":21}},{"start":{"line":2246,"column":25},"end":{"line":2246,"column":40}}]},"240":{"line":2256,"type":"if","locations":[{"start":{"line":2256,"column":2},"end":{"line":2256,"column":2}},{"start":{"line":2256,"column":2},"end":{"line":2256,"column":2}}]},"241":{"line":2258,"type":"if","locations":[{"start":{"line":2258,"column":7},"end":{"line":2258,"column":7}},{"start":{"line":2258,"column":7},"end":{"line":2258,"column":7}}]},"242":{"line":2265,"type":"if","locations":[{"start":{"line":2265,"column":2},"end":{"line":2265,"column":2}},{"start":{"line":2265,"column":2},"end":{"line":2265,"column":2}}]},"243":{"line":2265,"type":"binary-expr","locations":[{"start":{"line":2265,"column":6},"end":{"line":2265,"column":21}},{"start":{"line":2265,"column":25},"end":{"line":2265,"column":40}}]},"244":{"line":2272,"type":"if","locations":[{"start":{"line":2272,"column":2},"end":{"line":2272,"column":2}},{"start":{"line":2272,"column":2},"end":{"line":2272,"column":2}}]},"245":{"line":2274,"type":"if","locations":[{"start":{"line":2274,"column":7},"end":{"line":2274,"column":7}},{"start":{"line":2274,"column":7},"end":{"line":2274,"column":7}}]},"246":{"line":2286,"type":"binary-expr","locations":[{"start":{"line":2286,"column":3},"end":{"line":2286,"column":32}},{"start":{"line":2286,"column":36},"end":{"line":2286,"column":42}}]}},"code":["(function (module, exports) {","","'use strict';","","// Utils","","function assert(val, msg) {","  if (!val)","    throw new Error(msg || 'Assertion failed');","}","","// Could use `inherits` module, but don't want to move from single file","// architecture yet.","function inherits(ctor, superCtor) {","  ctor.super_ = superCtor;","  var TempCtor = function () {};","  TempCtor.prototype = superCtor.prototype;","  ctor.prototype = new TempCtor();","  ctor.prototype.constructor = ctor;","}","","// BN","","function BN(number, base, endian) {","  // May be `new BN(bn)` ?","  if (number !== null &&","      typeof number === 'object' &&","      Array.isArray(number.words)) {","    return number;","  }","","  this.sign = false;","  this.words = null;","  this.length = 0;","","  // Reduction context","  this.red = null;","","  if (base === 'le' || base === 'be') {","    endian = base;","    base = 10;","  }","","  if (number !== null)","    this._init(number || 0, base || 10, endian || 'be');","}","if (typeof module === 'object')","  module.exports = BN;","else","  exports.BN = BN;","","BN.BN = BN;","BN.wordSize = 26;","","BN.prototype._init = function init(number, base, endian) {","  if (typeof number === 'number') {","    if (number < 0) {","      this.sign = true;","      number = -number;","    }","    if (number < 0x4000000) {","      this.words = [ number & 0x3ffffff ];","      this.length = 1;","    } else if (number < 0x10000000000000) {","      this.words = [","        number & 0x3ffffff,","        (number / 0x4000000) & 0x3ffffff","      ];","      this.length = 2;","    } else {","      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)","      this.words = [","        number & 0x3ffffff,","        (number / 0x4000000) & 0x3ffffff,","        1","      ];","      this.length = 3;","    }","    return;","  } else if (typeof number === 'object') {","    return this._initArray(number, base, endian);","  }","  if (base === 'hex')","    base = 16;","  assert(base === (base | 0) && base >= 2 && base <= 36);","","  number = number.toString().replace(/\\s+/g, '');","  var start = 0;","  if (number[0] === '-')","    start++;","","  if (base === 16)","    this._parseHex(number, start);","  else","    this._parseBase(number, base, start);","","  if (number[0] === '-')","    this.sign = true;","","  this.strip();","};","","BN.prototype._initArray = function _initArray(number, base, endian) {","  // Perhaps a Uint8Array","  assert(typeof number.length === 'number');","  if (number.length <= 0) {","    this.words = [ 0 ];","    this.length = 1;","    return this;","  }","","  this.length = Math.ceil(number.length / 3);","  this.words = new Array(this.length);","  for (var i = 0; i < this.length; i++)","    this.words[i] = 0;","","  var off = 0;","  if (endian === 'be') {","    for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {","      var w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);","      this.words[j] |= (w << off) & 0x3ffffff;","      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;","      off += 24;","      if (off >= 26) {","        off -= 26;","        j++;","      }","    }","  } else if (endian === 'le') {","    for (var i = 0, j = 0; i < number.length; i += 3) {","      var w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);","      this.words[j] |= (w << off) & 0x3ffffff;","      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;","      off += 24;","      if (off >= 26) {","        off -= 26;","        j++;","      }","    }","  }","  return this.strip();","};","","function parseHex(str, start, end) {","  var r = 0;","  var len = Math.min(str.length, end);","  for (var i = start; i < len; i++) {","    var c = str.charCodeAt(i) - 48;","","    r <<= 4;","","    // 'a' - 'f'","    if (c >= 49 && c <= 54)","      r |= c - 49 + 0xa;","","    // 'A' - 'F'","    else if (c >= 17 && c <= 22)","      r |= c - 17 + 0xa;","","    // '0' - '9'","    else","      r |= c & 0xf;","  }","  return r;","}","","BN.prototype._parseHex = function _parseHex(number, start) {","  // Create possibly bigger array to ensure that it fits the number","  this.length = Math.ceil((number.length - start) / 6);","  this.words = new Array(this.length);","  for (var i = 0; i < this.length; i++)","    this.words[i] = 0;","","  // Scan 24-bit chunks and add them to the number","  var off = 0;","  for (var i = number.length - 6, j = 0; i >= start; i -= 6) {","    var w = parseHex(number, i, i + 6);","    this.words[j] |= (w << off) & 0x3ffffff;","    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;","    off += 24;","    if (off >= 26) {","      off -= 26;","      j++;","    }","  }","  if (i + 6 !== start) {","    var w = parseHex(number, start, i + 6);","    this.words[j] |= (w << off) & 0x3ffffff;","    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;","  }","  this.strip();","};","","function parseBase(str, start, end, mul) {","  var r = 0;","  var len = Math.min(str.length, end);","  for (var i = start; i < len; i++) {","    var c = str.charCodeAt(i) - 48;","","    r *= mul;","","    // 'a'","    if (c >= 49)","      r += c - 49 + 0xa;","","    // 'A'","    else if (c >= 17)","      r += c - 17 + 0xa;","","    // '0' - '9'","    else","      r += c;","  }","  return r;","}","","BN.prototype._parseBase = function _parseBase(number, base, start) {","  // Initialize as zero","  this.words = [ 0 ];","  this.length = 1;","","  // Find length of limb in base","  for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base)","    limbLen++;","  limbLen--;","  limbPow = (limbPow / base) | 0;","","  var total = number.length - start;","  var mod = total % limbLen;","  var end = Math.min(total, total - mod) + start;","","  var word = 0;","  for (var i = start; i < end; i += limbLen) {","    word = parseBase(number, i, i + limbLen, base);","","    this.imuln(limbPow);","    if (this.words[0] + word < 0x4000000)","      this.words[0] += word;","    else","      this._iaddn(word);","  }","","  if (mod !== 0) {","    var pow = 1;","    var word = parseBase(number, i, number.length, base);","","    for (var i = 0; i < mod; i++)","      pow *= base;","    this.imuln(pow);","    if (this.words[0] + word < 0x4000000)","      this.words[0] += word;","    else","      this._iaddn(word);","  }","};","","BN.prototype.copy = function copy(dest) {","  dest.words = new Array(this.length);","  for (var i = 0; i < this.length; i++)","    dest.words[i] = this.words[i];","  dest.length = this.length;","  dest.sign = this.sign;","  dest.red = this.red;","};","","BN.prototype.clone = function clone() {","  var r = new BN(null);","  this.copy(r);","  return r;","};","","// Remove leading `0` from `this`","BN.prototype.strip = function strip() {","  while (this.length > 1 && this.words[this.length - 1] === 0)","    this.length--;","  return this._normSign();","};","","BN.prototype._normSign = function _normSign() {","  // -0 = 0","  if (this.length === 1 && this.words[0] === 0)","    this.sign = false;","  return this;","};","","BN.prototype.inspect = function inspect() {","  return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';","};","","/*","","var zeros = [];","var groupSizes = [];","var groupBases = [];","","var s = '';","var i = -1;","while (++i < BN.wordSize) {","  zeros[i] = s;","  s += '0';","}","groupSizes[0] = 0;","groupSizes[1] = 0;","groupBases[0] = 0;","groupBases[1] = 0;","var base = 2 - 1;","while (++base < 36 + 1) {","  var groupSize = 0;","  var groupBase = 1;","  while (groupBase < (1 << BN.wordSize) / base) {","    groupBase *= base;","    groupSize += 1;","  }","  groupSizes[base] = groupSize;","  groupBases[base] = groupBase;","}","","*/","","var zeros = [","  '',","  '0',","  '00',","  '000',","  '0000',","  '00000',","  '000000',","  '0000000',","  '00000000',","  '000000000',","  '0000000000',","  '00000000000',","  '000000000000',","  '0000000000000',","  '00000000000000',","  '000000000000000',","  '0000000000000000',","  '00000000000000000',","  '000000000000000000',","  '0000000000000000000',","  '00000000000000000000',","  '000000000000000000000',","  '0000000000000000000000',","  '00000000000000000000000',","  '000000000000000000000000',","  '0000000000000000000000000'","];","","var groupSizes = [","  0, 0,","  25, 16, 12, 11, 10, 9, 8,","  8, 7, 7, 7, 7, 6, 6,","  6, 6, 6, 6, 6, 5, 5,","  5, 5, 5, 5, 5, 5, 5,","  5, 5, 5, 5, 5, 5, 5","];","","var groupBases = [","  0, 0,","  33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,","  43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,","  16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,","  6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,","  24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176","];","","BN.prototype.toString = function toString(base, padding) {","  base = base || 10;","  if (base === 16 || base === 'hex') {","    var out = '';","    var off = 0;","    var padding = padding | 0 || 1;","    var carry = 0;","    for (var i = 0; i < this.length; i++) {","      var w = this.words[i];","      var word = (((w << off) | carry) & 0xffffff).toString(16);","      carry = (w >>> (24 - off)) & 0xffffff;","      if (carry !== 0 || i !== this.length - 1)","        out = zeros[6 - word.length] + word + out;","      else","        out = word + out;","      off += 2;","      if (off >= 26) {","        off -= 26;","        i--;","      }","    }","    if (carry !== 0)","      out = carry.toString(16) + out;","    while (out.length % padding !== 0)","      out = '0' + out;","    if (this.sign)","      out = '-' + out;","    return out;","  } else if (base === (base | 0) && base >= 2 && base <= 36) {","    // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));","    var groupSize = groupSizes[base];","    // var groupBase = Math.pow(base, groupSize);","    var groupBase = groupBases[base];","    var out = '';","    var c = this.clone();","    c.sign = false;","    while (c.cmpn(0) !== 0) {","      var r = c.modn(groupBase).toString(base);","      c = c.idivn(groupBase);","","      if (c.cmpn(0) !== 0)","        out = zeros[groupSize - r.length] + r + out;","      else","        out = r + out;","    }","    if (this.cmpn(0) === 0)","      out = '0' + out;","    if (this.sign)","      out = '-' + out;","    return out;","  } else {","    assert(false, 'Base should be between 2 and 36');","  }","};","","BN.prototype.toJSON = function toJSON() {","  return this.toString(16);","};","","BN.prototype.toArray = function toArray() {","  this.strip();","  var res = new Array(this.byteLength());","  res[0] = 0;","","  var q = this.clone();","  for (var i = 0; q.cmpn(0) !== 0; i++) {","    var b = q.andln(0xff);","    q.ishrn(8);","","    // Assume big-endian","    res[res.length - i - 1] = b;","  }","","  return res;","};","","if (Math.clz32) {","  BN.prototype._countBits = function _countBits(w) {","    return 32 - Math.clz32(w);","  };","} else {","  BN.prototype._countBits = function _countBits(w) {","    var t = w;","    var r = 0;","    if (t >= 0x1000) {","      r += 13;","      t >>>= 13;","    }","    if (t >= 0x40) {","      r += 7;","      t >>>= 7;","    }","    if (t >= 0x8) {","      r += 4;","      t >>>= 4;","    }","    if (t >= 0x02) {","      r += 2;","      t >>>= 2;","    }","    return r + t;","  };","}","","BN.prototype._zeroBits = function _zeroBits(w) {","  // Short-cut","  if (w === 0)","    return 26;","","  var t = w;","  var r = 0;","  if ((t & 0x1fff) === 0) {","    r += 13;","    t >>>= 13;","  }","  if ((t & 0x7f) === 0) {","    r += 7;","    t >>>= 7;","  }","  if ((t & 0xf) === 0) {","    r += 4;","    t >>>= 4;","  }","  if ((t & 0x3) === 0) {","    r += 2;","    t >>>= 2;","  }","  if ((t & 0x1) === 0)","    r++;","  return r;","};","","// Return number of used bits in a BN","BN.prototype.bitLength = function bitLength() {","  var hi = 0;","  var w = this.words[this.length - 1];","  var hi = this._countBits(w);","  return (this.length - 1) * 26 + hi;","};","","// Number of trailing zero bits","BN.prototype.zeroBits = function zeroBits() {","  if (this.cmpn(0) === 0)","    return 0;","","  var r = 0;","  for (var i = 0; i < this.length; i++) {","    var b = this._zeroBits(this.words[i]);","    r += b;","    if (b !== 26)","      break;","  }","  return r;","};","","BN.prototype.byteLength = function byteLength() {","  return Math.ceil(this.bitLength() / 8);","};","","// Return negative clone of `this`","BN.prototype.neg = function neg() {","  if (this.cmpn(0) === 0)","    return this.clone();","","  var r = this.clone();","  r.sign = !this.sign;","  return r;","};","","","// Or `num` with `this` in-place","BN.prototype.ior = function ior(num) {","  this.sign = this.sign || num.sign;","","  while (this.length < num.length)","    this.words[this.length++] = 0;","","  for (var i = 0; i < num.length; i++)","    this.words[i] = this.words[i] | num.words[i];","","  return this.strip();","};","","","// Or `num` with `this`","BN.prototype.or = function or(num) {","  if (this.length > num.length)","    return this.clone().ior(num);","  else","    return num.clone().ior(this);","};","","","// And `num` with `this` in-place","BN.prototype.iand = function iand(num) {","  this.sign = this.sign && num.sign;","","  // b = min-length(num, this)","  var b;","  if (this.length > num.length)","    b = num;","  else","    b = this;","","  for (var i = 0; i < b.length; i++)","    this.words[i] = this.words[i] & num.words[i];","","  this.length = b.length;","","  return this.strip();","};","","","// And `num` with `this`","BN.prototype.and = function and(num) {","  if (this.length > num.length)","    return this.clone().iand(num);","  else","    return num.clone().iand(this);","};","","","// Xor `num` with `this` in-place","BN.prototype.ixor = function ixor(num) {","  this.sign = this.sign || num.sign;","","  // a.length > b.length","  var a;","  var b;","  if (this.length > num.length) {","    a = this;","    b = num;","  } else {","    a = num;","    b = this;","  }","","  for (var i = 0; i < b.length; i++)","    this.words[i] = a.words[i] ^ b.words[i];","","  if (this !== a)","    for (; i < a.length; i++)","      this.words[i] = a.words[i];","","  this.length = a.length;","","  return this.strip();","};","","","// Xor `num` with `this`","BN.prototype.xor = function xor(num) {","  if (this.length > num.length)","    return this.clone().ixor(num);","  else","    return num.clone().ixor(this);","};","","","// Set `bit` of `this`","BN.prototype.setn = function setn(bit, val) {","  assert(typeof bit === 'number' && bit >= 0);","","  var off = (bit / 26) | 0;","  var wbit = bit % 26;","","  while (this.length <= off)","    this.words[this.length++] = 0;","","  if (val)","    this.words[off] = this.words[off] | (1 << wbit);","  else","    this.words[off] = this.words[off] & ~(1 << wbit);","","  return this.strip();","};","","","// Add `num` to `this` in-place","BN.prototype.iadd = function iadd(num) {","  // negative + positive","  if (this.sign && !num.sign) {","    this.sign = false;","    var r = this.isub(num);","    this.sign = !this.sign;","    return this._normSign();","","  // positive + negative","  } else if (!this.sign && num.sign) {","    num.sign = false;","    var r = this.isub(num);","    num.sign = true;","    return r._normSign();","  }","","  // a.length > b.length","  var a;","  var b;","  if (this.length > num.length) {","    a = this;","    b = num;","  } else {","    a = num;","    b = this;","  }","","  var carry = 0;","  for (var i = 0; i < b.length; i++) {","    var r = a.words[i] + b.words[i] + carry;","    this.words[i] = r & 0x3ffffff;","    carry = r >>> 26;","  }","  for (; carry !== 0 && i < a.length; i++) {","    var r = a.words[i] + carry;","    this.words[i] = r & 0x3ffffff;","    carry = r >>> 26;","  }","","  this.length = a.length;","  if (carry !== 0) {","    this.words[this.length] = carry;","    this.length++;","  // Copy the rest of the words","  } else if (a !== this) {","    for (; i < a.length; i++)","      this.words[i] = a.words[i];","  }","","  return this;","};","","// Add `num` to `this`","BN.prototype.add = function add(num) {","  if (num.sign && !this.sign) {","    num.sign = false;","    var res = this.sub(num);","    num.sign = true;","    return res;","  } else if (!num.sign && this.sign) {","    this.sign = false;","    var res = num.sub(this);","    this.sign = true;","    return res;","  }","","  if (this.length > num.length)","    return this.clone().iadd(num);","  else","    return num.clone().iadd(this);","};","","// Subtract `num` from `this` in-place","BN.prototype.isub = function isub(num) {","  // this - (-num) = this + num","  if (num.sign) {","    num.sign = false;","    var r = this.iadd(num);","    num.sign = true;","    return r._normSign();","","  // -this - num = -(this + num)","  } else if (this.sign) {","    this.sign = false;","    this.iadd(num);","    this.sign = true;","    return this._normSign();","  }","","  // At this point both numbers are positive","  var cmp = this.cmp(num);","","  // Optimization - zeroify","  if (cmp === 0) {","    this.sign = false;","    this.length = 1;","    this.words[0] = 0;","    return this;","  }","","  // a > b","  var a;","  var b;","  if (cmp > 0) {","    a = this;","    b = num;","  } else {","    a = num;","    b = this;","  }","","  var carry = 0;","  for (var i = 0; i < b.length; i++) {","    var r = a.words[i] - b.words[i] + carry;","    carry = r >> 26;","    this.words[i] = r & 0x3ffffff;","  }","  for (; carry !== 0 && i < a.length; i++) {","    var r = a.words[i] + carry;","    carry = r >> 26;","    this.words[i] = r & 0x3ffffff;","  }","","  // Copy rest of the words","  if (carry === 0 && i < a.length && a !== this)","    for (; i < a.length; i++)","      this.words[i] = a.words[i];","  this.length = Math.max(this.length, i);","","  if (a !== this)","    this.sign = true;","","  return this.strip();","};","","// Subtract `num` from `this`","BN.prototype.sub = function sub(num) {","  return this.clone().isub(num);","};","","/*","// NOTE: This could be potentionally used to generate loop-less multiplications","function _genCombMulTo(alen, blen) {","  var len = alen + blen - 1;","  var src = [","    'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +","        'mask = 0x3ffffff, shift = 0x4000000;',","    'out.length = ' + len + ';'","  ];","  for (var k = 0; k < len; k++) {","    var minJ = Math.max(0, k - alen + 1);","    var maxJ = Math.min(k, blen - 1);","","    for (var j = minJ; j <= maxJ; j++) {","      var i = k - j;","      var mul = 'a[' + i + '] * b[' + j + ']';","","      if (j === minJ) {","        src.push('w = ' + mul + ' + c;');","        src.push('c = (w / shift) | 0;');","      } else {","        src.push('w += ' + mul + ';');","        src.push('c += (w / shift) | 0;');","      }","      src.push('w &= mask;');","    }","    src.push('o[' + k + '] = w;');","  }","  src.push('if (c !== 0) {',","           '  o[' + k + '] = c;',","           '  out.length++;',","           '}',","           'return out;');","","  return src.join('\\n');","}","*/","","BN.prototype._smallMulTo = function _smallMulTo(num, out) {","  out.sign = num.sign !== this.sign;","  out.length = this.length + num.length;","","  var carry = 0;","  for (var k = 0; k < out.length - 1; k++) {","    // Sum all words with the same `i + j = k` and accumulate `ncarry`,","    // note that ncarry could be >= 0x3ffffff","    var ncarry = carry >>> 26;","    var rword = carry & 0x3ffffff;","    var maxJ = Math.min(k, num.length - 1);","    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {","      var i = k - j;","      var a = this.words[i] | 0;","      var b = num.words[j] | 0;","      var r = a * b;","","      var lo = r & 0x3ffffff;","      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;","      lo = (lo + rword) | 0;","      rword = lo & 0x3ffffff;","      ncarry = (ncarry + (lo >>> 26)) | 0;","    }","    out.words[k] = rword;","    carry = ncarry;","  }","  if (carry !== 0) {","    out.words[k] = carry;","  } else {","    out.length--;","  }","","  return out.strip();","};","","BN.prototype._bigMulTo = function _bigMulTo(num, out) {","  out.sign = num.sign !== this.sign;","  out.length = this.length + num.length;","","  var carry = 0;","  var hncarry = 0;","  for (var k = 0; k < out.length - 1; k++) {","    // Sum all words with the same `i + j = k` and accumulate `ncarry`,","    // note that ncarry could be >= 0x3ffffff","    var ncarry = hncarry;","    hncarry = 0;","    var rword = carry & 0x3ffffff;","    var maxJ = Math.min(k, num.length - 1);","    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {","      var i = k - j;","      var a = this.words[i] | 0;","      var b = num.words[j] | 0;","      var r = a * b;","","      var lo = r & 0x3ffffff;","      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;","      lo = (lo + rword) | 0;","      rword = lo & 0x3ffffff;","      ncarry = (ncarry + (lo >>> 26)) | 0;","","      hncarry += ncarry >>> 26;","      ncarry &= 0x3ffffff;","    }","    out.words[k] = rword;","    carry = ncarry;","    ncarry = hncarry;","  }","  if (carry !== 0) {","    out.words[k] = carry;","  } else {","    out.length--;","  }","","  return out.strip();","};","","BN.prototype.mulTo = function mulTo(num, out) {","  var res;","  if (this.length + num.length < 63)","    res = this._smallMulTo(num, out);","  else","    res = this._bigMulTo(num, out);","  return res;","};","","// Multiply `this` by `num`","BN.prototype.mul = function mul(num) {","  var out = new BN(null);","  out.words = new Array(this.length + num.length);","  return this.mulTo(num, out);","};","","// In-place Multiplication","BN.prototype.imul = function imul(num) {","  if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {","    this.words[0] = 0;","    this.length = 1;","    return this;","  }","","  var tlen = this.length;","  var nlen = num.length;","","  this.sign = num.sign !== this.sign;","  this.length = this.length + num.length;","  this.words[this.length - 1] = 0;","","  for (var k = this.length - 2; k >= 0; k--) {","    // Sum all words with the same `i + j = k` and accumulate `carry`,","    // note that carry could be >= 0x3ffffff","    var carry = 0;","    var rword = 0;","    var maxJ = Math.min(k, nlen - 1);","    for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {","      var i = k - j;","      var a = this.words[i];","      var b = num.words[j];","      var r = a * b;","","      var lo = r & 0x3ffffff;","      carry += (r / 0x4000000) | 0;","      lo += rword;","      rword = lo & 0x3ffffff;","      carry += lo >>> 26;","    }","    this.words[k] = rword;","    this.words[k + 1] += carry;","    carry = 0;","  }","","  // Propagate overflows","  var carry = 0;","  for (var i = 1; i < this.length; i++) {","    var w = this.words[i] + carry;","    this.words[i] = w & 0x3ffffff;","    carry = w >>> 26;","  }","","  return this.strip();","};","","BN.prototype.imuln = function imuln(num) {","  assert(typeof num === 'number');","","  // Carry","  var carry = 0;","  for (var i = 0; i < this.length; i++) {","    var w = this.words[i] * num;","    var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);","    carry >>= 26;","    carry += (w / 0x4000000) | 0;","    // NOTE: lo is 27bit maximum","    carry += lo >>> 26;","    this.words[i] = lo & 0x3ffffff;","  }","","  if (carry !== 0) {","    this.words[i] = carry;","    this.length++;","  }","","  return this;","};","","// `this` * `this`","BN.prototype.sqr = function sqr() {","  return this.mul(this);","};","","// `this` * `this` in-place","BN.prototype.isqr = function isqr() {","  return this.mul(this);","};","","// Shift-left in-place","BN.prototype.ishln = function ishln(bits) {","  assert(typeof bits === 'number' && bits >= 0);","  var r = bits % 26;","  var s = (bits - r) / 26;","  var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);","","  if (r !== 0) {","    var carry = 0;","    for (var i = 0; i < this.length; i++) {","      var newCarry = this.words[i] & carryMask;","      var c = (this.words[i] - newCarry) << r;","      this.words[i] = c | carry;","      carry = newCarry >>> (26 - r);","    }","    if (carry) {","      this.words[i] = carry;","      this.length++;","    }","  }","","  if (s !== 0) {","    for (var i = this.length - 1; i >= 0; i--)","      this.words[i + s] = this.words[i];","    for (var i = 0; i < s; i++)","      this.words[i] = 0;","    this.length += s;","  }","","  return this.strip();","};","","// Shift-right in-place","// NOTE: `hint` is a lowest bit before trailing zeroes","// NOTE: if `extended` is present - it will be filled with destroyed bits","BN.prototype.ishrn = function ishrn(bits, hint, extended) {","  assert(typeof bits === 'number' && bits >= 0);","  var h;","  if (hint)","    h = (hint - (hint % 26)) / 26;","  else","    h = 0;","","  var r = bits % 26;","  var s = Math.min((bits - r) / 26, this.length);","  var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);","  var maskedWords = extended;","","  h -= s;","  h = Math.max(0, h);","","  // Extended mode, copy masked part","  if (maskedWords) {","    for (var i = 0; i < s; i++)","      maskedWords.words[i] = this.words[i];","    maskedWords.length = s;","  }","","  if (s === 0) {","    // No-op, we should not move anything at all","  } else if (this.length > s) {","    this.length -= s;","    for (var i = 0; i < this.length; i++)","      this.words[i] = this.words[i + s];","  } else {","    this.words[0] = 0;","    this.length = 1;","  }","","  var carry = 0;","  for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {","    var word = this.words[i];","    this.words[i] = (carry << (26 - r)) | (word >>> r);","    carry = word & mask;","  }","","  // Push carried bits as a mask","  if (maskedWords && carry !== 0)","    maskedWords.words[maskedWords.length++] = carry;","","  if (this.length === 0) {","    this.words[0] = 0;","    this.length = 1;","  }","","  this.strip();","","  return this;","};","","// Shift-left","BN.prototype.shln = function shln(bits) {","  return this.clone().ishln(bits);","};","","// Shift-right","BN.prototype.shrn = function shrn(bits) {","  return this.clone().ishrn(bits);","};","","// Test if n bit is set","BN.prototype.testn = function testn(bit) {","  assert(typeof bit === 'number' && bit >= 0);","  var r = bit % 26;","  var s = (bit - r) / 26;","  var q = 1 << r;","","  // Fast case: bit is much higher than all existing words","  if (this.length <= s) {","    return false;","  }","","  // Check bit and return","  var w = this.words[s];","","  return !!(w & q);","};","","// Return only lowers bits of number (in-place)","BN.prototype.imaskn = function imaskn(bits) {","  assert(typeof bits === 'number' && bits >= 0);","  var r = bits % 26;","  var s = (bits - r) / 26;","","  assert(!this.sign, 'imaskn works only with positive numbers');","","  if (r !== 0)","    s++;","  this.length = Math.min(s, this.length);","","  if (r !== 0) {","    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);","    this.words[this.length - 1] &= mask;","  }","","  return this.strip();","};","","// Return only lowers bits of number","BN.prototype.maskn = function maskn(bits) {","  return this.clone().imaskn(bits);","};","","// Add plain number `num` to `this`","BN.prototype.iaddn = function iaddn(num) {","  assert(typeof num === 'number');","  if (num < 0)","    return this.isubn(-num);","","  // Possible sign change","  if (this.sign) {","    if (this.length === 1 && this.words[0] < num) {","      this.words[0] = num - this.words[0];","      this.sign = false;","      return this;","    }","","    this.sign = false;","    this.isubn(num);","    this.sign = true;","    return this;","  }","","  // Add without checks","  return this._iaddn(num);","};","","BN.prototype._iaddn = function _iaddn(num) {","  this.words[0] += num;","","  // Carry","  for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {","    this.words[i] -= 0x4000000;","    if (i === this.length - 1)","      this.words[i + 1] = 1;","    else","      this.words[i + 1]++;","  }","  this.length = Math.max(this.length, i + 1);","","  return this;","};","","// Subtract plain number `num` from `this`","BN.prototype.isubn = function isubn(num) {","  assert(typeof num === 'number');","  if (num < 0)","    return this.iaddn(-num);","","  if (this.sign) {","    this.sign = false;","    this.iaddn(num);","    this.sign = true;","    return this;","  }","","  this.words[0] -= num;","","  // Carry","  for (var i = 0; i < this.length && this.words[i] < 0; i++) {","    this.words[i] += 0x4000000;","    this.words[i + 1] -= 1;","  }","","  return this.strip();","};","","BN.prototype.addn = function addn(num) {","  return this.clone().iaddn(num);","};","","BN.prototype.subn = function subn(num) {","  return this.clone().isubn(num);","};","","BN.prototype.iabs = function iabs() {","  this.sign = false;","","  return this;","};","","BN.prototype.abs = function abs() {","  return this.clone().iabs();","};","","BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {","  // Bigger storage is needed","  var len = num.length + shift;","  var i;","  if (this.words.length < len) {","    var t = new Array(len);","    for (var i = 0; i < this.length; i++)","      t[i] = this.words[i];","    this.words = t;","  } else {","    i = this.length;","  }","","  // Zeroify rest","  this.length = Math.max(this.length, len);","  for (; i < this.length; i++)","    this.words[i] = 0;","","  var carry = 0;","  for (var i = 0; i < num.length; i++) {","    var w = this.words[i + shift] + carry;","    var right = num.words[i] * mul;","    w -= right & 0x3ffffff;","    carry = (w >> 26) - ((right / 0x4000000) | 0);","    this.words[i + shift] = w & 0x3ffffff;","  }","  for (; i < this.length - shift; i++) {","    var w = this.words[i + shift] + carry;","    carry = w >> 26;","    this.words[i + shift] = w & 0x3ffffff;","  }","","  if (carry === 0)","    return this.strip();","","  // Subtraction overflow","  assert(carry === -1);","  carry = 0;","  for (var i = 0; i < this.length; i++) {","    var w = -this.words[i] + carry;","    carry = w >> 26;","    this.words[i] = w & 0x3ffffff;","  }","  this.sign = true;","","  return this.strip();","};","","BN.prototype._wordDiv = function _wordDiv(num, mode) {","  var shift = this.length - num.length;","","  var a = this.clone();","  var b = num;","","  // Normalize","  var bhi = b.words[b.length - 1];","  var bhiBits = this._countBits(bhi);","  shift = 26 - bhiBits;","  if (shift !== 0) {","    b = b.shln(shift);","    a.ishln(shift);","    bhi = b.words[b.length - 1];","  }","","  // Initialize quotient","  var m = a.length - b.length;","  var q;","","  if (mode !== 'mod') {","    q = new BN(null);","    q.length = m + 1;","    q.words = new Array(q.length);","    for (var i = 0; i < q.length; i++)","      q.words[i] = 0;","  }","","  var diff = a.clone()._ishlnsubmul(b, 1, m);","  if (!diff.sign) {","    a = diff;","    if (q)","      q.words[m] = 1;","  }","","  for (var j = m - 1; j >= 0; j--) {","    var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1];","","    // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max","    // (0x7ffffff)","    qj = Math.min((qj / bhi) | 0, 0x3ffffff);","","    a._ishlnsubmul(b, qj, j);","    while (a.sign) {","      qj--;","      a.sign = false;","      a._ishlnsubmul(b, 1, j);","      if (a.cmpn(0) !== 0)","        a.sign = !a.sign;","    }","    if (q)","      q.words[j] = qj;","  }","  if (q)","    q.strip();","  a.strip();","","  // Denormalize","  if (mode !== 'div' && shift !== 0)","    a.ishrn(shift);","  return { div: q ? q : null, mod: a };","};","","BN.prototype.divmod = function divmod(num, mode) {","  assert(num.cmpn(0) !== 0);","","  if (this.sign && !num.sign) {","    var res = this.neg().divmod(num, mode);","    var div;","    var mod;","    if (mode !== 'mod')","      div = res.div.neg();","    if (mode !== 'div')","      mod = res.mod.cmpn(0) === 0 ? res.mod : num.sub(res.mod);","    return {","      div: div,","      mod: mod","    };","  } else if (!this.sign && num.sign) {","    var res = this.divmod(num.neg(), mode);","    var div;","    if (mode !== 'mod')","      div = res.div.neg();","    return { div: div, mod: res.mod };","  } else if (this.sign && num.sign) {","    return this.neg().divmod(num.neg(), mode);","  }","","  // Both numbers are positive at this point","","  // Strip both numbers to approximate shift value","  if (num.length > this.length || this.cmp(num) < 0)","    return { div: new BN(0), mod: this };","","  // Very short reduction","  if (num.length === 1) {","    if (mode === 'div')","      return { div: this.divn(num.words[0]), mod: null };","    else if (mode === 'mod')","      return { div: null, mod: new BN(this.modn(num.words[0])) };","    return {","      div: this.divn(num.words[0]),","      mod: new BN(this.modn(num.words[0]))","    };","  }","","  return this._wordDiv(num, mode);","};","","// Find `this` / `num`","BN.prototype.div = function div(num) {","  return this.divmod(num, 'div').div;","};","","// Find `this` % `num`","BN.prototype.mod = function mod(num) {","  return this.divmod(num, 'mod').mod;","};","","// Find Round(`this` / `num`)","BN.prototype.divRound = function divRound(num) {","  var dm = this.divmod(num);","","  // Fast case - exact division","  if (dm.mod.cmpn(0) === 0)","    return dm.div;","","  var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;","","  var half = num.shrn(1);","  var r2 = num.andln(1);","  var cmp = mod.cmp(half);","","  // Round down","  if (cmp < 0 || r2 === 1 && cmp === 0)","    return dm.div;","","  // Round up","  return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);","};","","BN.prototype.modn = function modn(num) {","  assert(num <= 0x3ffffff);","  var p = (1 << 26) % num;","","  var acc = 0;","  for (var i = this.length - 1; i >= 0; i--)","    acc = (p * acc + this.words[i]) % num;","","  return acc;","};","","// In-place division by number","BN.prototype.idivn = function idivn(num) {","  assert(num <= 0x3ffffff);","","  var carry = 0;","  for (var i = this.length - 1; i >= 0; i--) {","    var w = this.words[i] + carry * 0x4000000;","    this.words[i] = (w / num) | 0;","    carry = w % num;","  }","","  return this.strip();","};","","BN.prototype.divn = function divn(num) {","  return this.clone().idivn(num);","};","","BN.prototype.egcd = function egcd(p) {","  assert(!p.sign);","  assert(p.cmpn(0) !== 0);","","  var x = this;","  var y = p.clone();","","  if (x.sign)","    x = x.mod(p);","  else","    x = x.clone();","","  // A * x + B * y = x","  var A = new BN(1);","  var B = new BN(0);","","  // C * x + D * y = y","  var C = new BN(0);","  var D = new BN(1);","","  var g = 0;","","  while (x.isEven() && y.isEven()) {","    x.ishrn(1);","    y.ishrn(1);","    ++g;","  }","","  var yp = y.clone();","  var xp = x.clone();","","  while (x.cmpn(0) !== 0) {","    while (x.isEven()) {","      x.ishrn(1);","      if (A.isEven() && B.isEven()) {","        A.ishrn(1);","        B.ishrn(1);","      } else {","        A.iadd(yp).ishrn(1);","        B.isub(xp).ishrn(1);","      }","    }","","    while (y.isEven()) {","      y.ishrn(1);","      if (C.isEven() && D.isEven()) {","        C.ishrn(1);","        D.ishrn(1);","      } else {","        C.iadd(yp).ishrn(1);","        D.isub(xp).ishrn(1);","      }","    }","","    if (x.cmp(y) >= 0) {","      x.isub(y);","      A.isub(C);","      B.isub(D);","    } else {","      y.isub(x);","      C.isub(A);","      D.isub(B);","    }","  }","","  return {","    a: C,","    b: D,","    gcd: y.ishln(g)","  };","};","","// This is reduced incarnation of the binary EEA","// above, designated to invert members of the","// _prime_ fields F(p) at a maximal speed","BN.prototype._invmp = function _invmp(p) {","  assert(!p.sign);","  assert(p.cmpn(0) !== 0);","","  var a = this;","  var b = p.clone();","","  if (a.sign)","    a = a.mod(p);","  else","    a = a.clone();","","  var x1 = new BN(1);","  var x2 = new BN(0);","","  var delta = b.clone();","","  while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {","    while (a.isEven()) {","      a.ishrn(1);","      if (x1.isEven())","        x1.ishrn(1);","      else","        x1.iadd(delta).ishrn(1);","    }","    while (b.isEven()) {","      b.ishrn(1);","      if (x2.isEven())","        x2.ishrn(1);","      else","        x2.iadd(delta).ishrn(1);","    }","    if (a.cmp(b) >= 0) {","      a.isub(b);","      x1.isub(x2);","    } else {","      b.isub(a);","      x2.isub(x1);","    }","  }","  if (a.cmpn(1) === 0)","    return x1;","  else","    return x2;","};","","BN.prototype.gcd = function gcd(num) {","  if (this.cmpn(0) === 0)","    return num.clone();","  if (num.cmpn(0) === 0)","    return this.clone();","","  var a = this.clone();","  var b = num.clone();","  a.sign = false;","  b.sign = false;","","  // Remove common factor of two","  for (var shift = 0; a.isEven() && b.isEven(); shift++) {","    a.ishrn(1);","    b.ishrn(1);","  }","","  do {","    while (a.isEven())","      a.ishrn(1);","    while (b.isEven())","      b.ishrn(1);","","    var r = a.cmp(b);","    if (r < 0) {","      // Swap `a` and `b` to make `a` always bigger than `b`","      var t = a;","      a = b;","      b = t;","    } else if (r === 0 || b.cmpn(1) === 0) {","      break;","    }","","    a.isub(b);","  } while (true);","","  return b.ishln(shift);","};","","// Invert number in the field F(num)","BN.prototype.invm = function invm(num) {","  return this.egcd(num).a.mod(num);","};","","BN.prototype.isEven = function isEven() {","  return (this.words[0] & 1) === 0;","};","","BN.prototype.isOdd = function isOdd() {","  return (this.words[0] & 1) === 1;","};","","// And first word and num","BN.prototype.andln = function andln(num) {","  return this.words[0] & num;","};","","// Increment at the bit position in-line","BN.prototype.bincn = function bincn(bit) {","  assert(typeof bit === 'number');","  var r = bit % 26;","  var s = (bit - r) / 26;","  var q = 1 << r;","","  // Fast case: bit is much higher than all existing words","  if (this.length <= s) {","    for (var i = this.length; i < s + 1; i++)","      this.words[i] = 0;","    this.words[s] |= q;","    this.length = s + 1;","    return this;","  }","","  // Add bit and propagate, if needed","  var carry = q;","  for (var i = s; carry !== 0 && i < this.length; i++) {","    var w = this.words[i];","    w += carry;","    carry = w >>> 26;","    w &= 0x3ffffff;","    this.words[i] = w;","  }","  if (carry !== 0) {","    this.words[i] = carry;","    this.length++;","  }","  return this;","};","","BN.prototype.cmpn = function cmpn(num) {","  var sign = num < 0;","  if (sign)","    num = -num;","","  if (this.sign && !sign)","    return -1;","  else if (!this.sign && sign)","    return 1;","","  num &= 0x3ffffff;","  this.strip();","","  var res;","  if (this.length > 1) {","    res = 1;","  } else {","    var w = this.words[0];","    res = w === num ? 0 : w < num ? -1 : 1;","  }","  if (this.sign)","    res = -res;","  return res;","};","","// Compare two numbers and return:","// 1 - if `this` > `num`","// 0 - if `this` == `num`","// -1 - if `this` < `num`","BN.prototype.cmp = function cmp(num) {","  if (this.sign && !num.sign)","    return -1;","  else if (!this.sign && num.sign)","    return 1;","","  var res = this.ucmp(num);","  if (this.sign)","    return -res;","  else","    return res;","};","","// Unsigned comparison","BN.prototype.ucmp = function ucmp(num) {","  // At this point both numbers have the same sign","  if (this.length > num.length)","    return 1;","  else if (this.length < num.length)","    return -1;","","  var res = 0;","  for (var i = this.length - 1; i >= 0; i--) {","    var a = this.words[i];","    var b = num.words[i];","","    if (a === b)","      continue;","    if (a < b)","      res = -1;","    else if (a > b)","      res = 1;","    break;","  }","  return res;","};","","//","// A reduce context, could be using montgomery or something better, depending","// on the `m` itself.","//","BN.red = function red(num) {","  return new Red(num);","};","","BN.prototype.toRed = function toRed(ctx) {","  assert(!this.red, 'Already a number in reduction context');","  assert(!this.sign, 'red works only with positives');","  return ctx.convertTo(this)._forceRed(ctx);","};","","BN.prototype.fromRed = function fromRed() {","  assert(this.red, 'fromRed works only with numbers in reduction context');","  return this.red.convertFrom(this);","};","","BN.prototype._forceRed = function _forceRed(ctx) {","  this.red = ctx;","  return this;","};","","BN.prototype.forceRed = function forceRed(ctx) {","  assert(!this.red, 'Already a number in reduction context');","  return this._forceRed(ctx);","};","","BN.prototype.redAdd = function redAdd(num) {","  assert(this.red, 'redAdd works only with red numbers');","  return this.red.add(this, num);","};","","BN.prototype.redIAdd = function redIAdd(num) {","  assert(this.red, 'redIAdd works only with red numbers');","  return this.red.iadd(this, num);","};","","BN.prototype.redSub = function redSub(num) {","  assert(this.red, 'redSub works only with red numbers');","  return this.red.sub(this, num);","};","","BN.prototype.redISub = function redISub(num) {","  assert(this.red, 'redISub works only with red numbers');","  return this.red.isub(this, num);","};","","BN.prototype.redShl = function redShl(num) {","  assert(this.red, 'redShl works only with red numbers');","  return this.red.shl(this, num);","};","","BN.prototype.redMul = function redMul(num) {","  assert(this.red, 'redMul works only with red numbers');","  this.red._verify2(this, num);","  return this.red.mul(this, num);","};","","BN.prototype.redIMul = function redIMul(num) {","  assert(this.red, 'redMul works only with red numbers');","  this.red._verify2(this, num);","  return this.red.imul(this, num);","};","","BN.prototype.redSqr = function redSqr() {","  assert(this.red, 'redSqr works only with red numbers');","  this.red._verify1(this);","  return this.red.sqr(this);","};","","BN.prototype.redISqr = function redISqr() {","  assert(this.red, 'redISqr works only with red numbers');","  this.red._verify1(this);","  return this.red.isqr(this);","};","","// Square root over p","BN.prototype.redSqrt = function redSqrt() {","  assert(this.red, 'redSqrt works only with red numbers');","  this.red._verify1(this);","  return this.red.sqrt(this);","};","","BN.prototype.redInvm = function redInvm() {","  assert(this.red, 'redInvm works only with red numbers');","  this.red._verify1(this);","  return this.red.invm(this);","};","","// Return negative clone of `this` % `red modulo`","BN.prototype.redNeg = function redNeg() {","  assert(this.red, 'redNeg works only with red numbers');","  this.red._verify1(this);","  return this.red.neg(this);","};","","BN.prototype.redPow = function redPow(num) {","  assert(this.red && !num.red, 'redPow(normalNum)');","  this.red._verify1(this);","  return this.red.pow(this, num);","};","","// Prime numbers with efficient reduction","var primes = {","  k256: null,","  p224: null,","  p192: null,","  p25519: null","};","","// Pseudo-Mersenne prime","function MPrime(name, p) {","  // P = 2 ^ N - K","  this.name = name;","  this.p = new BN(p, 16);","  this.n = this.p.bitLength();","  this.k = new BN(1).ishln(this.n).isub(this.p);","","  this.tmp = this._tmp();","}","","MPrime.prototype._tmp = function _tmp() {","  var tmp = new BN(null);","  tmp.words = new Array(Math.ceil(this.n / 13));","  return tmp;","};","","MPrime.prototype.ireduce = function ireduce(num) {","  // Assumes that `num` is less than `P^2`","  // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)","  var r = num;","  var rlen;","","  do {","    this.split(r, this.tmp);","    r = this.imulK(r);","    r = r.iadd(this.tmp);","    rlen = r.bitLength();","  } while (rlen > this.n);","","  var cmp = rlen < this.n ? -1 : r.ucmp(this.p);","  if (cmp === 0) {","    r.words[0] = 0;","    r.length = 1;","  } else if (cmp > 0) {","    r.isub(this.p);","  } else {","    r.strip();","  }","","  return r;","};","","MPrime.prototype.split = function split(input, out) {","  input.ishrn(this.n, 0, out);","};","","MPrime.prototype.imulK = function imulK(num) {","  return num.imul(this.k);","};","","function K256() {","  MPrime.call(","    this,","    'k256',","    'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');","}","inherits(K256, MPrime);","","K256.prototype.split = function split(input, output) {","  // 256 = 9 * 26 + 22","  var mask = 0x3fffff;","","  var outLen = Math.min(input.length, 9);","  for (var i = 0; i < outLen; i++)","    output.words[i] = input.words[i];","  output.length = outLen;","","  if (input.length <= 9) {","    input.words[0] = 0;","    input.length = 1;","    return;","  }","","  // Shift by 9 limbs","  var prev = input.words[9];","  output.words[output.length++] = prev & mask;","","  for (var i = 10; i < input.length; i++) {","    var next = input.words[i];","    input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);","    prev = next;","  }","  input.words[i - 10] = prev >>> 22;","  input.length -= 9;","};","","K256.prototype.imulK = function imulK(num) {","  // K = 0x1000003d1 = [ 0x40, 0x3d1 ]","  num.words[num.length] = 0;","  num.words[num.length + 1] = 0;","  num.length += 2;","","  // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390","  var hi;","  var lo = 0;","  for (var i = 0; i < num.length; i++) {","    var w = num.words[i];","    hi = w * 0x40;","    lo += w * 0x3d1;","    hi += (lo / 0x4000000) | 0;","    lo &= 0x3ffffff;","","    num.words[i] = lo;","","    lo = hi;","  }","","  // Fast length reduction","  if (num.words[num.length - 1] === 0) {","    num.length--;","    if (num.words[num.length - 1] === 0)","      num.length--;","  }","  return num;","};","","function P224() {","  MPrime.call(","    this,","    'p224',","    'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');","}","inherits(P224, MPrime);","","function P192() {","  MPrime.call(","    this,","    'p192',","    'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');","}","inherits(P192, MPrime);","","function P25519() {","  // 2 ^ 255 - 19","  MPrime.call(","    this,","    '25519',","    '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');","}","inherits(P25519, MPrime);","","P25519.prototype.imulK = function imulK(num) {","  // K = 0x13","  var carry = 0;","  for (var i = 0; i < num.length; i++) {","    var hi = num.words[i] * 0x13 + carry;","    var lo = hi & 0x3ffffff;","    hi >>>= 26;","","    num.words[i] = lo;","    carry = hi;","  }","  if (carry !== 0)","    num.words[num.length++] = carry;","  return num;","};","","// Exported mostly for testing purposes, use plain name instead","BN._prime = function prime(name) {","  // Cached version of prime","  if (primes[name])","    return primes[name];","","  var prime;","  if (name === 'k256')","    prime = new K256();","  else if (name === 'p224')","    prime = new P224();","  else if (name === 'p192')","    prime = new P192();","  else if (name === 'p25519')","    prime = new P25519();","  else","    throw new Error('Unknown prime ' + name);","  primes[name] = prime;","","  return prime;","};","","//","// Base reduction engine","//","function Red(m) {","  if (typeof m === 'string') {","    var prime = BN._prime(m);","    this.m = prime.p;","    this.prime = prime;","  } else {","    this.m = m;","    this.prime = null;","  }","}","","Red.prototype._verify1 = function _verify1(a) {","  assert(!a.sign, 'red works only with positives');","  assert(a.red, 'red works only with red numbers');","};","","Red.prototype._verify2 = function _verify2(a, b) {","  assert(!a.sign && !b.sign, 'red works only with positives');","  assert(a.red && a.red === b.red,","         'red works only with red numbers');","};","","Red.prototype.imod = function imod(a) {","  if (this.prime)","    return this.prime.ireduce(a)._forceRed(this);","  return a.mod(this.m)._forceRed(this);","};","","Red.prototype.neg = function neg(a) {","  var r = a.clone();","  r.sign = !r.sign;","  return r.iadd(this.m)._forceRed(this);","};","","Red.prototype.add = function add(a, b) {","  this._verify2(a, b);","","  var res = a.add(b);","  if (res.cmp(this.m) >= 0)","    res.isub(this.m);","  return res._forceRed(this);","};","","Red.prototype.iadd = function iadd(a, b) {","  this._verify2(a, b);","","  var res = a.iadd(b);","  if (res.cmp(this.m) >= 0)","    res.isub(this.m);","  return res;","};","","Red.prototype.sub = function sub(a, b) {","  this._verify2(a, b);","","  var res = a.sub(b);","  if (res.cmpn(0) < 0)","    res.iadd(this.m);","  return res._forceRed(this);","};","","Red.prototype.isub = function isub(a, b) {","  this._verify2(a, b);","","  var res = a.isub(b);","  if (res.cmpn(0) < 0)","    res.iadd(this.m);","  return res;","};","","Red.prototype.shl = function shl(a, num) {","  this._verify1(a);","  return this.imod(a.shln(num));","};","","Red.prototype.imul = function imul(a, b) {","  this._verify2(a, b);","  return this.imod(a.imul(b));","};","","Red.prototype.mul = function mul(a, b) {","  this._verify2(a, b);","  return this.imod(a.mul(b));","};","","Red.prototype.isqr = function isqr(a) {","  return this.imul(a, a);","};","","Red.prototype.sqr = function sqr(a) {","  return this.mul(a, a);","};","","Red.prototype.sqrt = function sqrt(a) {","  if (a.cmpn(0) === 0)","    return a.clone();","","  var mod3 = this.m.andln(3);","  assert(mod3 % 2 === 1);","","  // Fast case","  if (mod3 === 3) {","    var pow = this.m.add(new BN(1)).ishrn(2);","    var r = this.pow(a, pow);","    return r;","  }","","  // Tonelli-Shanks algorithm (Totally unoptimized and slow)","  //","  // Find Q and S, that Q * 2 ^ S = (P - 1)","  var q = this.m.subn(1);","  var s = 0;","  while (q.cmpn(0) !== 0 && q.andln(1) === 0) {","    s++;","    q.ishrn(1);","  }","  assert(q.cmpn(0) !== 0);","","  var one = new BN(1).toRed(this);","  var nOne = one.redNeg();","","  // Find quadratic non-residue","  // NOTE: Max is such because of generalized Riemann hypothesis.","  var lpow = this.m.subn(1).ishrn(1);","  var z = this.m.bitLength();","  z = new BN(2 * z * z).toRed(this);","  while (this.pow(z, lpow).cmp(nOne) !== 0)","    z.redIAdd(nOne);","","  var c = this.pow(z, q);","  var r = this.pow(a, q.addn(1).ishrn(1));","  var t = this.pow(a, q);","  var m = s;","  while (t.cmp(one) !== 0) {","    var tmp = t;","    for (var i = 0; tmp.cmp(one) !== 0; i++)","      tmp = tmp.redSqr();","    assert(i < m);","    var b = this.pow(c, new BN(1).ishln(m - i - 1));","","    r = r.redMul(b);","    c = b.redSqr();","    t = t.redMul(c);","    m = i;","  }","","  return r;","};","","Red.prototype.invm = function invm(a) {","  var inv = a._invmp(this.m);","  if (inv.sign) {","    inv.sign = false;","    return this.imod(inv).redNeg();","  } else {","    return this.imod(inv);","  }","};","","Red.prototype.pow = function pow(a, num) {","  var w = [];","","  if (num.cmpn(0) === 0)","    return new BN(1);","","  var q = num.clone();","","  while (q.cmpn(0) !== 0) {","    w.push(q.andln(1));","    q.ishrn(1);","  }","","  // Skip leading zeroes","  var res = a;","  for (var i = 0; i < w.length; i++, res = this.sqr(res))","    if (w[i] !== 0)","      break;","","  if (++i < w.length) {","    for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {","      if (w[i] === 0)","        continue;","      res = this.mul(res, q);","    }","  }","","  return res;","};","","Red.prototype.convertTo = function convertTo(num) {","  return num.clone();","};","","Red.prototype.convertFrom = function convertFrom(num) {","  var res = num.clone();","  res.red = null;","  return res;","};","","//","// Montgomery method engine","//","","BN.mont = function mont(num) {","  return new Mont(num);","};","","function Mont(m) {","  Red.call(this, m);","","  this.shift = this.m.bitLength();","  if (this.shift % 26 !== 0)","    this.shift += 26 - (this.shift % 26);","  this.r = new BN(1).ishln(this.shift);","  this.r2 = this.imod(this.r.sqr());","  this.rinv = this.r._invmp(this.m);","","  this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);","  this.minv.sign = true;","  this.minv = this.minv.mod(this.r);","}","inherits(Mont, Red);","","Mont.prototype.convertTo = function convertTo(num) {","  return this.imod(num.shln(this.shift));","};","","Mont.prototype.convertFrom = function convertFrom(num) {","  var r = this.imod(num.mul(this.rinv));","  r.red = null;","  return r;","};","","Mont.prototype.imul = function imul(a, b) {","  if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {","    a.words[0] = 0;","    a.length = 1;","    return a;","  }","","  var t = a.imul(b);","  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);","  var u = t.isub(c).ishrn(this.shift);","  var res = u;","  if (u.cmp(this.m) >= 0)","    res = u.isub(this.m);","  else if (u.cmpn(0) < 0)","    res = u.iadd(this.m);","","  return res._forceRed(this);","};","","Mont.prototype.mul = function mul(a, b) {","  if (a.cmpn(0) === 0 || b.cmpn(0) === 0)","    return new BN(0)._forceRed(this);","","  var t = a.mul(b);","  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);","  var u = t.isub(c).ishrn(this.shift);","  var res = u;","  if (u.cmp(this.m) >= 0)","    res = u.isub(this.m);","  else if (u.cmpn(0) < 0)","    res = u.iadd(this.m);","","  return res._forceRed(this);","};","","Mont.prototype.invm = function invm(a) {","  // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R","  var res = this.imod(a._invmp(this.m).mul(this.r2));","  return res._forceRed(this);","};","","})(typeof module === 'undefined' || module, this);",""],"l":{"1":1,"7":1,"8":4617,"9":0,"14":1,"15":5,"16":5,"17":5,"18":5,"19":5,"24":1,"26":1535,"29":152,"32":1383,"33":1383,"34":1383,"37":1383,"39":1383,"40":0,"41":0,"44":1383,"45":413,"47":1,"48":1,"50":0,"52":1,"53":1,"55":1,"56":413,"57":15,"58":1,"59":1,"61":15,"62":14,"63":14,"64":1,"65":1,"69":1,"71":0,"72":0,"77":0,"79":15,"80":398,"81":0,"83":398,"84":1,"85":398,"87":398,"88":398,"89":398,"90":1,"92":398,"93":398,"95":0,"97":398,"98":1,"100":398,"103":1,"105":0,"106":0,"107":0,"108":0,"109":0,"112":0,"113":0,"114":0,"115":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"141":0,"144":1,"145":4338,"146":4338,"147":4338,"148":25186,"150":25186,"153":25186,"154":9419,"157":15767,"158":0,"162":15767,"164":4338,"167":1,"169":398,"170":398,"171":398,"172":4338,"175":398,"176":398,"177":3940,"178":3940,"179":3940,"180":3940,"181":3940,"182":3544,"183":3544,"186":398,"187":398,"188":398,"189":398,"191":398,"194":1,"195":0,"196":0,"197":0,"198":0,"200":0,"203":0,"204":0,"207":0,"208":0,"212":0,"214":0,"217":1,"219":0,"220":0,"223":0,"224":0,"225":0,"226":0,"228":0,"229":0,"230":0,"232":0,"233":0,"234":0,"236":0,"237":0,"238":0,"240":0,"243":0,"244":0,"245":0,"247":0,"248":0,"249":0,"250":0,"251":0,"253":0,"257":1,"258":499,"259":499,"260":4864,"261":499,"262":499,"263":499,"266":1,"267":499,"268":499,"269":499,"273":1,"274":2767,"275":422,"276":2767,"279":1,"281":2896,"282":16,"283":2896,"286":1,"287":0,"320":1,"349":1,"358":1,"367":1,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"381":0,"382":0,"383":0,"384":0,"385":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"397":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"407":0,"408":0,"410":0,"412":0,"413":0,"414":0,"415":0,"416":0,"418":0,"422":1,"423":0,"426":1,"427":0,"428":0,"429":0,"431":0,"432":0,"433":0,"434":0,"437":0,"440":0,"443":1,"444":1,"445":936,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"455":0,"456":0,"457":0,"459":0,"460":0,"461":0,"463":0,"464":0,"465":0,"467":0,"471":1,"473":0,"474":0,"476":0,"477":0,"478":0,"479":0,"480":0,"482":0,"483":0,"484":0,"486":0,"487":0,"488":0,"490":0,"491":0,"492":0,"494":0,"495":0,"496":0,"500":1,"501":936,"502":936,"503":936,"504":936,"508":1,"509":0,"510":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"519":0,"522":1,"523":0,"527":1,"528":0,"529":0,"531":0,"532":0,"533":0,"538":1,"539":0,"541":0,"542":0,"544":0,"545":0,"547":0,"552":1,"553":0,"554":0,"556":0,"561":1,"562":0,"565":0,"566":0,"567":0,"569":0,"571":0,"572":0,"574":0,"576":0,"581":1,"582":0,"583":0,"585":0,"590":1,"591":0,"594":0,"595":0,"596":0,"597":0,"598":0,"600":0,"601":0,"604":0,"605":0,"607":0,"608":0,"609":0,"611":0,"613":0,"618":1,"619":0,"620":0,"622":0,"627":1,"628":0,"630":0,"631":0,"633":0,"634":0,"636":0,"637":0,"639":0,"641":0,"646":1,"648":1105,"649":129,"650":129,"651":129,"652":129,"655":976,"656":0,"657":0,"658":0,"659":0,"663":976,"664":976,"665":976,"666":466,"667":466,"669":510,"670":510,"673":976,"674":976,"675":6421,"676":6421,"677":6421,"679":976,"680":20,"681":20,"682":20,"685":976,"686":976,"687":0,"688":0,"690":976,"691":510,"692":3302,"695":976,"699":1,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"712":0,"713":0,"715":0,"719":1,"721":388,"722":0,"723":0,"724":0,"725":0,"728":388,"729":0,"730":0,"731":0,"732":0,"736":388,"739":388,"740":2,"741":2,"742":2,"743":2,"747":386,"748":386,"749":386,"750":143,"751":143,"753":243,"754":243,"757":386,"758":386,"759":3833,"760":3833,"761":3833,"763":386,"764":0,"765":0,"766":0,"770":386,"771":2,"772":18,"773":386,"775":386,"776":243,"778":386,"782":1,"783":79,"824":1,"825":470,"826":470,"828":470,"829":470,"832":8867,"833":8867,"834":8867,"835":8867,"836":46451,"837":46451,"838":46451,"839":46451,"841":46451,"842":46451,"843":46451,"844":46451,"845":46451,"847":8867,"848":8867,"850":470,"851":464,"853":6,"856":470,"859":1,"860":0,"861":0,"863":0,"864":0,"865":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"878":0,"879":0,"880":0,"881":0,"882":0,"884":0,"885":0,"887":0,"888":0,"889":0,"891":0,"892":0,"894":0,"897":0,"900":1,"901":470,"902":470,"903":470,"905":0,"906":470,"910":1,"911":470,"912":470,"913":470,"917":1,"918":0,"919":0,"920":0,"921":0,"924":0,"925":0,"927":0,"928":0,"929":0,"931":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"943":0,"944":0,"945":0,"946":0,"947":0,"949":0,"950":0,"951":0,"955":0,"956":0,"957":0,"958":0,"959":0,"962":0,"965":1,"966":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"976":0,"977":0,"980":0,"981":0,"982":0,"985":0,"989":1,"990":0,"994":1,"995":0,"999":1,"1000":1,"1001":1,"1002":1,"1003":1,"1005":1,"1006":1,"1007":1,"1008":1,"1009":1,"1010":1,"1011":1,"1013":1,"1014":0,"1015":0,"1019":1,"1020":1,"1021":1,"1022":1,"1023":9,"1024":1,"1027":1,"1033":1,"1034":136,"1035":136,"1036":136,"1037":0,"1039":136,"1041":136,"1042":136,"1043":136,"1044":136,"1046":136,"1047":136,"1050":136,"1051":0,"1052":0,"1053":0,"1056":136,"1058":0,"1059":0,"1060":0,"1061":0,"1063":0,"1064":0,"1067":136,"1068":136,"1069":750,"1070":750,"1071":750,"1075":136,"1076":0,"1078":136,"1079":0,"1080":0,"1083":136,"1085":136,"1089":1,"1090":0,"1094":1,"1095":0,"1099":1,"1100":0,"1101":0,"1102":0,"1103":0,"1106":0,"1107":0,"1111":0,"1113":0,"1117":1,"1118":0,"1119":0,"1120":0,"1122":0,"1124":0,"1125":0,"1126":0,"1128":0,"1129":0,"1130":0,"1133":0,"1137":1,"1138":0,"1142":1,"1143":23,"1144":23,"1145":0,"1148":23,"1149":0,"1150":0,"1151":0,"1152":0,"1155":0,"1156":0,"1157":0,"1158":0,"1162":23,"1165":1,"1166":23,"1169":23,"1170":4,"1171":4,"1172":0,"1174":4,"1176":23,"1178":23,"1182":1,"1183":43,"1184":43,"1185":23,"1187":20,"1188":0,"1189":0,"1190":0,"1191":0,"1194":20,"1197":20,"1198":0,"1199":0,"1202":20,"1205":1,"1206":0,"1209":1,"1210":0,"1213":1,"1214":0,"1216":0,"1219":1,"1220":0,"1223":1,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1233":0,"1237":0,"1238":0,"1239":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1249":0,"1250":0,"1251":0,"1252":0,"1255":0,"1256":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1266":0,"1268":0,"1271":1,"1272":0,"1274":0,"1275":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1288":0,"1289":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1306":0,"1307":0,"1311":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1321":0,"1322":0,"1324":0,"1325":0,"1326":0,"1329":0,"1330":0,"1331":0,"1334":1,"1335":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1362":0,"1363":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1377":0,"1381":1,"1382":0,"1386":1,"1387":0,"1391":1,"1392":0,"1395":0,"1396":0,"1398":0,"1400":0,"1401":0,"1402":0,"1405":0,"1406":0,"1409":0,"1412":1,"1413":1,"1414":1,"1416":1,"1417":1,"1418":10,"1420":1,"1424":1,"1425":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1434":0,"1437":1,"1438":0,"1441":1,"1442":0,"1443":0,"1445":0,"1446":0,"1448":0,"1449":0,"1451":0,"1454":0,"1455":0,"1458":0,"1459":0,"1461":0,"1463":0,"1464":0,"1465":0,"1466":0,"1469":0,"1470":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1479":0,"1480":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1490":0,"1491":0,"1495":0,"1496":0,"1497":0,"1498":0,"1500":0,"1501":0,"1502":0,"1506":0,"1516":1,"1517":1,"1518":1,"1520":1,"1521":1,"1523":1,"1524":0,"1526":1,"1528":1,"1529":1,"1531":1,"1533":1,"1534":1,"1535":1,"1536":1,"1537":0,"1539":1,"1541":1,"1542":0,"1543":0,"1544":0,"1546":0,"1548":1,"1549":0,"1550":0,"1552":1,"1553":1,"1556":1,"1557":1,"1559":0,"1562":1,"1563":0,"1564":0,"1565":0,"1566":0,"1568":0,"1569":0,"1570":0,"1571":0,"1574":0,"1575":0,"1576":0,"1579":0,"1580":0,"1581":0,"1582":0,"1583":0,"1585":0,"1586":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1595":0,"1598":0,"1602":1,"1603":0,"1606":1,"1607":4,"1610":1,"1611":134,"1615":1,"1616":176,"1620":1,"1621":0,"1622":0,"1623":0,"1624":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":0,"1636":0,"1637":0,"1638":0,"1639":0,"1640":0,"1641":0,"1642":0,"1644":0,"1645":0,"1646":0,"1648":0,"1651":1,"1652":599,"1653":599,"1654":1,"1656":599,"1657":112,"1658":487,"1659":0,"1661":487,"1662":487,"1664":487,"1665":487,"1666":448,"1668":39,"1669":39,"1671":487,"1672":1,"1673":487,"1680":1,"1681":429,"1682":0,"1683":429,"1684":0,"1686":429,"1687":429,"1688":0,"1690":429,"1694":1,"1696":682,"1697":1,"1698":681,"1699":3,"1701":678,"1702":678,"1703":696,"1704":696,"1706":696,"1707":20,"1708":676,"1709":510,"1710":166,"1711":166,"1712":676,"1714":678,"1721":1,"1722":1,"1725":1,"1726":397,"1727":397,"1728":397,"1731":1,"1732":2,"1733":2,"1736":1,"1737":963,"1738":963,"1741":1,"1742":0,"1743":0,"1746":1,"1747":0,"1748":0,"1751":1,"1752":40,"1753":40,"1756":1,"1757":78,"1758":78,"1761":1,"1762":153,"1763":153,"1766":1,"1767":0,"1768":0,"1771":1,"1772":344,"1773":344,"1774":344,"1777":1,"1778":0,"1779":0,"1780":0,"1783":1,"1784":126,"1785":126,"1786":126,"1789":1,"1790":0,"1791":0,"1792":0,"1796":1,"1797":0,"1798":0,"1799":0,"1802":1,"1803":1,"1804":1,"1805":1,"1809":1,"1810":17,"1811":17,"1812":17,"1815":1,"1816":0,"1817":0,"1818":0,"1822":1,"1830":1,"1832":1,"1833":1,"1834":1,"1835":1,"1837":1,"1840":1,"1841":1,"1842":1,"1843":1,"1846":1,"1849":471,"1850":471,"1852":471,"1853":935,"1854":935,"1855":935,"1856":935,"1859":471,"1860":471,"1861":0,"1862":0,"1863":471,"1864":0,"1866":471,"1869":471,"1872":1,"1873":0,"1876":1,"1877":0,"1880":1,"1881":1,"1886":1,"1888":1,"1890":935,"1892":935,"1893":935,"1894":8399,"1895":935,"1897":935,"1898":2,"1899":2,"1900":2,"1904":933,"1905":933,"1907":933,"1908":5315,"1909":5315,"1910":5315,"1912":933,"1913":933,"1916":1,"1918":935,"1919":935,"1920":935,"1923":935,"1924":935,"1925":935,"1926":8120,"1927":8120,"1928":8120,"1929":8120,"1930":8120,"1932":8120,"1934":8120,"1938":935,"1939":935,"1940":935,"1941":472,"1943":935,"1946":1,"1947":0,"1952":1,"1954":1,"1955":0,"1960":1,"1962":1,"1964":0,"1969":1,"1971":1,"1973":0,"1974":0,"1975":0,"1976":0,"1977":0,"1979":0,"1980":0,"1982":0,"1983":0,"1984":0,"1988":1,"1990":1,"1991":0,"1993":1,"1994":1,"1995":1,"1996":0,"1997":0,"1998":0,"1999":0,"2000":0,"2001":0,"2003":0,"2004":1,"2006":1,"2012":1,"2013":1,"2014":1,"2015":1,"2016":1,"2018":0,"2019":0,"2023":1,"2024":144,"2025":144,"2028":1,"2029":1085,"2030":1085,"2034":1,"2035":471,"2036":471,"2037":0,"2040":1,"2041":17,"2042":17,"2043":17,"2046":1,"2047":0,"2049":0,"2050":0,"2051":0,"2052":0,"2055":1,"2056":40,"2058":40,"2059":40,"2060":24,"2061":40,"2064":1,"2065":78,"2067":78,"2068":78,"2069":35,"2070":78,"2073":1,"2074":153,"2076":153,"2077":153,"2078":77,"2079":153,"2082":1,"2083":0,"2084":0,"2087":1,"2088":0,"2089":0,"2092":1,"2093":470,"2094":470,"2097":1,"2098":0,"2101":1,"2102":126,"2105":1,"2106":0,"2107":0,"2109":0,"2110":0,"2113":0,"2114":0,"2115":0,"2116":0,"2122":0,"2123":0,"2124":0,"2125":0,"2126":0,"2128":0,"2130":0,"2131":0,"2135":0,"2136":0,"2137":0,"2138":0,"2139":0,"2141":0,"2142":0,"2143":0,"2144":0,"2145":0,"2146":0,"2147":0,"2148":0,"2149":0,"2150":0,"2152":0,"2153":0,"2154":0,"2155":0,"2158":0,"2161":1,"2162":1,"2163":1,"2164":0,"2165":0,"2167":1,"2171":1,"2172":0,"2174":0,"2175":0,"2177":0,"2179":0,"2180":0,"2181":0,"2185":0,"2186":0,"2187":0,"2188":0,"2190":0,"2191":0,"2192":0,"2193":0,"2194":0,"2198":0,"2201":1,"2202":397,"2205":1,"2206":2,"2207":2,"2208":2,"2215":1,"2216":0,"2219":1,"2220":0,"2222":0,"2223":0,"2224":0,"2225":0,"2226":0,"2227":0,"2229":0,"2230":0,"2231":0,"2233":1,"2235":1,"2236":0,"2239":1,"2240":0,"2241":0,"2242":0,"2245":1,"2246":0,"2247":0,"2248":0,"2249":0,"2252":0,"2253":0,"2254":0,"2255":0,"2256":0,"2257":0,"2258":0,"2259":0,"2261":0,"2264":1,"2265":0,"2266":0,"2268":0,"2269":0,"2270":0,"2271":0,"2272":0,"2273":0,"2274":0,"2275":0,"2277":0,"2280":1,"2282":0,"2283":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/util/preconditions.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/util/preconditions.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":5,"9":5,"10":5,"11":1,"12":1,"13":0,"14":4,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[5,0],"4":[5,0],"5":[1,4],"6":[0,1],"7":[0,4],"8":[0,0]},"f":{"1":0,"2":0,"3":5},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":43}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":70}}},"3":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":21},"end":{"line":17,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"3":{"start":{"line":6,"column":0},"end":{"line":34,"column":2}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"5":{"start":{"line":9,"column":6},"end":{"line":9,"column":45}},"6":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"7":{"start":{"line":14,"column":6},"end":{"line":14,"column":72}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":52}},"9":{"start":{"line":19,"column":4},"end":{"line":32,"column":5}},"10":{"start":{"line":20,"column":6},"end":{"line":27,"column":7}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":45}},"12":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"13":{"start":{"line":23,"column":10},"end":{"line":23,"column":77}},"14":{"start":{"line":25,"column":13},"end":{"line":27,"column":7}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":75}},"16":{"start":{"line":29,"column":6},"end":{"line":31,"column":7}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":80}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":19},"end":{"line":18,"column":31}},{"start":{"line":18,"column":35},"end":{"line":18,"column":51}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"5":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"6":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]},"7":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":13},"end":{"line":25,"column":13}},{"start":{"line":25,"column":13},"end":{"line":25,"column":13}}]},"8":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":6}},{"start":{"line":29,"column":6},"end":{"line":29,"column":6}}]}},"code":["'use strict';","","var errors = require('../errors');","var _ = require('lodash');","","module.exports = {","  checkState: function(condition, message) {","    if (!condition) {","      throw new errors.InvalidState(message);","    }","  },","  checkArgument: function(condition, argumentName, message, docsPath) {","    if (!condition) {","      throw new errors.InvalidArgument(argumentName, message, docsPath);","    }","  },","  checkArgumentType: function(argument, type, argumentName) {","    argumentName = argumentName || '(unknown name)';","    if (_.isString(type)) {","      if (type === 'Buffer') {","        var BufferUtil = require('./buffer');","        if (!BufferUtil.isBuffer(argument)) {","          throw new errors.InvalidArgumentType(argument, type, argumentName);","        }","      } else if (typeof argument !== type) {","        throw new errors.InvalidArgumentType(argument, type, argumentName);","      }","    } else {","      if (!(argument instanceof type)) {","        throw new errors.InvalidArgumentType(argument, type.name, argumentName);","      }","    }","  }","};",""],"l":{"3":1,"4":1,"6":1,"8":0,"9":0,"13":0,"14":0,"18":5,"19":5,"20":5,"21":1,"22":1,"23":0,"25":4,"26":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/errors/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/errors/index.js","s":{"1":1,"2":1,"3":0,"4":1,"5":53,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":53,"13":53,"14":53,"15":53,"16":8,"17":53,"18":1,"19":9,"20":53,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[8,45]},"f":{"1":0,"2":53,"3":0,"4":9,"5":53,"6":1,"7":0,"8":0},"fnMap":{"1":{"name":"format","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":19},"end":{"line":11,"column":53}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":18},"end":{"line":12,"column":29}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":23},"end":{"line":32,"column":58}}},"5":{"name":"(anonymous_5)","line":33,"loc":{"start":{"line":33,"column":27},"end":{"line":33,"column":53}}},"6":{"name":"(anonymous_6)","line":39,"loc":{"start":{"line":39,"column":19},"end":{"line":39,"column":54}}},"7":{"name":"(anonymous_7)","line":46,"loc":{"start":{"line":46,"column":16},"end":{"line":46,"column":27}}},"8":{"name":"(anonymous_8)","line":59,"loc":{"start":{"line":59,"column":24},"end":{"line":59,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":9,"column":29}},"4":{"start":{"line":11,"column":0},"end":{"line":29,"column":2}},"5":{"start":{"line":12,"column":2},"end":{"line":21,"column":4}},"6":{"start":{"line":13,"column":4},"end":{"line":19,"column":5}},"7":{"start":{"line":14,"column":6},"end":{"line":14,"column":64}},"8":{"start":{"line":15,"column":11},"end":{"line":19,"column":5}},"9":{"start":{"line":16,"column":6},"end":{"line":16,"column":68}},"10":{"start":{"line":18,"column":6},"end":{"line":18,"column":78}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":59}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":74}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":43}},"15":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"16":{"start":{"line":26,"column":4},"end":{"line":26,"column":56}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":19}},"18":{"start":{"line":32,"column":0},"end":{"line":36,"column":2}},"19":{"start":{"line":33,"column":2},"end":{"line":35,"column":5}},"20":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}},"21":{"start":{"line":39,"column":0},"end":{"line":42,"column":2}},"22":{"start":{"line":40,"column":2},"end":{"line":40,"column":45}},"23":{"start":{"line":41,"column":2},"end":{"line":41,"column":16}},"24":{"start":{"line":45,"column":0},"end":{"line":45,"column":17}},"25":{"start":{"line":46,"column":0},"end":{"line":49,"column":2}},"26":{"start":{"line":47,"column":2},"end":{"line":47,"column":34}},"27":{"start":{"line":48,"column":2},"end":{"line":48,"column":57}},"28":{"start":{"line":50,"column":0},"end":{"line":50,"column":57}},"29":{"start":{"line":51,"column":0},"end":{"line":51,"column":47}},"30":{"start":{"line":54,"column":0},"end":{"line":54,"column":29}},"31":{"start":{"line":55,"column":0},"end":{"line":55,"column":34}},"32":{"start":{"line":57,"column":0},"end":{"line":57,"column":31}},"33":{"start":{"line":59,"column":0},"end":{"line":61,"column":2}},"34":{"start":{"line":60,"column":2},"end":{"line":60,"column":43}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":11},"end":{"line":15,"column":11}},{"start":{"line":15,"column":11},"end":{"line":15,"column":11}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","","function format(message, args) {","  return message","    .replace('{0}', args[0])","    .replace('{1}', args[1])","    .replace('{2}', args[2]);","}","var traverseNode = function(parent, errorDefinition) {","  var NodeError = function() {","    if (_.isString(errorDefinition.message)) {","      this.message = format(errorDefinition.message, arguments);","    } else if (_.isFunction(errorDefinition.message)) {","      this.message = errorDefinition.message.apply(null, arguments);","    } else {","      throw new Error('Invalid error definition for ' + errorDefinition.name);","    }","    this.stack = this.message + '\\n' + (new Error()).stack;","  };","  NodeError.prototype = Object.create(parent.prototype);","  NodeError.prototype.name = parent.prototype.name + errorDefinition.name;","  parent[errorDefinition.name] = NodeError;","  if (errorDefinition.errors) {","    childDefinitions(NodeError, errorDefinition.errors);","  }","  return NodeError;","};","","/* jshint latedef: false */","var childDefinitions = function(parent, childDefinitions) {","  _.each(childDefinitions, function(childDefinition) {","    traverseNode(parent, childDefinition);","  });","};","/* jshint latedef: true */","","var traverseRoot = function(parent, errorsDefinition) {","  childDefinitions(parent, errorsDefinition);","  return parent;","};","","","var bitcore = {};","bitcore.Error = function() {","  this.message = 'Internal error';","  this.stack = this.message + '\\n' + (new Error()).stack;","};","bitcore.Error.prototype = Object.create(Error.prototype);","bitcore.Error.prototype.name = 'bitcore.Error';","","","var data = require('./spec');","traverseRoot(bitcore.Error, data);","","module.exports = bitcore.Error;","","module.exports.extend = function(spec) {","  return traverseNode(bitcore.Error, spec);","};",""],"l":{"3":1,"5":1,"6":0,"11":1,"12":53,"13":0,"14":0,"15":0,"16":0,"18":0,"20":0,"22":53,"23":53,"24":53,"25":53,"26":8,"28":53,"32":1,"33":9,"34":53,"39":1,"40":1,"41":1,"45":1,"46":1,"47":0,"48":0,"50":1,"51":1,"54":1,"55":1,"57":1,"59":1,"60":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/lodash/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/lodash/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":1,"78":0,"79":1,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":1,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":1,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":1,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":1,"146":0,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":1,"173":0,"174":0,"175":0,"176":1,"177":1,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":1,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":1,"225":0,"226":1,"227":0,"228":1,"229":0,"230":1,"231":0,"232":0,"233":0,"234":1,"235":0,"236":0,"237":0,"238":0,"239":1,"240":0,"241":0,"242":1,"243":0,"244":0,"245":0,"246":0,"247":1,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":1,"261":16,"262":16,"263":79,"264":0,"265":16,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":0,"274":0,"275":0,"276":0,"277":0,"278":1,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":1,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":1,"294":0,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":0,"302":0,"303":1,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":1,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":1,"329":0,"330":1,"331":0,"332":1,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":1,"340":1,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":1,"350":1,"351":1,"352":1,"353":117,"354":117,"355":1,"356":1,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":1,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":1,"396":1,"397":1,"398":2,"399":2,"400":2,"401":2,"402":2,"403":1,"404":0,"405":0,"406":0,"407":0,"408":1,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":1,"430":1,"431":1,"432":0,"433":0,"434":0,"435":0,"436":0,"437":1,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":1,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":1,"459":0,"460":0,"461":0,"462":0,"463":0,"464":1,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":1,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":1,"484":1,"485":1,"486":0,"487":1,"488":5,"489":1,"490":0,"491":1,"492":2,"493":2,"494":222,"495":222,"496":218,"497":2,"498":1,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":1,"508":0,"509":0,"510":0,"511":0,"512":0,"513":1,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":1,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":1,"568":0,"569":0,"570":0,"571":0,"572":1,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":1,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":1,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":1,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":1,"636":1,"637":6,"638":1,"639":0,"640":0,"641":0,"642":0,"643":1,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":1,"652":0,"653":1,"654":0,"655":0,"656":0,"657":1,"658":0,"659":0,"660":1,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":1,"675":0,"676":0,"677":0,"678":0,"679":0,"680":1,"681":0,"682":0,"683":0,"684":0,"685":0,"686":1,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":1,"697":0,"698":0,"699":0,"700":0,"701":1,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":1,"725":0,"726":0,"727":0,"728":0,"729":1,"730":0,"731":0,"732":0,"733":1,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":1,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":1,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":1,"771":4,"772":0,"773":4,"774":4,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":1,"787":0,"788":0,"789":0,"790":1,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":1,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":1,"810":4,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":1,"822":2,"823":1,"824":1,"825":0,"826":0,"827":1,"828":1,"829":1,"830":0,"831":0,"832":1,"833":1,"834":1,"835":1,"836":1,"837":1,"838":2,"839":4,"840":4,"841":2,"842":2,"843":2,"844":0,"845":0,"846":2,"847":1,"848":2,"849":5,"850":5,"851":273,"852":273,"853":0,"854":5,"855":1,"856":0,"857":1,"858":0,"859":0,"860":0,"861":1,"862":0,"863":1,"864":4,"865":0,"866":0,"867":0,"868":0,"869":1,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":1,"884":1,"885":0,"886":0,"887":0,"888":0,"889":0,"890":2,"891":1,"892":2,"893":0,"894":0,"895":0,"896":0,"897":0,"898":1,"899":2,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":1,"910":2,"911":0,"912":0,"913":0,"914":0,"915":0,"916":1,"917":2,"918":0,"919":0,"920":0,"921":0,"922":1,"923":2,"924":0,"925":0,"926":1,"927":2,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":1,"951":2,"952":13,"953":1,"954":2,"955":0,"956":0,"957":0,"958":1,"959":2,"960":0,"961":0,"962":0,"963":1,"964":2,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":1,"974":2,"975":0,"976":0,"977":1,"978":2,"979":0,"980":0,"981":2,"982":1,"983":2,"984":0,"985":0,"986":1,"987":1,"988":1,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":1,"1019":1,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":1,"1028":0,"1029":1,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":1,"1039":3,"1040":3,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":1,"1047":2,"1048":0,"1049":0,"1050":1,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":1,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":1,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":1,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":1,"1121":0,"1122":0,"1123":0,"1124":1,"1125":0,"1126":1,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":1,"1134":0,"1135":0,"1136":0,"1137":1,"1138":1,"1139":0,"1140":0,"1141":0,"1142":0,"1143":1,"1144":6,"1145":6,"1146":1,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":1,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":1,"1167":0,"1168":0,"1169":0,"1170":0,"1171":1,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":1,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":1,"1190":4,"1191":1,"1192":0,"1193":0,"1194":0,"1195":1,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":1,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":1,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":1,"1221":8,"1222":1,"1223":0,"1224":1,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":1,"1253":0,"1254":1,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":1,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":1,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":1,"1275":1,"1276":1,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":1,"1285":2,"1286":2,"1287":2,"1288":2,"1289":447,"1290":447,"1291":36,"1292":2,"1293":1,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":1,"1300":7,"1301":1,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":1,"1309":0,"1310":1,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":1,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":1,"1326":0,"1327":1,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":1,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":1,"1343":0,"1344":1,"1345":0,"1346":1,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":1,"1355":1,"1356":1,"1357":0,"1358":1,"1359":0,"1360":0,"1361":0,"1362":0,"1363":1,"1364":0,"1365":0,"1366":1,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":1,"1379":0,"1380":1,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":1,"1400":0,"1401":0,"1402":1,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":1,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":1,"1432":0,"1433":0,"1434":0,"1435":0,"1436":1,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":1,"1450":0,"1451":1,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":1,"1460":1,"1461":1,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":1,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":1,"1477":0,"1478":1,"1479":0,"1480":1,"1481":0,"1482":1,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1494":1,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":1,"1507":0,"1508":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":1,"1517":0,"1518":1,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":1,"1526":1,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":1,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":1,"1546":0,"1547":0,"1548":0,"1549":1,"1550":0,"1551":0,"1552":1,"1553":0,"1554":1,"1555":0,"1556":1,"1557":0,"1558":1,"1559":0,"1560":0,"1561":0,"1562":1,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":1,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":0,"1582":0,"1583":0,"1584":0,"1585":1,"1586":0,"1587":1,"1588":0,"1589":1,"1590":0,"1591":1,"1592":0,"1593":1,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1600":1,"1601":0,"1602":0,"1603":0,"1604":1,"1605":1,"1606":1,"1607":0,"1608":1,"1609":1,"1610":1,"1611":0,"1612":0,"1613":0,"1614":1,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1623":1,"1624":0,"1625":1,"1626":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":1,"1632":0,"1633":0,"1634":0,"1635":1,"1636":0,"1637":0,"1638":1,"1639":0,"1640":1,"1641":1,"1642":1,"1643":0,"1644":0,"1645":0,"1646":0,"1647":1,"1648":0,"1649":0,"1650":0,"1651":0,"1652":0,"1653":0,"1654":0,"1655":0,"1656":0,"1657":0,"1658":0,"1659":0,"1660":1,"1661":0,"1662":1,"1663":0,"1664":0,"1665":1,"1666":0,"1667":0,"1668":0,"1669":0,"1670":0,"1671":0,"1672":1,"1673":0,"1674":0,"1675":0,"1676":0,"1677":0,"1678":0,"1679":0,"1680":0,"1681":0,"1682":1,"1683":0,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1689":1,"1690":0,"1691":0,"1692":0,"1693":0,"1694":0,"1695":0,"1696":0,"1697":0,"1698":0,"1699":1,"1700":0,"1701":1,"1702":0,"1703":1,"1704":0,"1705":0,"1706":0,"1707":0,"1708":0,"1709":0,"1710":0,"1711":0,"1712":0,"1713":0,"1714":1,"1715":0,"1716":0,"1717":0,"1718":0,"1719":1,"1720":0,"1721":0,"1722":0,"1723":0,"1724":0,"1725":0,"1726":0,"1727":0,"1728":0,"1729":0,"1730":0,"1731":0,"1732":0,"1733":1,"1734":0,"1735":0,"1736":0,"1737":0,"1738":0,"1739":1,"1740":0,"1741":0,"1742":0,"1743":0,"1744":0,"1745":0,"1746":1,"1747":0,"1748":0,"1749":0,"1750":0,"1751":0,"1752":1,"1753":1,"1754":1,"1755":0,"1756":0,"1757":0,"1758":0,"1759":0,"1760":0,"1761":0,"1762":0,"1763":0,"1764":0,"1765":0,"1766":1,"1767":0,"1768":0,"1769":0,"1770":0,"1771":0,"1772":0,"1773":1,"1774":0,"1775":0,"1776":0,"1777":0,"1778":0,"1779":0,"1780":0,"1781":0,"1782":1,"1783":0,"1784":0,"1785":0,"1786":0,"1787":1,"1788":0,"1789":1,"1790":0,"1791":0,"1792":0,"1793":0,"1794":0,"1795":0,"1796":0,"1797":0,"1798":0,"1799":0,"1800":0,"1801":0,"1802":0,"1803":0,"1804":0,"1805":0,"1806":0,"1807":0,"1808":0,"1809":0,"1810":0,"1811":0,"1812":0,"1813":0,"1814":0,"1815":0,"1816":0,"1817":0,"1818":1,"1819":0,"1820":1,"1821":0,"1822":1,"1823":1,"1824":1,"1825":0,"1826":0,"1827":0,"1828":0,"1829":0,"1830":0,"1831":0,"1832":0,"1833":0,"1834":0,"1835":0,"1836":1,"1837":0,"1838":0,"1839":0,"1840":0,"1841":0,"1842":0,"1843":0,"1844":0,"1845":0,"1846":1,"1847":0,"1848":0,"1849":0,"1850":0,"1851":1,"1852":0,"1853":1,"1854":1,"1855":1,"1856":0,"1857":1,"1858":29,"1859":0,"1860":29,"1861":29,"1862":1,"1863":1,"1864":1,"1865":1,"1866":0,"1867":1,"1868":0,"1869":0,"1870":0,"1871":0,"1872":0,"1873":0,"1874":0,"1875":1,"1876":0,"1877":0,"1878":0,"1879":0,"1880":1,"1881":0,"1882":0,"1883":0,"1884":0,"1885":0,"1886":0,"1887":0,"1888":0,"1889":0,"1890":1,"1891":0,"1892":0,"1893":1,"1894":0,"1895":0,"1896":0,"1897":0,"1898":0,"1899":0,"1900":0,"1901":1,"1902":0,"1903":1,"1904":0,"1905":1,"1906":0,"1907":1,"1908":0,"1909":1,"1910":0,"1911":1,"1912":0,"1913":1,"1914":0,"1915":1,"1916":0,"1917":1,"1918":0,"1919":0,"1920":0,"1921":0,"1922":0,"1923":1,"1924":0,"1925":0,"1926":0,"1927":1,"1928":0,"1929":1,"1930":0,"1931":1,"1932":230,"1933":1,"1934":272,"1935":272,"1936":1,"1937":0,"1938":0,"1939":1,"1940":0,"1941":1,"1942":6,"1943":0,"1944":6,"1945":6,"1946":0,"1947":1,"1948":0,"1949":1,"1950":0,"1951":1,"1952":0,"1953":0,"1954":0,"1955":0,"1956":0,"1957":0,"1958":0,"1959":1,"1960":0,"1961":1,"1962":5,"1963":1,"1964":0,"1965":1,"1966":41,"1967":1,"1968":0,"1969":1,"1970":0,"1971":1,"1972":0,"1973":0,"1974":0,"1975":0,"1976":0,"1977":0,"1978":1,"1979":0,"1980":1,"1981":1,"1982":1,"1983":1,"1984":0,"1985":0,"1986":0,"1987":0,"1988":1,"1989":1,"1990":1,"1991":1,"1992":1,"1993":1,"1994":1,"1995":1,"1996":1,"1997":0,"1998":1,"1999":0,"2000":0,"2001":1,"2002":0,"2003":0,"2004":0,"2005":0,"2006":0,"2007":0,"2008":0,"2009":0,"2010":0,"2011":0,"2012":0,"2013":1,"2014":0,"2015":0,"2016":0,"2017":0,"2018":0,"2019":0,"2020":0,"2021":0,"2022":0,"2023":0,"2024":0,"2025":1,"2026":8,"2027":8,"2028":2,"2029":6,"2030":1,"2031":2,"2032":0,"2033":2,"2034":0,"2035":2,"2036":2,"2037":2,"2038":2,"2039":0,"2040":2,"2041":449,"2042":447,"2043":2,"2044":1,"2045":1,"2046":1,"2047":0,"2048":0,"2049":0,"2050":0,"2051":0,"2052":0,"2053":0,"2054":0,"2055":1,"2056":0,"2057":0,"2058":0,"2059":0,"2060":0,"2061":0,"2062":1,"2063":0,"2064":0,"2065":0,"2066":1,"2067":0,"2068":0,"2069":0,"2070":0,"2071":0,"2072":0,"2073":0,"2074":0,"2075":1,"2076":0,"2077":0,"2078":0,"2079":0,"2080":0,"2081":0,"2082":0,"2083":0,"2084":0,"2085":0,"2086":0,"2087":0,"2088":0,"2089":0,"2090":1,"2091":0,"2092":0,"2093":0,"2094":0,"2095":0,"2096":0,"2097":0,"2098":0,"2099":0,"2100":0,"2101":0,"2102":0,"2103":1,"2104":0,"2105":1,"2106":0,"2107":1,"2108":0,"2109":0,"2110":0,"2111":0,"2112":0,"2113":0,"2114":1,"2115":0,"2116":0,"2117":0,"2118":0,"2119":0,"2120":0,"2121":0,"2122":0,"2123":0,"2124":0,"2125":0,"2126":0,"2127":0,"2128":0,"2129":0,"2130":0,"2131":0,"2132":0,"2133":0,"2134":0,"2135":0,"2136":0,"2137":1,"2138":0,"2139":0,"2140":1,"2141":0,"2142":0,"2143":1,"2144":0,"2145":0,"2146":1,"2147":0,"2148":0,"2149":0,"2150":0,"2151":0,"2152":0,"2153":1,"2154":0,"2155":0,"2156":1,"2157":0,"2158":0,"2159":1,"2160":0,"2161":1,"2162":0,"2163":0,"2164":0,"2165":0,"2166":0,"2167":0,"2168":0,"2169":0,"2170":1,"2171":1,"2172":1,"2173":0,"2174":0,"2175":0,"2176":0,"2177":0,"2178":0,"2179":1,"2180":0,"2181":0,"2182":0,"2183":0,"2184":0,"2185":0,"2186":0,"2187":0,"2188":0,"2189":0,"2190":0,"2191":1,"2192":0,"2193":1,"2194":0,"2195":1,"2196":0,"2197":0,"2198":0,"2199":1,"2200":0,"2201":0,"2202":0,"2203":0,"2204":0,"2205":0,"2206":0,"2207":0,"2208":0,"2209":0,"2210":0,"2211":0,"2212":0,"2213":0,"2214":0,"2215":0,"2216":0,"2217":0,"2218":0,"2219":0,"2220":0,"2221":0,"2222":0,"2223":0,"2224":0,"2225":0,"2226":0,"2227":0,"2228":0,"2229":0,"2230":0,"2231":0,"2232":0,"2233":0,"2234":1,"2235":0,"2236":0,"2237":0,"2238":0,"2239":0,"2240":0,"2241":0,"2242":0,"2243":1,"2244":0,"2245":0,"2246":0,"2247":0,"2248":0,"2249":0,"2250":0,"2251":1,"2252":0,"2253":0,"2254":0,"2255":0,"2256":0,"2257":0,"2258":0,"2259":1,"2260":0,"2261":0,"2262":0,"2263":0,"2264":0,"2265":0,"2266":0,"2267":0,"2268":0,"2269":0,"2270":0,"2271":0,"2272":0,"2273":0,"2274":0,"2275":0,"2276":0,"2277":0,"2278":0,"2279":0,"2280":0,"2281":0,"2282":0,"2283":0,"2284":0,"2285":0,"2286":0,"2287":0,"2288":0,"2289":0,"2290":0,"2291":0,"2292":1,"2293":0,"2294":0,"2295":1,"2296":0,"2297":0,"2298":0,"2299":0,"2300":1,"2301":0,"2302":0,"2303":0,"2304":1,"2305":0,"2306":0,"2307":0,"2308":1,"2309":0,"2310":0,"2311":1,"2312":0,"2313":1,"2314":0,"2315":1,"2316":0,"2317":1,"2318":0,"2319":0,"2320":1,"2321":0,"2322":0,"2323":1,"2324":2,"2325":1,"2326":1,"2327":0,"2328":0,"2329":0,"2330":0,"2331":2,"2332":1,"2333":2,"2334":2,"2335":1,"2336":1,"2337":0,"2338":2,"2339":218,"2340":218,"2341":218,"2342":218,"2343":218,"2344":0,"2345":0,"2346":0,"2347":0,"2348":0,"2349":0,"2350":0,"2351":2,"2352":1,"2353":0,"2354":0,"2355":1,"2356":1,"2357":0,"2358":1,"2359":0,"2360":0,"2361":1,"2362":0,"2363":0,"2364":0,"2365":0,"2366":0,"2367":0,"2368":0,"2369":0,"2370":0,"2371":0,"2372":0,"2373":0,"2374":0,"2375":1,"2376":0,"2377":0,"2378":0,"2379":0,"2380":0,"2381":0,"2382":0,"2383":0,"2384":0,"2385":0,"2386":1,"2387":0,"2388":0,"2389":1,"2390":0,"2391":1,"2392":1,"2393":1,"2394":1,"2395":1,"2396":1,"2397":0,"2398":0,"2399":0,"2400":0,"2401":1,"2402":1,"2403":1,"2404":1,"2405":1,"2406":1,"2407":1,"2408":1,"2409":1,"2410":1,"2411":1,"2412":1,"2413":1,"2414":1,"2415":1,"2416":1,"2417":1,"2418":1,"2419":1,"2420":1,"2421":1,"2422":1,"2423":1,"2424":1,"2425":1,"2426":1,"2427":1,"2428":1,"2429":1,"2430":1,"2431":1,"2432":1,"2433":1,"2434":1,"2435":1,"2436":1,"2437":1,"2438":1,"2439":1,"2440":1,"2441":1,"2442":1,"2443":1,"2444":1,"2445":1,"2446":1,"2447":1,"2448":1,"2449":1,"2450":1,"2451":1,"2452":1,"2453":1,"2454":1,"2455":1,"2456":1,"2457":1,"2458":1,"2459":1,"2460":1,"2461":1,"2462":1,"2463":1,"2464":1,"2465":1,"2466":1,"2467":1,"2468":1,"2469":1,"2470":1,"2471":1,"2472":1,"2473":1,"2474":1,"2475":1,"2476":1,"2477":1,"2478":1,"2479":1,"2480":1,"2481":1,"2482":1,"2483":1,"2484":1,"2485":1,"2486":1,"2487":1,"2488":1,"2489":1,"2490":1,"2491":1,"2492":1,"2493":1,"2494":1,"2495":1,"2496":1,"2497":1,"2498":1,"2499":1,"2500":1,"2501":1,"2502":1,"2503":1,"2504":1,"2505":1,"2506":1,"2507":1,"2508":1,"2509":1,"2510":1,"2511":1,"2512":1,"2513":1,"2514":1,"2515":1,"2516":1,"2517":1,"2518":1,"2519":1,"2520":1,"2521":1,"2522":1,"2523":1,"2524":1,"2525":1,"2526":1,"2527":1,"2528":1,"2529":1,"2530":1,"2531":1,"2532":1,"2533":1,"2534":1,"2535":1,"2536":1,"2537":1,"2538":1,"2539":1,"2540":1,"2541":1,"2542":1,"2543":1,"2544":1,"2545":1,"2546":1,"2547":1,"2548":1,"2549":1,"2550":1,"2551":1,"2552":1,"2553":1,"2554":1,"2555":1,"2556":1,"2557":1,"2558":1,"2559":1,"2560":1,"2561":1,"2562":1,"2563":1,"2564":1,"2565":1,"2566":1,"2567":1,"2568":1,"2569":1,"2570":1,"2571":1,"2572":1,"2573":1,"2574":1,"2575":1,"2576":1,"2577":1,"2578":1,"2579":1,"2580":1,"2581":1,"2582":1,"2583":1,"2584":1,"2585":1,"2586":1,"2587":1,"2588":1,"2589":1,"2590":1,"2591":1,"2592":1,"2593":1,"2594":1,"2595":1,"2596":1,"2597":1,"2598":1,"2599":1,"2600":1,"2601":1,"2602":1,"2603":1,"2604":1,"2605":1,"2606":1,"2607":1,"2608":1,"2609":1,"2610":1,"2611":1,"2612":1,"2613":1,"2614":1,"2615":1,"2616":1,"2617":1,"2618":1,"2619":1,"2620":1,"2621":1,"2622":1,"2623":1,"2624":1,"2625":1,"2626":1,"2627":1,"2628":1,"2629":1,"2630":1,"2631":1,"2632":1,"2633":1,"2634":220,"2635":99,"2636":1,"2637":1,"2638":1,"2639":0,"2640":0,"2641":0,"2642":0,"2643":1,"2644":1,"2645":6,"2646":1,"2647":2,"2648":0,"2649":0,"2650":0,"2651":0,"2652":0,"2653":0,"2654":0,"2655":0,"2656":0,"2657":2,"2658":0,"2659":1,"2660":3,"2661":3,"2662":0,"2663":0,"2664":0,"2665":0,"2666":1,"2667":2,"2668":2,"2669":0,"2670":1,"2671":2,"2672":2,"2673":0,"2674":1,"2675":2,"2676":2,"2677":0,"2678":1,"2679":0,"2680":1,"2681":0,"2682":0,"2683":0,"2684":1,"2685":0,"2686":0,"2687":0,"2688":0,"2689":0,"2690":0,"2691":0,"2692":0,"2693":0,"2694":0,"2695":0,"2696":0,"2697":1,"2698":0,"2699":1,"2700":0,"2701":1,"2702":18,"2703":18,"2704":0,"2705":18,"2706":0,"2707":0,"2708":0,"2709":0,"2710":0,"2711":0,"2712":0,"2713":0,"2714":0,"2715":0,"2716":0,"2717":0,"2718":0,"2719":0,"2720":0,"2721":0,"2722":0,"2723":0,"2724":1,"2725":9,"2726":9,"2727":0,"2728":0,"2729":0,"2730":0,"2731":0,"2732":1,"2733":18,"2734":18,"2735":18,"2736":18,"2737":1,"2738":1,"2739":1,"2740":1,"2741":1,"2742":1,"2743":1,"2744":1,"2745":1,"2746":1,"2747":1,"2748":1,"2749":1,"2750":1,"2751":1,"2752":1,"2753":1,"2754":1,"2755":0,"2756":0,"2757":0,"2758":1,"2759":1,"2760":1,"2761":0,"2762":0},"b":{"1":[1,1,1,1],"2":[1,1,1,1],"3":[1,1,1,1,1,1],"4":[1,0,0,0],"5":[1,0,0,0],"6":[1,1,1],"7":[1,0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0,0,0,0,0],"12":[0,0],"13":[0,0,0,0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,1],"42":[1,1],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0,0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,79],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0,0],"87":[0,0],"88":[0,1],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[1,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0,0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[2,0],"117":[2,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0,0,0,0],"145":[0,0],"146":[0,0],"147":[218,4],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0,0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0,0,0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,6],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,1],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0,0,0],"278":[0,0],"279":[0,0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,4],"284":[4,0],"285":[0,0,0,0],"286":[0,0],"287":[0,0],"288":[0,1],"289":[0,1],"290":[0,1],"291":[0,1],"292":[0,1],"293":[0,1],"294":[0,1],"295":[0,1],"296":[1,0],"297":[0,0],"298":[1,0],"299":[2,2],"300":[2,2],"301":[0,2],"302":[0,2],"303":[0,0],"304":[0,5],"305":[0,278],"306":[0,273],"307":[0,0],"308":[0,0,0],"309":[0,0],"310":[0,0],"311":[0,0,0,0,0,0,0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0,0],"331":[0,0],"332":[0,0],"333":[0,0],"334":[0,0,0,0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0,0,0],"339":[0,0],"340":[9,4],"341":[13,13,13],"342":[0,0],"343":[0,0],"344":[0,0],"345":[0,0],"346":[0,0],"347":[0,0],"348":[0,0],"349":[0,0],"350":[0,0],"351":[0,0,0],"352":[1,0],"353":[0,0],"354":[0,0],"355":[0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0],"363":[0,0],"364":[0,0],"365":[0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0],"371":[0,0],"372":[0,0],"373":[0,0,0],"374":[0,0],"375":[0,0],"376":[0,0],"377":[0,0],"378":[0,0],"379":[0,0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0],"385":[0,0],"386":[0,0],"387":[0,0],"388":[0,0],"389":[0,0],"390":[0,0],"391":[0,0],"392":[0,0],"393":[0,0],"394":[0,0],"395":[0,0],"396":[0,0],"397":[0,0],"398":[0,0],"399":[0,0,0],"400":[0,0],"401":[0,0],"402":[0,0],"403":[0,0],"404":[0,0],"405":[0,0],"406":[0,0],"407":[0,0],"408":[0,0],"409":[0,0],"410":[0,0],"411":[0,0],"412":[0,0],"413":[0,0],"414":[0,0,0,0,0,0],"415":[0,0],"416":[0,0],"417":[0,0],"418":[0,0],"419":[0,0],"420":[0,0],"421":[0,0],"422":[0,0],"423":[0,0],"424":[0,0],"425":[0,0],"426":[0,0],"427":[0,0],"428":[0,0],"429":[0,0,0,0],"430":[0,0,0,0],"431":[0,0],"432":[0,0],"433":[0,0],"434":[0,1],"435":[0,0],"436":[0,0],"437":[0,0],"438":[0,0],"439":[0,0],"440":[0,0],"441":[0,6],"442":[6,0],"443":[0,0,0,0],"444":[0,0],"445":[0,0,0],"446":[0,0],"447":[0,0],"448":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"449":[0,0],"450":[0,0],"451":[0,0],"452":[0,0],"453":[0,0],"454":[0,0],"455":[4,4],"456":[0,0],"457":[0,0],"458":[0,0],"459":[0,0,0],"460":[0,0],"461":[0,0],"462":[0,0],"463":[0,0],"464":[0,0],"465":[0,0],"466":[0,0],"467":[0,0,0],"468":[0,0],"469":[0,0,0],"470":[0,0],"471":[0,0],"472":[0,0],"473":[8,2,2,2],"474":[0,0],"475":[0,0,0,0,0,0,0],"476":[0,0],"477":[0,0],"478":[0,0],"479":[0,0],"480":[0,0],"481":[0,0],"482":[0,0],"483":[0,0],"484":[0,0],"485":[0,0],"486":[0,0],"487":[0,0],"488":[0,0],"489":[0,0],"490":[0,0],"491":[0,0],"492":[0,0],"493":[0,0],"494":[0,0],"495":[0,0],"496":[2,2],"497":[2,0,0,0],"498":[36,411],"499":[447,0,447],"500":[0,0],"501":[0,0],"502":[0,0],"503":[5,2],"504":[0,0],"505":[0,0],"506":[0,0],"507":[0,0],"508":[0,0],"509":[0,0],"510":[0,0],"511":[0,0],"512":[0,0],"513":[0,0],"514":[0,0],"515":[0,0],"516":[0,0],"517":[0,0],"518":[0,0],"519":[0,0],"520":[0,0],"521":[0,0],"522":[0,0],"523":[0,0],"524":[0,0],"525":[0,0],"526":[0,0],"527":[0,0],"528":[0,0],"529":[0,0],"530":[0,0],"531":[0,0],"532":[0,0],"533":[0,0],"534":[0,0,0],"535":[0,0],"536":[0,0],"537":[0,0],"538":[0,0],"539":[0,0],"540":[0,0],"541":[0,0],"542":[0,0],"543":[0,0],"544":[0,0],"545":[0,0],"546":[0,0],"547":[0,0],"548":[0,0],"549":[0,0],"550":[0,0],"551":[0,0],"552":[0,0],"553":[0,0],"554":[0,0],"555":[0,0],"556":[0,0],"557":[0,0],"558":[0,0],"559":[0,0],"560":[0,0],"561":[0,0],"562":[0,0],"563":[0,0],"564":[0,0],"565":[0,0],"566":[0,0],"567":[0,0],"568":[0,0],"569":[0,0],"570":[0,0],"571":[0,0],"572":[0,0],"573":[0,0],"574":[0,0],"575":[0,0],"576":[0,0],"577":[0,0],"578":[0,0],"579":[0,0],"580":[0,0],"581":[0,0,0],"582":[0,0],"583":[0,0],"584":[0,0],"585":[0,0],"586":[0,0],"587":[0,0],"588":[0,0],"589":[0,0],"590":[0,0],"591":[0,0],"592":[0,0],"593":[0,0],"594":[0,0],"595":[0,0],"596":[0,0],"597":[0,0],"598":[0,0],"599":[0,0],"600":[0,0],"601":[0,0],"602":[0,0],"603":[0,0],"604":[0,0],"605":[0,0],"606":[0,0],"607":[0,0],"608":[0,0],"609":[0,0],"610":[0,0],"611":[0,0],"612":[0,0],"613":[0,0],"614":[0,0],"615":[0,0],"616":[0,0],"617":[0,0],"618":[0,0,0],"619":[0,0],"620":[0,0],"621":[0,0],"622":[0,0],"623":[0,0],"624":[0,0],"625":[0,0],"626":[0,0],"627":[0,0],"628":[0,0],"629":[0,0],"630":[0,0],"631":[0,0],"632":[0,0],"633":[0,0],"634":[0,0],"635":[0,0],"636":[0,0],"637":[0,0],"638":[0,0],"639":[0,0],"640":[0,0],"641":[0,0],"642":[0,0],"643":[0,0],"644":[0,0,0],"645":[0,0],"646":[0,0],"647":[0,0],"648":[0,0,0],"649":[0,0],"650":[0,0],"651":[0,0],"652":[0,0],"653":[0,0],"654":[0,0],"655":[0,0],"656":[0,0],"657":[0,0],"658":[0,0],"659":[0,0],"660":[0,0],"661":[0,0],"662":[0,0],"663":[0,0],"664":[0,0],"665":[0,0],"666":[0,0],"667":[0,0],"668":[0,0],"669":[0,0],"670":[0,0],"671":[0,0],"672":[0,0],"673":[0,0],"674":[0,0],"675":[0,0],"676":[0,0],"677":[0,0],"678":[0,0],"679":[0,0],"680":[0,0],"681":[0,0],"682":[0,0],"683":[0,0],"684":[1,0],"685":[0,0],"686":[0,0],"687":[0,0],"688":[0,0],"689":[0,0],"690":[0,0],"691":[0,0],"692":[0,0],"693":[0,0],"694":[0,0],"695":[0,0],"696":[0,0],"697":[0,0],"698":[0,0],"699":[0,0],"700":[0,0],"701":[0,0],"702":[0,0],"703":[0,0],"704":[0,0],"705":[0,0],"706":[0,0],"707":[0,0],"708":[0,0],"709":[0,0],"710":[0,0],"711":[0,0],"712":[0,0],"713":[0,0],"714":[0,0],"715":[0,0],"716":[0,0],"717":[0,0,0],"718":[0,0],"719":[0,0],"720":[0,0],"721":[0,0],"722":[0,0],"723":[0,0],"724":[0,0],"725":[0,0],"726":[0,0],"727":[0,0],"728":[0,0],"729":[0,0],"730":[0,0],"731":[0,0],"732":[0,0,0],"733":[0,0],"734":[0,0,0],"735":[0,0],"736":[0,0],"737":[0,0],"738":[0,0],"739":[0,0],"740":[0,29],"741":[29,0],"742":[0,0],"743":[0,1,0],"744":[0,0],"745":[0,0],"746":[0,0],"747":[0,0],"748":[0,0],"749":[0,0],"750":[0,0],"751":[0,0],"752":[0,0,0],"753":[0,0],"754":[0,0],"755":[0,0],"756":[0,0,0,0],"757":[1,0],"758":[0,0,0],"759":[0,0,0,0],"760":[0,0],"761":[0,0,0,0],"762":[0,0],"763":[0,0],"764":[0,0,0,0,0,0],"765":[0,0],"766":[0,0],"767":[0,0],"768":[0,0,0],"769":[0,0],"770":[230,230],"771":[272,268,246],"772":[0,0],"773":[0,0],"774":[0,6],"775":[6,0],"776":[0,0],"777":[0,0,0],"778":[0,0],"779":[0,0,0],"780":[0,0,0],"781":[0,0],"782":[0,0],"783":[0,0],"784":[5,0,0],"785":[0,0,0],"786":[0,0],"787":[0,0],"788":[0,0],"789":[0,1],"790":[0,0],"791":[0,0],"792":[0,0],"793":[0,0],"794":[0,0],"795":[0,0],"796":[0,0],"797":[0,0],"798":[0,0],"799":[0,0],"800":[0,0,0,0,0],"801":[0,0],"802":[0,0],"803":[0,0],"804":[0,0],"805":[0,1],"806":[0,8],"807":[2,6],"808":[8,8,6,4],"809":[6,0],"810":[0,2],"811":[0,2],"812":[2,0,0,0,0,2],"813":[2,2],"814":[447,2],"815":[449,449],"816":[449,0],"817":[449,2,0],"818":[0,0],"819":[0,0],"820":[0,0],"821":[0,0],"822":[0,0],"823":[0,0],"824":[0,0],"825":[0,0],"826":[0,0],"827":[0,0],"828":[0,0],"829":[0,0],"830":[0,0],"831":[0,0],"832":[0,0],"833":[0,0],"834":[0,0],"835":[0,0],"836":[0,0],"837":[0,0],"838":[0,0],"839":[0,0],"840":[0,0],"841":[0,0],"842":[0,0],"843":[0,0],"844":[0,0],"845":[0,0],"846":[0,0],"847":[0,0],"848":[0,0],"849":[0,0],"850":[0,0],"851":[0,0],"852":[0,0],"853":[0,0],"854":[0,0],"855":[0,0],"856":[0,0],"857":[0,0],"858":[0,0],"859":[0,0],"860":[0,0],"861":[0,0],"862":[0,0,0],"863":[0,0],"864":[0,0],"865":[0,0],"866":[0,0],"867":[0,0],"868":[0,0],"869":[0,0],"870":[0,0],"871":[0,0],"872":[0,0],"873":[0,0],"874":[0,0],"875":[0,0],"876":[0,0],"877":[0,0],"878":[0,0],"879":[0,0],"880":[0,0],"881":[0,0],"882":[0,0],"883":[0,0],"884":[0,0,0],"885":[0,0],"886":[0,0],"887":[0,0],"888":[0,0],"889":[0,0],"890":[0,0],"891":[0,0],"892":[0,0],"893":[0,0],"894":[0,0],"895":[0,0],"896":[0,0],"897":[0,0],"898":[0,0],"899":[0,0],"900":[0,0],"901":[0,0],"902":[0,0],"903":[0,0],"904":[0,0],"905":[0,0],"906":[0,0],"907":[0,0],"908":[0,0],"909":[0,0],"910":[0,0],"911":[0,0],"912":[0,0],"913":[0,0],"914":[0,0],"915":[0,0],"916":[0,0],"917":[0,0],"918":[0,0],"919":[0,0],"920":[0,0],"921":[0,0],"922":[0,0],"923":[0,0],"924":[0,0],"925":[0,0],"926":[0,0],"927":[0,0],"928":[0,0],"929":[0,0],"930":[0,0],"931":[0,0],"932":[0,0],"933":[0,0],"934":[0,0],"935":[0,0],"936":[0,0],"937":[0,0],"938":[0,0],"939":[0,0],"940":[0,0],"941":[0,0],"942":[0,0],"943":[0,0],"944":[0,0],"945":[0,0],"946":[0,0],"947":[0,0],"948":[1,1],"949":[1,0],"950":[1,0],"951":[1,1],"952":[0,1],"953":[1,0],"954":[1,1],"955":[1,1],"956":[0,1],"957":[1,0],"958":[218,0],"959":[0,0],"960":[0,0],"961":[0,0],"962":[0,0],"963":[0,0],"964":[0,0],"965":[0,0],"966":[0,0],"967":[0,0],"968":[0,0],"969":[0,0],"970":[0,0],"971":[0,0],"972":[0,0],"973":[0,0],"974":[0,0],"975":[0,0],"976":[0,0],"977":[0,0],"978":[0,0],"979":[99,121],"980":[0,0],"981":[0,0],"982":[0,0],"983":[0,0],"984":[0,0],"985":[0,0],"986":[0,0],"987":[0,0],"988":[0,0],"989":[1,1],"990":[1,1],"991":[0,0],"992":[1,1],"993":[1,1],"994":[0,0],"995":[0,0],"996":[0,0],"997":[0,0,0],"998":[0,0],"999":[0,0],"1000":[0,0],"1001":[0,0],"1002":[0,0],"1003":[2,16],"1004":[1,1],"1005":[0,18],"1006":[0,0],"1007":[0,0],"1008":[0,0],"1009":[0,0,0,0],"1010":[0,0],"1011":[0,0],"1012":[0,0],"1013":[0,0],"1014":[0,0],"1015":[0,0],"1016":[0,0],"1017":[0,0],"1018":[0,0],"1019":[2,7],"1020":[3,6],"1021":[0,0],"1022":[0,0],"1023":[18,0],"1024":[18,18],"1025":[0,1],"1026":[1,0,0],"1027":[1,0],"1028":[1,1],"1029":[1,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":16,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1,"59":0,"60":0,"61":0,"62":1,"63":2,"64":2,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":5,"80":0,"81":2,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":6,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":4,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":4,"132":0,"133":0,"134":2,"135":1,"136":2,"137":4,"138":2,"139":5,"140":0,"141":0,"142":0,"143":4,"144":0,"145":0,"146":0,"147":2,"148":0,"149":2,"150":0,"151":2,"152":0,"153":2,"154":0,"155":2,"156":0,"157":2,"158":0,"159":2,"160":0,"161":0,"162":2,"163":13,"164":2,"165":0,"166":2,"167":0,"168":2,"169":0,"170":0,"171":2,"172":0,"173":2,"174":0,"175":2,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":3,"183":0,"184":2,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":6,"197":0,"198":0,"199":0,"200":0,"201":0,"202":4,"203":0,"204":0,"205":0,"206":0,"207":8,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":1,"216":0,"217":2,"218":0,"219":7,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":29,"321":1,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":230,"340":272,"341":0,"342":0,"343":6,"344":0,"345":0,"346":0,"347":0,"348":0,"349":5,"350":0,"351":41,"352":0,"353":0,"354":0,"355":0,"356":1,"357":0,"358":0,"359":0,"360":0,"361":0,"362":8,"363":2,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":2,"410":218,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":1,"423":220,"424":0,"425":0,"426":6,"427":2,"428":0,"429":0,"430":3,"431":0,"432":2,"433":0,"434":2,"435":0,"436":2,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":18,"445":0,"446":0,"447":9,"448":0,"449":0,"450":18,"451":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":13}}},"2":{"name":"(anonymous_2)","line":135,"loc":{"start":{"line":135,"column":17},"end":{"line":135,"column":28}}},"3":{"name":"baseCompareAscending","line":287,"loc":{"start":{"line":287,"column":2},"end":{"line":287,"column":46}}},"4":{"name":"baseFindIndex","line":321,"loc":{"start":{"line":321,"column":2},"end":{"line":321,"column":54}}},"5":{"name":"baseIndexOf","line":342,"loc":{"start":{"line":342,"column":2},"end":{"line":342,"column":48}}},"6":{"name":"baseIsFunction","line":365,"loc":{"start":{"line":365,"column":2},"end":{"line":365,"column":33}}},"7":{"name":"baseToString","line":379,"loc":{"start":{"line":379,"column":2},"end":{"line":379,"column":31}}},"8":{"name":"charsLeftIndex","line":392,"loc":{"start":{"line":392,"column":2},"end":{"line":392,"column":41}}},"9":{"name":"charsRightIndex","line":409,"loc":{"start":{"line":409,"column":2},"end":{"line":409,"column":42}}},"10":{"name":"compareAscending","line":425,"loc":{"start":{"line":425,"column":2},"end":{"line":425,"column":43}}},"11":{"name":"compareMultiple","line":443,"loc":{"start":{"line":443,"column":2},"end":{"line":443,"column":50}}},"12":{"name":"deburrLetter","line":477,"loc":{"start":{"line":477,"column":2},"end":{"line":477,"column":32}}},"13":{"name":"escapeHtmlChar","line":488,"loc":{"start":{"line":488,"column":2},"end":{"line":488,"column":31}}},"14":{"name":"escapeRegExpChar","line":501,"loc":{"start":{"line":501,"column":2},"end":{"line":501,"column":62}}},"15":{"name":"escapeStringChar","line":517,"loc":{"start":{"line":517,"column":2},"end":{"line":517,"column":33}}},"16":{"name":"indexOfNaN","line":530,"loc":{"start":{"line":530,"column":2},"end":{"line":530,"column":51}}},"17":{"name":"isObjectLike","line":550,"loc":{"start":{"line":550,"column":2},"end":{"line":550,"column":31}}},"18":{"name":"isSpace","line":562,"loc":{"start":{"line":562,"column":2},"end":{"line":562,"column":29}}},"19":{"name":"replaceHolders","line":576,"loc":{"start":{"line":576,"column":2},"end":{"line":576,"column":46}}},"20":{"name":"sortedUniq","line":600,"loc":{"start":{"line":600,"column":2},"end":{"line":600,"column":39}}},"21":{"name":"trimmedLeftIndex","line":627,"loc":{"start":{"line":627,"column":2},"end":{"line":627,"column":36}}},"22":{"name":"trimmedRightIndex","line":643,"loc":{"start":{"line":643,"column":2},"end":{"line":643,"column":37}}},"23":{"name":"unescapeHtmlChar","line":657,"loc":{"start":{"line":657,"column":2},"end":{"line":657,"column":33}}},"24":{"name":"runInContext","line":698,"loc":{"start":{"line":698,"column":2},"end":{"line":698,"column":33}}},"25":{"name":"lodash","line":890,"loc":{"start":{"line":890,"column":4},"end":{"line":890,"column":27}}},"26":{"name":"baseLodash","line":907,"loc":{"start":{"line":907,"column":4},"end":{"line":907,"column":26}}},"27":{"name":"LodashWrapper","line":919,"loc":{"start":{"line":919,"column":4},"end":{"line":919,"column":53}}},"28":{"name":"LazyWrapper","line":1003,"loc":{"start":{"line":1003,"column":4},"end":{"line":1003,"column":32}}},"29":{"name":"lazyClone","line":1021,"loc":{"start":{"line":1021,"column":4},"end":{"line":1021,"column":25}}},"30":{"name":"lazyReverse","line":1040,"loc":{"start":{"line":1040,"column":4},"end":{"line":1040,"column":27}}},"31":{"name":"lazyValue","line":1060,"loc":{"start":{"line":1060,"column":4},"end":{"line":1060,"column":25}}},"32":{"name":"MapCache","line":1119,"loc":{"start":{"line":1119,"column":4},"end":{"line":1119,"column":24}}},"33":{"name":"mapDelete","line":1132,"loc":{"start":{"line":1132,"column":4},"end":{"line":1132,"column":28}}},"34":{"name":"mapGet","line":1145,"loc":{"start":{"line":1145,"column":4},"end":{"line":1145,"column":25}}},"35":{"name":"mapHas","line":1158,"loc":{"start":{"line":1158,"column":4},"end":{"line":1158,"column":25}}},"36":{"name":"mapSet","line":1172,"loc":{"start":{"line":1172,"column":4},"end":{"line":1172,"column":32}}},"37":{"name":"SetCache","line":1188,"loc":{"start":{"line":1188,"column":4},"end":{"line":1188,"column":30}}},"38":{"name":"cacheIndexOf","line":1206,"loc":{"start":{"line":1206,"column":4},"end":{"line":1206,"column":40}}},"39":{"name":"cachePush","line":1221,"loc":{"start":{"line":1221,"column":4},"end":{"line":1221,"column":30}}},"40":{"name":"arrayConcat","line":1240,"loc":{"start":{"line":1240,"column":4},"end":{"line":1240,"column":39}}},"41":{"name":"arrayCopy","line":1264,"loc":{"start":{"line":1264,"column":4},"end":{"line":1264,"column":38}}},"42":{"name":"arrayEach","line":1284,"loc":{"start":{"line":1284,"column":4},"end":{"line":1284,"column":40}}},"43":{"name":"arrayEachRight","line":1305,"loc":{"start":{"line":1305,"column":4},"end":{"line":1305,"column":45}}},"44":{"name":"arrayEvery","line":1326,"loc":{"start":{"line":1326,"column":4},"end":{"line":1326,"column":42}}},"45":{"name":"arrayExtremum","line":1349,"loc":{"start":{"line":1349,"column":4},"end":{"line":1349,"column":65}}},"46":{"name":"arrayFilter","line":1376,"loc":{"start":{"line":1376,"column":4},"end":{"line":1376,"column":43}}},"47":{"name":"arrayMap","line":1400,"loc":{"start":{"line":1400,"column":4},"end":{"line":1400,"column":39}}},"48":{"name":"arrayPush","line":1419,"loc":{"start":{"line":1419,"column":4},"end":{"line":1419,"column":38}}},"49":{"name":"arrayReduce","line":1442,"loc":{"start":{"line":1442,"column":4},"end":{"line":1442,"column":70}}},"50":{"name":"arrayReduceRight","line":1467,"loc":{"start":{"line":1467,"column":4},"end":{"line":1467,"column":75}}},"51":{"name":"arraySome","line":1488,"loc":{"start":{"line":1488,"column":4},"end":{"line":1488,"column":41}}},"52":{"name":"arraySum","line":1509,"loc":{"start":{"line":1509,"column":4},"end":{"line":1509,"column":39}}},"53":{"name":"assignDefaults","line":1527,"loc":{"start":{"line":1527,"column":4},"end":{"line":1527,"column":54}}},"54":{"name":"assignOwnDefaults","line":1544,"loc":{"start":{"line":1544,"column":4},"end":{"line":1544,"column":70}}},"55":{"name":"assignWith","line":1561,"loc":{"start":{"line":1561,"column":4},"end":{"line":1561,"column":52}}},"56":{"name":"baseAssign","line":1588,"loc":{"start":{"line":1588,"column":4},"end":{"line":1588,"column":40}}},"57":{"name":"baseAt","line":1603,"loc":{"start":{"line":1603,"column":4},"end":{"line":1603,"column":39}}},"58":{"name":"baseCopy","line":1631,"loc":{"start":{"line":1631,"column":4},"end":{"line":1631,"column":45}}},"59":{"name":"baseCallback","line":1654,"loc":{"start":{"line":1654,"column":4},"end":{"line":1654,"column":51}}},"60":{"name":"baseClone","line":1686,"loc":{"start":{"line":1686,"column":4},"end":{"line":1686,"column":79}}},"61":{"name":"(anonymous_61)","line":1733,"loc":{"start":{"line":1733,"column":46},"end":{"line":1733,"column":70}}},"62":{"name":"(anonymous_62)","line":1747,"loc":{"start":{"line":1747,"column":22},"end":{"line":1747,"column":33}}},"63":{"name":"object","line":1748,"loc":{"start":{"line":1748,"column":6},"end":{"line":1748,"column":24}}},"64":{"name":"(anonymous_64)","line":1749,"loc":{"start":{"line":1749,"column":13},"end":{"line":1749,"column":33}}},"65":{"name":"baseDelay","line":1769,"loc":{"start":{"line":1769,"column":4},"end":{"line":1769,"column":41}}},"66":{"name":"(anonymous_66)","line":1773,"loc":{"start":{"line":1773,"column":24},"end":{"line":1773,"column":35}}},"67":{"name":"baseDifference","line":1785,"loc":{"start":{"line":1785,"column":4},"end":{"line":1785,"column":43}}},"68":{"name":"baseEvery","line":1855,"loc":{"start":{"line":1855,"column":4},"end":{"line":1855,"column":46}}},"69":{"name":"(anonymous_69)","line":1857,"loc":{"start":{"line":1857,"column":27},"end":{"line":1857,"column":62}}},"70":{"name":"baseExtremum","line":1876,"loc":{"start":{"line":1876,"column":4},"end":{"line":1876,"column":69}}},"71":{"name":"(anonymous_71)","line":1880,"loc":{"start":{"line":1880,"column":27},"end":{"line":1880,"column":62}}},"72":{"name":"baseFill","line":1900,"loc":{"start":{"line":1900,"column":4},"end":{"line":1900,"column":48}}},"73":{"name":"baseFilter","line":1929,"loc":{"start":{"line":1929,"column":4},"end":{"line":1929,"column":47}}},"74":{"name":"(anonymous_74)","line":1931,"loc":{"start":{"line":1931,"column":27},"end":{"line":1931,"column":62}}},"75":{"name":"baseFind","line":1952,"loc":{"start":{"line":1952,"column":4},"end":{"line":1952,"column":63}}},"76":{"name":"(anonymous_76)","line":1954,"loc":{"start":{"line":1954,"column":27},"end":{"line":1954,"column":60}}},"77":{"name":"baseFlatten","line":1974,"loc":{"start":{"line":1974,"column":4},"end":{"line":1974,"column":58}}},"78":{"name":"baseForIn","line":2032,"loc":{"start":{"line":2032,"column":4},"end":{"line":2032,"column":41}}},"79":{"name":"baseForOwn","line":2045,"loc":{"start":{"line":2045,"column":4},"end":{"line":2045,"column":42}}},"80":{"name":"baseForOwnRight","line":2058,"loc":{"start":{"line":2058,"column":4},"end":{"line":2058,"column":47}}},"81":{"name":"baseFunctions","line":2071,"loc":{"start":{"line":2071,"column":4},"end":{"line":2071,"column":42}}},"82":{"name":"baseGet","line":2096,"loc":{"start":{"line":2096,"column":4},"end":{"line":2096,"column":44}}},"83":{"name":"baseIsEqual","line":2125,"loc":{"start":{"line":2125,"column":4},"end":{"line":2125,"column":76}}},"84":{"name":"baseIsEqualDeep","line":2150,"loc":{"start":{"line":2150,"column":4},"end":{"line":2150,"column":92}}},"85":{"name":"baseIsMatch","line":2223,"loc":{"start":{"line":2223,"column":4},"end":{"line":2223,"column":56}}},"86":{"name":"baseMap","line":2270,"loc":{"start":{"line":2270,"column":4},"end":{"line":2270,"column":43}}},"87":{"name":"(anonymous_87)","line":2274,"loc":{"start":{"line":2274,"column":27},"end":{"line":2274,"column":60}}},"88":{"name":"baseMatches","line":2287,"loc":{"start":{"line":2287,"column":4},"end":{"line":2287,"column":33}}},"89":{"name":"(anonymous_89)","line":2293,"loc":{"start":{"line":2293,"column":15},"end":{"line":2293,"column":32}}},"90":{"name":"(anonymous_90)","line":2300,"loc":{"start":{"line":2300,"column":13},"end":{"line":2300,"column":30}}},"91":{"name":"baseMatchesProperty","line":2313,"loc":{"start":{"line":2313,"column":4},"end":{"line":2313,"column":49}}},"92":{"name":"(anonymous_92)","line":2319,"loc":{"start":{"line":2319,"column":13},"end":{"line":2319,"column":30}}},"93":{"name":"baseMerge","line":2351,"loc":{"start":{"line":2351,"column":4},"end":{"line":2351,"column":67}}},"94":{"name":"(anonymous_94)","line":2358,"loc":{"start":{"line":2358,"column":33},"end":{"line":2358,"column":57}}},"95":{"name":"baseMergeDeep","line":2400,"loc":{"start":{"line":2400,"column":4},"end":{"line":2400,"column":87}}},"96":{"name":"baseProperty","line":2450,"loc":{"start":{"line":2450,"column":4},"end":{"line":2450,"column":31}}},"97":{"name":"(anonymous_97)","line":2451,"loc":{"start":{"line":2451,"column":13},"end":{"line":2451,"column":30}}},"98":{"name":"basePropertyDeep","line":2463,"loc":{"start":{"line":2463,"column":4},"end":{"line":2463,"column":36}}},"99":{"name":"(anonymous_99)","line":2466,"loc":{"start":{"line":2466,"column":13},"end":{"line":2466,"column":30}}},"100":{"name":"basePullAt","line":2480,"loc":{"start":{"line":2480,"column":4},"end":{"line":2480,"column":40}}},"101":{"name":"baseRandom","line":2501,"loc":{"start":{"line":2501,"column":4},"end":{"line":2501,"column":34}}},"102":{"name":"baseReduce","line":2519,"loc":{"start":{"line":2519,"column":4},"end":{"line":2519,"column":89}}},"103":{"name":"(anonymous_103)","line":2520,"loc":{"start":{"line":2520,"column":27},"end":{"line":2520,"column":62}}},"104":{"name":"(anonymous_104)","line":2536,"loc":{"start":{"line":2536,"column":44},"end":{"line":2536,"column":65}}},"105":{"name":"baseSlice","line":2550,"loc":{"start":{"line":2550,"column":4},"end":{"line":2550,"column":42}}},"106":{"name":"baseSome","line":2582,"loc":{"start":{"line":2582,"column":4},"end":{"line":2582,"column":45}}},"107":{"name":"(anonymous_107)","line":2585,"loc":{"start":{"line":2585,"column":27},"end":{"line":2585,"column":62}}},"108":{"name":"baseSortBy","line":2602,"loc":{"start":{"line":2602,"column":4},"end":{"line":2602,"column":41}}},"109":{"name":"baseSortByOrder","line":2621,"loc":{"start":{"line":2621,"column":4},"end":{"line":2621,"column":60}}},"110":{"name":"(anonymous_110)","line":2625,"loc":{"start":{"line":2625,"column":38},"end":{"line":2625,"column":57}}},"111":{"name":"(anonymous_111)","line":2627,"loc":{"start":{"line":2627,"column":39},"end":{"line":2627,"column":55}}},"112":{"name":"(anonymous_112)","line":2628,"loc":{"start":{"line":2628,"column":43},"end":{"line":2628,"column":62}}},"113":{"name":"(anonymous_113)","line":2632,"loc":{"start":{"line":2632,"column":32},"end":{"line":2632,"column":56}}},"114":{"name":"baseSum","line":2646,"loc":{"start":{"line":2646,"column":4},"end":{"line":2646,"column":43}}},"115":{"name":"(anonymous_115)","line":2648,"loc":{"start":{"line":2648,"column":27},"end":{"line":2648,"column":62}}},"116":{"name":"baseUniq","line":2663,"loc":{"start":{"line":2663,"column":4},"end":{"line":2663,"column":39}}},"117":{"name":"baseValues","line":2716,"loc":{"start":{"line":2716,"column":4},"end":{"line":2716,"column":39}}},"118":{"name":"baseWhile","line":2738,"loc":{"start":{"line":2738,"column":4},"end":{"line":2738,"column":60}}},"119":{"name":"baseWrapperValue","line":2758,"loc":{"start":{"line":2758,"column":4},"end":{"line":2758,"column":46}}},"120":{"name":"binaryIndex","line":2784,"loc":{"start":{"line":2784,"column":4},"end":{"line":2784,"column":51}}},"121":{"name":"binaryIndexBy","line":2817,"loc":{"start":{"line":2817,"column":4},"end":{"line":2817,"column":63}}},"122":{"name":"bindCallback","line":2862,"loc":{"start":{"line":2862,"column":4},"end":{"line":2862,"column":51}}},"123":{"name":"(anonymous_123)","line":2870,"loc":{"start":{"line":2870,"column":23},"end":{"line":2870,"column":39}}},"124":{"name":"(anonymous_124)","line":2873,"loc":{"start":{"line":2873,"column":23},"end":{"line":2873,"column":58}}},"125":{"name":"(anonymous_125)","line":2876,"loc":{"start":{"line":2876,"column":23},"end":{"line":2876,"column":71}}},"126":{"name":"(anonymous_126)","line":2879,"loc":{"start":{"line":2879,"column":23},"end":{"line":2879,"column":67}}},"127":{"name":"(anonymous_127)","line":2883,"loc":{"start":{"line":2883,"column":13},"end":{"line":2883,"column":24}}},"128":{"name":"bufferClone","line":2895,"loc":{"start":{"line":2895,"column":4},"end":{"line":2895,"column":33}}},"129":{"name":"composeArgs","line":2913,"loc":{"start":{"line":2913,"column":4},"end":{"line":2913,"column":50}}},"130":{"name":"composeArgsRight","line":2943,"loc":{"start":{"line":2943,"column":4},"end":{"line":2943,"column":55}}},"131":{"name":"createAggregator","line":2973,"loc":{"start":{"line":2973,"column":4},"end":{"line":2973,"column":51}}},"132":{"name":"(anonymous_132)","line":2974,"loc":{"start":{"line":2974,"column":13},"end":{"line":2974,"column":53}}},"133":{"name":"(anonymous_133)","line":2987,"loc":{"start":{"line":2987,"column":31},"end":{"line":2987,"column":64}}},"134":{"name":"createAssigner","line":3002,"loc":{"start":{"line":3002,"column":4},"end":{"line":3002,"column":38}}},"135":{"name":"(anonymous_135)","line":3003,"loc":{"start":{"line":3003,"column":23},"end":{"line":3003,"column":49}}},"136":{"name":"createBaseEach","line":3039,"loc":{"start":{"line":3039,"column":4},"end":{"line":3039,"column":49}}},"137":{"name":"(anonymous_137)","line":3040,"loc":{"start":{"line":3040,"column":13},"end":{"line":3040,"column":44}}},"138":{"name":"createBaseFor","line":3064,"loc":{"start":{"line":3064,"column":4},"end":{"line":3064,"column":38}}},"139":{"name":"(anonymous_139)","line":3065,"loc":{"start":{"line":3065,"column":13},"end":{"line":3065,"column":50}}},"140":{"name":"createBindWrapper","line":3090,"loc":{"start":{"line":3090,"column":4},"end":{"line":3090,"column":46}}},"141":{"name":"wrapper","line":3093,"loc":{"start":{"line":3093,"column":6},"end":{"line":3093,"column":25}}},"142":{"name":"createCache","line":3107,"loc":{"start":{"line":3107,"column":4},"end":{"line":3107,"column":33}}},"143":{"name":"createCompounder","line":3119,"loc":{"start":{"line":3119,"column":4},"end":{"line":3119,"column":40}}},"144":{"name":"(anonymous_144)","line":3120,"loc":{"start":{"line":3120,"column":13},"end":{"line":3120,"column":30}}},"145":{"name":"createCtorWrapper","line":3141,"loc":{"start":{"line":3141,"column":4},"end":{"line":3141,"column":37}}},"146":{"name":"(anonymous_146)","line":3142,"loc":{"start":{"line":3142,"column":13},"end":{"line":3142,"column":24}}},"147":{"name":"createCurry","line":3173,"loc":{"start":{"line":3173,"column":4},"end":{"line":3173,"column":31}}},"148":{"name":"curryFunc","line":3174,"loc":{"start":{"line":3174,"column":6},"end":{"line":3174,"column":45}}},"149":{"name":"createDefaults","line":3193,"loc":{"start":{"line":3193,"column":4},"end":{"line":3193,"column":50}}},"150":{"name":"(anonymous_150)","line":3194,"loc":{"start":{"line":3194,"column":23},"end":{"line":3194,"column":38}}},"151":{"name":"createExtremum","line":3212,"loc":{"start":{"line":3212,"column":4},"end":{"line":3212,"column":49}}},"152":{"name":"(anonymous_152)","line":3213,"loc":{"start":{"line":3213,"column":13},"end":{"line":3213,"column":53}}},"153":{"name":"createFind","line":3237,"loc":{"start":{"line":3237,"column":4},"end":{"line":3237,"column":45}}},"154":{"name":"(anonymous_154)","line":3238,"loc":{"start":{"line":3238,"column":13},"end":{"line":3238,"column":54}}},"155":{"name":"createFindIndex","line":3255,"loc":{"start":{"line":3255,"column":4},"end":{"line":3255,"column":40}}},"156":{"name":"(anonymous_156)","line":3256,"loc":{"start":{"line":3256,"column":13},"end":{"line":3256,"column":49}}},"157":{"name":"createFindKey","line":3272,"loc":{"start":{"line":3272,"column":4},"end":{"line":3272,"column":39}}},"158":{"name":"(anonymous_158)","line":3273,"loc":{"start":{"line":3273,"column":13},"end":{"line":3273,"column":50}}},"159":{"name":"createFlow","line":3286,"loc":{"start":{"line":3286,"column":4},"end":{"line":3286,"column":35}}},"160":{"name":"(anonymous_160)","line":3287,"loc":{"start":{"line":3287,"column":13},"end":{"line":3287,"column":24}}},"161":{"name":"(anonymous_161)","line":3316,"loc":{"start":{"line":3316,"column":15},"end":{"line":3316,"column":26}}},"162":{"name":"createForEach","line":3342,"loc":{"start":{"line":3342,"column":4},"end":{"line":3342,"column":48}}},"163":{"name":"(anonymous_163)","line":3343,"loc":{"start":{"line":3343,"column":13},"end":{"line":3343,"column":53}}},"164":{"name":"createForIn","line":3357,"loc":{"start":{"line":3357,"column":4},"end":{"line":3357,"column":37}}},"165":{"name":"(anonymous_165)","line":3358,"loc":{"start":{"line":3358,"column":13},"end":{"line":3358,"column":49}}},"166":{"name":"createForOwn","line":3373,"loc":{"start":{"line":3373,"column":4},"end":{"line":3373,"column":38}}},"167":{"name":"(anonymous_167)","line":3374,"loc":{"start":{"line":3374,"column":13},"end":{"line":3374,"column":49}}},"168":{"name":"createObjectMapper","line":3389,"loc":{"start":{"line":3389,"column":4},"end":{"line":3389,"column":43}}},"169":{"name":"(anonymous_169)","line":3390,"loc":{"start":{"line":3390,"column":13},"end":{"line":3390,"column":49}}},"170":{"name":"(anonymous_170)","line":3394,"loc":{"start":{"line":3394,"column":27},"end":{"line":3394,"column":56}}},"171":{"name":"createPadDir","line":3411,"loc":{"start":{"line":3411,"column":4},"end":{"line":3411,"column":37}}},"172":{"name":"(anonymous_172)","line":3412,"loc":{"start":{"line":3412,"column":13},"end":{"line":3412,"column":45}}},"173":{"name":"createPartial","line":3425,"loc":{"start":{"line":3425,"column":4},"end":{"line":3425,"column":33}}},"174":{"name":"(anonymous_174)","line":3426,"loc":{"start":{"line":3426,"column":34},"end":{"line":3426,"column":59}}},"175":{"name":"createReduce","line":3441,"loc":{"start":{"line":3441,"column":4},"end":{"line":3441,"column":47}}},"176":{"name":"(anonymous_176)","line":3442,"loc":{"start":{"line":3442,"column":13},"end":{"line":3442,"column":66}}},"177":{"name":"createHybridWrapper","line":3467,"loc":{"start":{"line":3467,"column":4},"end":{"line":3467,"column":125}}},"178":{"name":"wrapper","line":3476,"loc":{"start":{"line":3476,"column":6},"end":{"line":3476,"column":25}}},"179":{"name":"createPadding","line":3548,"loc":{"start":{"line":3548,"column":4},"end":{"line":3548,"column":50}}},"180":{"name":"createPartialWrapper","line":3572,"loc":{"start":{"line":3572,"column":4},"end":{"line":3572,"column":68}}},"181":{"name":"wrapper","line":3576,"loc":{"start":{"line":3576,"column":6},"end":{"line":3576,"column":25}}},"182":{"name":"createRound","line":3604,"loc":{"start":{"line":3604,"column":4},"end":{"line":3604,"column":37}}},"183":{"name":"(anonymous_183)","line":3606,"loc":{"start":{"line":3606,"column":13},"end":{"line":3606,"column":41}}},"184":{"name":"createSortedIndex","line":3623,"loc":{"start":{"line":3623,"column":4},"end":{"line":3623,"column":43}}},"185":{"name":"(anonymous_185)","line":3624,"loc":{"start":{"line":3624,"column":13},"end":{"line":3624,"column":55}}},"186":{"name":"createWrapper","line":3657,"loc":{"start":{"line":3657,"column":4},"end":{"line":3657,"column":90}}},"187":{"name":"equalArrays","line":3711,"loc":{"start":{"line":3711,"column":4},"end":{"line":3711,"column":87}}},"188":{"name":"(anonymous_188)","line":3733,"loc":{"start":{"line":3733,"column":32},"end":{"line":3733,"column":51}}},"189":{"name":"equalByTag","line":3758,"loc":{"start":{"line":3758,"column":4},"end":{"line":3758,"column":44}}},"190":{"name":"equalObjects","line":3798,"loc":{"start":{"line":3798,"column":4},"end":{"line":3798,"column":89}}},"191":{"name":"getCallback","line":3851,"loc":{"start":{"line":3851,"column":4},"end":{"line":3851,"column":50}}},"192":{"name":"(anonymous_192)","line":3864,"loc":{"start":{"line":3864,"column":36},"end":{"line":3864,"column":51}}},"193":{"name":"getFuncName","line":3875,"loc":{"start":{"line":3875,"column":4},"end":{"line":3875,"column":31}}},"194":{"name":"getIndexOf","line":3899,"loc":{"start":{"line":3899,"column":4},"end":{"line":3899,"column":55}}},"195":{"name":"getMatchData","line":3924,"loc":{"start":{"line":3924,"column":4},"end":{"line":3924,"column":34}}},"196":{"name":"getNative","line":3942,"loc":{"start":{"line":3942,"column":4},"end":{"line":3942,"column":36}}},"197":{"name":"getView","line":3957,"loc":{"start":{"line":3957,"column":4},"end":{"line":3957,"column":45}}},"198":{"name":"initCloneArray","line":3982,"loc":{"start":{"line":3982,"column":4},"end":{"line":3982,"column":35}}},"199":{"name":"initCloneObject","line":4001,"loc":{"start":{"line":4001,"column":4},"end":{"line":4001,"column":37}}},"200":{"name":"initCloneByTag","line":4021,"loc":{"start":{"line":4021,"column":4},"end":{"line":4021,"column":49}}},"201":{"name":"invokePath","line":4057,"loc":{"start":{"line":4057,"column":4},"end":{"line":4057,"column":44}}},"202":{"name":"isArrayLike","line":4074,"loc":{"start":{"line":4074,"column":4},"end":{"line":4074,"column":32}}},"203":{"name":"isIndex","line":4086,"loc":{"start":{"line":4086,"column":4},"end":{"line":4086,"column":36}}},"204":{"name":"isIterateeCall","line":4101,"loc":{"start":{"line":4101,"column":4},"end":{"line":4101,"column":50}}},"205":{"name":"isKey","line":4123,"loc":{"start":{"line":4123,"column":4},"end":{"line":4123,"column":34}}},"206":{"name":"isLaziable","line":4142,"loc":{"start":{"line":4142,"column":4},"end":{"line":4142,"column":30}}},"207":{"name":"isLength","line":4164,"loc":{"start":{"line":4164,"column":4},"end":{"line":4164,"column":29}}},"208":{"name":"isStrictComparable","line":4176,"loc":{"start":{"line":4176,"column":4},"end":{"line":4176,"column":39}}},"209":{"name":"mergeData","line":4195,"loc":{"start":{"line":4195,"column":4},"end":{"line":4195,"column":37}}},"210":{"name":"mergeDefaults","line":4258,"loc":{"start":{"line":4258,"column":4},"end":{"line":4258,"column":53}}},"211":{"name":"pickByArray","line":4271,"loc":{"start":{"line":4271,"column":4},"end":{"line":4271,"column":40}}},"212":{"name":"pickByCallback","line":4296,"loc":{"start":{"line":4296,"column":4},"end":{"line":4296,"column":47}}},"213":{"name":"(anonymous_213)","line":4298,"loc":{"start":{"line":4298,"column":24},"end":{"line":4298,"column":53}}},"214":{"name":"reorder","line":4316,"loc":{"start":{"line":4316,"column":4},"end":{"line":4316,"column":37}}},"215":{"name":"(anonymous_215)","line":4341,"loc":{"start":{"line":4341,"column":19},"end":{"line":4341,"column":30}}},"216":{"name":"(anonymous_216)","line":4345,"loc":{"start":{"line":4345,"column":13},"end":{"line":4345,"column":34}}},"217":{"name":"shimKeys","line":4369,"loc":{"start":{"line":4369,"column":4},"end":{"line":4369,"column":30}}},"218":{"name":"toIterable","line":4396,"loc":{"start":{"line":4396,"column":4},"end":{"line":4396,"column":31}}},"219":{"name":"toObject","line":4413,"loc":{"start":{"line":4413,"column":4},"end":{"line":4413,"column":29}}},"220":{"name":"toPath","line":4424,"loc":{"start":{"line":4424,"column":4},"end":{"line":4424,"column":27}}},"221":{"name":"(anonymous_221)","line":4429,"loc":{"start":{"line":4429,"column":46},"end":{"line":4429,"column":85}}},"222":{"name":"wrapperClone","line":4442,"loc":{"start":{"line":4442,"column":4},"end":{"line":4442,"column":35}}},"223":{"name":"chunk","line":4470,"loc":{"start":{"line":4470,"column":4},"end":{"line":4470,"column":39}}},"224":{"name":"compact","line":4501,"loc":{"start":{"line":4501,"column":4},"end":{"line":4501,"column":28}}},"225":{"name":"(anonymous_225)","line":4532,"loc":{"start":{"line":4532,"column":31},"end":{"line":4532,"column":55}}},"226":{"name":"drop","line":4562,"loc":{"start":{"line":4562,"column":4},"end":{"line":4562,"column":35}}},"227":{"name":"dropRight","line":4597,"loc":{"start":{"line":4597,"column":4},"end":{"line":4597,"column":40}}},"228":{"name":"dropRightWhile","line":4658,"loc":{"start":{"line":4658,"column":4},"end":{"line":4658,"column":55}}},"229":{"name":"dropWhile","line":4713,"loc":{"start":{"line":4713,"column":4},"end":{"line":4713,"column":50}}},"230":{"name":"fill","line":4747,"loc":{"start":{"line":4747,"column":4},"end":{"line":4747,"column":44}}},"231":{"name":"first","line":4876,"loc":{"start":{"line":4876,"column":4},"end":{"line":4876,"column":26}}},"232":{"name":"flatten","line":4900,"loc":{"start":{"line":4900,"column":4},"end":{"line":4900,"column":43}}},"233":{"name":"flattenDeep","line":4921,"loc":{"start":{"line":4921,"column":4},"end":{"line":4921,"column":32}}},"234":{"name":"indexOf","line":4954,"loc":{"start":{"line":4954,"column":4},"end":{"line":4954,"column":46}}},"235":{"name":"initial","line":4985,"loc":{"start":{"line":4985,"column":4},"end":{"line":4985,"column":28}}},"236":{"name":"(anonymous_236)","line":5003,"loc":{"start":{"line":5003,"column":33},"end":{"line":5003,"column":50}}},"237":{"name":"last","line":5053,"loc":{"start":{"line":5053,"column":4},"end":{"line":5053,"column":25}}},"238":{"name":"lastIndexOf","line":5083,"loc":{"start":{"line":5083,"column":4},"end":{"line":5083,"column":50}}},"239":{"name":"pull","line":5131,"loc":{"start":{"line":5131,"column":4},"end":{"line":5131,"column":20}}},"240":{"name":"(anonymous_240)","line":5178,"loc":{"start":{"line":5178,"column":27},"end":{"line":5178,"column":52}}},"241":{"name":"remove","line":5225,"loc":{"start":{"line":5225,"column":4},"end":{"line":5225,"column":47}}},"242":{"name":"rest","line":5260,"loc":{"start":{"line":5260,"column":4},"end":{"line":5260,"column":25}}},"243":{"name":"slice","line":5278,"loc":{"start":{"line":5278,"column":4},"end":{"line":5278,"column":38}}},"244":{"name":"take","line":5386,"loc":{"start":{"line":5386,"column":4},"end":{"line":5386,"column":35}}},"245":{"name":"takeRight","line":5421,"loc":{"start":{"line":5421,"column":4},"end":{"line":5421,"column":40}}},"246":{"name":"takeRightWhile","line":5482,"loc":{"start":{"line":5482,"column":4},"end":{"line":5482,"column":55}}},"247":{"name":"takeWhile","line":5537,"loc":{"start":{"line":5537,"column":4},"end":{"line":5537,"column":50}}},"248":{"name":"(anonymous_248)","line":5558,"loc":{"start":{"line":5558,"column":26},"end":{"line":5558,"column":43}}},"249":{"name":"uniq","line":5611,"loc":{"start":{"line":5611,"column":4},"end":{"line":5611,"column":54}}},"250":{"name":"unzip","line":5648,"loc":{"start":{"line":5648,"column":4},"end":{"line":5648,"column":26}}},"251":{"name":"(anonymous_251)","line":5655,"loc":{"start":{"line":5655,"column":33},"end":{"line":5655,"column":49}}},"252":{"name":"unzipWith","line":5688,"loc":{"start":{"line":5688,"column":4},"end":{"line":5688,"column":49}}},"253":{"name":"(anonymous_253)","line":5698,"loc":{"start":{"line":5698,"column":30},"end":{"line":5698,"column":46}}},"254":{"name":"(anonymous_254)","line":5719,"loc":{"start":{"line":5719,"column":28},"end":{"line":5719,"column":52}}},"255":{"name":"xor","line":5739,"loc":{"start":{"line":5739,"column":4},"end":{"line":5739,"column":19}}},"256":{"name":"zipObject","line":5792,"loc":{"start":{"line":5792,"column":4},"end":{"line":5792,"column":38}}},"257":{"name":"(anonymous_257)","line":5828,"loc":{"start":{"line":5828,"column":28},"end":{"line":5828,"column":45}}},"258":{"name":"chain","line":5871,"loc":{"start":{"line":5871,"column":4},"end":{"line":5871,"column":26}}},"259":{"name":"tap","line":5900,"loc":{"start":{"line":5900,"column":4},"end":{"line":5900,"column":46}}},"260":{"name":"thru","line":5926,"loc":{"start":{"line":5926,"column":4},"end":{"line":5926,"column":47}}},"261":{"name":"wrapperChain","line":5955,"loc":{"start":{"line":5955,"column":4},"end":{"line":5955,"column":28}}},"262":{"name":"wrapperCommit","line":5984,"loc":{"start":{"line":5984,"column":4},"end":{"line":5984,"column":29}}},"263":{"name":"(anonymous_263)","line":6008,"loc":{"start":{"line":6008,"column":34},"end":{"line":6008,"column":51}}},"264":{"name":"(anonymous_264)","line":6010,"loc":{"start":{"line":6010,"column":23},"end":{"line":6010,"column":39}}},"265":{"name":"wrapperPlant","line":6038,"loc":{"start":{"line":6038,"column":4},"end":{"line":6038,"column":33}}},"266":{"name":"wrapperReverse","line":6076,"loc":{"start":{"line":6076,"column":4},"end":{"line":6076,"column":30}}},"267":{"name":"(anonymous_267)","line":6079,"loc":{"start":{"line":6079,"column":24},"end":{"line":6079,"column":40}}},"268":{"name":"wrapperToString","line":6106,"loc":{"start":{"line":6106,"column":4},"end":{"line":6106,"column":31}}},"269":{"name":"wrapperValue","line":6123,"loc":{"start":{"line":6123,"column":4},"end":{"line":6123,"column":28}}},"270":{"name":"(anonymous_270)","line":6149,"loc":{"start":{"line":6149,"column":23},"end":{"line":6149,"column":51}}},"271":{"name":"(anonymous_271)","line":6194,"loc":{"start":{"line":6194,"column":35},"end":{"line":6194,"column":64}}},"272":{"name":"every","line":6246,"loc":{"start":{"line":6246,"column":4},"end":{"line":6246,"column":51}}},"273":{"name":"filter","line":6306,"loc":{"start":{"line":6306,"column":4},"end":{"line":6306,"column":52}}},"274":{"name":"findWhere","line":6414,"loc":{"start":{"line":6414,"column":4},"end":{"line":6414,"column":43}}},"275":{"name":"(anonymous_275)","line":6513,"loc":{"start":{"line":6513,"column":35},"end":{"line":6513,"column":64}}},"276":{"name":"includes","line":6550,"loc":{"start":{"line":6550,"column":4},"end":{"line":6550,"column":60}}},"277":{"name":"(anonymous_277)","line":6612,"loc":{"start":{"line":6612,"column":35},"end":{"line":6612,"column":64}}},"278":{"name":"(anonymous_278)","line":6638,"loc":{"start":{"line":6638,"column":27},"end":{"line":6638,"column":60}}},"279":{"name":"(anonymous_279)","line":6644,"loc":{"start":{"line":6644,"column":27},"end":{"line":6644,"column":43}}},"280":{"name":"map","line":6707,"loc":{"start":{"line":6707,"column":4},"end":{"line":6707,"column":48}}},"281":{"name":"(anonymous_281)","line":6772,"loc":{"start":{"line":6772,"column":37},"end":{"line":6772,"column":66}}},"282":{"name":"(anonymous_282)","line":6774,"loc":{"start":{"line":6774,"column":7},"end":{"line":6774,"column":18}}},"283":{"name":"pluck","line":6799,"loc":{"start":{"line":6799,"column":4},"end":{"line":6799,"column":37}}},"284":{"name":"reject","line":6902,"loc":{"start":{"line":6902,"column":4},"end":{"line":6902,"column":52}}},"285":{"name":"(anonymous_285)","line":6905,"loc":{"start":{"line":6905,"column":30},"end":{"line":6905,"column":65}}},"286":{"name":"sample","line":6928,"loc":{"start":{"line":6928,"column":4},"end":{"line":6928,"column":42}}},"287":{"name":"shuffle","line":6965,"loc":{"start":{"line":6965,"column":4},"end":{"line":6965,"column":33}}},"288":{"name":"size","line":6989,"loc":{"start":{"line":6989,"column":4},"end":{"line":6989,"column":30}}},"289":{"name":"some","line":7043,"loc":{"start":{"line":7043,"column":4},"end":{"line":7043,"column":50}}},"290":{"name":"sortBy","line":7102,"loc":{"start":{"line":7102,"column":4},"end":{"line":7102,"column":51}}},"291":{"name":"(anonymous_291)","line":7112,"loc":{"start":{"line":7112,"column":39},"end":{"line":7112,"column":72}}},"292":{"name":"(anonymous_292)","line":7153,"loc":{"start":{"line":7153,"column":30},"end":{"line":7153,"column":62}}},"293":{"name":"sortByOrder","line":7198,"loc":{"start":{"line":7198,"column":4},"end":{"line":7198,"column":63}}},"294":{"name":"where","line":7243,"loc":{"start":{"line":7243,"column":4},"end":{"line":7243,"column":39}}},"295":{"name":"(anonymous_295)","line":7263,"loc":{"start":{"line":7263,"column":27},"end":{"line":7263,"column":38}}},"296":{"name":"after","line":7292,"loc":{"start":{"line":7292,"column":4},"end":{"line":7292,"column":28}}},"297":{"name":"(anonymous_297)","line":7303,"loc":{"start":{"line":7303,"column":13},"end":{"line":7303,"column":24}}},"298":{"name":"ary","line":7326,"loc":{"start":{"line":7326,"column":4},"end":{"line":7326,"column":33}}},"299":{"name":"before","line":7350,"loc":{"start":{"line":7350,"column":4},"end":{"line":7350,"column":29}}},"300":{"name":"(anonymous_300)","line":7361,"loc":{"start":{"line":7361,"column":13},"end":{"line":7361,"column":24}}},"301":{"name":"(anonymous_301)","line":7407,"loc":{"start":{"line":7407,"column":25},"end":{"line":7407,"column":59}}},"302":{"name":"(anonymous_302)","line":7444,"loc":{"start":{"line":7444,"column":28},"end":{"line":7444,"column":58}}},"303":{"name":"(anonymous_303)","line":7501,"loc":{"start":{"line":7501,"column":28},"end":{"line":7501,"column":60}}},"304":{"name":"debounce","line":7654,"loc":{"start":{"line":7654,"column":4},"end":{"line":7654,"column":43}}},"305":{"name":"cancel","line":7679,"loc":{"start":{"line":7679,"column":6},"end":{"line":7679,"column":24}}},"306":{"name":"complete","line":7690,"loc":{"start":{"line":7690,"column":6},"end":{"line":7690,"column":38}}},"307":{"name":"delayed","line":7704,"loc":{"start":{"line":7704,"column":6},"end":{"line":7704,"column":25}}},"308":{"name":"maxDelayed","line":7713,"loc":{"start":{"line":7713,"column":6},"end":{"line":7713,"column":28}}},"309":{"name":"debounced","line":7717,"loc":{"start":{"line":7717,"column":6},"end":{"line":7717,"column":27}}},"310":{"name":"(anonymous_310)","line":7779,"loc":{"start":{"line":7779,"column":26},"end":{"line":7779,"column":47}}},"311":{"name":"(anonymous_311)","line":7801,"loc":{"start":{"line":7801,"column":26},"end":{"line":7801,"column":53}}},"312":{"name":"memoize","line":7900,"loc":{"start":{"line":7900,"column":4},"end":{"line":7900,"column":37}}},"313":{"name":"(anonymous_313)","line":7904,"loc":{"start":{"line":7904,"column":21},"end":{"line":7904,"column":32}}},"314":{"name":"(anonymous_314)","line":7951,"loc":{"start":{"line":7951,"column":28},"end":{"line":7951,"column":55}}},"315":{"name":"(anonymous_315)","line":7957,"loc":{"start":{"line":7957,"column":23},"end":{"line":7957,"column":38}}},"316":{"name":"negate","line":7985,"loc":{"start":{"line":7985,"column":4},"end":{"line":7985,"column":31}}},"317":{"name":"(anonymous_317)","line":7989,"loc":{"start":{"line":7989,"column":13},"end":{"line":7989,"column":24}}},"318":{"name":"once","line":8011,"loc":{"start":{"line":8011,"column":4},"end":{"line":8011,"column":24}}},"319":{"name":"(anonymous_319)","line":8110,"loc":{"start":{"line":8110,"column":26},"end":{"line":8110,"column":50}}},"320":{"name":"restParam","line":8136,"loc":{"start":{"line":8136,"column":4},"end":{"line":8136,"column":36}}},"321":{"name":"(anonymous_321)","line":8141,"loc":{"start":{"line":8141,"column":13},"end":{"line":8141,"column":24}}},"322":{"name":"spread","line":8196,"loc":{"start":{"line":8196,"column":4},"end":{"line":8196,"column":26}}},"323":{"name":"(anonymous_323)","line":8200,"loc":{"start":{"line":8200,"column":13},"end":{"line":8200,"column":29}}},"324":{"name":"throttle","line":8244,"loc":{"start":{"line":8244,"column":4},"end":{"line":8244,"column":43}}},"325":{"name":"wrap","line":8281,"loc":{"start":{"line":8281,"column":4},"end":{"line":8281,"column":34}}},"326":{"name":"clone","line":8339,"loc":{"start":{"line":8339,"column":4},"end":{"line":8339,"column":55}}},"327":{"name":"cloneDeep","line":8398,"loc":{"start":{"line":8398,"column":4},"end":{"line":8398,"column":51}}},"328":{"name":"gt","line":8424,"loc":{"start":{"line":8424,"column":4},"end":{"line":8424,"column":30}}},"329":{"name":"gte","line":8448,"loc":{"start":{"line":8448,"column":4},"end":{"line":8448,"column":31}}},"330":{"name":"isArguments","line":8468,"loc":{"start":{"line":8468,"column":4},"end":{"line":8468,"column":32}}},"331":{"name":"(anonymous_331)","line":8489,"loc":{"start":{"line":8489,"column":35},"end":{"line":8489,"column":51}}},"332":{"name":"isBoolean","line":8509,"loc":{"start":{"line":8509,"column":4},"end":{"line":8509,"column":30}}},"333":{"name":"isDate","line":8529,"loc":{"start":{"line":8529,"column":4},"end":{"line":8529,"column":27}}},"334":{"name":"isElement","line":8549,"loc":{"start":{"line":8549,"column":4},"end":{"line":8549,"column":30}}},"335":{"name":"isEmpty","line":8580,"loc":{"start":{"line":8580,"column":4},"end":{"line":8580,"column":28}}},"336":{"name":"isEqual","line":8635,"loc":{"start":{"line":8635,"column":4},"end":{"line":8635,"column":56}}},"337":{"name":"isError","line":8658,"loc":{"start":{"line":8658,"column":4},"end":{"line":8658,"column":28}}},"338":{"name":"isFinite","line":8689,"loc":{"start":{"line":8689,"column":4},"end":{"line":8689,"column":29}}},"339":{"name":"isFunction","line":8709,"loc":{"start":{"line":8709,"column":4},"end":{"line":8709,"column":31}}},"340":{"name":"isObject","line":8736,"loc":{"start":{"line":8736,"column":4},"end":{"line":8736,"column":29}}},"341":{"name":"isMatch","line":8782,"loc":{"start":{"line":8782,"column":4},"end":{"line":8782,"column":58}}},"342":{"name":"isNaN","line":8812,"loc":{"start":{"line":8812,"column":4},"end":{"line":8812,"column":26}}},"343":{"name":"isNative","line":8834,"loc":{"start":{"line":8834,"column":4},"end":{"line":8834,"column":29}}},"344":{"name":"isNull","line":8860,"loc":{"start":{"line":8860,"column":4},"end":{"line":8860,"column":27}}},"345":{"name":"isNumber","line":8886,"loc":{"start":{"line":8886,"column":4},"end":{"line":8886,"column":29}}},"346":{"name":"isPlainObject","line":8920,"loc":{"start":{"line":8920,"column":4},"end":{"line":8920,"column":34}}},"347":{"name":"(anonymous_347)","line":8935,"loc":{"start":{"line":8935,"column":23},"end":{"line":8935,"column":47}}},"348":{"name":"isRegExp","line":8957,"loc":{"start":{"line":8957,"column":4},"end":{"line":8957,"column":29}}},"349":{"name":"isString","line":8977,"loc":{"start":{"line":8977,"column":4},"end":{"line":8977,"column":29}}},"350":{"name":"isTypedArray","line":8997,"loc":{"start":{"line":8997,"column":4},"end":{"line":8997,"column":33}}},"351":{"name":"isUndefined","line":9017,"loc":{"start":{"line":9017,"column":4},"end":{"line":9017,"column":32}}},"352":{"name":"lt","line":9041,"loc":{"start":{"line":9041,"column":4},"end":{"line":9041,"column":30}}},"353":{"name":"lte","line":9065,"loc":{"start":{"line":9065,"column":4},"end":{"line":9065,"column":31}}},"354":{"name":"toArray","line":9084,"loc":{"start":{"line":9084,"column":4},"end":{"line":9084,"column":28}}},"355":{"name":"toPlainObject","line":9118,"loc":{"start":{"line":9118,"column":4},"end":{"line":9118,"column":34}}},"356":{"name":"(anonymous_356)","line":9206,"loc":{"start":{"line":9206,"column":32},"end":{"line":9206,"column":69}}},"357":{"name":"create","line":9246,"loc":{"start":{"line":9246,"column":4},"end":{"line":9246,"column":50}}},"358":{"name":"functions","line":9521,"loc":{"start":{"line":9521,"column":4},"end":{"line":9521,"column":31}}},"359":{"name":"get","line":9549,"loc":{"start":{"line":9549,"column":4},"end":{"line":9549,"column":45}}},"360":{"name":"has","line":9576,"loc":{"start":{"line":9576,"column":4},"end":{"line":9576,"column":31}}},"361":{"name":"invert","line":9617,"loc":{"start":{"line":9617,"column":4},"end":{"line":9617,"column":47}}},"362":{"name":"(anonymous_362)","line":9671,"loc":{"start":{"line":9671,"column":40},"end":{"line":9671,"column":57}}},"363":{"name":"keysIn","line":9702,"loc":{"start":{"line":9702,"column":4},"end":{"line":9702,"column":28}}},"364":{"name":"(anonymous_364)","line":9819,"loc":{"start":{"line":9819,"column":25},"end":{"line":9819,"column":49}}},"365":{"name":"(anonymous_365)","line":9828,"loc":{"start":{"line":9828,"column":36},"end":{"line":9828,"column":65}}},"366":{"name":"pairs","line":9847,"loc":{"start":{"line":9847,"column":4},"end":{"line":9847,"column":27}}},"367":{"name":"(anonymous_367)","line":9888,"loc":{"start":{"line":9888,"column":25},"end":{"line":9888,"column":49}}},"368":{"name":"result","line":9925,"loc":{"start":{"line":9925,"column":4},"end":{"line":9925,"column":48}}},"369":{"name":"set","line":9961,"loc":{"start":{"line":9961,"column":4},"end":{"line":9961,"column":38}}},"370":{"name":"transform","line":10016,"loc":{"start":{"line":10016,"column":4},"end":{"line":10016,"column":63}}},"371":{"name":"(anonymous_371)","line":10032,"loc":{"start":{"line":10032,"column":47},"end":{"line":10032,"column":78}}},"372":{"name":"values","line":10063,"loc":{"start":{"line":10063,"column":4},"end":{"line":10063,"column":28}}},"373":{"name":"valuesIn","line":10090,"loc":{"start":{"line":10090,"column":4},"end":{"line":10090,"column":30}}},"374":{"name":"inRange","line":10127,"loc":{"start":{"line":10127,"column":4},"end":{"line":10127,"column":40}}},"375":{"name":"random","line":10165,"loc":{"start":{"line":10165,"column":4},"end":{"line":10165,"column":40}}},"376":{"name":"(anonymous_376)","line":10221,"loc":{"start":{"line":10221,"column":37},"end":{"line":10221,"column":67}}},"377":{"name":"capitalize","line":10239,"loc":{"start":{"line":10239,"column":4},"end":{"line":10239,"column":32}}},"378":{"name":"deburr","line":10258,"loc":{"start":{"line":10258,"column":4},"end":{"line":10258,"column":28}}},"379":{"name":"endsWith","line":10284,"loc":{"start":{"line":10284,"column":4},"end":{"line":10284,"column":48}}},"380":{"name":"escape","line":10329,"loc":{"start":{"line":10329,"column":4},"end":{"line":10329,"column":28}}},"381":{"name":"escapeRegExp","line":10351,"loc":{"start":{"line":10351,"column":4},"end":{"line":10351,"column":34}}},"382":{"name":"(anonymous_382)","line":10377,"loc":{"start":{"line":10377,"column":37},"end":{"line":10377,"column":67}}},"383":{"name":"pad","line":10403,"loc":{"start":{"line":10403,"column":4},"end":{"line":10403,"column":40}}},"384":{"name":"parseInt","line":10490,"loc":{"start":{"line":10490,"column":4},"end":{"line":10490,"column":44}}},"385":{"name":"repeat","line":10523,"loc":{"start":{"line":10523,"column":4},"end":{"line":10523,"column":31}}},"386":{"name":"(anonymous_386)","line":10562,"loc":{"start":{"line":10562,"column":37},"end":{"line":10562,"column":67}}},"387":{"name":"(anonymous_387)","line":10585,"loc":{"start":{"line":10585,"column":37},"end":{"line":10585,"column":67}}},"388":{"name":"startsWith","line":10610,"loc":{"start":{"line":10610,"column":4},"end":{"line":10610,"column":50}}},"389":{"name":"template","line":10715,"loc":{"start":{"line":10715,"column":4},"end":{"line":10715,"column":53}}},"390":{"name":"(anonymous_390)","line":10751,"loc":{"start":{"line":10751,"column":35},"end":{"line":10751,"column":122}}},"391":{"name":"(anonymous_391)","line":10808,"loc":{"start":{"line":10808,"column":27},"end":{"line":10808,"column":38}}},"392":{"name":"trim","line":10842,"loc":{"start":{"line":10842,"column":4},"end":{"line":10842,"column":40}}},"393":{"name":"trimLeft","line":10873,"loc":{"start":{"line":10873,"column":4},"end":{"line":10873,"column":44}}},"394":{"name":"trimRight","line":10903,"loc":{"start":{"line":10903,"column":4},"end":{"line":10903,"column":45}}},"395":{"name":"trunc","line":10955,"loc":{"start":{"line":10955,"column":4},"end":{"line":10955,"column":43}}},"396":{"name":"unescape","line":11025,"loc":{"start":{"line":11025,"column":4},"end":{"line":11025,"column":30}}},"397":{"name":"words","line":11050,"loc":{"start":{"line":11050,"column":4},"end":{"line":11050,"column":43}}},"398":{"name":"(anonymous_398)","line":11080,"loc":{"start":{"line":11080,"column":28},"end":{"line":11080,"column":49}}},"399":{"name":"callback","line":11126,"loc":{"start":{"line":11126,"column":4},"end":{"line":11126,"column":44}}},"400":{"name":"constant","line":11151,"loc":{"start":{"line":11151,"column":4},"end":{"line":11151,"column":29}}},"401":{"name":"(anonymous_401)","line":11152,"loc":{"start":{"line":11152,"column":13},"end":{"line":11152,"column":24}}},"402":{"name":"identity","line":11172,"loc":{"start":{"line":11172,"column":4},"end":{"line":11172,"column":29}}},"403":{"name":"matches","line":11201,"loc":{"start":{"line":11201,"column":4},"end":{"line":11201,"column":29}}},"404":{"name":"matchesProperty","line":11229,"loc":{"start":{"line":11229,"column":4},"end":{"line":11229,"column":45}}},"405":{"name":"(anonymous_405)","line":11256,"loc":{"start":{"line":11256,"column":27},"end":{"line":11256,"column":48}}},"406":{"name":"(anonymous_406)","line":11257,"loc":{"start":{"line":11257,"column":13},"end":{"line":11257,"column":30}}},"407":{"name":"(anonymous_407)","line":11284,"loc":{"start":{"line":11284,"column":29},"end":{"line":11284,"column":52}}},"408":{"name":"(anonymous_408)","line":11285,"loc":{"start":{"line":11285,"column":13},"end":{"line":11285,"column":28}}},"409":{"name":"mixin","line":11326,"loc":{"start":{"line":11326,"column":4},"end":{"line":11326,"column":44}}},"410":{"name":"(anonymous_410)","line":11358,"loc":{"start":{"line":11358,"column":42},"end":{"line":11358,"column":57}}},"411":{"name":"(anonymous_411)","line":11359,"loc":{"start":{"line":11359,"column":19},"end":{"line":11359,"column":30}}},"412":{"name":"noConflict","line":11389,"loc":{"start":{"line":11389,"column":4},"end":{"line":11389,"column":26}}},"413":{"name":"noop","line":11408,"loc":{"start":{"line":11408,"column":4},"end":{"line":11408,"column":20}}},"414":{"name":"property","line":11434,"loc":{"start":{"line":11434,"column":4},"end":{"line":11434,"column":28}}},"415":{"name":"propertyOf","line":11458,"loc":{"start":{"line":11458,"column":4},"end":{"line":11458,"column":32}}},"416":{"name":"(anonymous_416)","line":11459,"loc":{"start":{"line":11459,"column":13},"end":{"line":11459,"column":28}}},"417":{"name":"range","line":11497,"loc":{"start":{"line":11497,"column":4},"end":{"line":11497,"column":37}}},"418":{"name":"times","line":11550,"loc":{"start":{"line":11550,"column":4},"end":{"line":11550,"column":41}}},"419":{"name":"uniqueId","line":11588,"loc":{"start":{"line":11588,"column":4},"end":{"line":11588,"column":30}}},"420":{"name":"add","line":11609,"loc":{"start":{"line":11609,"column":4},"end":{"line":11609,"column":33}}},"421":{"name":"sum","line":11809,"loc":{"start":{"line":11809,"column":4},"end":{"line":11809,"column":48}}},"422":{"name":"(anonymous_422)","line":12073,"loc":{"start":{"line":12073,"column":19},"end":{"line":12073,"column":30}}},"423":{"name":"(anonymous_423)","line":12075,"loc":{"start":{"line":12075,"column":25},"end":{"line":12075,"column":52}}},"424":{"name":"(anonymous_424)","line":12088,"loc":{"start":{"line":12088,"column":30},"end":{"line":12088,"column":42}}},"425":{"name":"(anonymous_425)","line":12092,"loc":{"start":{"line":12092,"column":23},"end":{"line":12092,"column":39}}},"426":{"name":"(anonymous_426)","line":12109,"loc":{"start":{"line":12109,"column":85},"end":{"line":12109,"column":106}}},"427":{"name":"(anonymous_427)","line":12114,"loc":{"start":{"line":12114,"column":32},"end":{"line":12114,"column":60}}},"428":{"name":"(anonymous_428)","line":12115,"loc":{"start":{"line":12115,"column":42},"end":{"line":12115,"column":54}}},"429":{"name":"(anonymous_429)","line":12131,"loc":{"start":{"line":12131,"column":52},"end":{"line":12131,"column":64}}},"430":{"name":"(anonymous_430)","line":12137,"loc":{"start":{"line":12137,"column":46},"end":{"line":12137,"column":74}}},"431":{"name":"(anonymous_431)","line":12141,"loc":{"start":{"line":12141,"column":42},"end":{"line":12141,"column":70}}},"432":{"name":"(anonymous_432)","line":12150,"loc":{"start":{"line":12150,"column":33},"end":{"line":12150,"column":61}}},"433":{"name":"(anonymous_433)","line":12153,"loc":{"start":{"line":12153,"column":42},"end":{"line":12153,"column":53}}},"434":{"name":"(anonymous_434)","line":12159,"loc":{"start":{"line":12159,"column":35},"end":{"line":12159,"column":63}}},"435":{"name":"(anonymous_435)","line":12162,"loc":{"start":{"line":12162,"column":42},"end":{"line":12162,"column":53}}},"436":{"name":"(anonymous_436)","line":12168,"loc":{"start":{"line":12168,"column":34},"end":{"line":12168,"column":62}}},"437":{"name":"(anonymous_437)","line":12172,"loc":{"start":{"line":12172,"column":42},"end":{"line":12172,"column":58}}},"438":{"name":"(anonymous_438)","line":12177,"loc":{"start":{"line":12177,"column":36},"end":{"line":12177,"column":47}}},"439":{"name":"(anonymous_439)","line":12181,"loc":{"start":{"line":12181,"column":35},"end":{"line":12181,"column":64}}},"440":{"name":"(anonymous_440)","line":12183,"loc":{"start":{"line":12183,"column":25},"end":{"line":12183,"column":41}}},"441":{"name":"(anonymous_441)","line":12188,"loc":{"start":{"line":12188,"column":34},"end":{"line":12188,"column":55}}},"442":{"name":"(anonymous_442)","line":12207,"loc":{"start":{"line":12207,"column":43},"end":{"line":12207,"column":72}}},"443":{"name":"(anonymous_443)","line":12211,"loc":{"start":{"line":12211,"column":36},"end":{"line":12211,"column":47}}},"444":{"name":"(anonymous_444)","line":12216,"loc":{"start":{"line":12216,"column":38},"end":{"line":12216,"column":65}}},"445":{"name":"(anonymous_445)","line":12224,"loc":{"start":{"line":12224,"column":37},"end":{"line":12224,"column":48}}},"446":{"name":"(anonymous_446)","line":12237,"loc":{"start":{"line":12237,"column":26},"end":{"line":12237,"column":42}}},"447":{"name":"(anonymous_447)","line":12265,"loc":{"start":{"line":12265,"column":97},"end":{"line":12265,"column":118}}},"448":{"name":"(anonymous_448)","line":12270,"loc":{"start":{"line":12270,"column":37},"end":{"line":12270,"column":48}}},"449":{"name":"(anonymous_449)","line":12275,"loc":{"start":{"line":12275,"column":31},"end":{"line":12275,"column":47}}},"450":{"name":"(anonymous_450)","line":12282,"loc":{"start":{"line":12282,"column":38},"end":{"line":12282,"column":65}}},"451":{"name":"(anonymous_451)","line":12332,"loc":{"start":{"line":12332,"column":11},"end":{"line":12332,"column":22}}}},"statementMap":{"1":{"start":{"line":10,"column":1},"end":{"line":12351,"column":14}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":16}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"4":{"start":{"line":19,"column":2},"end":{"line":27,"column":23}},"5":{"start":{"line":30,"column":2},"end":{"line":31,"column":37}},"6":{"start":{"line":34,"column":2},"end":{"line":35,"column":20}},"7":{"start":{"line":38,"column":2},"end":{"line":38,"column":29}},"8":{"start":{"line":41,"column":2},"end":{"line":42,"column":24}},"9":{"start":{"line":45,"column":2},"end":{"line":45,"column":46}},"10":{"start":{"line":48,"column":2},"end":{"line":48,"column":45}},"11":{"start":{"line":51,"column":2},"end":{"line":63,"column":38}},"12":{"start":{"line":65,"column":2},"end":{"line":74,"column":41}},"13":{"start":{"line":77,"column":2},"end":{"line":79,"column":62}},"14":{"start":{"line":82,"column":2},"end":{"line":85,"column":58}},"15":{"start":{"line":88,"column":2},"end":{"line":90,"column":41}},"16":{"start":{"line":93,"column":2},"end":{"line":95,"column":91}},"17":{"start":{"line":101,"column":2},"end":{"line":102,"column":54}},"18":{"start":{"line":105,"column":2},"end":{"line":105,"column":52}},"19":{"start":{"line":108,"column":2},"end":{"line":108,"column":32}},"20":{"start":{"line":111,"column":2},"end":{"line":111,"column":55}},"21":{"start":{"line":114,"column":2},"end":{"line":114,"column":23}},"22":{"start":{"line":117,"column":2},"end":{"line":117,"column":32}},"23":{"start":{"line":120,"column":2},"end":{"line":120,"column":51}},"24":{"start":{"line":123,"column":2},"end":{"line":123,"column":25}},"25":{"start":{"line":126,"column":2},"end":{"line":126,"column":59}},"26":{"start":{"line":129,"column":2},"end":{"line":129,"column":25}},"27":{"start":{"line":132,"column":2},"end":{"line":132,"column":51}},"28":{"start":{"line":135,"column":2},"end":{"line":140,"column":7}},"29":{"start":{"line":136,"column":4},"end":{"line":137,"column":47}},"30":{"start":{"line":139,"column":4},"end":{"line":139,"column":111}},"31":{"start":{"line":143,"column":2},"end":{"line":149,"column":4}},"32":{"start":{"line":152,"column":2},"end":{"line":152,"column":27}},"33":{"start":{"line":155,"column":2},"end":{"line":155,"column":26}},"34":{"start":{"line":156,"column":2},"end":{"line":160,"column":35}},"35":{"start":{"line":161,"column":2},"end":{"line":167,"column":65}},"36":{"start":{"line":170,"column":2},"end":{"line":170,"column":25}},"37":{"start":{"line":171,"column":2},"end":{"line":179,"column":61}},"38":{"start":{"line":180,"column":2},"end":{"line":182,"column":36}},"39":{"start":{"line":185,"column":2},"end":{"line":203,"column":4}},"40":{"start":{"line":206,"column":2},"end":{"line":213,"column":4}},"41":{"start":{"line":216,"column":2},"end":{"line":223,"column":4}},"42":{"start":{"line":226,"column":2},"end":{"line":229,"column":4}},"43":{"start":{"line":232,"column":2},"end":{"line":238,"column":4}},"44":{"start":{"line":241,"column":2},"end":{"line":248,"column":4}},"45":{"start":{"line":251,"column":2},"end":{"line":251,"column":91}},"46":{"start":{"line":254,"column":2},"end":{"line":254,"column":86}},"47":{"start":{"line":257,"column":2},"end":{"line":257,"column":111}},"48":{"start":{"line":260,"column":2},"end":{"line":260,"column":73}},"49":{"start":{"line":263,"column":2},"end":{"line":263,"column":83}},"50":{"start":{"line":266,"column":2},"end":{"line":266,"column":86}},"51":{"start":{"line":274,"column":2},"end":{"line":274,"column":102}},"52":{"start":{"line":287,"column":2},"end":{"line":309,"column":3}},"53":{"start":{"line":288,"column":4},"end":{"line":307,"column":5}},"54":{"start":{"line":289,"column":6},"end":{"line":291,"column":43}},"55":{"start":{"line":293,"column":6},"end":{"line":295,"column":43}},"56":{"start":{"line":297,"column":6},"end":{"line":301,"column":7}},"57":{"start":{"line":300,"column":8},"end":{"line":300,"column":17}},"58":{"start":{"line":302,"column":6},"end":{"line":306,"column":7}},"59":{"start":{"line":305,"column":8},"end":{"line":305,"column":18}},"60":{"start":{"line":308,"column":4},"end":{"line":308,"column":13}},"61":{"start":{"line":321,"column":2},"end":{"line":331,"column":3}},"62":{"start":{"line":322,"column":4},"end":{"line":323,"column":40}},"63":{"start":{"line":325,"column":4},"end":{"line":329,"column":5}},"64":{"start":{"line":326,"column":6},"end":{"line":328,"column":7}},"65":{"start":{"line":327,"column":8},"end":{"line":327,"column":21}},"66":{"start":{"line":330,"column":4},"end":{"line":330,"column":14}},"67":{"start":{"line":342,"column":2},"end":{"line":355,"column":3}},"68":{"start":{"line":343,"column":4},"end":{"line":345,"column":5}},"69":{"start":{"line":344,"column":6},"end":{"line":344,"column":42}},"70":{"start":{"line":346,"column":4},"end":{"line":347,"column":30}},"71":{"start":{"line":349,"column":4},"end":{"line":353,"column":5}},"72":{"start":{"line":350,"column":6},"end":{"line":352,"column":7}},"73":{"start":{"line":351,"column":8},"end":{"line":351,"column":21}},"74":{"start":{"line":354,"column":4},"end":{"line":354,"column":14}},"75":{"start":{"line":365,"column":2},"end":{"line":369,"column":3}},"76":{"start":{"line":368,"column":4},"end":{"line":368,"column":47}},"77":{"start":{"line":379,"column":2},"end":{"line":381,"column":3}},"78":{"start":{"line":380,"column":4},"end":{"line":380,"column":45}},"79":{"start":{"line":392,"column":2},"end":{"line":398,"column":3}},"80":{"start":{"line":393,"column":4},"end":{"line":394,"column":31}},"81":{"start":{"line":396,"column":4},"end":{"line":396,"column":75}},"82":{"start":{"line":397,"column":4},"end":{"line":397,"column":17}},"83":{"start":{"line":409,"column":2},"end":{"line":414,"column":3}},"84":{"start":{"line":410,"column":4},"end":{"line":410,"column":30}},"85":{"start":{"line":412,"column":4},"end":{"line":412,"column":66}},"86":{"start":{"line":413,"column":4},"end":{"line":413,"column":17}},"87":{"start":{"line":425,"column":2},"end":{"line":427,"column":3}},"88":{"start":{"line":426,"column":4},"end":{"line":426,"column":97}},"89":{"start":{"line":443,"column":2},"end":{"line":468,"column":3}},"90":{"start":{"line":444,"column":4},"end":{"line":448,"column":37}},"91":{"start":{"line":450,"column":4},"end":{"line":459,"column":5}},"92":{"start":{"line":451,"column":6},"end":{"line":451,"column":80}},"93":{"start":{"line":452,"column":6},"end":{"line":458,"column":7}},"94":{"start":{"line":453,"column":8},"end":{"line":455,"column":9}},"95":{"start":{"line":454,"column":10},"end":{"line":454,"column":24}},"96":{"start":{"line":456,"column":8},"end":{"line":456,"column":34}},"97":{"start":{"line":457,"column":8},"end":{"line":457,"column":71}},"98":{"start":{"line":467,"column":4},"end":{"line":467,"column":38}},"99":{"start":{"line":477,"column":2},"end":{"line":479,"column":3}},"100":{"start":{"line":478,"column":4},"end":{"line":478,"column":35}},"101":{"start":{"line":488,"column":2},"end":{"line":490,"column":3}},"102":{"start":{"line":489,"column":4},"end":{"line":489,"column":28}},"103":{"start":{"line":501,"column":2},"end":{"line":508,"column":3}},"104":{"start":{"line":502,"column":4},"end":{"line":506,"column":5}},"105":{"start":{"line":503,"column":6},"end":{"line":503,"column":31}},"106":{"start":{"line":504,"column":11},"end":{"line":506,"column":5}},"107":{"start":{"line":505,"column":6},"end":{"line":505,"column":31}},"108":{"start":{"line":507,"column":4},"end":{"line":507,"column":22}},"109":{"start":{"line":517,"column":2},"end":{"line":519,"column":3}},"110":{"start":{"line":518,"column":4},"end":{"line":518,"column":37}},"111":{"start":{"line":530,"column":2},"end":{"line":541,"column":3}},"112":{"start":{"line":531,"column":4},"end":{"line":532,"column":49}},"113":{"start":{"line":534,"column":4},"end":{"line":539,"column":5}},"114":{"start":{"line":535,"column":6},"end":{"line":535,"column":31}},"115":{"start":{"line":536,"column":6},"end":{"line":538,"column":7}},"116":{"start":{"line":537,"column":8},"end":{"line":537,"column":21}},"117":{"start":{"line":540,"column":4},"end":{"line":540,"column":14}},"118":{"start":{"line":550,"column":2},"end":{"line":552,"column":3}},"119":{"start":{"line":551,"column":4},"end":{"line":551,"column":47}},"120":{"start":{"line":562,"column":2},"end":{"line":565,"column":3}},"121":{"start":{"line":563,"column":4},"end":{"line":564,"column":170}},"122":{"start":{"line":576,"column":2},"end":{"line":589,"column":3}},"123":{"start":{"line":577,"column":4},"end":{"line":580,"column":20}},"124":{"start":{"line":582,"column":4},"end":{"line":587,"column":5}},"125":{"start":{"line":583,"column":6},"end":{"line":586,"column":7}},"126":{"start":{"line":584,"column":8},"end":{"line":584,"column":35}},"127":{"start":{"line":585,"column":8},"end":{"line":585,"column":35}},"128":{"start":{"line":588,"column":4},"end":{"line":588,"column":18}},"129":{"start":{"line":600,"column":2},"end":{"line":617,"column":3}},"130":{"start":{"line":601,"column":4},"end":{"line":605,"column":20}},"131":{"start":{"line":607,"column":4},"end":{"line":615,"column":5}},"132":{"start":{"line":608,"column":6},"end":{"line":609,"column":70}},"133":{"start":{"line":611,"column":6},"end":{"line":614,"column":7}},"134":{"start":{"line":612,"column":8},"end":{"line":612,"column":24}},"135":{"start":{"line":613,"column":8},"end":{"line":613,"column":35}},"136":{"start":{"line":616,"column":4},"end":{"line":616,"column":18}},"137":{"start":{"line":627,"column":2},"end":{"line":633,"column":3}},"138":{"start":{"line":628,"column":4},"end":{"line":629,"column":31}},"139":{"start":{"line":631,"column":4},"end":{"line":631,"column":68}},"140":{"start":{"line":632,"column":4},"end":{"line":632,"column":17}},"141":{"start":{"line":643,"column":2},"end":{"line":648,"column":3}},"142":{"start":{"line":644,"column":4},"end":{"line":644,"column":30}},"143":{"start":{"line":646,"column":4},"end":{"line":646,"column":59}},"144":{"start":{"line":647,"column":4},"end":{"line":647,"column":17}},"145":{"start":{"line":657,"column":2},"end":{"line":659,"column":3}},"146":{"start":{"line":658,"column":4},"end":{"line":658,"column":30}},"147":{"start":{"line":698,"column":2},"end":{"line":12315,"column":3}},"148":{"start":{"line":703,"column":4},"end":{"line":703,"column":94}},"149":{"start":{"line":706,"column":4},"end":{"line":715,"column":38}},"150":{"start":{"line":718,"column":4},"end":{"line":720,"column":39}},"151":{"start":{"line":723,"column":4},"end":{"line":723,"column":49}},"152":{"start":{"line":726,"column":4},"end":{"line":726,"column":52}},"153":{"start":{"line":729,"column":4},"end":{"line":729,"column":22}},"154":{"start":{"line":735,"column":4},"end":{"line":735,"column":43}},"155":{"start":{"line":738,"column":4},"end":{"line":738,"column":25}},"156":{"start":{"line":741,"column":4},"end":{"line":744,"column":6}},"157":{"start":{"line":747,"column":4},"end":{"line":756,"column":48}},"158":{"start":{"line":759,"column":4},"end":{"line":769,"column":35}},"159":{"start":{"line":772,"column":4},"end":{"line":773,"column":53}},"160":{"start":{"line":776,"column":4},"end":{"line":778,"column":55}},"161":{"start":{"line":784,"column":4},"end":{"line":784,"column":44}},"162":{"start":{"line":787,"column":4},"end":{"line":787,"column":41}},"163":{"start":{"line":790,"column":4},"end":{"line":790,"column":23}},"164":{"start":{"line":890,"column":4},"end":{"line":900,"column":5}},"165":{"start":{"line":891,"column":6},"end":{"line":898,"column":7}},"166":{"start":{"line":892,"column":8},"end":{"line":894,"column":9}},"167":{"start":{"line":893,"column":10},"end":{"line":893,"column":23}},"168":{"start":{"line":895,"column":8},"end":{"line":897,"column":9}},"169":{"start":{"line":896,"column":10},"end":{"line":896,"column":37}},"170":{"start":{"line":899,"column":6},"end":{"line":899,"column":38}},"171":{"start":{"line":907,"column":4},"end":{"line":909,"column":5}},"172":{"start":{"line":919,"column":4},"end":{"line":923,"column":5}},"173":{"start":{"line":920,"column":6},"end":{"line":920,"column":31}},"174":{"start":{"line":921,"column":6},"end":{"line":921,"column":39}},"175":{"start":{"line":922,"column":6},"end":{"line":922,"column":34}},"176":{"start":{"line":932,"column":4},"end":{"line":932,"column":38}},"177":{"start":{"line":943,"column":4},"end":{"line":993,"column":6}},"178":{"start":{"line":1003,"column":4},"end":{"line":1011,"column":5}},"179":{"start":{"line":1004,"column":6},"end":{"line":1004,"column":31}},"180":{"start":{"line":1005,"column":6},"end":{"line":1005,"column":28}},"181":{"start":{"line":1006,"column":6},"end":{"line":1006,"column":23}},"182":{"start":{"line":1007,"column":6},"end":{"line":1007,"column":32}},"183":{"start":{"line":1008,"column":6},"end":{"line":1008,"column":30}},"184":{"start":{"line":1009,"column":6},"end":{"line":1009,"column":45}},"185":{"start":{"line":1010,"column":6},"end":{"line":1010,"column":26}},"186":{"start":{"line":1021,"column":4},"end":{"line":1030,"column":5}},"187":{"start":{"line":1022,"column":6},"end":{"line":1022,"column":53}},"188":{"start":{"line":1023,"column":6},"end":{"line":1023,"column":55}},"189":{"start":{"line":1024,"column":6},"end":{"line":1024,"column":36}},"190":{"start":{"line":1025,"column":6},"end":{"line":1025,"column":46}},"191":{"start":{"line":1026,"column":6},"end":{"line":1026,"column":59}},"192":{"start":{"line":1027,"column":6},"end":{"line":1027,"column":48}},"193":{"start":{"line":1028,"column":6},"end":{"line":1028,"column":51}},"194":{"start":{"line":1029,"column":6},"end":{"line":1029,"column":20}},"195":{"start":{"line":1040,"column":4},"end":{"line":1050,"column":5}},"196":{"start":{"line":1041,"column":6},"end":{"line":1048,"column":7}},"197":{"start":{"line":1042,"column":8},"end":{"line":1042,"column":43}},"198":{"start":{"line":1043,"column":8},"end":{"line":1043,"column":28}},"199":{"start":{"line":1044,"column":8},"end":{"line":1044,"column":35}},"200":{"start":{"line":1046,"column":8},"end":{"line":1046,"column":30}},"201":{"start":{"line":1047,"column":8},"end":{"line":1047,"column":29}},"202":{"start":{"line":1049,"column":6},"end":{"line":1049,"column":20}},"203":{"start":{"line":1060,"column":4},"end":{"line":1107,"column":5}},"204":{"start":{"line":1061,"column":6},"end":{"line":1074,"column":60}},"205":{"start":{"line":1076,"column":6},"end":{"line":1078,"column":7}},"206":{"start":{"line":1077,"column":8},"end":{"line":1077,"column":96}},"207":{"start":{"line":1079,"column":6},"end":{"line":1079,"column":22}},"208":{"start":{"line":1081,"column":6},"end":{"line":1105,"column":7}},"209":{"start":{"line":1082,"column":6},"end":{"line":1105,"column":7}},"210":{"start":{"line":1083,"column":8},"end":{"line":1083,"column":21}},"211":{"start":{"line":1085,"column":8},"end":{"line":1086,"column":33}},"212":{"start":{"line":1088,"column":8},"end":{"line":1103,"column":9}},"213":{"start":{"line":1089,"column":10},"end":{"line":1092,"column":41}},"214":{"start":{"line":1094,"column":10},"end":{"line":1102,"column":11}},"215":{"start":{"line":1095,"column":12},"end":{"line":1095,"column":29}},"216":{"start":{"line":1096,"column":17},"end":{"line":1102,"column":11}},"217":{"start":{"line":1097,"column":12},"end":{"line":1101,"column":13}},"218":{"start":{"line":1098,"column":14},"end":{"line":1098,"column":29}},"219":{"start":{"line":1100,"column":14},"end":{"line":1100,"column":26}},"220":{"start":{"line":1104,"column":8},"end":{"line":1104,"column":35}},"221":{"start":{"line":1106,"column":6},"end":{"line":1106,"column":20}},"222":{"start":{"line":1119,"column":4},"end":{"line":1121,"column":5}},"223":{"start":{"line":1120,"column":6},"end":{"line":1120,"column":25}},"224":{"start":{"line":1132,"column":4},"end":{"line":1134,"column":5}},"225":{"start":{"line":1133,"column":6},"end":{"line":1133,"column":56}},"226":{"start":{"line":1145,"column":4},"end":{"line":1147,"column":5}},"227":{"start":{"line":1146,"column":6},"end":{"line":1146,"column":65}},"228":{"start":{"line":1158,"column":4},"end":{"line":1160,"column":5}},"229":{"start":{"line":1159,"column":6},"end":{"line":1159,"column":75}},"230":{"start":{"line":1172,"column":4},"end":{"line":1177,"column":5}},"231":{"start":{"line":1173,"column":6},"end":{"line":1175,"column":7}},"232":{"start":{"line":1174,"column":8},"end":{"line":1174,"column":35}},"233":{"start":{"line":1176,"column":6},"end":{"line":1176,"column":18}},"234":{"start":{"line":1188,"column":4},"end":{"line":1195,"column":5}},"235":{"start":{"line":1189,"column":6},"end":{"line":1189,"column":46}},"236":{"start":{"line":1191,"column":6},"end":{"line":1191,"column":65}},"237":{"start":{"line":1192,"column":6},"end":{"line":1194,"column":7}},"238":{"start":{"line":1193,"column":8},"end":{"line":1193,"column":34}},"239":{"start":{"line":1206,"column":4},"end":{"line":1211,"column":5}},"240":{"start":{"line":1207,"column":6},"end":{"line":1208,"column":106}},"241":{"start":{"line":1210,"column":6},"end":{"line":1210,"column":29}},"242":{"start":{"line":1221,"column":4},"end":{"line":1228,"column":5}},"243":{"start":{"line":1222,"column":6},"end":{"line":1222,"column":27}},"244":{"start":{"line":1223,"column":6},"end":{"line":1227,"column":7}},"245":{"start":{"line":1224,"column":8},"end":{"line":1224,"column":28}},"246":{"start":{"line":1226,"column":8},"end":{"line":1226,"column":32}},"247":{"start":{"line":1240,"column":4},"end":{"line":1254,"column":5}},"248":{"start":{"line":1241,"column":6},"end":{"line":1245,"column":45}},"249":{"start":{"line":1247,"column":6},"end":{"line":1249,"column":7}},"250":{"start":{"line":1248,"column":8},"end":{"line":1248,"column":37}},"251":{"start":{"line":1250,"column":6},"end":{"line":1252,"column":7}},"252":{"start":{"line":1251,"column":8},"end":{"line":1251,"column":42}},"253":{"start":{"line":1253,"column":6},"end":{"line":1253,"column":20}},"254":{"start":{"line":1264,"column":4},"end":{"line":1273,"column":5}},"255":{"start":{"line":1265,"column":6},"end":{"line":1266,"column":33}},"256":{"start":{"line":1268,"column":6},"end":{"line":1268,"column":39}},"257":{"start":{"line":1269,"column":6},"end":{"line":1271,"column":7}},"258":{"start":{"line":1270,"column":8},"end":{"line":1270,"column":37}},"259":{"start":{"line":1272,"column":6},"end":{"line":1272,"column":19}},"260":{"start":{"line":1284,"column":4},"end":{"line":1294,"column":5}},"261":{"start":{"line":1285,"column":6},"end":{"line":1286,"column":32}},"262":{"start":{"line":1288,"column":6},"end":{"line":1292,"column":7}},"263":{"start":{"line":1289,"column":8},"end":{"line":1291,"column":9}},"264":{"start":{"line":1290,"column":10},"end":{"line":1290,"column":16}},"265":{"start":{"line":1293,"column":6},"end":{"line":1293,"column":19}},"266":{"start":{"line":1305,"column":4},"end":{"line":1314,"column":5}},"267":{"start":{"line":1306,"column":6},"end":{"line":1306,"column":32}},"268":{"start":{"line":1308,"column":6},"end":{"line":1312,"column":7}},"269":{"start":{"line":1309,"column":8},"end":{"line":1311,"column":9}},"270":{"start":{"line":1310,"column":10},"end":{"line":1310,"column":16}},"271":{"start":{"line":1313,"column":6},"end":{"line":1313,"column":19}},"272":{"start":{"line":1326,"column":4},"end":{"line":1336,"column":5}},"273":{"start":{"line":1327,"column":6},"end":{"line":1328,"column":32}},"274":{"start":{"line":1330,"column":6},"end":{"line":1334,"column":7}},"275":{"start":{"line":1331,"column":8},"end":{"line":1333,"column":9}},"276":{"start":{"line":1332,"column":10},"end":{"line":1332,"column":23}},"277":{"start":{"line":1335,"column":6},"end":{"line":1335,"column":18}},"278":{"start":{"line":1349,"column":4},"end":{"line":1365,"column":5}},"279":{"start":{"line":1350,"column":6},"end":{"line":1353,"column":28}},"280":{"start":{"line":1355,"column":6},"end":{"line":1363,"column":7}},"281":{"start":{"line":1356,"column":8},"end":{"line":1357,"column":39}},"282":{"start":{"line":1359,"column":8},"end":{"line":1362,"column":9}},"283":{"start":{"line":1360,"column":10},"end":{"line":1360,"column":29}},"284":{"start":{"line":1361,"column":10},"end":{"line":1361,"column":25}},"285":{"start":{"line":1364,"column":6},"end":{"line":1364,"column":20}},"286":{"start":{"line":1376,"column":4},"end":{"line":1389,"column":5}},"287":{"start":{"line":1377,"column":6},"end":{"line":1380,"column":22}},"288":{"start":{"line":1382,"column":6},"end":{"line":1387,"column":7}},"289":{"start":{"line":1383,"column":8},"end":{"line":1383,"column":33}},"290":{"start":{"line":1384,"column":8},"end":{"line":1386,"column":9}},"291":{"start":{"line":1385,"column":10},"end":{"line":1385,"column":37}},"292":{"start":{"line":1388,"column":6},"end":{"line":1388,"column":20}},"293":{"start":{"line":1400,"column":4},"end":{"line":1409,"column":5}},"294":{"start":{"line":1401,"column":6},"end":{"line":1403,"column":33}},"295":{"start":{"line":1405,"column":6},"end":{"line":1407,"column":7}},"296":{"start":{"line":1406,"column":8},"end":{"line":1406,"column":61}},"297":{"start":{"line":1408,"column":6},"end":{"line":1408,"column":20}},"298":{"start":{"line":1419,"column":4},"end":{"line":1428,"column":5}},"299":{"start":{"line":1420,"column":6},"end":{"line":1422,"column":32}},"300":{"start":{"line":1424,"column":6},"end":{"line":1426,"column":7}},"301":{"start":{"line":1425,"column":8},"end":{"line":1425,"column":46}},"302":{"start":{"line":1427,"column":6},"end":{"line":1427,"column":19}},"303":{"start":{"line":1442,"column":4},"end":{"line":1453,"column":5}},"304":{"start":{"line":1443,"column":6},"end":{"line":1444,"column":32}},"305":{"start":{"line":1446,"column":6},"end":{"line":1448,"column":7}},"306":{"start":{"line":1447,"column":8},"end":{"line":1447,"column":37}},"307":{"start":{"line":1449,"column":6},"end":{"line":1451,"column":7}},"308":{"start":{"line":1450,"column":8},"end":{"line":1450,"column":72}},"309":{"start":{"line":1452,"column":6},"end":{"line":1452,"column":25}},"310":{"start":{"line":1467,"column":4},"end":{"line":1476,"column":5}},"311":{"start":{"line":1468,"column":6},"end":{"line":1468,"column":32}},"312":{"start":{"line":1469,"column":6},"end":{"line":1471,"column":7}},"313":{"start":{"line":1470,"column":8},"end":{"line":1470,"column":38}},"314":{"start":{"line":1472,"column":6},"end":{"line":1474,"column":7}},"315":{"start":{"line":1473,"column":8},"end":{"line":1473,"column":74}},"316":{"start":{"line":1475,"column":6},"end":{"line":1475,"column":25}},"317":{"start":{"line":1488,"column":4},"end":{"line":1498,"column":5}},"318":{"start":{"line":1489,"column":6},"end":{"line":1490,"column":32}},"319":{"start":{"line":1492,"column":6},"end":{"line":1496,"column":7}},"320":{"start":{"line":1493,"column":8},"end":{"line":1495,"column":9}},"321":{"start":{"line":1494,"column":10},"end":{"line":1494,"column":22}},"322":{"start":{"line":1497,"column":6},"end":{"line":1497,"column":19}},"323":{"start":{"line":1509,"column":4},"end":{"line":1517,"column":5}},"324":{"start":{"line":1510,"column":6},"end":{"line":1511,"column":21}},"325":{"start":{"line":1513,"column":6},"end":{"line":1515,"column":7}},"326":{"start":{"line":1514,"column":8},"end":{"line":1514,"column":48}},"327":{"start":{"line":1516,"column":6},"end":{"line":1516,"column":20}},"328":{"start":{"line":1527,"column":4},"end":{"line":1529,"column":5}},"329":{"start":{"line":1528,"column":6},"end":{"line":1528,"column":67}},"330":{"start":{"line":1544,"column":4},"end":{"line":1548,"column":5}},"331":{"start":{"line":1545,"column":6},"end":{"line":1547,"column":22}},"332":{"start":{"line":1561,"column":4},"end":{"line":1577,"column":5}},"333":{"start":{"line":1562,"column":6},"end":{"line":1564,"column":32}},"334":{"start":{"line":1566,"column":6},"end":{"line":1575,"column":7}},"335":{"start":{"line":1567,"column":8},"end":{"line":1569,"column":73}},"336":{"start":{"line":1571,"column":8},"end":{"line":1574,"column":9}},"337":{"start":{"line":1573,"column":10},"end":{"line":1573,"column":31}},"338":{"start":{"line":1576,"column":6},"end":{"line":1576,"column":20}},"339":{"start":{"line":1588,"column":4},"end":{"line":1592,"column":5}},"340":{"start":{"line":1589,"column":6},"end":{"line":1591,"column":49}},"341":{"start":{"line":1603,"column":4},"end":{"line":1620,"column":5}},"342":{"start":{"line":1604,"column":6},"end":{"line":1609,"column":38}},"343":{"start":{"line":1611,"column":6},"end":{"line":1618,"column":7}},"344":{"start":{"line":1612,"column":8},"end":{"line":1612,"column":31}},"345":{"start":{"line":1613,"column":8},"end":{"line":1617,"column":9}},"346":{"start":{"line":1614,"column":10},"end":{"line":1614,"column":77}},"347":{"start":{"line":1616,"column":10},"end":{"line":1616,"column":62}},"348":{"start":{"line":1619,"column":6},"end":{"line":1619,"column":20}},"349":{"start":{"line":1631,"column":4},"end":{"line":1642,"column":5}},"350":{"start":{"line":1632,"column":6},"end":{"line":1632,"column":30}},"351":{"start":{"line":1634,"column":6},"end":{"line":1635,"column":32}},"352":{"start":{"line":1637,"column":6},"end":{"line":1640,"column":7}},"353":{"start":{"line":1638,"column":8},"end":{"line":1638,"column":31}},"354":{"start":{"line":1639,"column":8},"end":{"line":1639,"column":34}},"355":{"start":{"line":1641,"column":6},"end":{"line":1641,"column":20}},"356":{"start":{"line":1654,"column":4},"end":{"line":1670,"column":5}},"357":{"start":{"line":1655,"column":6},"end":{"line":1655,"column":29}},"358":{"start":{"line":1656,"column":6},"end":{"line":1660,"column":7}},"359":{"start":{"line":1657,"column":8},"end":{"line":1659,"column":50}},"360":{"start":{"line":1661,"column":6},"end":{"line":1663,"column":7}},"361":{"start":{"line":1662,"column":8},"end":{"line":1662,"column":24}},"362":{"start":{"line":1664,"column":6},"end":{"line":1666,"column":7}},"363":{"start":{"line":1665,"column":8},"end":{"line":1665,"column":33}},"364":{"start":{"line":1667,"column":6},"end":{"line":1669,"column":45}},"365":{"start":{"line":1686,"column":4},"end":{"line":1737,"column":5}},"366":{"start":{"line":1687,"column":6},"end":{"line":1687,"column":17}},"367":{"start":{"line":1688,"column":6},"end":{"line":1690,"column":7}},"368":{"start":{"line":1689,"column":8},"end":{"line":1689,"column":77}},"369":{"start":{"line":1691,"column":6},"end":{"line":1693,"column":7}},"370":{"start":{"line":1692,"column":8},"end":{"line":1692,"column":22}},"371":{"start":{"line":1694,"column":6},"end":{"line":1696,"column":7}},"372":{"start":{"line":1695,"column":8},"end":{"line":1695,"column":21}},"373":{"start":{"line":1697,"column":6},"end":{"line":1697,"column":33}},"374":{"start":{"line":1698,"column":6},"end":{"line":1717,"column":7}},"375":{"start":{"line":1699,"column":8},"end":{"line":1699,"column":39}},"376":{"start":{"line":1700,"column":8},"end":{"line":1702,"column":9}},"377":{"start":{"line":1701,"column":10},"end":{"line":1701,"column":42}},"378":{"start":{"line":1704,"column":8},"end":{"line":1705,"column":36}},"379":{"start":{"line":1707,"column":8},"end":{"line":1716,"column":9}},"380":{"start":{"line":1708,"column":10},"end":{"line":1708,"column":56}},"381":{"start":{"line":1709,"column":10},"end":{"line":1711,"column":11}},"382":{"start":{"line":1710,"column":12},"end":{"line":1710,"column":45}},"383":{"start":{"line":1713,"column":10},"end":{"line":1715,"column":36}},"384":{"start":{"line":1719,"column":6},"end":{"line":1719,"column":30}},"385":{"start":{"line":1720,"column":6},"end":{"line":1720,"column":30}},"386":{"start":{"line":1722,"column":6},"end":{"line":1722,"column":33}},"387":{"start":{"line":1723,"column":6},"end":{"line":1727,"column":7}},"388":{"start":{"line":1724,"column":8},"end":{"line":1726,"column":9}},"389":{"start":{"line":1725,"column":10},"end":{"line":1725,"column":32}},"390":{"start":{"line":1729,"column":6},"end":{"line":1729,"column":25}},"391":{"start":{"line":1730,"column":6},"end":{"line":1730,"column":26}},"392":{"start":{"line":1733,"column":6},"end":{"line":1735,"column":9}},"393":{"start":{"line":1734,"column":8},"end":{"line":1734,"column":90}},"394":{"start":{"line":1736,"column":6},"end":{"line":1736,"column":20}},"395":{"start":{"line":1747,"column":4},"end":{"line":1757,"column":9}},"396":{"start":{"line":1748,"column":6},"end":{"line":1748,"column":26}},"397":{"start":{"line":1749,"column":6},"end":{"line":1756,"column":8}},"398":{"start":{"line":1750,"column":8},"end":{"line":1754,"column":9}},"399":{"start":{"line":1751,"column":10},"end":{"line":1751,"column":39}},"400":{"start":{"line":1752,"column":10},"end":{"line":1752,"column":34}},"401":{"start":{"line":1753,"column":10},"end":{"line":1753,"column":39}},"402":{"start":{"line":1755,"column":8},"end":{"line":1755,"column":28}},"403":{"start":{"line":1769,"column":4},"end":{"line":1774,"column":5}},"404":{"start":{"line":1770,"column":6},"end":{"line":1772,"column":7}},"405":{"start":{"line":1771,"column":8},"end":{"line":1771,"column":45}},"406":{"start":{"line":1773,"column":6},"end":{"line":1773,"column":75}},"407":{"start":{"line":1773,"column":37},"end":{"line":1773,"column":65}},"408":{"start":{"line":1785,"column":4},"end":{"line":1821,"column":5}},"409":{"start":{"line":1786,"column":6},"end":{"line":1787,"column":22}},"410":{"start":{"line":1789,"column":6},"end":{"line":1791,"column":7}},"411":{"start":{"line":1790,"column":8},"end":{"line":1790,"column":22}},"412":{"start":{"line":1792,"column":6},"end":{"line":1796,"column":39}},"413":{"start":{"line":1798,"column":6},"end":{"line":1802,"column":7}},"414":{"start":{"line":1799,"column":8},"end":{"line":1799,"column":31}},"415":{"start":{"line":1800,"column":8},"end":{"line":1800,"column":25}},"416":{"start":{"line":1801,"column":8},"end":{"line":1801,"column":23}},"417":{"start":{"line":1803,"column":6},"end":{"line":1819,"column":7}},"418":{"start":{"line":1804,"column":6},"end":{"line":1819,"column":7}},"419":{"start":{"line":1805,"column":8},"end":{"line":1805,"column":33}},"420":{"start":{"line":1807,"column":8},"end":{"line":1818,"column":9}},"421":{"start":{"line":1808,"column":10},"end":{"line":1808,"column":41}},"422":{"start":{"line":1809,"column":10},"end":{"line":1813,"column":11}},"423":{"start":{"line":1810,"column":12},"end":{"line":1812,"column":13}},"424":{"start":{"line":1811,"column":14},"end":{"line":1811,"column":29}},"425":{"start":{"line":1814,"column":10},"end":{"line":1814,"column":29}},"426":{"start":{"line":1816,"column":13},"end":{"line":1818,"column":9}},"427":{"start":{"line":1817,"column":10},"end":{"line":1817,"column":29}},"428":{"start":{"line":1820,"column":6},"end":{"line":1820,"column":20}},"429":{"start":{"line":1832,"column":4},"end":{"line":1832,"column":46}},"430":{"start":{"line":1843,"column":4},"end":{"line":1843,"column":62}},"431":{"start":{"line":1855,"column":4},"end":{"line":1862,"column":5}},"432":{"start":{"line":1856,"column":6},"end":{"line":1856,"column":24}},"433":{"start":{"line":1857,"column":6},"end":{"line":1860,"column":9}},"434":{"start":{"line":1858,"column":8},"end":{"line":1858,"column":55}},"435":{"start":{"line":1859,"column":8},"end":{"line":1859,"column":22}},"436":{"start":{"line":1861,"column":6},"end":{"line":1861,"column":20}},"437":{"start":{"line":1876,"column":4},"end":{"line":1888,"column":5}},"438":{"start":{"line":1877,"column":6},"end":{"line":1878,"column":28}},"439":{"start":{"line":1880,"column":6},"end":{"line":1886,"column":9}},"440":{"start":{"line":1881,"column":8},"end":{"line":1881,"column":58}},"441":{"start":{"line":1882,"column":8},"end":{"line":1885,"column":9}},"442":{"start":{"line":1883,"column":10},"end":{"line":1883,"column":29}},"443":{"start":{"line":1884,"column":10},"end":{"line":1884,"column":25}},"444":{"start":{"line":1887,"column":6},"end":{"line":1887,"column":20}},"445":{"start":{"line":1900,"column":4},"end":{"line":1918,"column":5}},"446":{"start":{"line":1901,"column":6},"end":{"line":1901,"column":32}},"447":{"start":{"line":1903,"column":6},"end":{"line":1903,"column":48}},"448":{"start":{"line":1904,"column":6},"end":{"line":1906,"column":7}},"449":{"start":{"line":1905,"column":8},"end":{"line":1905,"column":55}},"450":{"start":{"line":1907,"column":6},"end":{"line":1907,"column":71}},"451":{"start":{"line":1908,"column":6},"end":{"line":1910,"column":7}},"452":{"start":{"line":1909,"column":8},"end":{"line":1909,"column":22}},"453":{"start":{"line":1911,"column":6},"end":{"line":1911,"column":45}},"454":{"start":{"line":1912,"column":6},"end":{"line":1912,"column":19}},"455":{"start":{"line":1914,"column":6},"end":{"line":1916,"column":7}},"456":{"start":{"line":1915,"column":8},"end":{"line":1915,"column":31}},"457":{"start":{"line":1917,"column":6},"end":{"line":1917,"column":19}},"458":{"start":{"line":1929,"column":4},"end":{"line":1937,"column":5}},"459":{"start":{"line":1930,"column":6},"end":{"line":1930,"column":22}},"460":{"start":{"line":1931,"column":6},"end":{"line":1935,"column":9}},"461":{"start":{"line":1932,"column":8},"end":{"line":1934,"column":9}},"462":{"start":{"line":1933,"column":10},"end":{"line":1933,"column":29}},"463":{"start":{"line":1936,"column":6},"end":{"line":1936,"column":20}},"464":{"start":{"line":1952,"column":4},"end":{"line":1961,"column":5}},"465":{"start":{"line":1953,"column":6},"end":{"line":1953,"column":17}},"466":{"start":{"line":1954,"column":6},"end":{"line":1959,"column":9}},"467":{"start":{"line":1955,"column":8},"end":{"line":1958,"column":9}},"468":{"start":{"line":1956,"column":10},"end":{"line":1956,"column":40}},"469":{"start":{"line":1957,"column":10},"end":{"line":1957,"column":23}},"470":{"start":{"line":1960,"column":6},"end":{"line":1960,"column":20}},"471":{"start":{"line":1974,"column":4},"end":{"line":1995,"column":5}},"472":{"start":{"line":1975,"column":6},"end":{"line":1975,"column":30}},"473":{"start":{"line":1977,"column":6},"end":{"line":1978,"column":32}},"474":{"start":{"line":1980,"column":6},"end":{"line":1993,"column":7}},"475":{"start":{"line":1981,"column":8},"end":{"line":1981,"column":33}},"476":{"start":{"line":1982,"column":8},"end":{"line":1992,"column":9}},"477":{"start":{"line":1984,"column":10},"end":{"line":1989,"column":11}},"478":{"start":{"line":1986,"column":12},"end":{"line":1986,"column":57}},"479":{"start":{"line":1988,"column":12},"end":{"line":1988,"column":37}},"480":{"start":{"line":1990,"column":15},"end":{"line":1992,"column":9}},"481":{"start":{"line":1991,"column":10},"end":{"line":1991,"column":40}},"482":{"start":{"line":1994,"column":6},"end":{"line":1994,"column":20}},"483":{"start":{"line":2009,"column":4},"end":{"line":2009,"column":34}},"484":{"start":{"line":2021,"column":4},"end":{"line":2021,"column":43}},"485":{"start":{"line":2032,"column":4},"end":{"line":2034,"column":5}},"486":{"start":{"line":2033,"column":6},"end":{"line":2033,"column":47}},"487":{"start":{"line":2045,"column":4},"end":{"line":2047,"column":5}},"488":{"start":{"line":2046,"column":6},"end":{"line":2046,"column":45}},"489":{"start":{"line":2058,"column":4},"end":{"line":2060,"column":5}},"490":{"start":{"line":2059,"column":6},"end":{"line":2059,"column":50}},"491":{"start":{"line":2071,"column":4},"end":{"line":2084,"column":5}},"492":{"start":{"line":2072,"column":6},"end":{"line":2075,"column":22}},"493":{"start":{"line":2077,"column":6},"end":{"line":2082,"column":7}},"494":{"start":{"line":2078,"column":8},"end":{"line":2078,"column":31}},"495":{"start":{"line":2079,"column":8},"end":{"line":2081,"column":9}},"496":{"start":{"line":2080,"column":10},"end":{"line":2080,"column":35}},"497":{"start":{"line":2083,"column":6},"end":{"line":2083,"column":20}},"498":{"start":{"line":2096,"column":4},"end":{"line":2110,"column":5}},"499":{"start":{"line":2097,"column":6},"end":{"line":2099,"column":7}},"500":{"start":{"line":2098,"column":8},"end":{"line":2098,"column":15}},"501":{"start":{"line":2100,"column":6},"end":{"line":2102,"column":7}},"502":{"start":{"line":2101,"column":8},"end":{"line":2101,"column":25}},"503":{"start":{"line":2103,"column":6},"end":{"line":2104,"column":31}},"504":{"start":{"line":2106,"column":6},"end":{"line":2108,"column":7}},"505":{"start":{"line":2107,"column":8},"end":{"line":2107,"column":39}},"506":{"start":{"line":2109,"column":6},"end":{"line":2109,"column":61}},"507":{"start":{"line":2125,"column":4},"end":{"line":2133,"column":5}},"508":{"start":{"line":2126,"column":6},"end":{"line":2128,"column":7}},"509":{"start":{"line":2127,"column":8},"end":{"line":2127,"column":20}},"510":{"start":{"line":2129,"column":6},"end":{"line":2131,"column":7}},"511":{"start":{"line":2130,"column":8},"end":{"line":2130,"column":50}},"512":{"start":{"line":2132,"column":6},"end":{"line":2132,"column":93}},"513":{"start":{"line":2150,"column":4},"end":{"line":2211,"column":5}},"514":{"start":{"line":2151,"column":6},"end":{"line":2154,"column":28}},"515":{"start":{"line":2156,"column":6},"end":{"line":2163,"column":7}},"516":{"start":{"line":2157,"column":8},"end":{"line":2157,"column":42}},"517":{"start":{"line":2158,"column":8},"end":{"line":2162,"column":9}},"518":{"start":{"line":2159,"column":10},"end":{"line":2159,"column":29}},"519":{"start":{"line":2160,"column":15},"end":{"line":2162,"column":9}},"520":{"start":{"line":2161,"column":10},"end":{"line":2161,"column":42}},"521":{"start":{"line":2164,"column":6},"end":{"line":2171,"column":7}},"522":{"start":{"line":2165,"column":8},"end":{"line":2165,"column":41}},"523":{"start":{"line":2166,"column":8},"end":{"line":2170,"column":9}},"524":{"start":{"line":2167,"column":10},"end":{"line":2167,"column":29}},"525":{"start":{"line":2168,"column":15},"end":{"line":2170,"column":9}},"526":{"start":{"line":2169,"column":10},"end":{"line":2169,"column":41}},"527":{"start":{"line":2172,"column":6},"end":{"line":2174,"column":39}},"528":{"start":{"line":2176,"column":6},"end":{"line":2178,"column":7}},"529":{"start":{"line":2177,"column":8},"end":{"line":2177,"column":49}},"530":{"start":{"line":2179,"column":6},"end":{"line":2186,"column":7}},"531":{"start":{"line":2180,"column":8},"end":{"line":2181,"column":81}},"532":{"start":{"line":2183,"column":8},"end":{"line":2185,"column":9}},"533":{"start":{"line":2184,"column":10},"end":{"line":2184,"column":142}},"534":{"start":{"line":2187,"column":6},"end":{"line":2189,"column":7}},"535":{"start":{"line":2188,"column":8},"end":{"line":2188,"column":21}},"536":{"start":{"line":2192,"column":6},"end":{"line":2192,"column":30}},"537":{"start":{"line":2193,"column":6},"end":{"line":2193,"column":30}},"538":{"start":{"line":2195,"column":6},"end":{"line":2195,"column":33}},"539":{"start":{"line":2196,"column":6},"end":{"line":2200,"column":7}},"540":{"start":{"line":2197,"column":8},"end":{"line":2199,"column":9}},"541":{"start":{"line":2198,"column":10},"end":{"line":2198,"column":41}},"542":{"start":{"line":2202,"column":6},"end":{"line":2202,"column":26}},"543":{"start":{"line":2203,"column":6},"end":{"line":2203,"column":25}},"544":{"start":{"line":2205,"column":6},"end":{"line":2205,"column":122}},"545":{"start":{"line":2207,"column":6},"end":{"line":2207,"column":19}},"546":{"start":{"line":2208,"column":6},"end":{"line":2208,"column":19}},"547":{"start":{"line":2210,"column":6},"end":{"line":2210,"column":20}},"548":{"start":{"line":2223,"column":4},"end":{"line":2259,"column":5}},"549":{"start":{"line":2224,"column":6},"end":{"line":2226,"column":37}},"550":{"start":{"line":2228,"column":6},"end":{"line":2230,"column":7}},"551":{"start":{"line":2229,"column":8},"end":{"line":2229,"column":23}},"552":{"start":{"line":2231,"column":6},"end":{"line":2231,"column":32}},"553":{"start":{"line":2232,"column":6},"end":{"line":2240,"column":7}},"554":{"start":{"line":2233,"column":8},"end":{"line":2233,"column":36}},"555":{"start":{"line":2234,"column":8},"end":{"line":2239,"column":9}},"556":{"start":{"line":2238,"column":10},"end":{"line":2238,"column":23}},"557":{"start":{"line":2241,"column":6},"end":{"line":2257,"column":7}},"558":{"start":{"line":2242,"column":8},"end":{"line":2242,"column":32}},"559":{"start":{"line":2243,"column":8},"end":{"line":2245,"column":31}},"560":{"start":{"line":2247,"column":8},"end":{"line":2256,"column":9}},"561":{"start":{"line":2248,"column":10},"end":{"line":2250,"column":11}},"562":{"start":{"line":2249,"column":12},"end":{"line":2249,"column":25}},"563":{"start":{"line":2252,"column":10},"end":{"line":2252,"column":84}},"564":{"start":{"line":2253,"column":10},"end":{"line":2255,"column":11}},"565":{"start":{"line":2254,"column":12},"end":{"line":2254,"column":25}},"566":{"start":{"line":2258,"column":6},"end":{"line":2258,"column":18}},"567":{"start":{"line":2270,"column":4},"end":{"line":2278,"column":5}},"568":{"start":{"line":2271,"column":6},"end":{"line":2272,"column":75}},"569":{"start":{"line":2274,"column":6},"end":{"line":2276,"column":9}},"570":{"start":{"line":2275,"column":8},"end":{"line":2275,"column":59}},"571":{"start":{"line":2277,"column":6},"end":{"line":2277,"column":20}},"572":{"start":{"line":2287,"column":4},"end":{"line":2303,"column":5}},"573":{"start":{"line":2288,"column":6},"end":{"line":2288,"column":43}},"574":{"start":{"line":2289,"column":6},"end":{"line":2299,"column":7}},"575":{"start":{"line":2290,"column":8},"end":{"line":2291,"column":36}},"576":{"start":{"line":2293,"column":8},"end":{"line":2298,"column":10}},"577":{"start":{"line":2294,"column":10},"end":{"line":2296,"column":11}},"578":{"start":{"line":2295,"column":12},"end":{"line":2295,"column":25}},"579":{"start":{"line":2297,"column":10},"end":{"line":2297,"column":93}},"580":{"start":{"line":2300,"column":6},"end":{"line":2302,"column":8}},"581":{"start":{"line":2301,"column":8},"end":{"line":2301,"column":46}},"582":{"start":{"line":2313,"column":4},"end":{"line":2337,"column":5}},"583":{"start":{"line":2314,"column":6},"end":{"line":2316,"column":32}},"584":{"start":{"line":2318,"column":6},"end":{"line":2318,"column":26}},"585":{"start":{"line":2319,"column":6},"end":{"line":2336,"column":8}},"586":{"start":{"line":2320,"column":8},"end":{"line":2322,"column":9}},"587":{"start":{"line":2321,"column":10},"end":{"line":2321,"column":23}},"588":{"start":{"line":2323,"column":8},"end":{"line":2323,"column":26}},"589":{"start":{"line":2324,"column":8},"end":{"line":2324,"column":34}},"590":{"start":{"line":2325,"column":8},"end":{"line":2332,"column":9}},"591":{"start":{"line":2326,"column":10},"end":{"line":2326,"column":87}},"592":{"start":{"line":2327,"column":10},"end":{"line":2329,"column":11}},"593":{"start":{"line":2328,"column":12},"end":{"line":2328,"column":25}},"594":{"start":{"line":2330,"column":10},"end":{"line":2330,"column":27}},"595":{"start":{"line":2331,"column":10},"end":{"line":2331,"column":36}},"596":{"start":{"line":2333,"column":8},"end":{"line":2335,"column":64}},"597":{"start":{"line":2351,"column":4},"end":{"line":2383,"column":5}},"598":{"start":{"line":2352,"column":6},"end":{"line":2354,"column":7}},"599":{"start":{"line":2353,"column":8},"end":{"line":2353,"column":22}},"600":{"start":{"line":2355,"column":6},"end":{"line":2356,"column":54}},"601":{"start":{"line":2358,"column":6},"end":{"line":2381,"column":9}},"602":{"start":{"line":2359,"column":8},"end":{"line":2362,"column":9}},"603":{"start":{"line":2360,"column":10},"end":{"line":2360,"column":25}},"604":{"start":{"line":2361,"column":10},"end":{"line":2361,"column":33}},"605":{"start":{"line":2363,"column":8},"end":{"line":2380,"column":9}},"606":{"start":{"line":2364,"column":10},"end":{"line":2364,"column":34}},"607":{"start":{"line":2365,"column":10},"end":{"line":2365,"column":34}},"608":{"start":{"line":2366,"column":10},"end":{"line":2366,"column":84}},"609":{"start":{"line":2369,"column":10},"end":{"line":2371,"column":46}},"610":{"start":{"line":2373,"column":10},"end":{"line":2375,"column":11}},"611":{"start":{"line":2374,"column":12},"end":{"line":2374,"column":30}},"612":{"start":{"line":2376,"column":10},"end":{"line":2379,"column":11}},"613":{"start":{"line":2378,"column":12},"end":{"line":2378,"column":33}},"614":{"start":{"line":2382,"column":6},"end":{"line":2382,"column":20}},"615":{"start":{"line":2400,"column":4},"end":{"line":2441,"column":5}},"616":{"start":{"line":2401,"column":6},"end":{"line":2402,"column":33}},"617":{"start":{"line":2404,"column":6},"end":{"line":2409,"column":7}},"618":{"start":{"line":2405,"column":8},"end":{"line":2408,"column":9}},"619":{"start":{"line":2406,"column":10},"end":{"line":2406,"column":39}},"620":{"start":{"line":2407,"column":10},"end":{"line":2407,"column":17}},"621":{"start":{"line":2410,"column":6},"end":{"line":2412,"column":42}},"622":{"start":{"line":2414,"column":6},"end":{"line":2429,"column":7}},"623":{"start":{"line":2415,"column":8},"end":{"line":2415,"column":26}},"624":{"start":{"line":2416,"column":8},"end":{"line":2428,"column":9}},"625":{"start":{"line":2417,"column":10},"end":{"line":2419,"column":59}},"626":{"start":{"line":2421,"column":13},"end":{"line":2428,"column":9}},"627":{"start":{"line":2422,"column":10},"end":{"line":2424,"column":50}},"628":{"start":{"line":2427,"column":10},"end":{"line":2427,"column":27}},"629":{"start":{"line":2432,"column":6},"end":{"line":2432,"column":28}},"630":{"start":{"line":2433,"column":6},"end":{"line":2433,"column":26}},"631":{"start":{"line":2435,"column":6},"end":{"line":2440,"column":7}},"632":{"start":{"line":2437,"column":8},"end":{"line":2437,"column":78}},"633":{"start":{"line":2438,"column":13},"end":{"line":2440,"column":7}},"634":{"start":{"line":2439,"column":8},"end":{"line":2439,"column":29}},"635":{"start":{"line":2450,"column":4},"end":{"line":2454,"column":5}},"636":{"start":{"line":2451,"column":6},"end":{"line":2453,"column":8}},"637":{"start":{"line":2452,"column":8},"end":{"line":2452,"column":56}},"638":{"start":{"line":2463,"column":4},"end":{"line":2469,"column":5}},"639":{"start":{"line":2464,"column":6},"end":{"line":2464,"column":32}},"640":{"start":{"line":2465,"column":6},"end":{"line":2465,"column":26}},"641":{"start":{"line":2466,"column":6},"end":{"line":2468,"column":8}},"642":{"start":{"line":2467,"column":8},"end":{"line":2467,"column":46}},"643":{"start":{"line":2480,"column":4},"end":{"line":2490,"column":5}},"644":{"start":{"line":2481,"column":6},"end":{"line":2481,"column":46}},"645":{"start":{"line":2482,"column":6},"end":{"line":2488,"column":7}},"646":{"start":{"line":2483,"column":8},"end":{"line":2483,"column":36}},"647":{"start":{"line":2484,"column":8},"end":{"line":2487,"column":9}},"648":{"start":{"line":2485,"column":10},"end":{"line":2485,"column":31}},"649":{"start":{"line":2486,"column":10},"end":{"line":2486,"column":39}},"650":{"start":{"line":2489,"column":6},"end":{"line":2489,"column":19}},"651":{"start":{"line":2501,"column":4},"end":{"line":2503,"column":5}},"652":{"start":{"line":2502,"column":6},"end":{"line":2502,"column":65}},"653":{"start":{"line":2519,"column":4},"end":{"line":2526,"column":5}},"654":{"start":{"line":2520,"column":6},"end":{"line":2524,"column":9}},"655":{"start":{"line":2521,"column":8},"end":{"line":2523,"column":60}},"656":{"start":{"line":2525,"column":6},"end":{"line":2525,"column":25}},"657":{"start":{"line":2536,"column":4},"end":{"line":2539,"column":6}},"658":{"start":{"line":2537,"column":6},"end":{"line":2537,"column":30}},"659":{"start":{"line":2538,"column":6},"end":{"line":2538,"column":18}},"660":{"start":{"line":2550,"column":4},"end":{"line":2570,"column":5}},"661":{"start":{"line":2551,"column":6},"end":{"line":2552,"column":32}},"662":{"start":{"line":2554,"column":6},"end":{"line":2554,"column":48}},"663":{"start":{"line":2555,"column":6},"end":{"line":2557,"column":7}},"664":{"start":{"line":2556,"column":8},"end":{"line":2556,"column":55}},"665":{"start":{"line":2558,"column":6},"end":{"line":2558,"column":71}},"666":{"start":{"line":2559,"column":6},"end":{"line":2561,"column":7}},"667":{"start":{"line":2560,"column":8},"end":{"line":2560,"column":22}},"668":{"start":{"line":2562,"column":6},"end":{"line":2562,"column":55}},"669":{"start":{"line":2563,"column":6},"end":{"line":2563,"column":19}},"670":{"start":{"line":2565,"column":6},"end":{"line":2565,"column":33}},"671":{"start":{"line":2566,"column":6},"end":{"line":2568,"column":7}},"672":{"start":{"line":2567,"column":8},"end":{"line":2567,"column":45}},"673":{"start":{"line":2569,"column":6},"end":{"line":2569,"column":20}},"674":{"start":{"line":2582,"column":4},"end":{"line":2590,"column":5}},"675":{"start":{"line":2583,"column":6},"end":{"line":2583,"column":17}},"676":{"start":{"line":2585,"column":6},"end":{"line":2588,"column":9}},"677":{"start":{"line":2586,"column":8},"end":{"line":2586,"column":53}},"678":{"start":{"line":2587,"column":8},"end":{"line":2587,"column":23}},"679":{"start":{"line":2589,"column":6},"end":{"line":2589,"column":22}},"680":{"start":{"line":2602,"column":4},"end":{"line":2610,"column":5}},"681":{"start":{"line":2603,"column":6},"end":{"line":2603,"column":32}},"682":{"start":{"line":2605,"column":6},"end":{"line":2605,"column":27}},"683":{"start":{"line":2606,"column":6},"end":{"line":2608,"column":7}},"684":{"start":{"line":2607,"column":8},"end":{"line":2607,"column":44}},"685":{"start":{"line":2609,"column":6},"end":{"line":2609,"column":19}},"686":{"start":{"line":2621,"column":4},"end":{"line":2635,"column":5}},"687":{"start":{"line":2622,"column":6},"end":{"line":2623,"column":21}},"688":{"start":{"line":2625,"column":6},"end":{"line":2625,"column":89}},"689":{"start":{"line":2625,"column":59},"end":{"line":2625,"column":85}},"690":{"start":{"line":2627,"column":6},"end":{"line":2630,"column":9}},"691":{"start":{"line":2628,"column":8},"end":{"line":2628,"column":91}},"692":{"start":{"line":2628,"column":64},"end":{"line":2628,"column":87}},"693":{"start":{"line":2629,"column":8},"end":{"line":2629,"column":74}},"694":{"start":{"line":2632,"column":6},"end":{"line":2634,"column":9}},"695":{"start":{"line":2633,"column":8},"end":{"line":2633,"column":54}},"696":{"start":{"line":2646,"column":4},"end":{"line":2652,"column":5}},"697":{"start":{"line":2647,"column":6},"end":{"line":2647,"column":21}},"698":{"start":{"line":2648,"column":6},"end":{"line":2650,"column":9}},"699":{"start":{"line":2649,"column":8},"end":{"line":2649,"column":59}},"700":{"start":{"line":2651,"column":6},"end":{"line":2651,"column":20}},"701":{"start":{"line":2663,"column":4},"end":{"line":2704,"column":5}},"702":{"start":{"line":2664,"column":6},"end":{"line":2670,"column":22}},"703":{"start":{"line":2672,"column":6},"end":{"line":2678,"column":7}},"704":{"start":{"line":2673,"column":8},"end":{"line":2673,"column":31}},"705":{"start":{"line":2674,"column":8},"end":{"line":2674,"column":25}},"706":{"start":{"line":2676,"column":8},"end":{"line":2676,"column":24}},"707":{"start":{"line":2677,"column":8},"end":{"line":2677,"column":38}},"708":{"start":{"line":2679,"column":6},"end":{"line":2702,"column":7}},"709":{"start":{"line":2680,"column":6},"end":{"line":2702,"column":7}},"710":{"start":{"line":2681,"column":8},"end":{"line":2682,"column":72}},"711":{"start":{"line":2684,"column":8},"end":{"line":2701,"column":9}},"712":{"start":{"line":2685,"column":10},"end":{"line":2685,"column":38}},"713":{"start":{"line":2686,"column":10},"end":{"line":2690,"column":11}},"714":{"start":{"line":2687,"column":12},"end":{"line":2689,"column":13}},"715":{"start":{"line":2688,"column":14},"end":{"line":2688,"column":29}},"716":{"start":{"line":2691,"column":10},"end":{"line":2693,"column":11}},"717":{"start":{"line":2692,"column":12},"end":{"line":2692,"column":32}},"718":{"start":{"line":2694,"column":10},"end":{"line":2694,"column":29}},"719":{"start":{"line":2696,"column":13},"end":{"line":2701,"column":9}},"720":{"start":{"line":2697,"column":10},"end":{"line":2699,"column":11}},"721":{"start":{"line":2698,"column":12},"end":{"line":2698,"column":32}},"722":{"start":{"line":2700,"column":10},"end":{"line":2700,"column":29}},"723":{"start":{"line":2703,"column":6},"end":{"line":2703,"column":20}},"724":{"start":{"line":2716,"column":4},"end":{"line":2725,"column":5}},"725":{"start":{"line":2717,"column":6},"end":{"line":2719,"column":33}},"726":{"start":{"line":2721,"column":6},"end":{"line":2723,"column":7}},"727":{"start":{"line":2722,"column":8},"end":{"line":2722,"column":45}},"728":{"start":{"line":2724,"column":6},"end":{"line":2724,"column":20}},"729":{"start":{"line":2738,"column":4},"end":{"line":2746,"column":5}},"730":{"start":{"line":2739,"column":6},"end":{"line":2740,"column":42}},"731":{"start":{"line":2742,"column":6},"end":{"line":2742,"column":98}},"732":{"start":{"line":2743,"column":6},"end":{"line":2745,"column":86}},"733":{"start":{"line":2758,"column":4},"end":{"line":2771,"column":5}},"734":{"start":{"line":2759,"column":6},"end":{"line":2759,"column":25}},"735":{"start":{"line":2760,"column":6},"end":{"line":2762,"column":7}},"736":{"start":{"line":2761,"column":8},"end":{"line":2761,"column":32}},"737":{"start":{"line":2763,"column":6},"end":{"line":2764,"column":34}},"738":{"start":{"line":2766,"column":6},"end":{"line":2769,"column":7}},"739":{"start":{"line":2767,"column":8},"end":{"line":2767,"column":36}},"740":{"start":{"line":2768,"column":8},"end":{"line":2768,"column":85}},"741":{"start":{"line":2770,"column":6},"end":{"line":2770,"column":20}},"742":{"start":{"line":2784,"column":4},"end":{"line":2802,"column":5}},"743":{"start":{"line":2785,"column":6},"end":{"line":2786,"column":44}},"744":{"start":{"line":2788,"column":6},"end":{"line":2800,"column":7}},"745":{"start":{"line":2789,"column":8},"end":{"line":2798,"column":9}},"746":{"start":{"line":2790,"column":10},"end":{"line":2791,"column":36}},"747":{"start":{"line":2793,"column":10},"end":{"line":2797,"column":11}},"748":{"start":{"line":2794,"column":12},"end":{"line":2794,"column":26}},"749":{"start":{"line":2796,"column":12},"end":{"line":2796,"column":23}},"750":{"start":{"line":2799,"column":8},"end":{"line":2799,"column":20}},"751":{"start":{"line":2801,"column":6},"end":{"line":2801,"column":63}},"752":{"start":{"line":2817,"column":4},"end":{"line":2850,"column":5}},"753":{"start":{"line":2818,"column":6},"end":{"line":2818,"column":30}},"754":{"start":{"line":2820,"column":6},"end":{"line":2824,"column":43}},"755":{"start":{"line":2826,"column":6},"end":{"line":2848,"column":7}},"756":{"start":{"line":2827,"column":8},"end":{"line":2830,"column":48}},"757":{"start":{"line":2832,"column":8},"end":{"line":2842,"column":9}},"758":{"start":{"line":2833,"column":10},"end":{"line":2833,"column":49}},"759":{"start":{"line":2834,"column":15},"end":{"line":2842,"column":9}},"760":{"start":{"line":2835,"column":10},"end":{"line":2835,"column":76}},"761":{"start":{"line":2836,"column":15},"end":{"line":2842,"column":9}},"762":{"start":{"line":2837,"column":10},"end":{"line":2837,"column":56}},"763":{"start":{"line":2838,"column":15},"end":{"line":2842,"column":9}},"764":{"start":{"line":2839,"column":10},"end":{"line":2839,"column":25}},"765":{"start":{"line":2841,"column":10},"end":{"line":2841,"column":73}},"766":{"start":{"line":2843,"column":8},"end":{"line":2847,"column":9}},"767":{"start":{"line":2844,"column":10},"end":{"line":2844,"column":24}},"768":{"start":{"line":2846,"column":10},"end":{"line":2846,"column":21}},"769":{"start":{"line":2849,"column":6},"end":{"line":2849,"column":46}},"770":{"start":{"line":2862,"column":4},"end":{"line":2886,"column":5}},"771":{"start":{"line":2863,"column":6},"end":{"line":2865,"column":7}},"772":{"start":{"line":2864,"column":8},"end":{"line":2864,"column":24}},"773":{"start":{"line":2866,"column":6},"end":{"line":2868,"column":7}},"774":{"start":{"line":2867,"column":8},"end":{"line":2867,"column":20}},"775":{"start":{"line":2869,"column":6},"end":{"line":2882,"column":7}},"776":{"start":{"line":2870,"column":16},"end":{"line":2872,"column":10}},"777":{"start":{"line":2871,"column":10},"end":{"line":2871,"column":43}},"778":{"start":{"line":2873,"column":16},"end":{"line":2875,"column":10}},"779":{"start":{"line":2874,"column":10},"end":{"line":2874,"column":62}},"780":{"start":{"line":2876,"column":16},"end":{"line":2878,"column":10}},"781":{"start":{"line":2877,"column":10},"end":{"line":2877,"column":75}},"782":{"start":{"line":2879,"column":16},"end":{"line":2881,"column":10}},"783":{"start":{"line":2880,"column":10},"end":{"line":2880,"column":71}},"784":{"start":{"line":2883,"column":6},"end":{"line":2885,"column":8}},"785":{"start":{"line":2884,"column":8},"end":{"line":2884,"column":46}},"786":{"start":{"line":2895,"column":4},"end":{"line":2901,"column":5}},"787":{"start":{"line":2896,"column":6},"end":{"line":2897,"column":40}},"788":{"start":{"line":2899,"column":6},"end":{"line":2899,"column":39}},"789":{"start":{"line":2900,"column":6},"end":{"line":2900,"column":20}},"790":{"start":{"line":2913,"column":4},"end":{"line":2931,"column":5}},"791":{"start":{"line":2914,"column":6},"end":{"line":2919,"column":50}},"792":{"start":{"line":2921,"column":6},"end":{"line":2923,"column":7}},"793":{"start":{"line":2922,"column":8},"end":{"line":2922,"column":48}},"794":{"start":{"line":2924,"column":6},"end":{"line":2926,"column":7}},"795":{"start":{"line":2925,"column":8},"end":{"line":2925,"column":53}},"796":{"start":{"line":2927,"column":6},"end":{"line":2929,"column":7}},"797":{"start":{"line":2928,"column":8},"end":{"line":2928,"column":48}},"798":{"start":{"line":2930,"column":6},"end":{"line":2930,"column":20}},"799":{"start":{"line":2943,"column":4},"end":{"line":2963,"column":5}},"800":{"start":{"line":2944,"column":6},"end":{"line":2950,"column":51}},"801":{"start":{"line":2952,"column":6},"end":{"line":2954,"column":7}},"802":{"start":{"line":2953,"column":8},"end":{"line":2953,"column":44}},"803":{"start":{"line":2955,"column":6},"end":{"line":2955,"column":29}},"804":{"start":{"line":2956,"column":6},"end":{"line":2958,"column":7}},"805":{"start":{"line":2957,"column":8},"end":{"line":2957,"column":59}},"806":{"start":{"line":2959,"column":6},"end":{"line":2961,"column":7}},"807":{"start":{"line":2960,"column":8},"end":{"line":2960,"column":67}},"808":{"start":{"line":2962,"column":6},"end":{"line":2962,"column":20}},"809":{"start":{"line":2973,"column":4},"end":{"line":2993,"column":5}},"810":{"start":{"line":2974,"column":6},"end":{"line":2992,"column":8}},"811":{"start":{"line":2975,"column":8},"end":{"line":2975,"column":54}},"812":{"start":{"line":2976,"column":8},"end":{"line":2976,"column":53}},"813":{"start":{"line":2978,"column":8},"end":{"line":2990,"column":9}},"814":{"start":{"line":2979,"column":10},"end":{"line":2980,"column":41}},"815":{"start":{"line":2982,"column":10},"end":{"line":2985,"column":11}},"816":{"start":{"line":2983,"column":12},"end":{"line":2983,"column":42}},"817":{"start":{"line":2984,"column":12},"end":{"line":2984,"column":82}},"818":{"start":{"line":2987,"column":10},"end":{"line":2989,"column":13}},"819":{"start":{"line":2988,"column":12},"end":{"line":2988,"column":80}},"820":{"start":{"line":2991,"column":8},"end":{"line":2991,"column":22}},"821":{"start":{"line":3002,"column":4},"end":{"line":3029,"column":5}},"822":{"start":{"line":3003,"column":6},"end":{"line":3028,"column":9}},"823":{"start":{"line":3004,"column":8},"end":{"line":3008,"column":67}},"824":{"start":{"line":3010,"column":8},"end":{"line":3016,"column":9}},"825":{"start":{"line":3011,"column":10},"end":{"line":3011,"column":60}},"826":{"start":{"line":3012,"column":10},"end":{"line":3012,"column":22}},"827":{"start":{"line":3014,"column":10},"end":{"line":3014,"column":74}},"828":{"start":{"line":3015,"column":10},"end":{"line":3015,"column":41}},"829":{"start":{"line":3017,"column":8},"end":{"line":3020,"column":9}},"830":{"start":{"line":3018,"column":10},"end":{"line":3018,"column":59}},"831":{"start":{"line":3019,"column":10},"end":{"line":3019,"column":21}},"832":{"start":{"line":3021,"column":8},"end":{"line":3026,"column":9}},"833":{"start":{"line":3022,"column":10},"end":{"line":3022,"column":38}},"834":{"start":{"line":3023,"column":10},"end":{"line":3025,"column":11}},"835":{"start":{"line":3024,"column":12},"end":{"line":3024,"column":49}},"836":{"start":{"line":3027,"column":8},"end":{"line":3027,"column":22}},"837":{"start":{"line":3039,"column":4},"end":{"line":3055,"column":5}},"838":{"start":{"line":3040,"column":6},"end":{"line":3054,"column":8}},"839":{"start":{"line":3041,"column":8},"end":{"line":3041,"column":60}},"840":{"start":{"line":3042,"column":8},"end":{"line":3044,"column":9}},"841":{"start":{"line":3043,"column":10},"end":{"line":3043,"column":48}},"842":{"start":{"line":3045,"column":8},"end":{"line":3046,"column":44}},"843":{"start":{"line":3048,"column":8},"end":{"line":3052,"column":9}},"844":{"start":{"line":3049,"column":10},"end":{"line":3051,"column":11}},"845":{"start":{"line":3050,"column":12},"end":{"line":3050,"column":18}},"846":{"start":{"line":3053,"column":8},"end":{"line":3053,"column":26}},"847":{"start":{"line":3064,"column":4},"end":{"line":3079,"column":5}},"848":{"start":{"line":3065,"column":6},"end":{"line":3078,"column":8}},"849":{"start":{"line":3066,"column":8},"end":{"line":3069,"column":44}},"850":{"start":{"line":3071,"column":8},"end":{"line":3076,"column":9}},"851":{"start":{"line":3072,"column":10},"end":{"line":3072,"column":33}},"852":{"start":{"line":3073,"column":10},"end":{"line":3075,"column":11}},"853":{"start":{"line":3074,"column":12},"end":{"line":3074,"column":18}},"854":{"start":{"line":3077,"column":8},"end":{"line":3077,"column":22}},"855":{"start":{"line":3090,"column":4},"end":{"line":3098,"column":5}},"856":{"start":{"line":3091,"column":6},"end":{"line":3091,"column":41}},"857":{"start":{"line":3093,"column":6},"end":{"line":3096,"column":7}},"858":{"start":{"line":3094,"column":8},"end":{"line":3094,"column":82}},"859":{"start":{"line":3095,"column":8},"end":{"line":3095,"column":44}},"860":{"start":{"line":3097,"column":6},"end":{"line":3097,"column":21}},"861":{"start":{"line":3107,"column":4},"end":{"line":3109,"column":5}},"862":{"start":{"line":3108,"column":6},"end":{"line":3108,"column":65}},"863":{"start":{"line":3119,"column":4},"end":{"line":3131,"column":5}},"864":{"start":{"line":3120,"column":6},"end":{"line":3130,"column":8}},"865":{"start":{"line":3121,"column":8},"end":{"line":3124,"column":24}},"866":{"start":{"line":3126,"column":8},"end":{"line":3128,"column":9}},"867":{"start":{"line":3127,"column":10},"end":{"line":3127,"column":57}},"868":{"start":{"line":3129,"column":8},"end":{"line":3129,"column":22}},"869":{"start":{"line":3141,"column":4},"end":{"line":3164,"column":5}},"870":{"start":{"line":3142,"column":6},"end":{"line":3163,"column":8}},"871":{"start":{"line":3146,"column":8},"end":{"line":3146,"column":29}},"872":{"start":{"line":3147,"column":8},"end":{"line":3156,"column":9}},"873":{"start":{"line":3148,"column":18},"end":{"line":3148,"column":34}},"874":{"start":{"line":3149,"column":18},"end":{"line":3149,"column":43}},"875":{"start":{"line":3150,"column":18},"end":{"line":3150,"column":52}},"876":{"start":{"line":3151,"column":18},"end":{"line":3151,"column":61}},"877":{"start":{"line":3152,"column":18},"end":{"line":3152,"column":70}},"878":{"start":{"line":3153,"column":18},"end":{"line":3153,"column":79}},"879":{"start":{"line":3154,"column":18},"end":{"line":3154,"column":88}},"880":{"start":{"line":3155,"column":18},"end":{"line":3155,"column":97}},"881":{"start":{"line":3157,"column":8},"end":{"line":3158,"column":51}},"882":{"start":{"line":3162,"column":8},"end":{"line":3162,"column":55}},"883":{"start":{"line":3173,"column":4},"end":{"line":3183,"column":5}},"884":{"start":{"line":3174,"column":6},"end":{"line":3181,"column":7}},"885":{"start":{"line":3175,"column":8},"end":{"line":3177,"column":9}},"886":{"start":{"line":3176,"column":10},"end":{"line":3176,"column":28}},"887":{"start":{"line":3178,"column":8},"end":{"line":3178,"column":109}},"888":{"start":{"line":3179,"column":8},"end":{"line":3179,"column":51}},"889":{"start":{"line":3180,"column":8},"end":{"line":3180,"column":22}},"890":{"start":{"line":3182,"column":6},"end":{"line":3182,"column":23}},"891":{"start":{"line":3193,"column":4},"end":{"line":3202,"column":5}},"892":{"start":{"line":3194,"column":6},"end":{"line":3201,"column":9}},"893":{"start":{"line":3195,"column":8},"end":{"line":3195,"column":29}},"894":{"start":{"line":3196,"column":8},"end":{"line":3198,"column":9}},"895":{"start":{"line":3197,"column":10},"end":{"line":3197,"column":24}},"896":{"start":{"line":3199,"column":8},"end":{"line":3199,"column":30}},"897":{"start":{"line":3200,"column":8},"end":{"line":3200,"column":47}},"898":{"start":{"line":3212,"column":4},"end":{"line":3227,"column":5}},"899":{"start":{"line":3213,"column":6},"end":{"line":3226,"column":8}},"900":{"start":{"line":3214,"column":8},"end":{"line":3216,"column":9}},"901":{"start":{"line":3215,"column":10},"end":{"line":3215,"column":31}},"902":{"start":{"line":3217,"column":8},"end":{"line":3217,"column":53}},"903":{"start":{"line":3218,"column":8},"end":{"line":3224,"column":9}},"904":{"start":{"line":3219,"column":10},"end":{"line":3219,"column":81}},"905":{"start":{"line":3220,"column":10},"end":{"line":3220,"column":80}},"906":{"start":{"line":3221,"column":10},"end":{"line":3223,"column":11}},"907":{"start":{"line":3222,"column":12},"end":{"line":3222,"column":26}},"908":{"start":{"line":3225,"column":8},"end":{"line":3225,"column":71}},"909":{"start":{"line":3237,"column":4},"end":{"line":3246,"column":5}},"910":{"start":{"line":3238,"column":6},"end":{"line":3245,"column":8}},"911":{"start":{"line":3239,"column":8},"end":{"line":3239,"column":55}},"912":{"start":{"line":3240,"column":8},"end":{"line":3243,"column":9}},"913":{"start":{"line":3241,"column":10},"end":{"line":3241,"column":70}},"914":{"start":{"line":3242,"column":10},"end":{"line":3242,"column":60}},"915":{"start":{"line":3244,"column":8},"end":{"line":3244,"column":57}},"916":{"start":{"line":3255,"column":4},"end":{"line":3263,"column":5}},"917":{"start":{"line":3256,"column":6},"end":{"line":3262,"column":8}},"918":{"start":{"line":3257,"column":8},"end":{"line":3259,"column":9}},"919":{"start":{"line":3258,"column":10},"end":{"line":3258,"column":20}},"920":{"start":{"line":3260,"column":8},"end":{"line":3260,"column":55}},"921":{"start":{"line":3261,"column":8},"end":{"line":3261,"column":58}},"922":{"start":{"line":3272,"column":4},"end":{"line":3277,"column":5}},"923":{"start":{"line":3273,"column":6},"end":{"line":3276,"column":8}},"924":{"start":{"line":3274,"column":8},"end":{"line":3274,"column":55}},"925":{"start":{"line":3275,"column":8},"end":{"line":3275,"column":61}},"926":{"start":{"line":3286,"column":4},"end":{"line":3332,"column":5}},"927":{"start":{"line":3287,"column":6},"end":{"line":3331,"column":8}},"928":{"start":{"line":3288,"column":8},"end":{"line":3292,"column":34}},"929":{"start":{"line":3294,"column":8},"end":{"line":3302,"column":9}},"930":{"start":{"line":3295,"column":10},"end":{"line":3295,"column":59}},"931":{"start":{"line":3296,"column":10},"end":{"line":3298,"column":11}},"932":{"start":{"line":3297,"column":12},"end":{"line":3297,"column":49}},"933":{"start":{"line":3299,"column":10},"end":{"line":3301,"column":11}},"934":{"start":{"line":3300,"column":12},"end":{"line":3300,"column":50}},"935":{"start":{"line":3303,"column":8},"end":{"line":3303,"column":38}},"936":{"start":{"line":3304,"column":8},"end":{"line":3315,"column":9}},"937":{"start":{"line":3305,"column":10},"end":{"line":3305,"column":30}},"938":{"start":{"line":3307,"column":10},"end":{"line":3308,"column":71}},"939":{"start":{"line":3310,"column":10},"end":{"line":3314,"column":11}},"940":{"start":{"line":3311,"column":12},"end":{"line":3311,"column":76}},"941":{"start":{"line":3313,"column":12},"end":{"line":3313,"column":104}},"942":{"start":{"line":3316,"column":8},"end":{"line":3330,"column":10}},"943":{"start":{"line":3317,"column":10},"end":{"line":3318,"column":30}},"944":{"start":{"line":3320,"column":10},"end":{"line":3322,"column":11}},"945":{"start":{"line":3321,"column":12},"end":{"line":3321,"column":48}},"946":{"start":{"line":3323,"column":10},"end":{"line":3324,"column":71}},"947":{"start":{"line":3326,"column":10},"end":{"line":3328,"column":11}},"948":{"start":{"line":3327,"column":12},"end":{"line":3327,"column":53}},"949":{"start":{"line":3329,"column":10},"end":{"line":3329,"column":24}},"950":{"start":{"line":3342,"column":4},"end":{"line":3348,"column":5}},"951":{"start":{"line":3343,"column":6},"end":{"line":3347,"column":8}},"952":{"start":{"line":3344,"column":8},"end":{"line":3346,"column":69}},"953":{"start":{"line":3357,"column":4},"end":{"line":3364,"column":5}},"954":{"start":{"line":3358,"column":6},"end":{"line":3363,"column":8}},"955":{"start":{"line":3359,"column":8},"end":{"line":3361,"column":9}},"956":{"start":{"line":3360,"column":10},"end":{"line":3360,"column":56}},"957":{"start":{"line":3362,"column":8},"end":{"line":3362,"column":52}},"958":{"start":{"line":3373,"column":4},"end":{"line":3380,"column":5}},"959":{"start":{"line":3374,"column":6},"end":{"line":3379,"column":8}},"960":{"start":{"line":3375,"column":8},"end":{"line":3377,"column":9}},"961":{"start":{"line":3376,"column":10},"end":{"line":3376,"column":56}},"962":{"start":{"line":3378,"column":8},"end":{"line":3378,"column":44}},"963":{"start":{"line":3389,"column":4},"end":{"line":3402,"column":5}},"964":{"start":{"line":3390,"column":6},"end":{"line":3401,"column":8}},"965":{"start":{"line":3391,"column":8},"end":{"line":3391,"column":24}},"966":{"start":{"line":3392,"column":8},"end":{"line":3392,"column":53}},"967":{"start":{"line":3394,"column":8},"end":{"line":3399,"column":11}},"968":{"start":{"line":3395,"column":10},"end":{"line":3395,"column":52}},"969":{"start":{"line":3396,"column":10},"end":{"line":3396,"column":41}},"970":{"start":{"line":3397,"column":10},"end":{"line":3397,"column":45}},"971":{"start":{"line":3398,"column":10},"end":{"line":3398,"column":30}},"972":{"start":{"line":3400,"column":8},"end":{"line":3400,"column":22}},"973":{"start":{"line":3411,"column":4},"end":{"line":3416,"column":5}},"974":{"start":{"line":3412,"column":6},"end":{"line":3415,"column":8}},"975":{"start":{"line":3413,"column":8},"end":{"line":3413,"column":38}},"976":{"start":{"line":3414,"column":8},"end":{"line":3414,"column":108}},"977":{"start":{"line":3425,"column":4},"end":{"line":3431,"column":5}},"978":{"start":{"line":3426,"column":6},"end":{"line":3429,"column":9}},"979":{"start":{"line":3427,"column":8},"end":{"line":3427,"column":72}},"980":{"start":{"line":3428,"column":8},"end":{"line":3428,"column":71}},"981":{"start":{"line":3430,"column":6},"end":{"line":3430,"column":25}},"982":{"start":{"line":3441,"column":4},"end":{"line":3448,"column":5}},"983":{"start":{"line":3442,"column":6},"end":{"line":3447,"column":8}},"984":{"start":{"line":3443,"column":8},"end":{"line":3443,"column":49}},"985":{"start":{"line":3444,"column":8},"end":{"line":3446,"column":108}},"986":{"start":{"line":3467,"column":4},"end":{"line":3536,"column":5}},"987":{"start":{"line":3468,"column":6},"end":{"line":3474,"column":65}},"988":{"start":{"line":3476,"column":6},"end":{"line":3534,"column":7}},"989":{"start":{"line":3479,"column":8},"end":{"line":3481,"column":33}},"990":{"start":{"line":3483,"column":8},"end":{"line":3485,"column":9}},"991":{"start":{"line":3484,"column":10},"end":{"line":3484,"column":41}},"992":{"start":{"line":3486,"column":8},"end":{"line":3488,"column":9}},"993":{"start":{"line":3487,"column":10},"end":{"line":3487,"column":54}},"994":{"start":{"line":3489,"column":8},"end":{"line":3491,"column":9}},"995":{"start":{"line":3490,"column":10},"end":{"line":3490,"column":69}},"996":{"start":{"line":3492,"column":8},"end":{"line":3520,"column":9}},"997":{"start":{"line":3493,"column":10},"end":{"line":3494,"column":62}},"998":{"start":{"line":3496,"column":10},"end":{"line":3496,"column":39}},"999":{"start":{"line":3497,"column":10},"end":{"line":3519,"column":11}},"1000":{"start":{"line":3498,"column":12},"end":{"line":3503,"column":62}},"1001":{"start":{"line":3505,"column":12},"end":{"line":3505,"column":69}},"1002":{"start":{"line":3506,"column":12},"end":{"line":3506,"column":70}},"1003":{"start":{"line":3508,"column":12},"end":{"line":3510,"column":13}},"1004":{"start":{"line":3509,"column":14},"end":{"line":3509,"column":54}},"1005":{"start":{"line":3511,"column":12},"end":{"line":3512,"column":71}},"1006":{"start":{"line":3514,"column":12},"end":{"line":3516,"column":13}},"1007":{"start":{"line":3515,"column":14},"end":{"line":3515,"column":39}},"1008":{"start":{"line":3517,"column":12},"end":{"line":3517,"column":45}},"1009":{"start":{"line":3518,"column":12},"end":{"line":3518,"column":26}},"1010":{"start":{"line":3521,"column":8},"end":{"line":3522,"column":54}},"1011":{"start":{"line":3524,"column":8},"end":{"line":3526,"column":9}},"1012":{"start":{"line":3525,"column":10},"end":{"line":3525,"column":39}},"1013":{"start":{"line":3527,"column":8},"end":{"line":3529,"column":9}},"1014":{"start":{"line":3528,"column":10},"end":{"line":3528,"column":28}},"1015":{"start":{"line":3530,"column":8},"end":{"line":3532,"column":9}},"1016":{"start":{"line":3531,"column":10},"end":{"line":3531,"column":47}},"1017":{"start":{"line":3533,"column":8},"end":{"line":3533,"column":43}},"1018":{"start":{"line":3535,"column":6},"end":{"line":3535,"column":21}},"1019":{"start":{"line":3548,"column":4},"end":{"line":3558,"column":5}},"1020":{"start":{"line":3549,"column":6},"end":{"line":3549,"column":36}},"1021":{"start":{"line":3550,"column":6},"end":{"line":3550,"column":23}},"1022":{"start":{"line":3552,"column":6},"end":{"line":3554,"column":7}},"1023":{"start":{"line":3553,"column":8},"end":{"line":3553,"column":18}},"1024":{"start":{"line":3555,"column":6},"end":{"line":3555,"column":41}},"1025":{"start":{"line":3556,"column":6},"end":{"line":3556,"column":49}},"1026":{"start":{"line":3557,"column":6},"end":{"line":3557,"column":85}},"1027":{"start":{"line":3572,"column":4},"end":{"line":3595,"column":5}},"1028":{"start":{"line":3573,"column":6},"end":{"line":3574,"column":41}},"1029":{"start":{"line":3576,"column":6},"end":{"line":3593,"column":7}},"1030":{"start":{"line":3579,"column":8},"end":{"line":3583,"column":50}},"1031":{"start":{"line":3585,"column":8},"end":{"line":3587,"column":9}},"1032":{"start":{"line":3586,"column":10},"end":{"line":3586,"column":48}},"1033":{"start":{"line":3588,"column":8},"end":{"line":3590,"column":9}},"1034":{"start":{"line":3589,"column":10},"end":{"line":3589,"column":53}},"1035":{"start":{"line":3591,"column":8},"end":{"line":3591,"column":82}},"1036":{"start":{"line":3592,"column":8},"end":{"line":3592,"column":55}},"1037":{"start":{"line":3594,"column":6},"end":{"line":3594,"column":21}},"1038":{"start":{"line":3604,"column":4},"end":{"line":3614,"column":5}},"1039":{"start":{"line":3605,"column":6},"end":{"line":3605,"column":34}},"1040":{"start":{"line":3606,"column":6},"end":{"line":3613,"column":8}},"1041":{"start":{"line":3607,"column":8},"end":{"line":3607,"column":68}},"1042":{"start":{"line":3608,"column":8},"end":{"line":3611,"column":9}},"1043":{"start":{"line":3609,"column":10},"end":{"line":3609,"column":41}},"1044":{"start":{"line":3610,"column":10},"end":{"line":3610,"column":54}},"1045":{"start":{"line":3612,"column":8},"end":{"line":3612,"column":28}},"1046":{"start":{"line":3623,"column":4},"end":{"line":3630,"column":5}},"1047":{"start":{"line":3624,"column":6},"end":{"line":3629,"column":8}},"1048":{"start":{"line":3625,"column":8},"end":{"line":3625,"column":45}},"1049":{"start":{"line":3626,"column":8},"end":{"line":3628,"column":84}},"1050":{"start":{"line":3657,"column":4},"end":{"line":3695,"column":5}},"1051":{"start":{"line":3658,"column":6},"end":{"line":3658,"column":46}},"1052":{"start":{"line":3659,"column":6},"end":{"line":3661,"column":7}},"1053":{"start":{"line":3660,"column":8},"end":{"line":3660,"column":45}},"1054":{"start":{"line":3662,"column":6},"end":{"line":3662,"column":50}},"1055":{"start":{"line":3663,"column":6},"end":{"line":3666,"column":7}},"1056":{"start":{"line":3664,"column":8},"end":{"line":3664,"column":56}},"1057":{"start":{"line":3665,"column":8},"end":{"line":3665,"column":39}},"1058":{"start":{"line":3667,"column":6},"end":{"line":3667,"column":47}},"1059":{"start":{"line":3668,"column":6},"end":{"line":3673,"column":7}},"1060":{"start":{"line":3669,"column":8},"end":{"line":3670,"column":35}},"1061":{"start":{"line":3672,"column":8},"end":{"line":3672,"column":39}},"1062":{"start":{"line":3674,"column":6},"end":{"line":3675,"column":113}},"1063":{"start":{"line":3677,"column":6},"end":{"line":3681,"column":7}},"1064":{"start":{"line":3678,"column":8},"end":{"line":3678,"column":33}},"1065":{"start":{"line":3679,"column":8},"end":{"line":3679,"column":29}},"1066":{"start":{"line":3680,"column":8},"end":{"line":3680,"column":27}},"1067":{"start":{"line":3682,"column":6},"end":{"line":3684,"column":46}},"1068":{"start":{"line":3686,"column":6},"end":{"line":3692,"column":7}},"1069":{"start":{"line":3687,"column":8},"end":{"line":3687,"column":63}},"1070":{"start":{"line":3688,"column":13},"end":{"line":3692,"column":7}},"1071":{"start":{"line":3689,"column":8},"end":{"line":3689,"column":64}},"1072":{"start":{"line":3691,"column":8},"end":{"line":3691,"column":63}},"1073":{"start":{"line":3693,"column":6},"end":{"line":3693,"column":48}},"1074":{"start":{"line":3694,"column":6},"end":{"line":3694,"column":37}},"1075":{"start":{"line":3711,"column":4},"end":{"line":3743,"column":5}},"1076":{"start":{"line":3712,"column":6},"end":{"line":3714,"column":35}},"1077":{"start":{"line":3716,"column":6},"end":{"line":3718,"column":7}},"1078":{"start":{"line":3717,"column":8},"end":{"line":3717,"column":21}},"1079":{"start":{"line":3720,"column":6},"end":{"line":3741,"column":7}},"1080":{"start":{"line":3721,"column":8},"end":{"line":3723,"column":126}},"1081":{"start":{"line":3725,"column":8},"end":{"line":3730,"column":9}},"1082":{"start":{"line":3726,"column":10},"end":{"line":3728,"column":11}},"1083":{"start":{"line":3727,"column":12},"end":{"line":3727,"column":21}},"1084":{"start":{"line":3729,"column":10},"end":{"line":3729,"column":23}},"1085":{"start":{"line":3732,"column":8},"end":{"line":3740,"column":9}},"1086":{"start":{"line":3733,"column":10},"end":{"line":3737,"column":11}},"1087":{"start":{"line":3734,"column":16},"end":{"line":3734,"column":115}},"1088":{"start":{"line":3736,"column":12},"end":{"line":3736,"column":25}},"1089":{"start":{"line":3738,"column":15},"end":{"line":3740,"column":9}},"1090":{"start":{"line":3739,"column":10},"end":{"line":3739,"column":23}},"1091":{"start":{"line":3742,"column":6},"end":{"line":3742,"column":18}},"1092":{"start":{"line":3758,"column":4},"end":{"line":3782,"column":5}},"1093":{"start":{"line":3759,"column":6},"end":{"line":3780,"column":7}},"1094":{"start":{"line":3764,"column":10},"end":{"line":3764,"column":35}},"1095":{"start":{"line":3767,"column":10},"end":{"line":3767,"column":78}},"1096":{"start":{"line":3771,"column":10},"end":{"line":3773,"column":31}},"1097":{"start":{"line":3779,"column":10},"end":{"line":3779,"column":40}},"1098":{"start":{"line":3781,"column":6},"end":{"line":3781,"column":19}},"1099":{"start":{"line":3798,"column":4},"end":{"line":3840,"column":5}},"1100":{"start":{"line":3799,"column":6},"end":{"line":3802,"column":38}},"1101":{"start":{"line":3804,"column":6},"end":{"line":3806,"column":7}},"1102":{"start":{"line":3805,"column":8},"end":{"line":3805,"column":21}},"1103":{"start":{"line":3807,"column":6},"end":{"line":3807,"column":28}},"1104":{"start":{"line":3808,"column":6},"end":{"line":3813,"column":7}},"1105":{"start":{"line":3809,"column":8},"end":{"line":3809,"column":34}},"1106":{"start":{"line":3810,"column":8},"end":{"line":3812,"column":9}},"1107":{"start":{"line":3811,"column":10},"end":{"line":3811,"column":23}},"1108":{"start":{"line":3814,"column":6},"end":{"line":3814,"column":29}},"1109":{"start":{"line":3815,"column":6},"end":{"line":3826,"column":7}},"1110":{"start":{"line":3816,"column":8},"end":{"line":3816,"column":30}},"1111":{"start":{"line":3817,"column":8},"end":{"line":3819,"column":123}},"1112":{"start":{"line":3822,"column":8},"end":{"line":3824,"column":9}},"1113":{"start":{"line":3823,"column":10},"end":{"line":3823,"column":23}},"1114":{"start":{"line":3825,"column":8},"end":{"line":3825,"column":54}},"1115":{"start":{"line":3827,"column":6},"end":{"line":3838,"column":7}},"1116":{"start":{"line":3828,"column":8},"end":{"line":3829,"column":40}},"1117":{"start":{"line":3832,"column":8},"end":{"line":3837,"column":9}},"1118":{"start":{"line":3836,"column":10},"end":{"line":3836,"column":23}},"1119":{"start":{"line":3839,"column":6},"end":{"line":3839,"column":18}},"1120":{"start":{"line":3851,"column":4},"end":{"line":3855,"column":5}},"1121":{"start":{"line":3852,"column":6},"end":{"line":3852,"column":47}},"1122":{"start":{"line":3853,"column":6},"end":{"line":3853,"column":59}},"1123":{"start":{"line":3854,"column":6},"end":{"line":3854,"column":65}},"1124":{"start":{"line":3864,"column":4},"end":{"line":3866,"column":6}},"1125":{"start":{"line":3865,"column":6},"end":{"line":3865,"column":31}},"1126":{"start":{"line":3875,"column":4},"end":{"line":3888,"column":5}},"1127":{"start":{"line":3876,"column":6},"end":{"line":3878,"column":44}},"1128":{"start":{"line":3880,"column":6},"end":{"line":3886,"column":7}},"1129":{"start":{"line":3881,"column":8},"end":{"line":3882,"column":34}},"1130":{"start":{"line":3883,"column":8},"end":{"line":3885,"column":9}},"1131":{"start":{"line":3884,"column":10},"end":{"line":3884,"column":27}},"1132":{"start":{"line":3887,"column":6},"end":{"line":3887,"column":20}},"1133":{"start":{"line":3899,"column":4},"end":{"line":3903,"column":5}},"1134":{"start":{"line":3900,"column":6},"end":{"line":3900,"column":45}},"1135":{"start":{"line":3901,"column":6},"end":{"line":3901,"column":57}},"1136":{"start":{"line":3902,"column":6},"end":{"line":3902,"column":73}},"1137":{"start":{"line":3915,"column":4},"end":{"line":3915,"column":43}},"1138":{"start":{"line":3924,"column":4},"end":{"line":3932,"column":5}},"1139":{"start":{"line":3925,"column":6},"end":{"line":3926,"column":33}},"1140":{"start":{"line":3928,"column":6},"end":{"line":3930,"column":7}},"1141":{"start":{"line":3929,"column":8},"end":{"line":3929,"column":66}},"1142":{"start":{"line":3931,"column":6},"end":{"line":3931,"column":20}},"1143":{"start":{"line":3942,"column":4},"end":{"line":3945,"column":5}},"1144":{"start":{"line":3943,"column":6},"end":{"line":3943,"column":59}},"1145":{"start":{"line":3944,"column":6},"end":{"line":3944,"column":49}},"1146":{"start":{"line":3957,"column":4},"end":{"line":3973,"column":5}},"1147":{"start":{"line":3958,"column":6},"end":{"line":3959,"column":37}},"1148":{"start":{"line":3961,"column":6},"end":{"line":3971,"column":7}},"1149":{"start":{"line":3962,"column":8},"end":{"line":3963,"column":29}},"1150":{"start":{"line":3965,"column":8},"end":{"line":3970,"column":9}},"1151":{"start":{"line":3966,"column":28},"end":{"line":3966,"column":42}},"1152":{"start":{"line":3966,"column":43},"end":{"line":3966,"column":49}},"1153":{"start":{"line":3967,"column":28},"end":{"line":3967,"column":40}},"1154":{"start":{"line":3967,"column":41},"end":{"line":3967,"column":47}},"1155":{"start":{"line":3968,"column":28},"end":{"line":3968,"column":63}},"1156":{"start":{"line":3968,"column":64},"end":{"line":3968,"column":70}},"1157":{"start":{"line":3969,"column":28},"end":{"line":3969,"column":65}},"1158":{"start":{"line":3969,"column":66},"end":{"line":3969,"column":72}},"1159":{"start":{"line":3972,"column":6},"end":{"line":3972,"column":44}},"1160":{"start":{"line":3982,"column":4},"end":{"line":3992,"column":5}},"1161":{"start":{"line":3983,"column":6},"end":{"line":3984,"column":49}},"1162":{"start":{"line":3987,"column":6},"end":{"line":3990,"column":7}},"1163":{"start":{"line":3988,"column":8},"end":{"line":3988,"column":35}},"1164":{"start":{"line":3989,"column":8},"end":{"line":3989,"column":35}},"1165":{"start":{"line":3991,"column":6},"end":{"line":3991,"column":20}},"1166":{"start":{"line":4001,"column":4},"end":{"line":4007,"column":5}},"1167":{"start":{"line":4002,"column":6},"end":{"line":4002,"column":36}},"1168":{"start":{"line":4003,"column":6},"end":{"line":4005,"column":7}},"1169":{"start":{"line":4004,"column":8},"end":{"line":4004,"column":22}},"1170":{"start":{"line":4006,"column":6},"end":{"line":4006,"column":22}},"1171":{"start":{"line":4021,"column":4},"end":{"line":4046,"column":5}},"1172":{"start":{"line":4022,"column":6},"end":{"line":4022,"column":36}},"1173":{"start":{"line":4023,"column":6},"end":{"line":4044,"column":7}},"1174":{"start":{"line":4025,"column":10},"end":{"line":4025,"column":37}},"1175":{"start":{"line":4029,"column":10},"end":{"line":4029,"column":35}},"1176":{"start":{"line":4034,"column":10},"end":{"line":4034,"column":37}},"1177":{"start":{"line":4035,"column":10},"end":{"line":4035,"column":99}},"1178":{"start":{"line":4039,"column":10},"end":{"line":4039,"column":34}},"1179":{"start":{"line":4042,"column":10},"end":{"line":4042,"column":69}},"1180":{"start":{"line":4043,"column":10},"end":{"line":4043,"column":46}},"1181":{"start":{"line":4045,"column":6},"end":{"line":4045,"column":20}},"1182":{"start":{"line":4057,"column":4},"end":{"line":4065,"column":5}},"1183":{"start":{"line":4058,"column":6},"end":{"line":4062,"column":7}},"1184":{"start":{"line":4059,"column":8},"end":{"line":4059,"column":28}},"1185":{"start":{"line":4060,"column":8},"end":{"line":4060,"column":85}},"1186":{"start":{"line":4061,"column":8},"end":{"line":4061,"column":26}},"1187":{"start":{"line":4063,"column":6},"end":{"line":4063,"column":56}},"1188":{"start":{"line":4064,"column":6},"end":{"line":4064,"column":65}},"1189":{"start":{"line":4074,"column":4},"end":{"line":4076,"column":5}},"1190":{"start":{"line":4075,"column":6},"end":{"line":4075,"column":57}},"1191":{"start":{"line":4086,"column":4},"end":{"line":4090,"column":5}},"1192":{"start":{"line":4087,"column":6},"end":{"line":4087,"column":79}},"1193":{"start":{"line":4088,"column":6},"end":{"line":4088,"column":58}},"1194":{"start":{"line":4089,"column":6},"end":{"line":4089,"column":60}},"1195":{"start":{"line":4101,"column":4},"end":{"line":4113,"column":5}},"1196":{"start":{"line":4102,"column":6},"end":{"line":4104,"column":7}},"1197":{"start":{"line":4103,"column":8},"end":{"line":4103,"column":21}},"1198":{"start":{"line":4105,"column":6},"end":{"line":4105,"column":30}},"1199":{"start":{"line":4106,"column":6},"end":{"line":4111,"column":7}},"1200":{"start":{"line":4109,"column":8},"end":{"line":4109,"column":34}},"1201":{"start":{"line":4110,"column":8},"end":{"line":4110,"column":71}},"1202":{"start":{"line":4112,"column":6},"end":{"line":4112,"column":19}},"1203":{"start":{"line":4123,"column":4},"end":{"line":4133,"column":5}},"1204":{"start":{"line":4124,"column":6},"end":{"line":4124,"column":30}},"1205":{"start":{"line":4125,"column":6},"end":{"line":4127,"column":7}},"1206":{"start":{"line":4126,"column":8},"end":{"line":4126,"column":20}},"1207":{"start":{"line":4128,"column":6},"end":{"line":4130,"column":7}},"1208":{"start":{"line":4129,"column":8},"end":{"line":4129,"column":21}},"1209":{"start":{"line":4131,"column":6},"end":{"line":4131,"column":45}},"1210":{"start":{"line":4132,"column":6},"end":{"line":4132,"column":69}},"1211":{"start":{"line":4142,"column":4},"end":{"line":4153,"column":5}},"1212":{"start":{"line":4143,"column":6},"end":{"line":4143,"column":39}},"1213":{"start":{"line":4144,"column":6},"end":{"line":4146,"column":7}},"1214":{"start":{"line":4145,"column":8},"end":{"line":4145,"column":21}},"1215":{"start":{"line":4147,"column":6},"end":{"line":4147,"column":35}},"1216":{"start":{"line":4148,"column":6},"end":{"line":4150,"column":7}},"1217":{"start":{"line":4149,"column":8},"end":{"line":4149,"column":20}},"1218":{"start":{"line":4151,"column":6},"end":{"line":4151,"column":32}},"1219":{"start":{"line":4152,"column":6},"end":{"line":4152,"column":40}},"1220":{"start":{"line":4164,"column":4},"end":{"line":4166,"column":5}},"1221":{"start":{"line":4165,"column":6},"end":{"line":4165,"column":99}},"1222":{"start":{"line":4176,"column":4},"end":{"line":4178,"column":5}},"1223":{"start":{"line":4177,"column":6},"end":{"line":4177,"column":49}},"1224":{"start":{"line":4195,"column":4},"end":{"line":4248,"column":5}},"1225":{"start":{"line":4196,"column":6},"end":{"line":4199,"column":43}},"1226":{"start":{"line":4201,"column":6},"end":{"line":4204,"column":73}},"1227":{"start":{"line":4207,"column":6},"end":{"line":4209,"column":7}},"1228":{"start":{"line":4208,"column":8},"end":{"line":4208,"column":20}},"1229":{"start":{"line":4211,"column":6},"end":{"line":4215,"column":7}},"1230":{"start":{"line":4212,"column":8},"end":{"line":4212,"column":28}},"1231":{"start":{"line":4214,"column":8},"end":{"line":4214,"column":67}},"1232":{"start":{"line":4217,"column":6},"end":{"line":4217,"column":28}},"1233":{"start":{"line":4218,"column":6},"end":{"line":4222,"column":7}},"1234":{"start":{"line":4219,"column":8},"end":{"line":4219,"column":31}},"1235":{"start":{"line":4220,"column":8},"end":{"line":4220,"column":88}},"1236":{"start":{"line":4221,"column":8},"end":{"line":4221,"column":89}},"1237":{"start":{"line":4224,"column":6},"end":{"line":4224,"column":24}},"1238":{"start":{"line":4225,"column":6},"end":{"line":4229,"column":7}},"1239":{"start":{"line":4226,"column":8},"end":{"line":4226,"column":27}},"1240":{"start":{"line":4227,"column":8},"end":{"line":4227,"column":93}},"1241":{"start":{"line":4228,"column":8},"end":{"line":4228,"column":89}},"1242":{"start":{"line":4231,"column":6},"end":{"line":4231,"column":24}},"1243":{"start":{"line":4232,"column":6},"end":{"line":4234,"column":7}},"1244":{"start":{"line":4233,"column":8},"end":{"line":4233,"column":35}},"1245":{"start":{"line":4236,"column":6},"end":{"line":4238,"column":7}},"1246":{"start":{"line":4237,"column":8},"end":{"line":4237,"column":78}},"1247":{"start":{"line":4240,"column":6},"end":{"line":4242,"column":7}},"1248":{"start":{"line":4241,"column":8},"end":{"line":4241,"column":28}},"1249":{"start":{"line":4244,"column":6},"end":{"line":4244,"column":26}},"1250":{"start":{"line":4245,"column":6},"end":{"line":4245,"column":27}},"1251":{"start":{"line":4247,"column":6},"end":{"line":4247,"column":18}},"1252":{"start":{"line":4258,"column":4},"end":{"line":4260,"column":5}},"1253":{"start":{"line":4259,"column":6},"end":{"line":4259,"column":102}},"1254":{"start":{"line":4271,"column":4},"end":{"line":4285,"column":5}},"1255":{"start":{"line":4272,"column":6},"end":{"line":4272,"column":32}},"1256":{"start":{"line":4274,"column":6},"end":{"line":4276,"column":22}},"1257":{"start":{"line":4278,"column":6},"end":{"line":4283,"column":7}},"1258":{"start":{"line":4279,"column":8},"end":{"line":4279,"column":31}},"1259":{"start":{"line":4280,"column":8},"end":{"line":4282,"column":9}},"1260":{"start":{"line":4281,"column":10},"end":{"line":4281,"column":36}},"1261":{"start":{"line":4284,"column":6},"end":{"line":4284,"column":20}},"1262":{"start":{"line":4296,"column":4},"end":{"line":4304,"column":5}},"1263":{"start":{"line":4297,"column":6},"end":{"line":4297,"column":22}},"1264":{"start":{"line":4298,"column":6},"end":{"line":4302,"column":9}},"1265":{"start":{"line":4299,"column":8},"end":{"line":4301,"column":9}},"1266":{"start":{"line":4300,"column":10},"end":{"line":4300,"column":30}},"1267":{"start":{"line":4303,"column":6},"end":{"line":4303,"column":20}},"1268":{"start":{"line":4316,"column":4},"end":{"line":4326,"column":5}},"1269":{"start":{"line":4317,"column":6},"end":{"line":4319,"column":38}},"1270":{"start":{"line":4321,"column":6},"end":{"line":4324,"column":7}},"1271":{"start":{"line":4322,"column":8},"end":{"line":4322,"column":36}},"1272":{"start":{"line":4323,"column":8},"end":{"line":4323,"column":80}},"1273":{"start":{"line":4325,"column":6},"end":{"line":4325,"column":19}},"1274":{"start":{"line":4341,"column":4},"end":{"line":4359,"column":9}},"1275":{"start":{"line":4342,"column":6},"end":{"line":4343,"column":25}},"1276":{"start":{"line":4345,"column":6},"end":{"line":4358,"column":8}},"1277":{"start":{"line":4346,"column":8},"end":{"line":4347,"column":56}},"1278":{"start":{"line":4349,"column":8},"end":{"line":4349,"column":27}},"1279":{"start":{"line":4350,"column":8},"end":{"line":4356,"column":9}},"1280":{"start":{"line":4351,"column":10},"end":{"line":4353,"column":11}},"1281":{"start":{"line":4352,"column":12},"end":{"line":4352,"column":23}},"1282":{"start":{"line":4355,"column":10},"end":{"line":4355,"column":20}},"1283":{"start":{"line":4357,"column":8},"end":{"line":4357,"column":39}},"1284":{"start":{"line":4369,"column":4},"end":{"line":4387,"column":5}},"1285":{"start":{"line":4370,"column":6},"end":{"line":4372,"column":48}},"1286":{"start":{"line":4374,"column":6},"end":{"line":4375,"column":49}},"1287":{"start":{"line":4377,"column":6},"end":{"line":4378,"column":22}},"1288":{"start":{"line":4380,"column":6},"end":{"line":4385,"column":7}},"1289":{"start":{"line":4381,"column":8},"end":{"line":4381,"column":31}},"1290":{"start":{"line":4382,"column":8},"end":{"line":4384,"column":9}},"1291":{"start":{"line":4383,"column":10},"end":{"line":4383,"column":27}},"1292":{"start":{"line":4386,"column":6},"end":{"line":4386,"column":20}},"1293":{"start":{"line":4396,"column":4},"end":{"line":4404,"column":5}},"1294":{"start":{"line":4397,"column":6},"end":{"line":4399,"column":7}},"1295":{"start":{"line":4398,"column":8},"end":{"line":4398,"column":18}},"1296":{"start":{"line":4400,"column":6},"end":{"line":4402,"column":7}},"1297":{"start":{"line":4401,"column":8},"end":{"line":4401,"column":29}},"1298":{"start":{"line":4403,"column":6},"end":{"line":4403,"column":53}},"1299":{"start":{"line":4413,"column":4},"end":{"line":4415,"column":5}},"1300":{"start":{"line":4414,"column":6},"end":{"line":4414,"column":53}},"1301":{"start":{"line":4424,"column":4},"end":{"line":4433,"column":5}},"1302":{"start":{"line":4425,"column":6},"end":{"line":4427,"column":7}},"1303":{"start":{"line":4426,"column":8},"end":{"line":4426,"column":21}},"1304":{"start":{"line":4428,"column":6},"end":{"line":4428,"column":22}},"1305":{"start":{"line":4429,"column":6},"end":{"line":4431,"column":9}},"1306":{"start":{"line":4430,"column":8},"end":{"line":4430,"column":84}},"1307":{"start":{"line":4432,"column":6},"end":{"line":4432,"column":20}},"1308":{"start":{"line":4442,"column":4},"end":{"line":4446,"column":5}},"1309":{"start":{"line":4443,"column":6},"end":{"line":4445,"column":100}},"1310":{"start":{"line":4470,"column":4},"end":{"line":4485,"column":5}},"1311":{"start":{"line":4471,"column":6},"end":{"line":4475,"column":7}},"1312":{"start":{"line":4472,"column":8},"end":{"line":4472,"column":17}},"1313":{"start":{"line":4474,"column":8},"end":{"line":4474,"column":52}},"1314":{"start":{"line":4476,"column":6},"end":{"line":4479,"column":52}},"1315":{"start":{"line":4481,"column":6},"end":{"line":4483,"column":7}},"1316":{"start":{"line":4482,"column":8},"end":{"line":4482,"column":70}},"1317":{"start":{"line":4484,"column":6},"end":{"line":4484,"column":20}},"1318":{"start":{"line":4501,"column":4},"end":{"line":4514,"column":5}},"1319":{"start":{"line":4502,"column":6},"end":{"line":4505,"column":22}},"1320":{"start":{"line":4507,"column":6},"end":{"line":4512,"column":7}},"1321":{"start":{"line":4508,"column":8},"end":{"line":4508,"column":33}},"1322":{"start":{"line":4509,"column":8},"end":{"line":4511,"column":9}},"1323":{"start":{"line":4510,"column":10},"end":{"line":4510,"column":37}},"1324":{"start":{"line":4513,"column":6},"end":{"line":4513,"column":20}},"1325":{"start":{"line":4532,"column":4},"end":{"line":4536,"column":7}},"1326":{"start":{"line":4533,"column":6},"end":{"line":4535,"column":13}},"1327":{"start":{"line":4562,"column":4},"end":{"line":4571,"column":5}},"1328":{"start":{"line":4563,"column":6},"end":{"line":4563,"column":44}},"1329":{"start":{"line":4564,"column":6},"end":{"line":4566,"column":7}},"1330":{"start":{"line":4565,"column":8},"end":{"line":4565,"column":18}},"1331":{"start":{"line":4567,"column":6},"end":{"line":4569,"column":7}},"1332":{"start":{"line":4568,"column":8},"end":{"line":4568,"column":14}},"1333":{"start":{"line":4570,"column":6},"end":{"line":4570,"column":45}},"1334":{"start":{"line":4597,"column":4},"end":{"line":4607,"column":5}},"1335":{"start":{"line":4598,"column":6},"end":{"line":4598,"column":44}},"1336":{"start":{"line":4599,"column":6},"end":{"line":4601,"column":7}},"1337":{"start":{"line":4600,"column":8},"end":{"line":4600,"column":18}},"1338":{"start":{"line":4602,"column":6},"end":{"line":4604,"column":7}},"1339":{"start":{"line":4603,"column":8},"end":{"line":4603,"column":14}},"1340":{"start":{"line":4605,"column":6},"end":{"line":4605,"column":29}},"1341":{"start":{"line":4606,"column":6},"end":{"line":4606,"column":48}},"1342":{"start":{"line":4658,"column":4},"end":{"line":4662,"column":5}},"1343":{"start":{"line":4659,"column":6},"end":{"line":4661,"column":13}},"1344":{"start":{"line":4713,"column":4},"end":{"line":4717,"column":5}},"1345":{"start":{"line":4714,"column":6},"end":{"line":4716,"column":13}},"1346":{"start":{"line":4747,"column":4},"end":{"line":4757,"column":5}},"1347":{"start":{"line":4748,"column":6},"end":{"line":4748,"column":44}},"1348":{"start":{"line":4749,"column":6},"end":{"line":4751,"column":7}},"1349":{"start":{"line":4750,"column":8},"end":{"line":4750,"column":18}},"1350":{"start":{"line":4752,"column":6},"end":{"line":4755,"column":7}},"1351":{"start":{"line":4753,"column":8},"end":{"line":4753,"column":18}},"1352":{"start":{"line":4754,"column":8},"end":{"line":4754,"column":21}},"1353":{"start":{"line":4756,"column":6},"end":{"line":4756,"column":48}},"1354":{"start":{"line":4807,"column":4},"end":{"line":4807,"column":38}},"1355":{"start":{"line":4857,"column":4},"end":{"line":4857,"column":46}},"1356":{"start":{"line":4876,"column":4},"end":{"line":4878,"column":5}},"1357":{"start":{"line":4877,"column":6},"end":{"line":4877,"column":42}},"1358":{"start":{"line":4900,"column":4},"end":{"line":4906,"column":5}},"1359":{"start":{"line":4901,"column":6},"end":{"line":4901,"column":44}},"1360":{"start":{"line":4902,"column":6},"end":{"line":4904,"column":7}},"1361":{"start":{"line":4903,"column":8},"end":{"line":4903,"column":23}},"1362":{"start":{"line":4905,"column":6},"end":{"line":4905,"column":54}},"1363":{"start":{"line":4921,"column":4},"end":{"line":4924,"column":5}},"1364":{"start":{"line":4922,"column":6},"end":{"line":4922,"column":44}},"1365":{"start":{"line":4923,"column":6},"end":{"line":4923,"column":52}},"1366":{"start":{"line":4954,"column":4},"end":{"line":4970,"column":5}},"1367":{"start":{"line":4955,"column":6},"end":{"line":4955,"column":44}},"1368":{"start":{"line":4956,"column":6},"end":{"line":4958,"column":7}},"1369":{"start":{"line":4957,"column":8},"end":{"line":4957,"column":18}},"1370":{"start":{"line":4959,"column":6},"end":{"line":4968,"column":7}},"1371":{"start":{"line":4960,"column":8},"end":{"line":4960,"column":81}},"1372":{"start":{"line":4961,"column":13},"end":{"line":4968,"column":7}},"1373":{"start":{"line":4962,"column":8},"end":{"line":4962,"column":46}},"1374":{"start":{"line":4963,"column":8},"end":{"line":4966,"column":9}},"1375":{"start":{"line":4965,"column":10},"end":{"line":4965,"column":23}},"1376":{"start":{"line":4967,"column":8},"end":{"line":4967,"column":18}},"1377":{"start":{"line":4969,"column":6},"end":{"line":4969,"column":55}},"1378":{"start":{"line":4985,"column":4},"end":{"line":4987,"column":5}},"1379":{"start":{"line":4986,"column":6},"end":{"line":4986,"column":33}},"1380":{"start":{"line":5003,"column":4},"end":{"line":5038,"column":7}},"1381":{"start":{"line":5004,"column":6},"end":{"line":5009,"column":22}},"1382":{"start":{"line":5011,"column":6},"end":{"line":5014,"column":7}},"1383":{"start":{"line":5012,"column":8},"end":{"line":5012,"column":90}},"1384":{"start":{"line":5013,"column":8},"end":{"line":5013,"column":101}},"1385":{"start":{"line":5015,"column":6},"end":{"line":5018,"column":27}},"1386":{"start":{"line":5020,"column":6},"end":{"line":5036,"column":7}},"1387":{"start":{"line":5021,"column":6},"end":{"line":5036,"column":7}},"1388":{"start":{"line":5022,"column":8},"end":{"line":5022,"column":29}},"1389":{"start":{"line":5023,"column":8},"end":{"line":5035,"column":9}},"1390":{"start":{"line":5024,"column":10},"end":{"line":5024,"column":35}},"1391":{"start":{"line":5025,"column":10},"end":{"line":5030,"column":11}},"1392":{"start":{"line":5026,"column":12},"end":{"line":5026,"column":41}},"1393":{"start":{"line":5027,"column":12},"end":{"line":5029,"column":13}},"1394":{"start":{"line":5028,"column":14},"end":{"line":5028,"column":29}},"1395":{"start":{"line":5031,"column":10},"end":{"line":5033,"column":11}},"1396":{"start":{"line":5032,"column":12},"end":{"line":5032,"column":29}},"1397":{"start":{"line":5034,"column":10},"end":{"line":5034,"column":29}},"1398":{"start":{"line":5037,"column":6},"end":{"line":5037,"column":20}},"1399":{"start":{"line":5053,"column":4},"end":{"line":5056,"column":5}},"1400":{"start":{"line":5054,"column":6},"end":{"line":5054,"column":44}},"1401":{"start":{"line":5055,"column":6},"end":{"line":5055,"column":52}},"1402":{"start":{"line":5083,"column":4},"end":{"line":5108,"column":5}},"1403":{"start":{"line":5084,"column":6},"end":{"line":5084,"column":44}},"1404":{"start":{"line":5085,"column":6},"end":{"line":5087,"column":7}},"1405":{"start":{"line":5086,"column":8},"end":{"line":5086,"column":18}},"1406":{"start":{"line":5088,"column":6},"end":{"line":5088,"column":25}},"1407":{"start":{"line":5089,"column":6},"end":{"line":5098,"column":7}},"1408":{"start":{"line":5090,"column":8},"end":{"line":5090,"column":111}},"1409":{"start":{"line":5091,"column":13},"end":{"line":5098,"column":7}},"1410":{"start":{"line":5092,"column":8},"end":{"line":5092,"column":52}},"1411":{"start":{"line":5093,"column":8},"end":{"line":5093,"column":33}},"1412":{"start":{"line":5094,"column":8},"end":{"line":5096,"column":9}},"1413":{"start":{"line":5095,"column":10},"end":{"line":5095,"column":23}},"1414":{"start":{"line":5097,"column":8},"end":{"line":5097,"column":18}},"1415":{"start":{"line":5099,"column":6},"end":{"line":5101,"column":7}},"1416":{"start":{"line":5100,"column":8},"end":{"line":5100,"column":46}},"1417":{"start":{"line":5102,"column":6},"end":{"line":5106,"column":7}},"1418":{"start":{"line":5103,"column":8},"end":{"line":5105,"column":9}},"1419":{"start":{"line":5104,"column":10},"end":{"line":5104,"column":23}},"1420":{"start":{"line":5107,"column":6},"end":{"line":5107,"column":16}},"1421":{"start":{"line":5131,"column":4},"end":{"line":5151,"column":5}},"1422":{"start":{"line":5132,"column":6},"end":{"line":5133,"column":26}},"1423":{"start":{"line":5135,"column":6},"end":{"line":5137,"column":7}},"1424":{"start":{"line":5136,"column":8},"end":{"line":5136,"column":21}},"1425":{"start":{"line":5138,"column":6},"end":{"line":5140,"column":31}},"1426":{"start":{"line":5142,"column":6},"end":{"line":5149,"column":7}},"1427":{"start":{"line":5143,"column":8},"end":{"line":5144,"column":32}},"1428":{"start":{"line":5146,"column":8},"end":{"line":5148,"column":9}},"1429":{"start":{"line":5147,"column":10},"end":{"line":5147,"column":43}},"1430":{"start":{"line":5150,"column":6},"end":{"line":5150,"column":19}},"1431":{"start":{"line":5178,"column":4},"end":{"line":5184,"column":7}},"1432":{"start":{"line":5179,"column":6},"end":{"line":5179,"column":37}},"1433":{"start":{"line":5181,"column":6},"end":{"line":5181,"column":42}},"1434":{"start":{"line":5182,"column":6},"end":{"line":5182,"column":60}},"1435":{"start":{"line":5183,"column":6},"end":{"line":5183,"column":20}},"1436":{"start":{"line":5225,"column":4},"end":{"line":5244,"column":5}},"1437":{"start":{"line":5226,"column":6},"end":{"line":5226,"column":22}},"1438":{"start":{"line":5227,"column":6},"end":{"line":5229,"column":7}},"1439":{"start":{"line":5228,"column":8},"end":{"line":5228,"column":22}},"1440":{"start":{"line":5230,"column":6},"end":{"line":5232,"column":32}},"1441":{"start":{"line":5234,"column":6},"end":{"line":5234,"column":53}},"1442":{"start":{"line":5235,"column":6},"end":{"line":5241,"column":7}},"1443":{"start":{"line":5236,"column":8},"end":{"line":5236,"column":33}},"1444":{"start":{"line":5237,"column":8},"end":{"line":5240,"column":9}},"1445":{"start":{"line":5238,"column":10},"end":{"line":5238,"column":29}},"1446":{"start":{"line":5239,"column":10},"end":{"line":5239,"column":30}},"1447":{"start":{"line":5242,"column":6},"end":{"line":5242,"column":33}},"1448":{"start":{"line":5243,"column":6},"end":{"line":5243,"column":20}},"1449":{"start":{"line":5260,"column":4},"end":{"line":5262,"column":5}},"1450":{"start":{"line":5261,"column":6},"end":{"line":5261,"column":28}},"1451":{"start":{"line":5278,"column":4},"end":{"line":5288,"column":5}},"1452":{"start":{"line":5279,"column":6},"end":{"line":5279,"column":44}},"1453":{"start":{"line":5280,"column":6},"end":{"line":5282,"column":7}},"1454":{"start":{"line":5281,"column":8},"end":{"line":5281,"column":18}},"1455":{"start":{"line":5283,"column":6},"end":{"line":5286,"column":7}},"1456":{"start":{"line":5284,"column":8},"end":{"line":5284,"column":18}},"1457":{"start":{"line":5285,"column":8},"end":{"line":5285,"column":21}},"1458":{"start":{"line":5287,"column":6},"end":{"line":5287,"column":42}},"1459":{"start":{"line":5338,"column":4},"end":{"line":5338,"column":42}},"1460":{"start":{"line":5360,"column":4},"end":{"line":5360,"column":50}},"1461":{"start":{"line":5386,"column":4},"end":{"line":5395,"column":5}},"1462":{"start":{"line":5387,"column":6},"end":{"line":5387,"column":44}},"1463":{"start":{"line":5388,"column":6},"end":{"line":5390,"column":7}},"1464":{"start":{"line":5389,"column":8},"end":{"line":5389,"column":18}},"1465":{"start":{"line":5391,"column":6},"end":{"line":5393,"column":7}},"1466":{"start":{"line":5392,"column":8},"end":{"line":5392,"column":14}},"1467":{"start":{"line":5394,"column":6},"end":{"line":5394,"column":48}},"1468":{"start":{"line":5421,"column":4},"end":{"line":5431,"column":5}},"1469":{"start":{"line":5422,"column":6},"end":{"line":5422,"column":44}},"1470":{"start":{"line":5423,"column":6},"end":{"line":5425,"column":7}},"1471":{"start":{"line":5424,"column":8},"end":{"line":5424,"column":18}},"1472":{"start":{"line":5426,"column":6},"end":{"line":5428,"column":7}},"1473":{"start":{"line":5427,"column":8},"end":{"line":5427,"column":14}},"1474":{"start":{"line":5429,"column":6},"end":{"line":5429,"column":29}},"1475":{"start":{"line":5430,"column":6},"end":{"line":5430,"column":45}},"1476":{"start":{"line":5482,"column":4},"end":{"line":5486,"column":5}},"1477":{"start":{"line":5483,"column":6},"end":{"line":5485,"column":13}},"1478":{"start":{"line":5537,"column":4},"end":{"line":5541,"column":5}},"1479":{"start":{"line":5538,"column":6},"end":{"line":5540,"column":13}},"1480":{"start":{"line":5558,"column":4},"end":{"line":5560,"column":7}},"1481":{"start":{"line":5559,"column":6},"end":{"line":5559,"column":56}},"1482":{"start":{"line":5611,"column":4},"end":{"line":5628,"column":5}},"1483":{"start":{"line":5612,"column":6},"end":{"line":5612,"column":44}},"1484":{"start":{"line":5613,"column":6},"end":{"line":5615,"column":7}},"1485":{"start":{"line":5614,"column":8},"end":{"line":5614,"column":18}},"1486":{"start":{"line":5616,"column":6},"end":{"line":5620,"column":7}},"1487":{"start":{"line":5617,"column":8},"end":{"line":5617,"column":27}},"1488":{"start":{"line":5618,"column":8},"end":{"line":5618,"column":83}},"1489":{"start":{"line":5619,"column":8},"end":{"line":5619,"column":25}},"1490":{"start":{"line":5621,"column":6},"end":{"line":5621,"column":35}},"1491":{"start":{"line":5622,"column":6},"end":{"line":5624,"column":7}},"1492":{"start":{"line":5623,"column":8},"end":{"line":5623,"column":50}},"1493":{"start":{"line":5625,"column":6},"end":{"line":5627,"column":36}},"1494":{"start":{"line":5648,"column":4},"end":{"line":5666,"column":5}},"1495":{"start":{"line":5649,"column":6},"end":{"line":5651,"column":7}},"1496":{"start":{"line":5650,"column":8},"end":{"line":5650,"column":18}},"1497":{"start":{"line":5652,"column":6},"end":{"line":5653,"column":21}},"1498":{"start":{"line":5655,"column":6},"end":{"line":5660,"column":9}},"1499":{"start":{"line":5656,"column":8},"end":{"line":5659,"column":9}},"1500":{"start":{"line":5657,"column":10},"end":{"line":5657,"column":51}},"1501":{"start":{"line":5658,"column":10},"end":{"line":5658,"column":22}},"1502":{"start":{"line":5661,"column":6},"end":{"line":5661,"column":33}},"1503":{"start":{"line":5662,"column":6},"end":{"line":5664,"column":7}},"1504":{"start":{"line":5663,"column":8},"end":{"line":5663,"column":61}},"1505":{"start":{"line":5665,"column":6},"end":{"line":5665,"column":20}},"1506":{"start":{"line":5688,"column":4},"end":{"line":5701,"column":5}},"1507":{"start":{"line":5689,"column":6},"end":{"line":5689,"column":44}},"1508":{"start":{"line":5690,"column":6},"end":{"line":5692,"column":7}},"1509":{"start":{"line":5691,"column":8},"end":{"line":5691,"column":18}},"1510":{"start":{"line":5693,"column":6},"end":{"line":5693,"column":32}},"1511":{"start":{"line":5694,"column":6},"end":{"line":5696,"column":7}},"1512":{"start":{"line":5695,"column":8},"end":{"line":5695,"column":22}},"1513":{"start":{"line":5697,"column":6},"end":{"line":5697,"column":52}},"1514":{"start":{"line":5698,"column":6},"end":{"line":5700,"column":9}},"1515":{"start":{"line":5699,"column":8},"end":{"line":5699,"column":61}},"1516":{"start":{"line":5719,"column":4},"end":{"line":5723,"column":7}},"1517":{"start":{"line":5720,"column":6},"end":{"line":5722,"column":13}},"1518":{"start":{"line":5739,"column":4},"end":{"line":5752,"column":5}},"1519":{"start":{"line":5740,"column":6},"end":{"line":5741,"column":36}},"1520":{"start":{"line":5743,"column":6},"end":{"line":5750,"column":7}},"1521":{"start":{"line":5744,"column":8},"end":{"line":5744,"column":37}},"1522":{"start":{"line":5745,"column":8},"end":{"line":5749,"column":9}},"1523":{"start":{"line":5746,"column":10},"end":{"line":5748,"column":20}},"1524":{"start":{"line":5751,"column":6},"end":{"line":5751,"column":44}},"1525":{"start":{"line":5769,"column":4},"end":{"line":5769,"column":31}},"1526":{"start":{"line":5792,"column":4},"end":{"line":5809,"column":5}},"1527":{"start":{"line":5793,"column":6},"end":{"line":5795,"column":22}},"1528":{"start":{"line":5797,"column":6},"end":{"line":5799,"column":7}},"1529":{"start":{"line":5798,"column":8},"end":{"line":5798,"column":20}},"1530":{"start":{"line":5800,"column":6},"end":{"line":5807,"column":7}},"1531":{"start":{"line":5801,"column":8},"end":{"line":5801,"column":31}},"1532":{"start":{"line":5802,"column":8},"end":{"line":5806,"column":9}},"1533":{"start":{"line":5803,"column":10},"end":{"line":5803,"column":38}},"1534":{"start":{"line":5804,"column":15},"end":{"line":5806,"column":9}},"1535":{"start":{"line":5805,"column":10},"end":{"line":5805,"column":34}},"1536":{"start":{"line":5808,"column":6},"end":{"line":5808,"column":20}},"1537":{"start":{"line":5828,"column":4},"end":{"line":5841,"column":7}},"1538":{"start":{"line":5829,"column":6},"end":{"line":5831,"column":64}},"1539":{"start":{"line":5833,"column":6},"end":{"line":5838,"column":7}},"1540":{"start":{"line":5834,"column":8},"end":{"line":5834,"column":20}},"1541":{"start":{"line":5836,"column":8},"end":{"line":5836,"column":98}},"1542":{"start":{"line":5837,"column":8},"end":{"line":5837,"column":28}},"1543":{"start":{"line":5839,"column":6},"end":{"line":5839,"column":29}},"1544":{"start":{"line":5840,"column":6},"end":{"line":5840,"column":50}},"1545":{"start":{"line":5871,"column":4},"end":{"line":5875,"column":5}},"1546":{"start":{"line":5872,"column":6},"end":{"line":5872,"column":33}},"1547":{"start":{"line":5873,"column":6},"end":{"line":5873,"column":30}},"1548":{"start":{"line":5874,"column":6},"end":{"line":5874,"column":20}},"1549":{"start":{"line":5900,"column":4},"end":{"line":5903,"column":5}},"1550":{"start":{"line":5901,"column":6},"end":{"line":5901,"column":39}},"1551":{"start":{"line":5902,"column":6},"end":{"line":5902,"column":19}},"1552":{"start":{"line":5926,"column":4},"end":{"line":5928,"column":5}},"1553":{"start":{"line":5927,"column":6},"end":{"line":5927,"column":46}},"1554":{"start":{"line":5955,"column":4},"end":{"line":5957,"column":5}},"1555":{"start":{"line":5956,"column":6},"end":{"line":5956,"column":25}},"1556":{"start":{"line":5984,"column":4},"end":{"line":5986,"column":5}},"1557":{"start":{"line":5985,"column":6},"end":{"line":5985,"column":61}},"1558":{"start":{"line":6008,"column":4},"end":{"line":6013,"column":7}},"1559":{"start":{"line":6009,"column":6},"end":{"line":6009,"column":35}},"1560":{"start":{"line":6010,"column":6},"end":{"line":6012,"column":9}},"1561":{"start":{"line":6011,"column":8},"end":{"line":6011,"column":79}},"1562":{"start":{"line":6038,"column":4},"end":{"line":6054,"column":5}},"1563":{"start":{"line":6039,"column":6},"end":{"line":6040,"column":24}},"1564":{"start":{"line":6042,"column":6},"end":{"line":6051,"column":7}},"1565":{"start":{"line":6043,"column":8},"end":{"line":6043,"column":41}},"1566":{"start":{"line":6044,"column":8},"end":{"line":6048,"column":9}},"1567":{"start":{"line":6045,"column":10},"end":{"line":6045,"column":39}},"1568":{"start":{"line":6047,"column":10},"end":{"line":6047,"column":25}},"1569":{"start":{"line":6049,"column":8},"end":{"line":6049,"column":29}},"1570":{"start":{"line":6050,"column":8},"end":{"line":6050,"column":36}},"1571":{"start":{"line":6052,"column":6},"end":{"line":6052,"column":35}},"1572":{"start":{"line":6053,"column":6},"end":{"line":6053,"column":20}},"1573":{"start":{"line":6076,"column":4},"end":{"line":6092,"column":5}},"1574":{"start":{"line":6077,"column":6},"end":{"line":6077,"column":35}},"1575":{"start":{"line":6079,"column":6},"end":{"line":6081,"column":8}},"1576":{"start":{"line":6080,"column":8},"end":{"line":6080,"column":74}},"1577":{"start":{"line":6082,"column":6},"end":{"line":6090,"column":7}},"1578":{"start":{"line":6083,"column":8},"end":{"line":6083,"column":28}},"1579":{"start":{"line":6084,"column":8},"end":{"line":6086,"column":9}},"1580":{"start":{"line":6085,"column":10},"end":{"line":6085,"column":42}},"1581":{"start":{"line":6087,"column":8},"end":{"line":6087,"column":36}},"1582":{"start":{"line":6088,"column":8},"end":{"line":6088,"column":96}},"1583":{"start":{"line":6089,"column":8},"end":{"line":6089,"column":58}},"1584":{"start":{"line":6091,"column":6},"end":{"line":6091,"column":36}},"1585":{"start":{"line":6106,"column":4},"end":{"line":6108,"column":5}},"1586":{"start":{"line":6107,"column":6},"end":{"line":6107,"column":33}},"1587":{"start":{"line":6123,"column":4},"end":{"line":6125,"column":5}},"1588":{"start":{"line":6124,"column":6},"end":{"line":6124,"column":66}},"1589":{"start":{"line":6149,"column":4},"end":{"line":6151,"column":7}},"1590":{"start":{"line":6150,"column":6},"end":{"line":6150,"column":52}},"1591":{"start":{"line":6194,"column":4},"end":{"line":6196,"column":7}},"1592":{"start":{"line":6195,"column":6},"end":{"line":6195,"column":75}},"1593":{"start":{"line":6246,"column":4},"end":{"line":6255,"column":5}},"1594":{"start":{"line":6247,"column":6},"end":{"line":6247,"column":62}},"1595":{"start":{"line":6248,"column":6},"end":{"line":6250,"column":7}},"1596":{"start":{"line":6249,"column":8},"end":{"line":6249,"column":30}},"1597":{"start":{"line":6251,"column":6},"end":{"line":6253,"column":7}},"1598":{"start":{"line":6252,"column":8},"end":{"line":6252,"column":55}},"1599":{"start":{"line":6254,"column":6},"end":{"line":6254,"column":41}},"1600":{"start":{"line":6306,"column":4},"end":{"line":6310,"column":5}},"1601":{"start":{"line":6307,"column":6},"end":{"line":6307,"column":64}},"1602":{"start":{"line":6308,"column":6},"end":{"line":6308,"column":53}},"1603":{"start":{"line":6309,"column":6},"end":{"line":6309,"column":41}},"1604":{"start":{"line":6362,"column":4},"end":{"line":6362,"column":36}},"1605":{"start":{"line":6383,"column":4},"end":{"line":6383,"column":51}},"1606":{"start":{"line":6414,"column":4},"end":{"line":6416,"column":5}},"1607":{"start":{"line":6415,"column":6},"end":{"line":6415,"column":51}},"1608":{"start":{"line":6448,"column":4},"end":{"line":6448,"column":53}},"1609":{"start":{"line":6469,"column":4},"end":{"line":6469,"column":68}},"1610":{"start":{"line":6513,"column":4},"end":{"line":6519,"column":7}},"1611":{"start":{"line":6514,"column":6},"end":{"line":6518,"column":7}},"1612":{"start":{"line":6515,"column":8},"end":{"line":6515,"column":32}},"1613":{"start":{"line":6517,"column":8},"end":{"line":6517,"column":30}},"1614":{"start":{"line":6550,"column":4},"end":{"line":6564,"column":5}},"1615":{"start":{"line":6551,"column":6},"end":{"line":6551,"column":58}},"1616":{"start":{"line":6552,"column":6},"end":{"line":6555,"column":7}},"1617":{"start":{"line":6553,"column":8},"end":{"line":6553,"column":40}},"1618":{"start":{"line":6554,"column":8},"end":{"line":6554,"column":35}},"1619":{"start":{"line":6556,"column":6},"end":{"line":6560,"column":7}},"1620":{"start":{"line":6557,"column":8},"end":{"line":6557,"column":22}},"1621":{"start":{"line":6559,"column":8},"end":{"line":6559,"column":88}},"1622":{"start":{"line":6561,"column":6},"end":{"line":6563,"column":71}},"1623":{"start":{"line":6612,"column":4},"end":{"line":6614,"column":7}},"1624":{"start":{"line":6613,"column":6},"end":{"line":6613,"column":26}},"1625":{"start":{"line":6638,"column":4},"end":{"line":6649,"column":7}},"1626":{"start":{"line":6639,"column":6},"end":{"line":6642,"column":75}},"1627":{"start":{"line":6644,"column":6},"end":{"line":6647,"column":9}},"1628":{"start":{"line":6645,"column":8},"end":{"line":6645,"column":89}},"1629":{"start":{"line":6646,"column":8},"end":{"line":6646,"column":89}},"1630":{"start":{"line":6648,"column":6},"end":{"line":6648,"column":20}},"1631":{"start":{"line":6707,"column":4},"end":{"line":6711,"column":5}},"1632":{"start":{"line":6708,"column":6},"end":{"line":6708,"column":58}},"1633":{"start":{"line":6709,"column":6},"end":{"line":6709,"column":51}},"1634":{"start":{"line":6710,"column":6},"end":{"line":6710,"column":40}},"1635":{"start":{"line":6772,"column":4},"end":{"line":6774,"column":40}},"1636":{"start":{"line":6773,"column":6},"end":{"line":6773,"column":38}},"1637":{"start":{"line":6774,"column":20},"end":{"line":6774,"column":36}},"1638":{"start":{"line":6799,"column":4},"end":{"line":6801,"column":5}},"1639":{"start":{"line":6800,"column":6},"end":{"line":6800,"column":45}},"1640":{"start":{"line":6840,"column":4},"end":{"line":6840,"column":53}},"1641":{"start":{"line":6864,"column":4},"end":{"line":6864,"column":68}},"1642":{"start":{"line":6902,"column":4},"end":{"line":6908,"column":5}},"1643":{"start":{"line":6903,"column":6},"end":{"line":6903,"column":64}},"1644":{"start":{"line":6904,"column":6},"end":{"line":6904,"column":53}},"1645":{"start":{"line":6905,"column":6},"end":{"line":6907,"column":9}},"1646":{"start":{"line":6906,"column":8},"end":{"line":6906,"column":52}},"1647":{"start":{"line":6928,"column":4},"end":{"line":6949,"column":5}},"1648":{"start":{"line":6929,"column":6},"end":{"line":6933,"column":7}},"1649":{"start":{"line":6930,"column":8},"end":{"line":6930,"column":44}},"1650":{"start":{"line":6931,"column":8},"end":{"line":6931,"column":39}},"1651":{"start":{"line":6932,"column":8},"end":{"line":6932,"column":78}},"1652":{"start":{"line":6934,"column":6},"end":{"line":6937,"column":33}},"1653":{"start":{"line":6939,"column":6},"end":{"line":6939,"column":51}},"1654":{"start":{"line":6940,"column":6},"end":{"line":6946,"column":7}},"1655":{"start":{"line":6941,"column":8},"end":{"line":6942,"column":33}},"1656":{"start":{"line":6944,"column":8},"end":{"line":6944,"column":37}},"1657":{"start":{"line":6945,"column":8},"end":{"line":6945,"column":30}},"1658":{"start":{"line":6947,"column":6},"end":{"line":6947,"column":24}},"1659":{"start":{"line":6948,"column":6},"end":{"line":6948,"column":20}},"1660":{"start":{"line":6965,"column":4},"end":{"line":6967,"column":5}},"1661":{"start":{"line":6966,"column":6},"end":{"line":6966,"column":51}},"1662":{"start":{"line":6989,"column":4},"end":{"line":6992,"column":5}},"1663":{"start":{"line":6990,"column":6},"end":{"line":6990,"column":58}},"1664":{"start":{"line":6991,"column":6},"end":{"line":6991,"column":65}},"1665":{"start":{"line":7043,"column":4},"end":{"line":7052,"column":5}},"1666":{"start":{"line":7044,"column":6},"end":{"line":7044,"column":60}},"1667":{"start":{"line":7045,"column":6},"end":{"line":7047,"column":7}},"1668":{"start":{"line":7046,"column":8},"end":{"line":7046,"column":30}},"1669":{"start":{"line":7048,"column":6},"end":{"line":7050,"column":7}},"1670":{"start":{"line":7049,"column":8},"end":{"line":7049,"column":55}},"1671":{"start":{"line":7051,"column":6},"end":{"line":7051,"column":41}},"1672":{"start":{"line":7102,"column":4},"end":{"line":7116,"column":5}},"1673":{"start":{"line":7103,"column":6},"end":{"line":7105,"column":7}},"1674":{"start":{"line":7104,"column":8},"end":{"line":7104,"column":18}},"1675":{"start":{"line":7106,"column":6},"end":{"line":7108,"column":7}},"1676":{"start":{"line":7107,"column":8},"end":{"line":7107,"column":29}},"1677":{"start":{"line":7109,"column":6},"end":{"line":7109,"column":21}},"1678":{"start":{"line":7110,"column":6},"end":{"line":7110,"column":51}},"1679":{"start":{"line":7112,"column":6},"end":{"line":7114,"column":9}},"1680":{"start":{"line":7113,"column":8},"end":{"line":7113,"column":98}},"1681":{"start":{"line":7115,"column":6},"end":{"line":7115,"column":50}},"1682":{"start":{"line":7153,"column":4},"end":{"line":7162,"column":7}},"1683":{"start":{"line":7154,"column":6},"end":{"line":7156,"column":7}},"1684":{"start":{"line":7155,"column":8},"end":{"line":7155,"column":18}},"1685":{"start":{"line":7157,"column":6},"end":{"line":7157,"column":31}},"1686":{"start":{"line":7158,"column":6},"end":{"line":7160,"column":7}},"1687":{"start":{"line":7159,"column":8},"end":{"line":7159,"column":29}},"1688":{"start":{"line":7161,"column":6},"end":{"line":7161,"column":69}},"1689":{"start":{"line":7198,"column":4},"end":{"line":7212,"column":5}},"1690":{"start":{"line":7199,"column":6},"end":{"line":7201,"column":7}},"1691":{"start":{"line":7200,"column":8},"end":{"line":7200,"column":18}},"1692":{"start":{"line":7202,"column":6},"end":{"line":7204,"column":7}},"1693":{"start":{"line":7203,"column":8},"end":{"line":7203,"column":27}},"1694":{"start":{"line":7205,"column":6},"end":{"line":7207,"column":7}},"1695":{"start":{"line":7206,"column":8},"end":{"line":7206,"column":57}},"1696":{"start":{"line":7208,"column":6},"end":{"line":7210,"column":7}},"1697":{"start":{"line":7209,"column":8},"end":{"line":7209,"column":48}},"1698":{"start":{"line":7211,"column":6},"end":{"line":7211,"column":60}},"1699":{"start":{"line":7243,"column":4},"end":{"line":7245,"column":5}},"1700":{"start":{"line":7244,"column":6},"end":{"line":7244,"column":53}},"1701":{"start":{"line":7263,"column":4},"end":{"line":7265,"column":6}},"1702":{"start":{"line":7264,"column":6},"end":{"line":7264,"column":34}},"1703":{"start":{"line":7292,"column":4},"end":{"line":7308,"column":5}},"1704":{"start":{"line":7293,"column":6},"end":{"line":7301,"column":7}},"1705":{"start":{"line":7294,"column":8},"end":{"line":7300,"column":9}},"1706":{"start":{"line":7295,"column":10},"end":{"line":7295,"column":23}},"1707":{"start":{"line":7296,"column":10},"end":{"line":7296,"column":19}},"1708":{"start":{"line":7297,"column":10},"end":{"line":7297,"column":22}},"1709":{"start":{"line":7299,"column":10},"end":{"line":7299,"column":47}},"1710":{"start":{"line":7302,"column":6},"end":{"line":7302,"column":41}},"1711":{"start":{"line":7303,"column":6},"end":{"line":7307,"column":8}},"1712":{"start":{"line":7304,"column":8},"end":{"line":7306,"column":9}},"1713":{"start":{"line":7305,"column":10},"end":{"line":7305,"column":45}},"1714":{"start":{"line":7326,"column":4},"end":{"line":7332,"column":5}},"1715":{"start":{"line":7327,"column":6},"end":{"line":7329,"column":7}},"1716":{"start":{"line":7328,"column":8},"end":{"line":7328,"column":22}},"1717":{"start":{"line":7330,"column":6},"end":{"line":7330,"column":68}},"1718":{"start":{"line":7331,"column":6},"end":{"line":7331,"column":90}},"1719":{"start":{"line":7350,"column":4},"end":{"line":7370,"column":5}},"1720":{"start":{"line":7351,"column":6},"end":{"line":7351,"column":17}},"1721":{"start":{"line":7352,"column":6},"end":{"line":7360,"column":7}},"1722":{"start":{"line":7353,"column":8},"end":{"line":7359,"column":9}},"1723":{"start":{"line":7354,"column":10},"end":{"line":7354,"column":23}},"1724":{"start":{"line":7355,"column":10},"end":{"line":7355,"column":19}},"1725":{"start":{"line":7356,"column":10},"end":{"line":7356,"column":22}},"1726":{"start":{"line":7358,"column":10},"end":{"line":7358,"column":47}},"1727":{"start":{"line":7361,"column":6},"end":{"line":7369,"column":8}},"1728":{"start":{"line":7362,"column":8},"end":{"line":7364,"column":9}},"1729":{"start":{"line":7363,"column":10},"end":{"line":7363,"column":47}},"1730":{"start":{"line":7365,"column":8},"end":{"line":7367,"column":9}},"1731":{"start":{"line":7366,"column":10},"end":{"line":7366,"column":27}},"1732":{"start":{"line":7368,"column":8},"end":{"line":7368,"column":22}},"1733":{"start":{"line":7407,"column":4},"end":{"line":7414,"column":7}},"1734":{"start":{"line":7408,"column":6},"end":{"line":7408,"column":30}},"1735":{"start":{"line":7409,"column":6},"end":{"line":7412,"column":7}},"1736":{"start":{"line":7410,"column":8},"end":{"line":7410,"column":65}},"1737":{"start":{"line":7411,"column":8},"end":{"line":7411,"column":32}},"1738":{"start":{"line":7413,"column":6},"end":{"line":7413,"column":70}},"1739":{"start":{"line":7444,"column":4},"end":{"line":7455,"column":7}},"1740":{"start":{"line":7445,"column":6},"end":{"line":7445,"column":86}},"1741":{"start":{"line":7447,"column":6},"end":{"line":7448,"column":38}},"1742":{"start":{"line":7450,"column":6},"end":{"line":7453,"column":7}},"1743":{"start":{"line":7451,"column":8},"end":{"line":7451,"column":37}},"1744":{"start":{"line":7452,"column":8},"end":{"line":7452,"column":68}},"1745":{"start":{"line":7454,"column":6},"end":{"line":7454,"column":20}},"1746":{"start":{"line":7501,"column":4},"end":{"line":7508,"column":7}},"1747":{"start":{"line":7502,"column":6},"end":{"line":7502,"column":46}},"1748":{"start":{"line":7503,"column":6},"end":{"line":7506,"column":7}},"1749":{"start":{"line":7504,"column":8},"end":{"line":7504,"column":68}},"1750":{"start":{"line":7505,"column":8},"end":{"line":7505,"column":32}},"1751":{"start":{"line":7507,"column":6},"end":{"line":7507,"column":68}},"1752":{"start":{"line":7550,"column":4},"end":{"line":7550,"column":40}},"1753":{"start":{"line":7589,"column":4},"end":{"line":7589,"column":51}},"1754":{"start":{"line":7654,"column":4},"end":{"line":7760,"column":5}},"1755":{"start":{"line":7655,"column":6},"end":{"line":7664,"column":26}},"1756":{"start":{"line":7666,"column":6},"end":{"line":7668,"column":7}},"1757":{"start":{"line":7667,"column":8},"end":{"line":7667,"column":45}},"1758":{"start":{"line":7669,"column":6},"end":{"line":7669,"column":41}},"1759":{"start":{"line":7670,"column":6},"end":{"line":7677,"column":7}},"1760":{"start":{"line":7671,"column":8},"end":{"line":7671,"column":27}},"1761":{"start":{"line":7672,"column":8},"end":{"line":7672,"column":25}},"1762":{"start":{"line":7673,"column":13},"end":{"line":7677,"column":7}},"1763":{"start":{"line":7674,"column":8},"end":{"line":7674,"column":36}},"1764":{"start":{"line":7675,"column":8},"end":{"line":7675,"column":81}},"1765":{"start":{"line":7676,"column":8},"end":{"line":7676,"column":73}},"1766":{"start":{"line":7679,"column":6},"end":{"line":7688,"column":7}},"1767":{"start":{"line":7680,"column":8},"end":{"line":7682,"column":9}},"1768":{"start":{"line":7681,"column":10},"end":{"line":7681,"column":34}},"1769":{"start":{"line":7683,"column":8},"end":{"line":7685,"column":9}},"1770":{"start":{"line":7684,"column":10},"end":{"line":7684,"column":37}},"1771":{"start":{"line":7686,"column":8},"end":{"line":7686,"column":23}},"1772":{"start":{"line":7687,"column":8},"end":{"line":7687,"column":60}},"1773":{"start":{"line":7690,"column":6},"end":{"line":7702,"column":7}},"1774":{"start":{"line":7691,"column":8},"end":{"line":7693,"column":9}},"1775":{"start":{"line":7692,"column":10},"end":{"line":7692,"column":27}},"1776":{"start":{"line":7694,"column":8},"end":{"line":7694,"column":60}},"1777":{"start":{"line":7695,"column":8},"end":{"line":7701,"column":9}},"1778":{"start":{"line":7696,"column":10},"end":{"line":7696,"column":29}},"1779":{"start":{"line":7697,"column":10},"end":{"line":7697,"column":45}},"1780":{"start":{"line":7698,"column":10},"end":{"line":7700,"column":11}},"1781":{"start":{"line":7699,"column":12},"end":{"line":7699,"column":39}},"1782":{"start":{"line":7704,"column":6},"end":{"line":7711,"column":7}},"1783":{"start":{"line":7705,"column":8},"end":{"line":7705,"column":47}},"1784":{"start":{"line":7706,"column":8},"end":{"line":7710,"column":9}},"1785":{"start":{"line":7707,"column":10},"end":{"line":7707,"column":47}},"1786":{"start":{"line":7709,"column":10},"end":{"line":7709,"column":53}},"1787":{"start":{"line":7713,"column":6},"end":{"line":7715,"column":7}},"1788":{"start":{"line":7714,"column":8},"end":{"line":7714,"column":38}},"1789":{"start":{"line":7717,"column":6},"end":{"line":7757,"column":7}},"1790":{"start":{"line":7718,"column":8},"end":{"line":7718,"column":25}},"1791":{"start":{"line":7719,"column":8},"end":{"line":7719,"column":22}},"1792":{"start":{"line":7720,"column":8},"end":{"line":7720,"column":23}},"1793":{"start":{"line":7721,"column":8},"end":{"line":7721,"column":59}},"1794":{"start":{"line":7723,"column":8},"end":{"line":7742,"column":9}},"1795":{"start":{"line":7724,"column":10},"end":{"line":7724,"column":50}},"1796":{"start":{"line":7726,"column":10},"end":{"line":7728,"column":11}},"1797":{"start":{"line":7727,"column":12},"end":{"line":7727,"column":31}},"1798":{"start":{"line":7729,"column":10},"end":{"line":7730,"column":63}},"1799":{"start":{"line":7732,"column":10},"end":{"line":7741,"column":11}},"1800":{"start":{"line":7733,"column":12},"end":{"line":7735,"column":13}},"1801":{"start":{"line":7734,"column":14},"end":{"line":7734,"column":56}},"1802":{"start":{"line":7736,"column":12},"end":{"line":7736,"column":31}},"1803":{"start":{"line":7737,"column":12},"end":{"line":7737,"column":47}},"1804":{"start":{"line":7739,"column":15},"end":{"line":7741,"column":11}},"1805":{"start":{"line":7740,"column":12},"end":{"line":7740,"column":61}},"1806":{"start":{"line":7743,"column":8},"end":{"line":7748,"column":9}},"1807":{"start":{"line":7744,"column":10},"end":{"line":7744,"column":46}},"1808":{"start":{"line":7746,"column":13},"end":{"line":7748,"column":9}},"1809":{"start":{"line":7747,"column":10},"end":{"line":7747,"column":48}},"1810":{"start":{"line":7749,"column":8},"end":{"line":7752,"column":9}},"1811":{"start":{"line":7750,"column":10},"end":{"line":7750,"column":26}},"1812":{"start":{"line":7751,"column":10},"end":{"line":7751,"column":45}},"1813":{"start":{"line":7753,"column":8},"end":{"line":7755,"column":9}},"1814":{"start":{"line":7754,"column":10},"end":{"line":7754,"column":37}},"1815":{"start":{"line":7756,"column":8},"end":{"line":7756,"column":22}},"1816":{"start":{"line":7758,"column":6},"end":{"line":7758,"column":32}},"1817":{"start":{"line":7759,"column":6},"end":{"line":7759,"column":23}},"1818":{"start":{"line":7779,"column":4},"end":{"line":7781,"column":7}},"1819":{"start":{"line":7780,"column":6},"end":{"line":7780,"column":38}},"1820":{"start":{"line":7801,"column":4},"end":{"line":7803,"column":7}},"1821":{"start":{"line":7802,"column":6},"end":{"line":7802,"column":41}},"1822":{"start":{"line":7825,"column":4},"end":{"line":7825,"column":28}},"1823":{"start":{"line":7847,"column":4},"end":{"line":7847,"column":37}},"1824":{"start":{"line":7900,"column":4},"end":{"line":7918,"column":5}},"1825":{"start":{"line":7901,"column":6},"end":{"line":7903,"column":7}},"1826":{"start":{"line":7902,"column":8},"end":{"line":7902,"column":45}},"1827":{"start":{"line":7904,"column":6},"end":{"line":7915,"column":8}},"1828":{"start":{"line":7905,"column":8},"end":{"line":7907,"column":35}},"1829":{"start":{"line":7909,"column":8},"end":{"line":7911,"column":9}},"1830":{"start":{"line":7910,"column":10},"end":{"line":7910,"column":32}},"1831":{"start":{"line":7912,"column":8},"end":{"line":7912,"column":44}},"1832":{"start":{"line":7913,"column":8},"end":{"line":7913,"column":48}},"1833":{"start":{"line":7914,"column":8},"end":{"line":7914,"column":22}},"1834":{"start":{"line":7916,"column":6},"end":{"line":7916,"column":41}},"1835":{"start":{"line":7917,"column":6},"end":{"line":7917,"column":22}},"1836":{"start":{"line":7951,"column":4},"end":{"line":7964,"column":7}},"1837":{"start":{"line":7952,"column":6},"end":{"line":7952,"column":43}},"1838":{"start":{"line":7953,"column":6},"end":{"line":7955,"column":7}},"1839":{"start":{"line":7954,"column":8},"end":{"line":7954,"column":45}},"1840":{"start":{"line":7956,"column":6},"end":{"line":7956,"column":37}},"1841":{"start":{"line":7957,"column":6},"end":{"line":7963,"column":9}},"1842":{"start":{"line":7958,"column":8},"end":{"line":7958,"column":51}},"1843":{"start":{"line":7959,"column":8},"end":{"line":7961,"column":9}},"1844":{"start":{"line":7960,"column":10},"end":{"line":7960,"column":55}},"1845":{"start":{"line":7962,"column":8},"end":{"line":7962,"column":38}},"1846":{"start":{"line":7985,"column":4},"end":{"line":7992,"column":5}},"1847":{"start":{"line":7986,"column":6},"end":{"line":7988,"column":7}},"1848":{"start":{"line":7987,"column":8},"end":{"line":7987,"column":45}},"1849":{"start":{"line":7989,"column":6},"end":{"line":7991,"column":8}},"1850":{"start":{"line":7990,"column":8},"end":{"line":7990,"column":49}},"1851":{"start":{"line":8011,"column":4},"end":{"line":8013,"column":5}},"1852":{"start":{"line":8012,"column":6},"end":{"line":8012,"column":29}},"1853":{"start":{"line":8047,"column":4},"end":{"line":8047,"column":46}},"1854":{"start":{"line":8080,"column":4},"end":{"line":8080,"column":57}},"1855":{"start":{"line":8110,"column":4},"end":{"line":8112,"column":7}},"1856":{"start":{"line":8111,"column":6},"end":{"line":8111,"column":100}},"1857":{"start":{"line":8136,"column":4},"end":{"line":8163,"column":5}},"1858":{"start":{"line":8137,"column":6},"end":{"line":8139,"column":7}},"1859":{"start":{"line":8138,"column":8},"end":{"line":8138,"column":45}},"1860":{"start":{"line":8140,"column":6},"end":{"line":8140,"column":84}},"1861":{"start":{"line":8141,"column":6},"end":{"line":8162,"column":8}},"1862":{"start":{"line":8142,"column":8},"end":{"line":8145,"column":33}},"1863":{"start":{"line":8147,"column":8},"end":{"line":8149,"column":9}},"1864":{"start":{"line":8148,"column":10},"end":{"line":8148,"column":44}},"1865":{"start":{"line":8150,"column":8},"end":{"line":8154,"column":9}},"1866":{"start":{"line":8151,"column":18},"end":{"line":8151,"column":47}},"1867":{"start":{"line":8152,"column":18},"end":{"line":8152,"column":56}},"1868":{"start":{"line":8153,"column":18},"end":{"line":8153,"column":65}},"1869":{"start":{"line":8155,"column":8},"end":{"line":8155,"column":41}},"1870":{"start":{"line":8156,"column":8},"end":{"line":8156,"column":19}},"1871":{"start":{"line":8157,"column":8},"end":{"line":8159,"column":9}},"1872":{"start":{"line":8158,"column":10},"end":{"line":8158,"column":41}},"1873":{"start":{"line":8160,"column":8},"end":{"line":8160,"column":32}},"1874":{"start":{"line":8161,"column":8},"end":{"line":8161,"column":43}},"1875":{"start":{"line":8196,"column":4},"end":{"line":8203,"column":5}},"1876":{"start":{"line":8197,"column":6},"end":{"line":8199,"column":7}},"1877":{"start":{"line":8198,"column":8},"end":{"line":8198,"column":45}},"1878":{"start":{"line":8200,"column":6},"end":{"line":8202,"column":8}},"1879":{"start":{"line":8201,"column":8},"end":{"line":8201,"column":39}},"1880":{"start":{"line":8244,"column":4},"end":{"line":8258,"column":5}},"1881":{"start":{"line":8245,"column":6},"end":{"line":8246,"column":26}},"1882":{"start":{"line":8248,"column":6},"end":{"line":8250,"column":7}},"1883":{"start":{"line":8249,"column":8},"end":{"line":8249,"column":45}},"1884":{"start":{"line":8251,"column":6},"end":{"line":8256,"column":7}},"1885":{"start":{"line":8252,"column":8},"end":{"line":8252,"column":24}},"1886":{"start":{"line":8253,"column":13},"end":{"line":8256,"column":7}},"1887":{"start":{"line":8254,"column":8},"end":{"line":8254,"column":69}},"1888":{"start":{"line":8255,"column":8},"end":{"line":8255,"column":73}},"1889":{"start":{"line":8257,"column":6},"end":{"line":8257,"column":98}},"1890":{"start":{"line":8281,"column":4},"end":{"line":8284,"column":5}},"1891":{"start":{"line":8282,"column":6},"end":{"line":8282,"column":53}},"1892":{"start":{"line":8283,"column":6},"end":{"line":8283,"column":74}},"1893":{"start":{"line":8339,"column":4},"end":{"line":8351,"column":5}},"1894":{"start":{"line":8340,"column":6},"end":{"line":8347,"column":7}},"1895":{"start":{"line":8341,"column":8},"end":{"line":8341,"column":23}},"1896":{"start":{"line":8343,"column":11},"end":{"line":8347,"column":7}},"1897":{"start":{"line":8344,"column":8},"end":{"line":8344,"column":29}},"1898":{"start":{"line":8345,"column":8},"end":{"line":8345,"column":28}},"1899":{"start":{"line":8346,"column":8},"end":{"line":8346,"column":23}},"1900":{"start":{"line":8348,"column":6},"end":{"line":8350,"column":35}},"1901":{"start":{"line":8398,"column":4},"end":{"line":8402,"column":5}},"1902":{"start":{"line":8399,"column":6},"end":{"line":8401,"column":33}},"1903":{"start":{"line":8424,"column":4},"end":{"line":8426,"column":5}},"1904":{"start":{"line":8425,"column":6},"end":{"line":8425,"column":27}},"1905":{"start":{"line":8448,"column":4},"end":{"line":8450,"column":5}},"1906":{"start":{"line":8449,"column":6},"end":{"line":8449,"column":28}},"1907":{"start":{"line":8468,"column":4},"end":{"line":8471,"column":5}},"1908":{"start":{"line":8469,"column":6},"end":{"line":8470,"column":92}},"1909":{"start":{"line":8489,"column":4},"end":{"line":8491,"column":6}},"1910":{"start":{"line":8490,"column":6},"end":{"line":8490,"column":98}},"1911":{"start":{"line":8509,"column":4},"end":{"line":8511,"column":5}},"1912":{"start":{"line":8510,"column":6},"end":{"line":8510,"column":110}},"1913":{"start":{"line":8529,"column":4},"end":{"line":8531,"column":5}},"1914":{"start":{"line":8530,"column":6},"end":{"line":8530,"column":71}},"1915":{"start":{"line":8549,"column":4},"end":{"line":8551,"column":5}},"1916":{"start":{"line":8550,"column":6},"end":{"line":8550,"column":93}},"1917":{"start":{"line":8580,"column":4},"end":{"line":8589,"column":5}},"1918":{"start":{"line":8581,"column":6},"end":{"line":8583,"column":7}},"1919":{"start":{"line":8582,"column":8},"end":{"line":8582,"column":20}},"1920":{"start":{"line":8584,"column":6},"end":{"line":8587,"column":7}},"1921":{"start":{"line":8586,"column":8},"end":{"line":8586,"column":29}},"1922":{"start":{"line":8588,"column":6},"end":{"line":8588,"column":33}},"1923":{"start":{"line":8635,"column":4},"end":{"line":8639,"column":5}},"1924":{"start":{"line":8636,"column":6},"end":{"line":8636,"column":102}},"1925":{"start":{"line":8637,"column":6},"end":{"line":8637,"column":69}},"1926":{"start":{"line":8638,"column":6},"end":{"line":8638,"column":86}},"1927":{"start":{"line":8658,"column":4},"end":{"line":8660,"column":5}},"1928":{"start":{"line":8659,"column":6},"end":{"line":8659,"column":108}},"1929":{"start":{"line":8689,"column":4},"end":{"line":8691,"column":5}},"1930":{"start":{"line":8690,"column":6},"end":{"line":8690,"column":63}},"1931":{"start":{"line":8709,"column":4},"end":{"line":8714,"column":5}},"1932":{"start":{"line":8713,"column":6},"end":{"line":8713,"column":67}},"1933":{"start":{"line":8736,"column":4},"end":{"line":8741,"column":5}},"1934":{"start":{"line":8739,"column":6},"end":{"line":8739,"column":30}},"1935":{"start":{"line":8740,"column":6},"end":{"line":8740,"column":65}},"1936":{"start":{"line":8782,"column":4},"end":{"line":8785,"column":5}},"1937":{"start":{"line":8783,"column":6},"end":{"line":8783,"column":102}},"1938":{"start":{"line":8784,"column":6},"end":{"line":8784,"column":67}},"1939":{"start":{"line":8812,"column":4},"end":{"line":8816,"column":5}},"1940":{"start":{"line":8815,"column":6},"end":{"line":8815,"column":48}},"1941":{"start":{"line":8834,"column":4},"end":{"line":8842,"column":5}},"1942":{"start":{"line":8835,"column":6},"end":{"line":8837,"column":7}},"1943":{"start":{"line":8836,"column":8},"end":{"line":8836,"column":21}},"1944":{"start":{"line":8838,"column":6},"end":{"line":8840,"column":7}},"1945":{"start":{"line":8839,"column":8},"end":{"line":8839,"column":55}},"1946":{"start":{"line":8841,"column":6},"end":{"line":8841,"column":61}},"1947":{"start":{"line":8860,"column":4},"end":{"line":8862,"column":5}},"1948":{"start":{"line":8861,"column":6},"end":{"line":8861,"column":28}},"1949":{"start":{"line":8886,"column":4},"end":{"line":8888,"column":5}},"1950":{"start":{"line":8887,"column":6},"end":{"line":8887,"column":103}},"1951":{"start":{"line":8920,"column":4},"end":{"line":8939,"column":5}},"1952":{"start":{"line":8921,"column":6},"end":{"line":8921,"column":15}},"1953":{"start":{"line":8924,"column":6},"end":{"line":8927,"column":7}},"1954":{"start":{"line":8926,"column":8},"end":{"line":8926,"column":21}},"1955":{"start":{"line":8931,"column":6},"end":{"line":8931,"column":17}},"1956":{"start":{"line":8935,"column":6},"end":{"line":8937,"column":9}},"1957":{"start":{"line":8936,"column":8},"end":{"line":8936,"column":21}},"1958":{"start":{"line":8938,"column":6},"end":{"line":8938,"column":72}},"1959":{"start":{"line":8957,"column":4},"end":{"line":8959,"column":5}},"1960":{"start":{"line":8958,"column":6},"end":{"line":8958,"column":69}},"1961":{"start":{"line":8977,"column":4},"end":{"line":8979,"column":5}},"1962":{"start":{"line":8978,"column":6},"end":{"line":8978,"column":103}},"1963":{"start":{"line":8997,"column":4},"end":{"line":8999,"column":5}},"1964":{"start":{"line":8998,"column":6},"end":{"line":8998,"column":104}},"1965":{"start":{"line":9017,"column":4},"end":{"line":9019,"column":5}},"1966":{"start":{"line":9018,"column":6},"end":{"line":9018,"column":33}},"1967":{"start":{"line":9041,"column":4},"end":{"line":9043,"column":5}},"1968":{"start":{"line":9042,"column":6},"end":{"line":9042,"column":27}},"1969":{"start":{"line":9065,"column":4},"end":{"line":9067,"column":5}},"1970":{"start":{"line":9066,"column":6},"end":{"line":9066,"column":28}},"1971":{"start":{"line":9084,"column":4},"end":{"line":9093,"column":5}},"1972":{"start":{"line":9085,"column":6},"end":{"line":9085,"column":48}},"1973":{"start":{"line":9086,"column":6},"end":{"line":9088,"column":7}},"1974":{"start":{"line":9087,"column":8},"end":{"line":9087,"column":29}},"1975":{"start":{"line":9089,"column":6},"end":{"line":9091,"column":7}},"1976":{"start":{"line":9090,"column":8},"end":{"line":9090,"column":18}},"1977":{"start":{"line":9092,"column":6},"end":{"line":9092,"column":30}},"1978":{"start":{"line":9118,"column":4},"end":{"line":9120,"column":5}},"1979":{"start":{"line":9119,"column":6},"end":{"line":9119,"column":44}},"1980":{"start":{"line":9172,"column":4},"end":{"line":9172,"column":42}},"1981":{"start":{"line":9206,"column":4},"end":{"line":9210,"column":7}},"1982":{"start":{"line":9207,"column":6},"end":{"line":9209,"column":37}},"1983":{"start":{"line":9246,"column":4},"end":{"line":9252,"column":5}},"1984":{"start":{"line":9247,"column":6},"end":{"line":9247,"column":41}},"1985":{"start":{"line":9248,"column":6},"end":{"line":9250,"column":7}},"1986":{"start":{"line":9249,"column":8},"end":{"line":9249,"column":31}},"1987":{"start":{"line":9251,"column":6},"end":{"line":9251,"column":66}},"1988":{"start":{"line":9272,"column":4},"end":{"line":9272,"column":58}},"1989":{"start":{"line":9292,"column":4},"end":{"line":9292,"column":60}},"1990":{"start":{"line":9342,"column":4},"end":{"line":9342,"column":44}},"1991":{"start":{"line":9392,"column":4},"end":{"line":9392,"column":53}},"1992":{"start":{"line":9421,"column":4},"end":{"line":9421,"column":37}},"1993":{"start":{"line":9448,"column":4},"end":{"line":9448,"column":47}},"1994":{"start":{"line":9477,"column":4},"end":{"line":9477,"column":42}},"1995":{"start":{"line":9504,"column":4},"end":{"line":9504,"column":52}},"1996":{"start":{"line":9521,"column":4},"end":{"line":9523,"column":5}},"1997":{"start":{"line":9522,"column":6},"end":{"line":9522,"column":51}},"1998":{"start":{"line":9549,"column":4},"end":{"line":9552,"column":5}},"1999":{"start":{"line":9550,"column":6},"end":{"line":9550,"column":89}},"2000":{"start":{"line":9551,"column":6},"end":{"line":9551,"column":58}},"2001":{"start":{"line":9576,"column":4},"end":{"line":9592,"column":5}},"2002":{"start":{"line":9577,"column":6},"end":{"line":9579,"column":7}},"2003":{"start":{"line":9578,"column":8},"end":{"line":9578,"column":21}},"2004":{"start":{"line":9580,"column":6},"end":{"line":9580,"column":53}},"2005":{"start":{"line":9581,"column":6},"end":{"line":9589,"column":7}},"2006":{"start":{"line":9582,"column":8},"end":{"line":9582,"column":28}},"2007":{"start":{"line":9583,"column":8},"end":{"line":9583,"column":85}},"2008":{"start":{"line":9584,"column":8},"end":{"line":9586,"column":9}},"2009":{"start":{"line":9585,"column":10},"end":{"line":9585,"column":23}},"2010":{"start":{"line":9587,"column":8},"end":{"line":9587,"column":26}},"2011":{"start":{"line":9588,"column":8},"end":{"line":9588,"column":51}},"2012":{"start":{"line":9590,"column":6},"end":{"line":9591,"column":50}},"2013":{"start":{"line":9617,"column":4},"end":{"line":9642,"column":5}},"2014":{"start":{"line":9618,"column":6},"end":{"line":9620,"column":7}},"2015":{"start":{"line":9619,"column":8},"end":{"line":9619,"column":31}},"2016":{"start":{"line":9621,"column":6},"end":{"line":9624,"column":22}},"2017":{"start":{"line":9626,"column":6},"end":{"line":9640,"column":7}},"2018":{"start":{"line":9627,"column":8},"end":{"line":9628,"column":32}},"2019":{"start":{"line":9630,"column":8},"end":{"line":9639,"column":9}},"2020":{"start":{"line":9631,"column":10},"end":{"line":9635,"column":11}},"2021":{"start":{"line":9632,"column":12},"end":{"line":9632,"column":36}},"2022":{"start":{"line":9634,"column":12},"end":{"line":9634,"column":34}},"2023":{"start":{"line":9638,"column":10},"end":{"line":9638,"column":30}},"2024":{"start":{"line":9641,"column":6},"end":{"line":9641,"column":20}},"2025":{"start":{"line":9671,"column":4},"end":{"line":9678,"column":6}},"2026":{"start":{"line":9672,"column":6},"end":{"line":9672,"column":65}},"2027":{"start":{"line":9673,"column":6},"end":{"line":9676,"column":7}},"2028":{"start":{"line":9675,"column":8},"end":{"line":9675,"column":32}},"2029":{"start":{"line":9677,"column":6},"end":{"line":9677,"column":56}},"2030":{"start":{"line":9702,"column":4},"end":{"line":9729,"column":5}},"2031":{"start":{"line":9703,"column":6},"end":{"line":9705,"column":7}},"2032":{"start":{"line":9704,"column":8},"end":{"line":9704,"column":18}},"2033":{"start":{"line":9706,"column":6},"end":{"line":9708,"column":7}},"2034":{"start":{"line":9707,"column":8},"end":{"line":9707,"column":32}},"2035":{"start":{"line":9709,"column":6},"end":{"line":9709,"column":33}},"2036":{"start":{"line":9710,"column":6},"end":{"line":9711,"column":65}},"2037":{"start":{"line":9713,"column":6},"end":{"line":9717,"column":35}},"2038":{"start":{"line":9719,"column":6},"end":{"line":9721,"column":7}},"2039":{"start":{"line":9720,"column":8},"end":{"line":9720,"column":37}},"2040":{"start":{"line":9722,"column":6},"end":{"line":9727,"column":7}},"2041":{"start":{"line":9723,"column":8},"end":{"line":9726,"column":9}},"2042":{"start":{"line":9725,"column":10},"end":{"line":9725,"column":27}},"2043":{"start":{"line":9728,"column":6},"end":{"line":9728,"column":20}},"2044":{"start":{"line":9751,"column":4},"end":{"line":9751,"column":43}},"2045":{"start":{"line":9794,"column":4},"end":{"line":9794,"column":41}},"2046":{"start":{"line":9819,"column":4},"end":{"line":9831,"column":7}},"2047":{"start":{"line":9820,"column":6},"end":{"line":9822,"column":7}},"2048":{"start":{"line":9821,"column":8},"end":{"line":9821,"column":18}},"2049":{"start":{"line":9823,"column":6},"end":{"line":9826,"column":7}},"2050":{"start":{"line":9824,"column":8},"end":{"line":9824,"column":57}},"2051":{"start":{"line":9825,"column":8},"end":{"line":9825,"column":74}},"2052":{"start":{"line":9827,"column":6},"end":{"line":9827,"column":58}},"2053":{"start":{"line":9828,"column":6},"end":{"line":9830,"column":9}},"2054":{"start":{"line":9829,"column":8},"end":{"line":9829,"column":46}},"2055":{"start":{"line":9847,"column":4},"end":{"line":9860,"column":5}},"2056":{"start":{"line":9848,"column":6},"end":{"line":9848,"column":32}},"2057":{"start":{"line":9850,"column":6},"end":{"line":9853,"column":33}},"2058":{"start":{"line":9855,"column":6},"end":{"line":9858,"column":7}},"2059":{"start":{"line":9856,"column":8},"end":{"line":9856,"column":31}},"2060":{"start":{"line":9857,"column":8},"end":{"line":9857,"column":43}},"2061":{"start":{"line":9859,"column":6},"end":{"line":9859,"column":20}},"2062":{"start":{"line":9888,"column":4},"end":{"line":9895,"column":7}},"2063":{"start":{"line":9889,"column":6},"end":{"line":9891,"column":7}},"2064":{"start":{"line":9890,"column":8},"end":{"line":9890,"column":18}},"2065":{"start":{"line":9892,"column":6},"end":{"line":9894,"column":50}},"2066":{"start":{"line":9925,"column":4},"end":{"line":9936,"column":5}},"2067":{"start":{"line":9926,"column":6},"end":{"line":9926,"column":61}},"2068":{"start":{"line":9927,"column":6},"end":{"line":9934,"column":7}},"2069":{"start":{"line":9928,"column":8},"end":{"line":9932,"column":9}},"2070":{"start":{"line":9929,"column":10},"end":{"line":9929,"column":30}},"2071":{"start":{"line":9930,"column":10},"end":{"line":9930,"column":87}},"2072":{"start":{"line":9931,"column":10},"end":{"line":9931,"column":67}},"2073":{"start":{"line":9933,"column":8},"end":{"line":9933,"column":62}},"2074":{"start":{"line":9935,"column":6},"end":{"line":9935,"column":63}},"2075":{"start":{"line":9961,"column":4},"end":{"line":9985,"column":5}},"2076":{"start":{"line":9962,"column":6},"end":{"line":9964,"column":7}},"2077":{"start":{"line":9963,"column":8},"end":{"line":9963,"column":22}},"2078":{"start":{"line":9965,"column":6},"end":{"line":9965,"column":32}},"2079":{"start":{"line":9966,"column":6},"end":{"line":9966,"column":89}},"2080":{"start":{"line":9968,"column":6},"end":{"line":9971,"column":26}},"2081":{"start":{"line":9973,"column":6},"end":{"line":9983,"column":7}},"2082":{"start":{"line":9974,"column":8},"end":{"line":9974,"column":30}},"2083":{"start":{"line":9975,"column":8},"end":{"line":9981,"column":9}},"2084":{"start":{"line":9976,"column":10},"end":{"line":9980,"column":11}},"2085":{"start":{"line":9977,"column":12},"end":{"line":9977,"column":32}},"2086":{"start":{"line":9978,"column":17},"end":{"line":9980,"column":11}},"2087":{"start":{"line":9979,"column":12},"end":{"line":9979,"column":61}},"2088":{"start":{"line":9982,"column":8},"end":{"line":9982,"column":29}},"2089":{"start":{"line":9984,"column":6},"end":{"line":9984,"column":20}},"2090":{"start":{"line":10016,"column":4},"end":{"line":10036,"column":5}},"2091":{"start":{"line":10017,"column":6},"end":{"line":10017,"column":58}},"2092":{"start":{"line":10018,"column":6},"end":{"line":10018,"column":51}},"2093":{"start":{"line":10020,"column":6},"end":{"line":10031,"column":7}},"2094":{"start":{"line":10021,"column":8},"end":{"line":10030,"column":9}},"2095":{"start":{"line":10022,"column":10},"end":{"line":10022,"column":40}},"2096":{"start":{"line":10023,"column":10},"end":{"line":10027,"column":11}},"2097":{"start":{"line":10024,"column":12},"end":{"line":10024,"column":58}},"2098":{"start":{"line":10026,"column":12},"end":{"line":10026,"column":84}},"2099":{"start":{"line":10029,"column":10},"end":{"line":10029,"column":27}},"2100":{"start":{"line":10032,"column":6},"end":{"line":10034,"column":9}},"2101":{"start":{"line":10033,"column":8},"end":{"line":10033,"column":59}},"2102":{"start":{"line":10035,"column":6},"end":{"line":10035,"column":25}},"2103":{"start":{"line":10063,"column":4},"end":{"line":10065,"column":5}},"2104":{"start":{"line":10064,"column":6},"end":{"line":10064,"column":46}},"2105":{"start":{"line":10090,"column":4},"end":{"line":10092,"column":5}},"2106":{"start":{"line":10091,"column":6},"end":{"line":10091,"column":48}},"2107":{"start":{"line":10127,"column":4},"end":{"line":10136,"column":5}},"2108":{"start":{"line":10128,"column":6},"end":{"line":10128,"column":26}},"2109":{"start":{"line":10129,"column":6},"end":{"line":10134,"column":7}},"2110":{"start":{"line":10130,"column":8},"end":{"line":10130,"column":20}},"2111":{"start":{"line":10131,"column":8},"end":{"line":10131,"column":18}},"2112":{"start":{"line":10133,"column":8},"end":{"line":10133,"column":24}},"2113":{"start":{"line":10135,"column":6},"end":{"line":10135,"column":77}},"2114":{"start":{"line":10165,"column":4},"end":{"line":10198,"column":5}},"2115":{"start":{"line":10166,"column":6},"end":{"line":10168,"column":7}},"2116":{"start":{"line":10167,"column":8},"end":{"line":10167,"column":35}},"2117":{"start":{"line":10169,"column":6},"end":{"line":10170,"column":30}},"2118":{"start":{"line":10172,"column":6},"end":{"line":10181,"column":7}},"2119":{"start":{"line":10173,"column":8},"end":{"line":10180,"column":9}},"2120":{"start":{"line":10174,"column":10},"end":{"line":10174,"column":25}},"2121":{"start":{"line":10175,"column":10},"end":{"line":10175,"column":18}},"2122":{"start":{"line":10177,"column":13},"end":{"line":10180,"column":9}},"2123":{"start":{"line":10178,"column":10},"end":{"line":10178,"column":25}},"2124":{"start":{"line":10179,"column":10},"end":{"line":10179,"column":23}},"2125":{"start":{"line":10182,"column":6},"end":{"line":10185,"column":7}},"2126":{"start":{"line":10183,"column":8},"end":{"line":10183,"column":16}},"2127":{"start":{"line":10184,"column":8},"end":{"line":10184,"column":22}},"2128":{"start":{"line":10186,"column":6},"end":{"line":10186,"column":22}},"2129":{"start":{"line":10187,"column":6},"end":{"line":10192,"column":7}},"2130":{"start":{"line":10188,"column":8},"end":{"line":10188,"column":18}},"2131":{"start":{"line":10189,"column":8},"end":{"line":10189,"column":16}},"2132":{"start":{"line":10191,"column":8},"end":{"line":10191,"column":24}},"2133":{"start":{"line":10193,"column":6},"end":{"line":10196,"column":7}},"2134":{"start":{"line":10194,"column":8},"end":{"line":10194,"column":34}},"2135":{"start":{"line":10195,"column":8},"end":{"line":10195,"column":105}},"2136":{"start":{"line":10197,"column":6},"end":{"line":10197,"column":34}},"2137":{"start":{"line":10221,"column":4},"end":{"line":10224,"column":7}},"2138":{"start":{"line":10222,"column":6},"end":{"line":10222,"column":32}},"2139":{"start":{"line":10223,"column":6},"end":{"line":10223,"column":86}},"2140":{"start":{"line":10239,"column":4},"end":{"line":10242,"column":5}},"2141":{"start":{"line":10240,"column":6},"end":{"line":10240,"column":36}},"2142":{"start":{"line":10241,"column":6},"end":{"line":10241,"column":74}},"2143":{"start":{"line":10258,"column":4},"end":{"line":10261,"column":5}},"2144":{"start":{"line":10259,"column":6},"end":{"line":10259,"column":36}},"2145":{"start":{"line":10260,"column":6},"end":{"line":10260,"column":87}},"2146":{"start":{"line":10284,"column":4},"end":{"line":10295,"column":5}},"2147":{"start":{"line":10285,"column":6},"end":{"line":10285,"column":36}},"2148":{"start":{"line":10286,"column":6},"end":{"line":10286,"column":29}},"2149":{"start":{"line":10288,"column":6},"end":{"line":10288,"column":33}},"2150":{"start":{"line":10289,"column":6},"end":{"line":10291,"column":65}},"2151":{"start":{"line":10293,"column":6},"end":{"line":10293,"column":32}},"2152":{"start":{"line":10294,"column":6},"end":{"line":10294,"column":75}},"2153":{"start":{"line":10329,"column":4},"end":{"line":10335,"column":5}},"2154":{"start":{"line":10331,"column":6},"end":{"line":10331,"column":36}},"2155":{"start":{"line":10332,"column":6},"end":{"line":10334,"column":17}},"2156":{"start":{"line":10351,"column":4},"end":{"line":10356,"column":5}},"2157":{"start":{"line":10352,"column":6},"end":{"line":10352,"column":36}},"2158":{"start":{"line":10353,"column":6},"end":{"line":10355,"column":29}},"2159":{"start":{"line":10377,"column":4},"end":{"line":10379,"column":7}},"2160":{"start":{"line":10378,"column":6},"end":{"line":10378,"column":62}},"2161":{"start":{"line":10403,"column":4},"end":{"line":10417,"column":5}},"2162":{"start":{"line":10404,"column":6},"end":{"line":10404,"column":36}},"2163":{"start":{"line":10405,"column":6},"end":{"line":10405,"column":23}},"2164":{"start":{"line":10407,"column":6},"end":{"line":10407,"column":36}},"2165":{"start":{"line":10408,"column":6},"end":{"line":10410,"column":7}},"2166":{"start":{"line":10409,"column":8},"end":{"line":10409,"column":22}},"2167":{"start":{"line":10411,"column":6},"end":{"line":10413,"column":40}},"2168":{"start":{"line":10415,"column":6},"end":{"line":10415,"column":52}},"2169":{"start":{"line":10416,"column":6},"end":{"line":10416,"column":57}},"2170":{"start":{"line":10441,"column":4},"end":{"line":10441,"column":33}},"2171":{"start":{"line":10465,"column":4},"end":{"line":10465,"column":38}},"2172":{"start":{"line":10490,"column":4},"end":{"line":10501,"column":5}},"2173":{"start":{"line":10494,"column":6},"end":{"line":10498,"column":7}},"2174":{"start":{"line":10495,"column":8},"end":{"line":10495,"column":18}},"2175":{"start":{"line":10496,"column":13},"end":{"line":10498,"column":7}},"2176":{"start":{"line":10497,"column":8},"end":{"line":10497,"column":23}},"2177":{"start":{"line":10499,"column":6},"end":{"line":10499,"column":28}},"2178":{"start":{"line":10500,"column":6},"end":{"line":10500,"column":86}},"2179":{"start":{"line":10523,"column":4},"end":{"line":10541,"column":5}},"2180":{"start":{"line":10524,"column":6},"end":{"line":10524,"column":22}},"2181":{"start":{"line":10525,"column":6},"end":{"line":10525,"column":36}},"2182":{"start":{"line":10526,"column":6},"end":{"line":10526,"column":13}},"2183":{"start":{"line":10527,"column":6},"end":{"line":10529,"column":7}},"2184":{"start":{"line":10528,"column":8},"end":{"line":10528,"column":22}},"2185":{"start":{"line":10532,"column":6},"end":{"line":10538,"column":18}},"2186":{"start":{"line":10533,"column":8},"end":{"line":10535,"column":9}},"2187":{"start":{"line":10534,"column":10},"end":{"line":10534,"column":27}},"2188":{"start":{"line":10536,"column":8},"end":{"line":10536,"column":31}},"2189":{"start":{"line":10537,"column":8},"end":{"line":10537,"column":25}},"2190":{"start":{"line":10540,"column":6},"end":{"line":10540,"column":20}},"2191":{"start":{"line":10562,"column":4},"end":{"line":10564,"column":7}},"2192":{"start":{"line":10563,"column":6},"end":{"line":10563,"column":62}},"2193":{"start":{"line":10585,"column":4},"end":{"line":10587,"column":7}},"2194":{"start":{"line":10586,"column":6},"end":{"line":10586,"column":90}},"2195":{"start":{"line":10610,"column":4},"end":{"line":10617,"column":5}},"2196":{"start":{"line":10611,"column":6},"end":{"line":10611,"column":36}},"2197":{"start":{"line":10612,"column":6},"end":{"line":10614,"column":72}},"2198":{"start":{"line":10616,"column":6},"end":{"line":10616,"column":62}},"2199":{"start":{"line":10715,"column":4},"end":{"line":10819,"column":5}},"2200":{"start":{"line":10718,"column":6},"end":{"line":10718,"column":45}},"2201":{"start":{"line":10720,"column":6},"end":{"line":10722,"column":7}},"2202":{"start":{"line":10721,"column":8},"end":{"line":10721,"column":43}},"2203":{"start":{"line":10723,"column":6},"end":{"line":10723,"column":36}},"2204":{"start":{"line":10724,"column":6},"end":{"line":10724,"column":97}},"2205":{"start":{"line":10726,"column":6},"end":{"line":10728,"column":59}},"2206":{"start":{"line":10730,"column":6},"end":{"line":10734,"column":30}},"2207":{"start":{"line":10737,"column":6},"end":{"line":10742,"column":13}},"2208":{"start":{"line":10745,"column":6},"end":{"line":10749,"column":17}},"2209":{"start":{"line":10751,"column":6},"end":{"line":10774,"column":9}},"2210":{"start":{"line":10752,"column":8},"end":{"line":10752,"column":65}},"2211":{"start":{"line":10755,"column":8},"end":{"line":10755,"column":91}},"2212":{"start":{"line":10758,"column":8},"end":{"line":10761,"column":9}},"2213":{"start":{"line":10759,"column":10},"end":{"line":10759,"column":28}},"2214":{"start":{"line":10760,"column":10},"end":{"line":10760,"column":57}},"2215":{"start":{"line":10762,"column":8},"end":{"line":10765,"column":9}},"2216":{"start":{"line":10763,"column":10},"end":{"line":10763,"column":30}},"2217":{"start":{"line":10764,"column":10},"end":{"line":10764,"column":59}},"2218":{"start":{"line":10766,"column":8},"end":{"line":10768,"column":9}},"2219":{"start":{"line":10767,"column":10},"end":{"line":10767,"column":88}},"2220":{"start":{"line":10769,"column":8},"end":{"line":10769,"column":38}},"2221":{"start":{"line":10773,"column":8},"end":{"line":10773,"column":21}},"2222":{"start":{"line":10776,"column":6},"end":{"line":10776,"column":23}},"2223":{"start":{"line":10780,"column":6},"end":{"line":10780,"column":38}},"2224":{"start":{"line":10781,"column":6},"end":{"line":10783,"column":7}},"2225":{"start":{"line":10782,"column":8},"end":{"line":10782,"column":53}},"2226":{"start":{"line":10785,"column":6},"end":{"line":10787,"column":47}},"2227":{"start":{"line":10790,"column":6},"end":{"line":10806,"column":24}},"2228":{"start":{"line":10808,"column":6},"end":{"line":10810,"column":9}},"2229":{"start":{"line":10809,"column":8},"end":{"line":10809,"column":101}},"2230":{"start":{"line":10814,"column":6},"end":{"line":10814,"column":29}},"2231":{"start":{"line":10815,"column":6},"end":{"line":10817,"column":7}},"2232":{"start":{"line":10816,"column":8},"end":{"line":10816,"column":21}},"2233":{"start":{"line":10818,"column":6},"end":{"line":10818,"column":20}},"2234":{"start":{"line":10842,"column":4},"end":{"line":10853,"column":5}},"2235":{"start":{"line":10843,"column":6},"end":{"line":10843,"column":25}},"2236":{"start":{"line":10844,"column":6},"end":{"line":10844,"column":36}},"2237":{"start":{"line":10845,"column":6},"end":{"line":10847,"column":7}},"2238":{"start":{"line":10846,"column":8},"end":{"line":10846,"column":22}},"2239":{"start":{"line":10848,"column":6},"end":{"line":10850,"column":7}},"2240":{"start":{"line":10849,"column":8},"end":{"line":10849,"column":85}},"2241":{"start":{"line":10851,"column":6},"end":{"line":10851,"column":27}},"2242":{"start":{"line":10852,"column":6},"end":{"line":10852,"column":93}},"2243":{"start":{"line":10873,"column":4},"end":{"line":10883,"column":5}},"2244":{"start":{"line":10874,"column":6},"end":{"line":10874,"column":25}},"2245":{"start":{"line":10875,"column":6},"end":{"line":10875,"column":36}},"2246":{"start":{"line":10876,"column":6},"end":{"line":10878,"column":7}},"2247":{"start":{"line":10877,"column":8},"end":{"line":10877,"column":22}},"2248":{"start":{"line":10879,"column":6},"end":{"line":10881,"column":7}},"2249":{"start":{"line":10880,"column":8},"end":{"line":10880,"column":54}},"2250":{"start":{"line":10882,"column":6},"end":{"line":10882,"column":64}},"2251":{"start":{"line":10903,"column":4},"end":{"line":10913,"column":5}},"2252":{"start":{"line":10904,"column":6},"end":{"line":10904,"column":25}},"2253":{"start":{"line":10905,"column":6},"end":{"line":10905,"column":36}},"2254":{"start":{"line":10906,"column":6},"end":{"line":10908,"column":7}},"2255":{"start":{"line":10907,"column":8},"end":{"line":10907,"column":22}},"2256":{"start":{"line":10909,"column":6},"end":{"line":10911,"column":7}},"2257":{"start":{"line":10910,"column":8},"end":{"line":10910,"column":62}},"2258":{"start":{"line":10912,"column":6},"end":{"line":10912,"column":72}},"2259":{"start":{"line":10955,"column":4},"end":{"line":11005,"column":5}},"2260":{"start":{"line":10956,"column":6},"end":{"line":10958,"column":7}},"2261":{"start":{"line":10957,"column":8},"end":{"line":10957,"column":28}},"2262":{"start":{"line":10959,"column":6},"end":{"line":10960,"column":44}},"2263":{"start":{"line":10962,"column":6},"end":{"line":10970,"column":7}},"2264":{"start":{"line":10963,"column":8},"end":{"line":10969,"column":9}},"2265":{"start":{"line":10964,"column":10},"end":{"line":10964,"column":81}},"2266":{"start":{"line":10965,"column":10},"end":{"line":10965,"column":73}},"2267":{"start":{"line":10966,"column":10},"end":{"line":10966,"column":87}},"2268":{"start":{"line":10968,"column":10},"end":{"line":10968,"column":33}},"2269":{"start":{"line":10971,"column":6},"end":{"line":10971,"column":36}},"2270":{"start":{"line":10972,"column":6},"end":{"line":10974,"column":7}},"2271":{"start":{"line":10973,"column":8},"end":{"line":10973,"column":22}},"2272":{"start":{"line":10975,"column":6},"end":{"line":10975,"column":41}},"2273":{"start":{"line":10976,"column":6},"end":{"line":10978,"column":7}},"2274":{"start":{"line":10977,"column":8},"end":{"line":10977,"column":24}},"2275":{"start":{"line":10979,"column":6},"end":{"line":10979,"column":40}},"2276":{"start":{"line":10980,"column":6},"end":{"line":10982,"column":7}},"2277":{"start":{"line":10981,"column":8},"end":{"line":10981,"column":33}},"2278":{"start":{"line":10983,"column":6},"end":{"line":11003,"column":7}},"2279":{"start":{"line":10984,"column":8},"end":{"line":10997,"column":9}},"2280":{"start":{"line":10985,"column":10},"end":{"line":10987,"column":47}},"2281":{"start":{"line":10989,"column":10},"end":{"line":10991,"column":11}},"2282":{"start":{"line":10990,"column":12},"end":{"line":10990,"column":88}},"2283":{"start":{"line":10992,"column":10},"end":{"line":10992,"column":34}},"2284":{"start":{"line":10993,"column":10},"end":{"line":10995,"column":11}},"2285":{"start":{"line":10994,"column":12},"end":{"line":10994,"column":33}},"2286":{"start":{"line":10996,"column":10},"end":{"line":10996,"column":66}},"2287":{"start":{"line":10998,"column":13},"end":{"line":11003,"column":7}},"2288":{"start":{"line":10999,"column":8},"end":{"line":10999,"column":50}},"2289":{"start":{"line":11000,"column":8},"end":{"line":11002,"column":9}},"2290":{"start":{"line":11001,"column":10},"end":{"line":11001,"column":42}},"2291":{"start":{"line":11004,"column":6},"end":{"line":11004,"column":31}},"2292":{"start":{"line":11025,"column":4},"end":{"line":11030,"column":5}},"2293":{"start":{"line":11026,"column":6},"end":{"line":11026,"column":36}},"2294":{"start":{"line":11027,"column":6},"end":{"line":11029,"column":17}},"2295":{"start":{"line":11050,"column":4},"end":{"line":11056,"column":5}},"2296":{"start":{"line":11051,"column":6},"end":{"line":11053,"column":7}},"2297":{"start":{"line":11052,"column":8},"end":{"line":11052,"column":28}},"2298":{"start":{"line":11054,"column":6},"end":{"line":11054,"column":36}},"2299":{"start":{"line":11055,"column":6},"end":{"line":11055,"column":52}},"2300":{"start":{"line":11080,"column":4},"end":{"line":11086,"column":7}},"2301":{"start":{"line":11081,"column":6},"end":{"line":11085,"column":7}},"2302":{"start":{"line":11082,"column":8},"end":{"line":11082,"column":43}},"2303":{"start":{"line":11084,"column":8},"end":{"line":11084,"column":45}},"2304":{"start":{"line":11126,"column":4},"end":{"line":11133,"column":5}},"2305":{"start":{"line":11127,"column":6},"end":{"line":11129,"column":7}},"2306":{"start":{"line":11128,"column":8},"end":{"line":11128,"column":28}},"2307":{"start":{"line":11130,"column":6},"end":{"line":11132,"column":38}},"2308":{"start":{"line":11151,"column":4},"end":{"line":11155,"column":5}},"2309":{"start":{"line":11152,"column":6},"end":{"line":11154,"column":8}},"2310":{"start":{"line":11153,"column":8},"end":{"line":11153,"column":21}},"2311":{"start":{"line":11172,"column":4},"end":{"line":11174,"column":5}},"2312":{"start":{"line":11173,"column":6},"end":{"line":11173,"column":19}},"2313":{"start":{"line":11201,"column":4},"end":{"line":11203,"column":5}},"2314":{"start":{"line":11202,"column":6},"end":{"line":11202,"column":50}},"2315":{"start":{"line":11229,"column":4},"end":{"line":11231,"column":5}},"2316":{"start":{"line":11230,"column":6},"end":{"line":11230,"column":66}},"2317":{"start":{"line":11256,"column":4},"end":{"line":11260,"column":7}},"2318":{"start":{"line":11257,"column":6},"end":{"line":11259,"column":8}},"2319":{"start":{"line":11258,"column":8},"end":{"line":11258,"column":46}},"2320":{"start":{"line":11284,"column":4},"end":{"line":11288,"column":7}},"2321":{"start":{"line":11285,"column":6},"end":{"line":11287,"column":8}},"2322":{"start":{"line":11286,"column":8},"end":{"line":11286,"column":46}},"2323":{"start":{"line":11326,"column":4},"end":{"line":11375,"column":5}},"2324":{"start":{"line":11327,"column":6},"end":{"line":11338,"column":7}},"2325":{"start":{"line":11328,"column":8},"end":{"line":11330,"column":93}},"2326":{"start":{"line":11332,"column":8},"end":{"line":11337,"column":9}},"2327":{"start":{"line":11333,"column":10},"end":{"line":11333,"column":30}},"2328":{"start":{"line":11334,"column":10},"end":{"line":11334,"column":27}},"2329":{"start":{"line":11335,"column":10},"end":{"line":11335,"column":26}},"2330":{"start":{"line":11336,"column":10},"end":{"line":11336,"column":24}},"2331":{"start":{"line":11339,"column":6},"end":{"line":11341,"column":7}},"2332":{"start":{"line":11340,"column":8},"end":{"line":11340,"column":58}},"2333":{"start":{"line":11342,"column":6},"end":{"line":11345,"column":38}},"2334":{"start":{"line":11347,"column":6},"end":{"line":11351,"column":7}},"2335":{"start":{"line":11348,"column":8},"end":{"line":11348,"column":22}},"2336":{"start":{"line":11349,"column":13},"end":{"line":11351,"column":7}},"2337":{"start":{"line":11350,"column":8},"end":{"line":11350,"column":30}},"2338":{"start":{"line":11352,"column":6},"end":{"line":11373,"column":7}},"2339":{"start":{"line":11353,"column":8},"end":{"line":11354,"column":38}},"2340":{"start":{"line":11356,"column":8},"end":{"line":11356,"column":34}},"2341":{"start":{"line":11357,"column":8},"end":{"line":11372,"column":9}},"2342":{"start":{"line":11358,"column":10},"end":{"line":11371,"column":19}},"2343":{"start":{"line":11359,"column":12},"end":{"line":11370,"column":14}},"2344":{"start":{"line":11360,"column":14},"end":{"line":11360,"column":44}},"2345":{"start":{"line":11361,"column":14},"end":{"line":11368,"column":15}},"2346":{"start":{"line":11362,"column":16},"end":{"line":11363,"column":79}},"2347":{"start":{"line":11365,"column":16},"end":{"line":11365,"column":85}},"2348":{"start":{"line":11366,"column":16},"end":{"line":11366,"column":44}},"2349":{"start":{"line":11367,"column":16},"end":{"line":11367,"column":30}},"2350":{"start":{"line":11369,"column":14},"end":{"line":11369,"column":78}},"2351":{"start":{"line":11374,"column":6},"end":{"line":11374,"column":20}},"2352":{"start":{"line":11389,"column":4},"end":{"line":11392,"column":5}},"2353":{"start":{"line":11390,"column":6},"end":{"line":11390,"column":23}},"2354":{"start":{"line":11391,"column":6},"end":{"line":11391,"column":18}},"2355":{"start":{"line":11408,"column":4},"end":{"line":11410,"column":5}},"2356":{"start":{"line":11434,"column":4},"end":{"line":11436,"column":5}},"2357":{"start":{"line":11435,"column":6},"end":{"line":11435,"column":71}},"2358":{"start":{"line":11458,"column":4},"end":{"line":11462,"column":5}},"2359":{"start":{"line":11459,"column":6},"end":{"line":11461,"column":8}},"2360":{"start":{"line":11460,"column":8},"end":{"line":11460,"column":56}},"2361":{"start":{"line":11497,"column":4},"end":{"line":11521,"column":5}},"2362":{"start":{"line":11498,"column":6},"end":{"line":11500,"column":7}},"2363":{"start":{"line":11499,"column":8},"end":{"line":11499,"column":31}},"2364":{"start":{"line":11501,"column":6},"end":{"line":11501,"column":26}},"2365":{"start":{"line":11502,"column":6},"end":{"line":11502,"column":45}},"2366":{"start":{"line":11504,"column":6},"end":{"line":11509,"column":7}},"2367":{"start":{"line":11505,"column":8},"end":{"line":11505,"column":20}},"2368":{"start":{"line":11506,"column":8},"end":{"line":11506,"column":18}},"2369":{"start":{"line":11508,"column":8},"end":{"line":11508,"column":24}},"2370":{"start":{"line":11512,"column":6},"end":{"line":11514,"column":33}},"2371":{"start":{"line":11516,"column":6},"end":{"line":11519,"column":7}},"2372":{"start":{"line":11517,"column":8},"end":{"line":11517,"column":30}},"2373":{"start":{"line":11518,"column":8},"end":{"line":11518,"column":22}},"2374":{"start":{"line":11520,"column":6},"end":{"line":11520,"column":20}},"2375":{"start":{"line":11550,"column":4},"end":{"line":11570,"column":5}},"2376":{"start":{"line":11551,"column":6},"end":{"line":11551,"column":25}},"2377":{"start":{"line":11555,"column":6},"end":{"line":11557,"column":7}},"2378":{"start":{"line":11556,"column":8},"end":{"line":11556,"column":18}},"2379":{"start":{"line":11558,"column":6},"end":{"line":11559,"column":57}},"2380":{"start":{"line":11561,"column":6},"end":{"line":11561,"column":52}},"2381":{"start":{"line":11562,"column":6},"end":{"line":11568,"column":7}},"2382":{"start":{"line":11563,"column":8},"end":{"line":11567,"column":9}},"2383":{"start":{"line":11564,"column":10},"end":{"line":11564,"column":42}},"2384":{"start":{"line":11566,"column":10},"end":{"line":11566,"column":26}},"2385":{"start":{"line":11569,"column":6},"end":{"line":11569,"column":20}},"2386":{"start":{"line":11588,"column":4},"end":{"line":11591,"column":5}},"2387":{"start":{"line":11589,"column":6},"end":{"line":11589,"column":27}},"2388":{"start":{"line":11590,"column":6},"end":{"line":11590,"column":39}},"2389":{"start":{"line":11609,"column":4},"end":{"line":11611,"column":5}},"2390":{"start":{"line":11610,"column":6},"end":{"line":11610,"column":45}},"2391":{"start":{"line":11633,"column":4},"end":{"line":11633,"column":35}},"2392":{"start":{"line":11655,"column":4},"end":{"line":11655,"column":37}},"2393":{"start":{"line":11704,"column":4},"end":{"line":11704,"column":52}},"2394":{"start":{"line":11753,"column":4},"end":{"line":11753,"column":52}},"2395":{"start":{"line":11775,"column":4},"end":{"line":11775,"column":37}},"2396":{"start":{"line":11809,"column":4},"end":{"line":11817,"column":5}},"2397":{"start":{"line":11810,"column":6},"end":{"line":11812,"column":7}},"2398":{"start":{"line":11811,"column":8},"end":{"line":11811,"column":29}},"2399":{"start":{"line":11813,"column":6},"end":{"line":11813,"column":51}},"2400":{"start":{"line":11814,"column":6},"end":{"line":11816,"column":40}},"2401":{"start":{"line":11822,"column":4},"end":{"line":11822,"column":44}},"2402":{"start":{"line":11824,"column":4},"end":{"line":11824,"column":63}},"2403":{"start":{"line":11825,"column":4},"end":{"line":11825,"column":56}},"2404":{"start":{"line":11827,"column":4},"end":{"line":11827,"column":61}},"2405":{"start":{"line":11828,"column":4},"end":{"line":11828,"column":52}},"2406":{"start":{"line":11831,"column":4},"end":{"line":11831,"column":45}},"2407":{"start":{"line":11832,"column":4},"end":{"line":11832,"column":36}},"2408":{"start":{"line":11833,"column":4},"end":{"line":11833,"column":36}},"2409":{"start":{"line":11834,"column":4},"end":{"line":11834,"column":36}},"2410":{"start":{"line":11837,"column":4},"end":{"line":11837,"column":40}},"2411":{"start":{"line":11840,"column":4},"end":{"line":11840,"column":29}},"2412":{"start":{"line":11843,"column":4},"end":{"line":11843,"column":25}},"2413":{"start":{"line":11844,"column":4},"end":{"line":11844,"column":21}},"2414":{"start":{"line":11845,"column":4},"end":{"line":11845,"column":27}},"2415":{"start":{"line":11846,"column":4},"end":{"line":11846,"column":19}},"2416":{"start":{"line":11847,"column":4},"end":{"line":11847,"column":27}},"2417":{"start":{"line":11848,"column":4},"end":{"line":11848,"column":23}},"2418":{"start":{"line":11849,"column":4},"end":{"line":11849,"column":29}},"2419":{"start":{"line":11850,"column":4},"end":{"line":11850,"column":29}},"2420":{"start":{"line":11851,"column":4},"end":{"line":11851,"column":31}},"2421":{"start":{"line":11852,"column":4},"end":{"line":11852,"column":25}},"2422":{"start":{"line":11853,"column":4},"end":{"line":11853,"column":25}},"2423":{"start":{"line":11854,"column":4},"end":{"line":11854,"column":29}},"2424":{"start":{"line":11855,"column":4},"end":{"line":11855,"column":31}},"2425":{"start":{"line":11856,"column":4},"end":{"line":11856,"column":29}},"2426":{"start":{"line":11857,"column":4},"end":{"line":11857,"column":27}},"2427":{"start":{"line":11858,"column":4},"end":{"line":11858,"column":25}},"2428":{"start":{"line":11859,"column":4},"end":{"line":11859,"column":35}},"2429":{"start":{"line":11860,"column":4},"end":{"line":11860,"column":31}},"2430":{"start":{"line":11861,"column":4},"end":{"line":11861,"column":31}},"2431":{"start":{"line":11862,"column":4},"end":{"line":11862,"column":39}},"2432":{"start":{"line":11863,"column":4},"end":{"line":11863,"column":25}},"2433":{"start":{"line":11864,"column":4},"end":{"line":11864,"column":25}},"2434":{"start":{"line":11865,"column":4},"end":{"line":11865,"column":35}},"2435":{"start":{"line":11866,"column":4},"end":{"line":11866,"column":23}},"2436":{"start":{"line":11867,"column":4},"end":{"line":11867,"column":33}},"2437":{"start":{"line":11868,"column":4},"end":{"line":11868,"column":43}},"2438":{"start":{"line":11869,"column":4},"end":{"line":11869,"column":33}},"2439":{"start":{"line":11870,"column":4},"end":{"line":11870,"column":23}},"2440":{"start":{"line":11871,"column":4},"end":{"line":11871,"column":27}},"2441":{"start":{"line":11872,"column":4},"end":{"line":11872,"column":29}},"2442":{"start":{"line":11873,"column":4},"end":{"line":11873,"column":37}},"2443":{"start":{"line":11874,"column":4},"end":{"line":11874,"column":23}},"2444":{"start":{"line":11875,"column":4},"end":{"line":11875,"column":33}},"2445":{"start":{"line":11876,"column":4},"end":{"line":11876,"column":29}},"2446":{"start":{"line":11877,"column":4},"end":{"line":11877,"column":39}},"2447":{"start":{"line":11878,"column":4},"end":{"line":11878,"column":25}},"2448":{"start":{"line":11879,"column":4},"end":{"line":11879,"column":35}},"2449":{"start":{"line":11880,"column":4},"end":{"line":11880,"column":27}},"2450":{"start":{"line":11881,"column":4},"end":{"line":11881,"column":37}},"2451":{"start":{"line":11882,"column":4},"end":{"line":11882,"column":33}},"2452":{"start":{"line":11883,"column":4},"end":{"line":11883,"column":29}},"2453":{"start":{"line":11884,"column":4},"end":{"line":11884,"column":29}},"2454":{"start":{"line":11885,"column":4},"end":{"line":11885,"column":29}},"2455":{"start":{"line":11886,"column":4},"end":{"line":11886,"column":39}},"2456":{"start":{"line":11887,"column":4},"end":{"line":11887,"column":27}},"2457":{"start":{"line":11888,"column":4},"end":{"line":11888,"column":27}},"2458":{"start":{"line":11889,"column":4},"end":{"line":11889,"column":23}},"2459":{"start":{"line":11890,"column":4},"end":{"line":11890,"column":27}},"2460":{"start":{"line":11891,"column":4},"end":{"line":11891,"column":21}},"2461":{"start":{"line":11892,"column":4},"end":{"line":11892,"column":29}},"2462":{"start":{"line":11893,"column":4},"end":{"line":11893,"column":33}},"2463":{"start":{"line":11894,"column":4},"end":{"line":11894,"column":29}},"2464":{"start":{"line":11895,"column":4},"end":{"line":11895,"column":45}},"2465":{"start":{"line":11896,"column":4},"end":{"line":11896,"column":29}},"2466":{"start":{"line":11897,"column":4},"end":{"line":11897,"column":25}},"2467":{"start":{"line":11898,"column":4},"end":{"line":11898,"column":27}},"2468":{"start":{"line":11899,"column":4},"end":{"line":11899,"column":31}},"2469":{"start":{"line":11900,"column":4},"end":{"line":11900,"column":25}},"2470":{"start":{"line":11901,"column":4},"end":{"line":11901,"column":29}},"2471":{"start":{"line":11902,"column":4},"end":{"line":11902,"column":27}},"2472":{"start":{"line":11903,"column":4},"end":{"line":11903,"column":23}},"2473":{"start":{"line":11904,"column":4},"end":{"line":11904,"column":23}},"2474":{"start":{"line":11905,"column":4},"end":{"line":11905,"column":25}},"2475":{"start":{"line":11906,"column":4},"end":{"line":11906,"column":29}},"2476":{"start":{"line":11907,"column":4},"end":{"line":11907,"column":39}},"2477":{"start":{"line":11908,"column":4},"end":{"line":11908,"column":33}},"2478":{"start":{"line":11909,"column":4},"end":{"line":11909,"column":23}},"2479":{"start":{"line":11910,"column":4},"end":{"line":11910,"column":25}},"2480":{"start":{"line":11911,"column":4},"end":{"line":11911,"column":31}},"2481":{"start":{"line":11912,"column":4},"end":{"line":11912,"column":35}},"2482":{"start":{"line":11913,"column":4},"end":{"line":11913,"column":23}},"2483":{"start":{"line":11914,"column":4},"end":{"line":11914,"column":27}},"2484":{"start":{"line":11915,"column":4},"end":{"line":11915,"column":25}},"2485":{"start":{"line":11916,"column":4},"end":{"line":11916,"column":25}},"2486":{"start":{"line":11917,"column":4},"end":{"line":11917,"column":27}},"2487":{"start":{"line":11918,"column":4},"end":{"line":11918,"column":27}},"2488":{"start":{"line":11919,"column":4},"end":{"line":11919,"column":23}},"2489":{"start":{"line":11920,"column":4},"end":{"line":11920,"column":33}},"2490":{"start":{"line":11921,"column":4},"end":{"line":11921,"column":21}},"2491":{"start":{"line":11922,"column":4},"end":{"line":11922,"column":29}},"2492":{"start":{"line":11923,"column":4},"end":{"line":11923,"column":25}},"2493":{"start":{"line":11924,"column":4},"end":{"line":11924,"column":27}},"2494":{"start":{"line":11925,"column":4},"end":{"line":11925,"column":33}},"2495":{"start":{"line":11926,"column":4},"end":{"line":11926,"column":37}},"2496":{"start":{"line":11927,"column":4},"end":{"line":11927,"column":27}},"2497":{"start":{"line":11928,"column":4},"end":{"line":11928,"column":23}},"2498":{"start":{"line":11929,"column":4},"end":{"line":11929,"column":33}},"2499":{"start":{"line":11930,"column":4},"end":{"line":11930,"column":43}},"2500":{"start":{"line":11931,"column":4},"end":{"line":11931,"column":33}},"2501":{"start":{"line":11932,"column":4},"end":{"line":11932,"column":21}},"2502":{"start":{"line":11933,"column":4},"end":{"line":11933,"column":31}},"2503":{"start":{"line":11934,"column":4},"end":{"line":11934,"column":23}},"2504":{"start":{"line":11935,"column":4},"end":{"line":11935,"column":25}},"2505":{"start":{"line":11936,"column":4},"end":{"line":11936,"column":29}},"2506":{"start":{"line":11937,"column":4},"end":{"line":11937,"column":41}},"2507":{"start":{"line":11938,"column":4},"end":{"line":11938,"column":33}},"2508":{"start":{"line":11939,"column":4},"end":{"line":11939,"column":25}},"2509":{"start":{"line":11940,"column":4},"end":{"line":11940,"column":23}},"2510":{"start":{"line":11941,"column":4},"end":{"line":11941,"column":25}},"2511":{"start":{"line":11942,"column":4},"end":{"line":11942,"column":33}},"2512":{"start":{"line":11943,"column":4},"end":{"line":11943,"column":27}},"2513":{"start":{"line":11944,"column":4},"end":{"line":11944,"column":31}},"2514":{"start":{"line":11945,"column":4},"end":{"line":11945,"column":25}},"2515":{"start":{"line":11946,"column":4},"end":{"line":11946,"column":29}},"2516":{"start":{"line":11947,"column":4},"end":{"line":11947,"column":23}},"2517":{"start":{"line":11948,"column":4},"end":{"line":11948,"column":21}},"2518":{"start":{"line":11949,"column":4},"end":{"line":11949,"column":21}},"2519":{"start":{"line":11950,"column":4},"end":{"line":11950,"column":33}},"2520":{"start":{"line":11951,"column":4},"end":{"line":11951,"column":29}},"2521":{"start":{"line":11954,"column":4},"end":{"line":11954,"column":32}},"2522":{"start":{"line":11955,"column":4},"end":{"line":11955,"column":25}},"2523":{"start":{"line":11956,"column":4},"end":{"line":11956,"column":31}},"2524":{"start":{"line":11957,"column":4},"end":{"line":11957,"column":26}},"2525":{"start":{"line":11958,"column":4},"end":{"line":11958,"column":36}},"2526":{"start":{"line":11959,"column":4},"end":{"line":11959,"column":27}},"2527":{"start":{"line":11960,"column":4},"end":{"line":11960,"column":31}},"2528":{"start":{"line":11961,"column":4},"end":{"line":11961,"column":31}},"2529":{"start":{"line":11962,"column":4},"end":{"line":11962,"column":30}},"2530":{"start":{"line":11963,"column":4},"end":{"line":11963,"column":27}},"2531":{"start":{"line":11964,"column":4},"end":{"line":11964,"column":23}},"2532":{"start":{"line":11965,"column":4},"end":{"line":11965,"column":25}},"2533":{"start":{"line":11968,"column":4},"end":{"line":11968,"column":26}},"2534":{"start":{"line":11973,"column":4},"end":{"line":11973,"column":21}},"2535":{"start":{"line":11974,"column":4},"end":{"line":11974,"column":29}},"2536":{"start":{"line":11975,"column":4},"end":{"line":11975,"column":33}},"2537":{"start":{"line":11976,"column":4},"end":{"line":11976,"column":35}},"2538":{"start":{"line":11977,"column":4},"end":{"line":11977,"column":23}},"2539":{"start":{"line":11978,"column":4},"end":{"line":11978,"column":25}},"2540":{"start":{"line":11979,"column":4},"end":{"line":11979,"column":33}},"2541":{"start":{"line":11980,"column":4},"end":{"line":11980,"column":27}},"2542":{"start":{"line":11981,"column":4},"end":{"line":11981,"column":31}},"2543":{"start":{"line":11982,"column":4},"end":{"line":11982,"column":27}},"2544":{"start":{"line":11983,"column":4},"end":{"line":11983,"column":39}},"2545":{"start":{"line":11984,"column":4},"end":{"line":11984,"column":25}},"2546":{"start":{"line":11985,"column":4},"end":{"line":11985,"column":23}},"2547":{"start":{"line":11986,"column":4},"end":{"line":11986,"column":33}},"2548":{"start":{"line":11987,"column":4},"end":{"line":11987,"column":29}},"2549":{"start":{"line":11988,"column":4},"end":{"line":11988,"column":31}},"2550":{"start":{"line":11989,"column":4},"end":{"line":11989,"column":41}},"2551":{"start":{"line":11990,"column":4},"end":{"line":11990,"column":37}},"2552":{"start":{"line":11991,"column":4},"end":{"line":11991,"column":33}},"2553":{"start":{"line":11992,"column":4},"end":{"line":11992,"column":25}},"2554":{"start":{"line":11993,"column":4},"end":{"line":11993,"column":25}},"2555":{"start":{"line":11994,"column":4},"end":{"line":11994,"column":21}},"2556":{"start":{"line":11995,"column":4},"end":{"line":11995,"column":19}},"2557":{"start":{"line":11996,"column":4},"end":{"line":11996,"column":21}},"2558":{"start":{"line":11997,"column":4},"end":{"line":11997,"column":21}},"2559":{"start":{"line":11998,"column":4},"end":{"line":11998,"column":31}},"2560":{"start":{"line":11999,"column":4},"end":{"line":11999,"column":31}},"2561":{"start":{"line":12000,"column":4},"end":{"line":12000,"column":29}},"2562":{"start":{"line":12001,"column":4},"end":{"line":12001,"column":29}},"2563":{"start":{"line":12002,"column":4},"end":{"line":12002,"column":37}},"2564":{"start":{"line":12003,"column":4},"end":{"line":12003,"column":29}},"2565":{"start":{"line":12004,"column":4},"end":{"line":12004,"column":33}},"2566":{"start":{"line":12005,"column":4},"end":{"line":12005,"column":27}},"2567":{"start":{"line":12006,"column":4},"end":{"line":12006,"column":33}},"2568":{"start":{"line":12007,"column":4},"end":{"line":12007,"column":29}},"2569":{"start":{"line":12008,"column":4},"end":{"line":12008,"column":29}},"2570":{"start":{"line":12009,"column":4},"end":{"line":12009,"column":29}},"2571":{"start":{"line":12010,"column":4},"end":{"line":12010,"column":31}},"2572":{"start":{"line":12011,"column":4},"end":{"line":12011,"column":35}},"2573":{"start":{"line":12012,"column":4},"end":{"line":12012,"column":29}},"2574":{"start":{"line":12013,"column":4},"end":{"line":12013,"column":25}},"2575":{"start":{"line":12014,"column":4},"end":{"line":12014,"column":31}},"2576":{"start":{"line":12015,"column":4},"end":{"line":12015,"column":27}},"2577":{"start":{"line":12016,"column":4},"end":{"line":12016,"column":31}},"2578":{"start":{"line":12017,"column":4},"end":{"line":12017,"column":31}},"2579":{"start":{"line":12018,"column":4},"end":{"line":12018,"column":41}},"2580":{"start":{"line":12019,"column":4},"end":{"line":12019,"column":31}},"2581":{"start":{"line":12020,"column":4},"end":{"line":12020,"column":31}},"2582":{"start":{"line":12021,"column":4},"end":{"line":12021,"column":39}},"2583":{"start":{"line":12022,"column":4},"end":{"line":12022,"column":37}},"2584":{"start":{"line":12023,"column":4},"end":{"line":12023,"column":33}},"2585":{"start":{"line":12024,"column":4},"end":{"line":12024,"column":23}},"2586":{"start":{"line":12025,"column":4},"end":{"line":12025,"column":37}},"2587":{"start":{"line":12026,"column":4},"end":{"line":12026,"column":19}},"2588":{"start":{"line":12027,"column":4},"end":{"line":12027,"column":21}},"2589":{"start":{"line":12028,"column":4},"end":{"line":12028,"column":21}},"2590":{"start":{"line":12029,"column":4},"end":{"line":12029,"column":21}},"2591":{"start":{"line":12030,"column":4},"end":{"line":12030,"column":35}},"2592":{"start":{"line":12031,"column":4},"end":{"line":12031,"column":23}},"2593":{"start":{"line":12032,"column":4},"end":{"line":12032,"column":21}},"2594":{"start":{"line":12033,"column":4},"end":{"line":12033,"column":21}},"2595":{"start":{"line":12034,"column":4},"end":{"line":12034,"column":29}},"2596":{"start":{"line":12035,"column":4},"end":{"line":12035,"column":31}},"2597":{"start":{"line":12036,"column":4},"end":{"line":12036,"column":31}},"2598":{"start":{"line":12037,"column":4},"end":{"line":12037,"column":27}},"2599":{"start":{"line":12038,"column":4},"end":{"line":12038,"column":27}},"2600":{"start":{"line":12039,"column":4},"end":{"line":12039,"column":37}},"2601":{"start":{"line":12040,"column":4},"end":{"line":12040,"column":27}},"2602":{"start":{"line":12041,"column":4},"end":{"line":12041,"column":27}},"2603":{"start":{"line":12042,"column":4},"end":{"line":12042,"column":25}},"2604":{"start":{"line":12043,"column":4},"end":{"line":12043,"column":39}},"2605":{"start":{"line":12044,"column":4},"end":{"line":12044,"column":23}},"2606":{"start":{"line":12045,"column":4},"end":{"line":12045,"column":33}},"2607":{"start":{"line":12046,"column":4},"end":{"line":12046,"column":23}},"2608":{"start":{"line":12047,"column":4},"end":{"line":12047,"column":37}},"2609":{"start":{"line":12048,"column":4},"end":{"line":12048,"column":45}},"2610":{"start":{"line":12049,"column":4},"end":{"line":12049,"column":33}},"2611":{"start":{"line":12050,"column":4},"end":{"line":12050,"column":35}},"2612":{"start":{"line":12051,"column":4},"end":{"line":12051,"column":21}},"2613":{"start":{"line":12052,"column":4},"end":{"line":12052,"column":31}},"2614":{"start":{"line":12053,"column":4},"end":{"line":12053,"column":23}},"2615":{"start":{"line":12054,"column":4},"end":{"line":12054,"column":31}},"2616":{"start":{"line":12055,"column":4},"end":{"line":12055,"column":33}},"2617":{"start":{"line":12056,"column":4},"end":{"line":12056,"column":25}},"2618":{"start":{"line":12057,"column":4},"end":{"line":12057,"column":31}},"2619":{"start":{"line":12058,"column":4},"end":{"line":12058,"column":31}},"2620":{"start":{"line":12059,"column":4},"end":{"line":12059,"column":25}},"2621":{"start":{"line":12062,"column":4},"end":{"line":12062,"column":23}},"2622":{"start":{"line":12063,"column":4},"end":{"line":12063,"column":22}},"2623":{"start":{"line":12064,"column":4},"end":{"line":12064,"column":31}},"2624":{"start":{"line":12065,"column":4},"end":{"line":12065,"column":24}},"2625":{"start":{"line":12066,"column":4},"end":{"line":12066,"column":25}},"2626":{"start":{"line":12067,"column":4},"end":{"line":12067,"column":26}},"2627":{"start":{"line":12068,"column":4},"end":{"line":12068,"column":31}},"2628":{"start":{"line":12069,"column":4},"end":{"line":12069,"column":24}},"2629":{"start":{"line":12070,"column":4},"end":{"line":12070,"column":30}},"2630":{"start":{"line":12071,"column":4},"end":{"line":12071,"column":27}},"2631":{"start":{"line":12073,"column":4},"end":{"line":12081,"column":17}},"2632":{"start":{"line":12074,"column":6},"end":{"line":12074,"column":22}},"2633":{"start":{"line":12075,"column":6},"end":{"line":12079,"column":9}},"2634":{"start":{"line":12076,"column":8},"end":{"line":12078,"column":9}},"2635":{"start":{"line":12077,"column":10},"end":{"line":12077,"column":36}},"2636":{"start":{"line":12080,"column":6},"end":{"line":12080,"column":20}},"2637":{"start":{"line":12086,"column":4},"end":{"line":12086,"column":27}},"2638":{"start":{"line":12088,"column":4},"end":{"line":12095,"column":6}},"2639":{"start":{"line":12089,"column":6},"end":{"line":12091,"column":7}},"2640":{"start":{"line":12090,"column":8},"end":{"line":12090,"column":36}},"2641":{"start":{"line":12092,"column":6},"end":{"line":12094,"column":9}},"2642":{"start":{"line":12093,"column":8},"end":{"line":12093,"column":32}},"2643":{"start":{"line":12106,"column":4},"end":{"line":12106,"column":29}},"2644":{"start":{"line":12109,"column":4},"end":{"line":12111,"column":7}},"2645":{"start":{"line":12110,"column":6},"end":{"line":12110,"column":46}},"2646":{"start":{"line":12114,"column":4},"end":{"line":12134,"column":7}},"2647":{"start":{"line":12115,"column":6},"end":{"line":12129,"column":8}},"2648":{"start":{"line":12116,"column":8},"end":{"line":12116,"column":41}},"2649":{"start":{"line":12117,"column":8},"end":{"line":12119,"column":9}},"2650":{"start":{"line":12118,"column":10},"end":{"line":12118,"column":39}},"2651":{"start":{"line":12120,"column":8},"end":{"line":12120,"column":62}},"2652":{"start":{"line":12122,"column":8},"end":{"line":12122,"column":34}},"2653":{"start":{"line":12123,"column":8},"end":{"line":12127,"column":9}},"2654":{"start":{"line":12124,"column":10},"end":{"line":12124,"column":68}},"2655":{"start":{"line":12126,"column":10},"end":{"line":12126,"column":105}},"2656":{"start":{"line":12128,"column":8},"end":{"line":12128,"column":22}},"2657":{"start":{"line":12131,"column":6},"end":{"line":12133,"column":8}},"2658":{"start":{"line":12132,"column":8},"end":{"line":12132,"column":55}},"2659":{"start":{"line":12137,"column":4},"end":{"line":12147,"column":7}},"2660":{"start":{"line":12138,"column":6},"end":{"line":12139,"column":43}},"2661":{"start":{"line":12141,"column":6},"end":{"line":12146,"column":8}},"2662":{"start":{"line":12142,"column":8},"end":{"line":12142,"column":34}},"2663":{"start":{"line":12143,"column":8},"end":{"line":12143,"column":99}},"2664":{"start":{"line":12144,"column":8},"end":{"line":12144,"column":62}},"2665":{"start":{"line":12145,"column":8},"end":{"line":12145,"column":22}},"2666":{"start":{"line":12150,"column":4},"end":{"line":12156,"column":7}},"2667":{"start":{"line":12151,"column":6},"end":{"line":12151,"column":53}},"2668":{"start":{"line":12153,"column":6},"end":{"line":12155,"column":8}},"2669":{"start":{"line":12154,"column":8},"end":{"line":12154,"column":44}},"2670":{"start":{"line":12159,"column":4},"end":{"line":12165,"column":7}},"2671":{"start":{"line":12160,"column":6},"end":{"line":12160,"column":53}},"2672":{"start":{"line":12162,"column":6},"end":{"line":12164,"column":8}},"2673":{"start":{"line":12163,"column":8},"end":{"line":12163,"column":77}},"2674":{"start":{"line":12168,"column":4},"end":{"line":12175,"column":7}},"2675":{"start":{"line":12169,"column":6},"end":{"line":12170,"column":58}},"2676":{"start":{"line":12172,"column":6},"end":{"line":12174,"column":8}},"2677":{"start":{"line":12173,"column":8},"end":{"line":12173,"column":58}},"2678":{"start":{"line":12177,"column":4},"end":{"line":12179,"column":6}},"2679":{"start":{"line":12178,"column":6},"end":{"line":12178,"column":35}},"2680":{"start":{"line":12181,"column":4},"end":{"line":12186,"column":6}},"2681":{"start":{"line":12182,"column":6},"end":{"line":12182,"column":53}},"2682":{"start":{"line":12183,"column":6},"end":{"line":12185,"column":9}},"2683":{"start":{"line":12184,"column":8},"end":{"line":12184,"column":33}},"2684":{"start":{"line":12188,"column":4},"end":{"line":12205,"column":6}},"2685":{"start":{"line":12189,"column":6},"end":{"line":12189,"column":48}},"2686":{"start":{"line":12191,"column":6},"end":{"line":12191,"column":24}},"2687":{"start":{"line":12192,"column":6},"end":{"line":12194,"column":7}},"2688":{"start":{"line":12193,"column":8},"end":{"line":12193,"column":39}},"2689":{"start":{"line":12195,"column":6},"end":{"line":12199,"column":7}},"2690":{"start":{"line":12196,"column":8},"end":{"line":12196,"column":42}},"2691":{"start":{"line":12197,"column":13},"end":{"line":12199,"column":7}},"2692":{"start":{"line":12198,"column":8},"end":{"line":12198,"column":36}},"2693":{"start":{"line":12200,"column":6},"end":{"line":12203,"column":7}},"2694":{"start":{"line":12201,"column":8},"end":{"line":12201,"column":26}},"2695":{"start":{"line":12202,"column":8},"end":{"line":12202,"column":77}},"2696":{"start":{"line":12204,"column":6},"end":{"line":12204,"column":20}},"2697":{"start":{"line":12207,"column":4},"end":{"line":12209,"column":6}},"2698":{"start":{"line":12208,"column":6},"end":{"line":12208,"column":68}},"2699":{"start":{"line":12211,"column":4},"end":{"line":12213,"column":6}},"2700":{"start":{"line":12212,"column":6},"end":{"line":12212,"column":42}},"2701":{"start":{"line":12216,"column":4},"end":{"line":12262,"column":7}},"2702":{"start":{"line":12217,"column":6},"end":{"line":12219,"column":108}},"2703":{"start":{"line":12221,"column":6},"end":{"line":12223,"column":7}},"2704":{"start":{"line":12222,"column":8},"end":{"line":12222,"column":15}},"2705":{"start":{"line":12224,"column":6},"end":{"line":12261,"column":8}},"2706":{"start":{"line":12225,"column":8},"end":{"line":12231,"column":47}},"2707":{"start":{"line":12233,"column":8},"end":{"line":12236,"column":9}},"2708":{"start":{"line":12235,"column":10},"end":{"line":12235,"column":35}},"2709":{"start":{"line":12237,"column":8},"end":{"line":12241,"column":10}},"2710":{"start":{"line":12238,"column":10},"end":{"line":12240,"column":68}},"2711":{"start":{"line":12243,"column":8},"end":{"line":12244,"column":43}},"2712":{"start":{"line":12246,"column":8},"end":{"line":12253,"column":9}},"2713":{"start":{"line":12247,"column":10},"end":{"line":12251,"column":11}},"2714":{"start":{"line":12248,"column":12},"end":{"line":12248,"column":34}},"2715":{"start":{"line":12249,"column":12},"end":{"line":12249,"column":43}},"2716":{"start":{"line":12250,"column":12},"end":{"line":12250,"column":36}},"2717":{"start":{"line":12252,"column":10},"end":{"line":12252,"column":61}},"2718":{"start":{"line":12254,"column":8},"end":{"line":12259,"column":9}},"2719":{"start":{"line":12255,"column":10},"end":{"line":12255,"column":59}},"2720":{"start":{"line":12256,"column":10},"end":{"line":12256,"column":47}},"2721":{"start":{"line":12257,"column":10},"end":{"line":12257,"column":42}},"2722":{"start":{"line":12258,"column":10},"end":{"line":12258,"column":53}},"2723":{"start":{"line":12260,"column":8},"end":{"line":12260,"column":38}},"2724":{"start":{"line":12265,"column":4},"end":{"line":12279,"column":7}},"2725":{"start":{"line":12266,"column":6},"end":{"line":12268,"column":73}},"2726":{"start":{"line":12270,"column":6},"end":{"line":12278,"column":8}},"2727":{"start":{"line":12271,"column":8},"end":{"line":12271,"column":29}},"2728":{"start":{"line":12272,"column":8},"end":{"line":12274,"column":9}},"2729":{"start":{"line":12273,"column":10},"end":{"line":12273,"column":48}},"2730":{"start":{"line":12275,"column":8},"end":{"line":12277,"column":11}},"2731":{"start":{"line":12276,"column":10},"end":{"line":12276,"column":41}},"2732":{"start":{"line":12282,"column":4},"end":{"line":12290,"column":7}},"2733":{"start":{"line":12283,"column":6},"end":{"line":12283,"column":42}},"2734":{"start":{"line":12284,"column":6},"end":{"line":12289,"column":7}},"2735":{"start":{"line":12285,"column":8},"end":{"line":12286,"column":60}},"2736":{"start":{"line":12288,"column":8},"end":{"line":12288,"column":63}},"2737":{"start":{"line":12292,"column":4},"end":{"line":12292,"column":111}},"2738":{"start":{"line":12295,"column":4},"end":{"line":12295,"column":44}},"2739":{"start":{"line":12296,"column":4},"end":{"line":12296,"column":48}},"2740":{"start":{"line":12297,"column":4},"end":{"line":12297,"column":44}},"2741":{"start":{"line":12300,"column":4},"end":{"line":12300,"column":42}},"2742":{"start":{"line":12301,"column":4},"end":{"line":12301,"column":44}},"2743":{"start":{"line":12302,"column":4},"end":{"line":12302,"column":44}},"2744":{"start":{"line":12303,"column":4},"end":{"line":12303,"column":42}},"2745":{"start":{"line":12304,"column":4},"end":{"line":12304,"column":46}},"2746":{"start":{"line":12305,"column":4},"end":{"line":12305,"column":48}},"2747":{"start":{"line":12306,"column":4},"end":{"line":12306,"column":118}},"2748":{"start":{"line":12309,"column":4},"end":{"line":12309,"column":52}},"2749":{"start":{"line":12310,"column":4},"end":{"line":12310,"column":51}},"2750":{"start":{"line":12311,"column":4},"end":{"line":12311,"column":54}},"2751":{"start":{"line":12312,"column":4},"end":{"line":12312,"column":50}},"2752":{"start":{"line":12314,"column":4},"end":{"line":12314,"column":18}},"2753":{"start":{"line":12320,"column":2},"end":{"line":12320,"column":25}},"2754":{"start":{"line":12323,"column":2},"end":{"line":12350,"column":3}},"2755":{"start":{"line":12328,"column":4},"end":{"line":12328,"column":15}},"2756":{"start":{"line":12332,"column":4},"end":{"line":12334,"column":7}},"2757":{"start":{"line":12333,"column":6},"end":{"line":12333,"column":15}},"2758":{"start":{"line":12337,"column":7},"end":{"line":12350,"column":3}},"2759":{"start":{"line":12339,"column":4},"end":{"line":12345,"column":5}},"2760":{"start":{"line":12340,"column":6},"end":{"line":12340,"column":37}},"2761":{"start":{"line":12344,"column":6},"end":{"line":12344,"column":24}},"2762":{"start":{"line":12349,"column":4},"end":{"line":12349,"column":15}}},"branchMap":{"1":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":20},"end":{"line":251,"column":47}},{"start":{"line":251,"column":51},"end":{"line":251,"column":58}},{"start":{"line":251,"column":62},"end":{"line":251,"column":79}},{"start":{"line":251,"column":83},"end":{"line":251,"column":90}}]},"2":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":19},"end":{"line":254,"column":45}},{"start":{"line":254,"column":49},"end":{"line":254,"column":55}},{"start":{"line":254,"column":59},"end":{"line":254,"column":75}},{"start":{"line":254,"column":79},"end":{"line":254,"column":85}}]},"3":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":19},"end":{"line":257,"column":30}},{"start":{"line":257,"column":34},"end":{"line":257,"column":44}},{"start":{"line":257,"column":48},"end":{"line":257,"column":73}},{"start":{"line":257,"column":77},"end":{"line":257,"column":83}},{"start":{"line":257,"column":87},"end":{"line":257,"column":100}},{"start":{"line":257,"column":104},"end":{"line":257,"column":110}}]},"4":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":17},"end":{"line":260,"column":41}},{"start":{"line":260,"column":45},"end":{"line":260,"column":49}},{"start":{"line":260,"column":53},"end":{"line":260,"column":64}},{"start":{"line":260,"column":68},"end":{"line":260,"column":72}}]},"5":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":19},"end":{"line":263,"column":45}},{"start":{"line":263,"column":49},"end":{"line":263,"column":55}},{"start":{"line":263,"column":59},"end":{"line":263,"column":72}},{"start":{"line":263,"column":76},"end":{"line":263,"column":82}}]},"6":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":22},"end":{"line":266,"column":32}},{"start":{"line":266,"column":36},"end":{"line":266,"column":70}},{"start":{"line":266,"column":74},"end":{"line":266,"column":85}}]},"7":{"line":274,"type":"binary-expr","locations":[{"start":{"line":274,"column":13},"end":{"line":274,"column":23}},{"start":{"line":274,"column":29},"end":{"line":274,"column":65}},{"start":{"line":274,"column":70},"end":{"line":274,"column":80}},{"start":{"line":274,"column":85},"end":{"line":274,"column":93}},{"start":{"line":274,"column":97},"end":{"line":274,"column":101}}]},"8":{"line":274,"type":"binary-expr","locations":[{"start":{"line":274,"column":45},"end":{"line":274,"column":49}},{"start":{"line":274,"column":53},"end":{"line":274,"column":64}}]},"9":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"10":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":6},"end":{"line":297,"column":6}},{"start":{"line":297,"column":6},"end":{"line":297,"column":6}}]},"11":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":11},"end":{"line":297,"column":24}},{"start":{"line":297,"column":28},"end":{"line":297,"column":38}},{"start":{"line":297,"column":43},"end":{"line":297,"column":58}},{"start":{"line":298,"column":11},"end":{"line":298,"column":20}},{"start":{"line":298,"column":24},"end":{"line":298,"column":35}},{"start":{"line":298,"column":39},"end":{"line":298,"column":53}},{"start":{"line":299,"column":11},"end":{"line":299,"column":21}},{"start":{"line":299,"column":25},"end":{"line":299,"column":39}}]},"12":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":6}},{"start":{"line":302,"column":6},"end":{"line":302,"column":6}}]},"13":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":11},"end":{"line":302,"column":24}},{"start":{"line":302,"column":28},"end":{"line":302,"column":38}},{"start":{"line":302,"column":43},"end":{"line":302,"column":58}},{"start":{"line":303,"column":11},"end":{"line":303,"column":20}},{"start":{"line":303,"column":24},"end":{"line":303,"column":35}},{"start":{"line":303,"column":39},"end":{"line":303,"column":53}},{"start":{"line":304,"column":11},"end":{"line":304,"column":21}},{"start":{"line":304,"column":25},"end":{"line":304,"column":39}}]},"14":{"line":323,"type":"cond-expr","locations":[{"start":{"line":323,"column":28},"end":{"line":323,"column":34}},{"start":{"line":323,"column":37},"end":{"line":323,"column":39}}]},"15":{"line":325,"type":"cond-expr","locations":[{"start":{"line":325,"column":24},"end":{"line":325,"column":31}},{"start":{"line":325,"column":34},"end":{"line":325,"column":50}}]},"16":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":6},"end":{"line":326,"column":6}},{"start":{"line":326,"column":6},"end":{"line":326,"column":6}}]},"17":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":4},"end":{"line":343,"column":4}},{"start":{"line":343,"column":4},"end":{"line":343,"column":4}}]},"18":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":6},"end":{"line":350,"column":6}},{"start":{"line":350,"column":6},"end":{"line":350,"column":6}}]},"19":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":11},"end":{"line":368,"column":37}},{"start":{"line":368,"column":41},"end":{"line":368,"column":46}}]},"20":{"line":380,"type":"cond-expr","locations":[{"start":{"line":380,"column":27},"end":{"line":380,"column":29}},{"start":{"line":380,"column":33},"end":{"line":380,"column":43}}]},"21":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":11},"end":{"line":396,"column":27}},{"start":{"line":396,"column":31},"end":{"line":396,"column":71}}]},"22":{"line":412,"type":"binary-expr","locations":[{"start":{"line":412,"column":11},"end":{"line":412,"column":18}},{"start":{"line":412,"column":22},"end":{"line":412,"column":62}}]},"23":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":11},"end":{"line":426,"column":64}},{"start":{"line":426,"column":69},"end":{"line":426,"column":95}}]},"24":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":6},"end":{"line":452,"column":6}},{"start":{"line":452,"column":6},"end":{"line":452,"column":6}}]},"25":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":8},"end":{"line":453,"column":8}},{"start":{"line":453,"column":8},"end":{"line":453,"column":8}}]},"26":{"line":457,"type":"cond-expr","locations":[{"start":{"line":457,"column":63},"end":{"line":457,"column":64}},{"start":{"line":457,"column":67},"end":{"line":457,"column":69}}]},"27":{"line":457,"type":"binary-expr","locations":[{"start":{"line":457,"column":26},"end":{"line":457,"column":41}},{"start":{"line":457,"column":45},"end":{"line":457,"column":59}}]},"28":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":4},"end":{"line":502,"column":4}},{"start":{"line":502,"column":4},"end":{"line":502,"column":4}}]},"29":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":11},"end":{"line":504,"column":11}},{"start":{"line":504,"column":11},"end":{"line":504,"column":11}}]},"30":{"line":532,"type":"cond-expr","locations":[{"start":{"line":532,"column":41},"end":{"line":532,"column":42}},{"start":{"line":532,"column":45},"end":{"line":532,"column":47}}]},"31":{"line":534,"type":"cond-expr","locations":[{"start":{"line":534,"column":24},"end":{"line":534,"column":31}},{"start":{"line":534,"column":34},"end":{"line":534,"column":50}}]},"32":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":6},"end":{"line":536,"column":6}},{"start":{"line":536,"column":6},"end":{"line":536,"column":6}}]},"33":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":11},"end":{"line":551,"column":18}},{"start":{"line":551,"column":22},"end":{"line":551,"column":46}}]},"34":{"line":563,"type":"binary-expr","locations":[{"start":{"line":563,"column":13},"end":{"line":563,"column":28}},{"start":{"line":563,"column":33},"end":{"line":563,"column":46}},{"start":{"line":563,"column":50},"end":{"line":563,"column":64}},{"start":{"line":563,"column":69},"end":{"line":563,"column":83}},{"start":{"line":563,"column":87},"end":{"line":563,"column":102}},{"start":{"line":563,"column":107},"end":{"line":563,"column":123}},{"start":{"line":563,"column":127},"end":{"line":563,"column":143}},{"start":{"line":564,"column":7},"end":{"line":564,"column":23}},{"start":{"line":564,"column":28},"end":{"line":564,"column":44}},{"start":{"line":564,"column":48},"end":{"line":564,"column":64}},{"start":{"line":564,"column":68},"end":{"line":564,"column":84}},{"start":{"line":564,"column":88},"end":{"line":564,"column":104}},{"start":{"line":564,"column":108},"end":{"line":564,"column":124}},{"start":{"line":564,"column":128},"end":{"line":564,"column":145}},{"start":{"line":564,"column":149},"end":{"line":564,"column":166}}]},"35":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":6},"end":{"line":583,"column":6}},{"start":{"line":583,"column":6},"end":{"line":583,"column":6}}]},"36":{"line":609,"type":"cond-expr","locations":[{"start":{"line":609,"column":32},"end":{"line":609,"column":61}},{"start":{"line":609,"column":64},"end":{"line":609,"column":69}}]},"37":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":6},"end":{"line":611,"column":6}},{"start":{"line":611,"column":6},"end":{"line":611,"column":6}}]},"38":{"line":611,"type":"binary-expr","locations":[{"start":{"line":611,"column":10},"end":{"line":611,"column":16}},{"start":{"line":611,"column":20},"end":{"line":611,"column":37}}]},"39":{"line":631,"type":"binary-expr","locations":[{"start":{"line":631,"column":11},"end":{"line":631,"column":27}},{"start":{"line":631,"column":31},"end":{"line":631,"column":64}}]},"40":{"line":646,"type":"binary-expr","locations":[{"start":{"line":646,"column":11},"end":{"line":646,"column":18}},{"start":{"line":646,"column":22},"end":{"line":646,"column":55}}]},"41":{"line":703,"type":"cond-expr","locations":[{"start":{"line":703,"column":24},"end":{"line":703,"column":86}},{"start":{"line":703,"column":89},"end":{"line":703,"column":93}}]},"42":{"line":787,"type":"binary-expr","locations":[{"start":{"line":787,"column":18},"end":{"line":787,"column":25}},{"start":{"line":787,"column":29},"end":{"line":787,"column":40}}]},"43":{"line":891,"type":"if","locations":[{"start":{"line":891,"column":6},"end":{"line":891,"column":6}},{"start":{"line":891,"column":6},"end":{"line":891,"column":6}}]},"44":{"line":891,"type":"binary-expr","locations":[{"start":{"line":891,"column":10},"end":{"line":891,"column":29}},{"start":{"line":891,"column":33},"end":{"line":891,"column":48}},{"start":{"line":891,"column":52},"end":{"line":891,"column":83}}]},"45":{"line":892,"type":"if","locations":[{"start":{"line":892,"column":8},"end":{"line":892,"column":8}},{"start":{"line":892,"column":8},"end":{"line":892,"column":8}}]},"46":{"line":895,"type":"if","locations":[{"start":{"line":895,"column":8},"end":{"line":895,"column":8}},{"start":{"line":895,"column":8},"end":{"line":895,"column":8}}]},"47":{"line":895,"type":"binary-expr","locations":[{"start":{"line":895,"column":12},"end":{"line":895,"column":51}},{"start":{"line":895,"column":55},"end":{"line":895,"column":96}}]},"48":{"line":921,"type":"binary-expr","locations":[{"start":{"line":921,"column":25},"end":{"line":921,"column":32}},{"start":{"line":921,"column":36},"end":{"line":921,"column":38}}]},"49":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":6},"end":{"line":1041,"column":6}},{"start":{"line":1041,"column":6},"end":{"line":1041,"column":6}}]},"50":{"line":1065,"type":"cond-expr","locations":[{"start":{"line":1065,"column":30},"end":{"line":1065,"column":42}},{"start":{"line":1065,"column":45},"end":{"line":1065,"column":46}}]},"51":{"line":1070,"type":"cond-expr","locations":[{"start":{"line":1070,"column":28},"end":{"line":1070,"column":31}},{"start":{"line":1070,"column":35},"end":{"line":1070,"column":44}}]},"52":{"line":1076,"type":"if","locations":[{"start":{"line":1076,"column":6},"end":{"line":1076,"column":6}},{"start":{"line":1076,"column":6},"end":{"line":1076,"column":6}}]},"53":{"line":1076,"type":"binary-expr","locations":[{"start":{"line":1076,"column":10},"end":{"line":1076,"column":16}},{"start":{"line":1076,"column":20},"end":{"line":1076,"column":48}},{"start":{"line":1076,"column":53},"end":{"line":1076,"column":72}},{"start":{"line":1076,"column":76},"end":{"line":1076,"column":95}}]},"54":{"line":1077,"type":"cond-expr","locations":[{"start":{"line":1077,"column":53},"end":{"line":1077,"column":68}},{"start":{"line":1077,"column":71},"end":{"line":1077,"column":76}}]},"55":{"line":1077,"type":"binary-expr","locations":[{"start":{"line":1077,"column":33},"end":{"line":1077,"column":40}},{"start":{"line":1077,"column":44},"end":{"line":1077,"column":49}}]},"56":{"line":1082,"type":"binary-expr","locations":[{"start":{"line":1082,"column":13},"end":{"line":1082,"column":21}},{"start":{"line":1082,"column":25},"end":{"line":1082,"column":45}}]},"57":{"line":1094,"type":"if","locations":[{"start":{"line":1094,"column":10},"end":{"line":1094,"column":10}},{"start":{"line":1094,"column":10},"end":{"line":1094,"column":10}}]},"58":{"line":1096,"type":"if","locations":[{"start":{"line":1096,"column":17},"end":{"line":1096,"column":17}},{"start":{"line":1096,"column":17},"end":{"line":1096,"column":17}}]},"59":{"line":1097,"type":"if","locations":[{"start":{"line":1097,"column":12},"end":{"line":1097,"column":12}},{"start":{"line":1097,"column":12},"end":{"line":1097,"column":12}}]},"60":{"line":1133,"type":"binary-expr","locations":[{"start":{"line":1133,"column":13},"end":{"line":1133,"column":26}},{"start":{"line":1133,"column":30},"end":{"line":1133,"column":55}}]},"61":{"line":1146,"type":"cond-expr","locations":[{"start":{"line":1146,"column":34},"end":{"line":1146,"column":43}},{"start":{"line":1146,"column":46},"end":{"line":1146,"column":64}}]},"62":{"line":1159,"type":"binary-expr","locations":[{"start":{"line":1159,"column":13},"end":{"line":1159,"column":31}},{"start":{"line":1159,"column":35},"end":{"line":1159,"column":74}}]},"63":{"line":1173,"type":"if","locations":[{"start":{"line":1173,"column":6},"end":{"line":1173,"column":6}},{"start":{"line":1173,"column":6},"end":{"line":1173,"column":6}}]},"64":{"line":1189,"type":"cond-expr","locations":[{"start":{"line":1189,"column":28},"end":{"line":1189,"column":41}},{"start":{"line":1189,"column":44},"end":{"line":1189,"column":45}}]},"65":{"line":1208,"type":"cond-expr","locations":[{"start":{"line":1208,"column":67},"end":{"line":1208,"column":86}},{"start":{"line":1208,"column":89},"end":{"line":1208,"column":105}}]},"66":{"line":1208,"type":"binary-expr","locations":[{"start":{"line":1208,"column":20},"end":{"line":1208,"column":44}},{"start":{"line":1208,"column":48},"end":{"line":1208,"column":63}}]},"67":{"line":1210,"type":"cond-expr","locations":[{"start":{"line":1210,"column":22},"end":{"line":1210,"column":23}},{"start":{"line":1210,"column":26},"end":{"line":1210,"column":28}}]},"68":{"line":1223,"type":"if","locations":[{"start":{"line":1223,"column":6},"end":{"line":1223,"column":6}},{"start":{"line":1223,"column":6},"end":{"line":1223,"column":6}}]},"69":{"line":1223,"type":"binary-expr","locations":[{"start":{"line":1223,"column":10},"end":{"line":1223,"column":34}},{"start":{"line":1223,"column":38},"end":{"line":1223,"column":53}}]},"70":{"line":1268,"type":"binary-expr","locations":[{"start":{"line":1268,"column":6},"end":{"line":1268,"column":11}},{"start":{"line":1268,"column":16},"end":{"line":1268,"column":37}}]},"71":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":8},"end":{"line":1289,"column":8}},{"start":{"line":1289,"column":8},"end":{"line":1289,"column":8}}]},"72":{"line":1309,"type":"if","locations":[{"start":{"line":1309,"column":8},"end":{"line":1309,"column":8}},{"start":{"line":1309,"column":8},"end":{"line":1309,"column":8}}]},"73":{"line":1331,"type":"if","locations":[{"start":{"line":1331,"column":8},"end":{"line":1331,"column":8}},{"start":{"line":1331,"column":8},"end":{"line":1331,"column":8}}]},"74":{"line":1359,"type":"if","locations":[{"start":{"line":1359,"column":8},"end":{"line":1359,"column":8}},{"start":{"line":1359,"column":8},"end":{"line":1359,"column":8}}]},"75":{"line":1384,"type":"if","locations":[{"start":{"line":1384,"column":8},"end":{"line":1384,"column":8}},{"start":{"line":1384,"column":8},"end":{"line":1384,"column":8}}]},"76":{"line":1446,"type":"if","locations":[{"start":{"line":1446,"column":6},"end":{"line":1446,"column":6}},{"start":{"line":1446,"column":6},"end":{"line":1446,"column":6}}]},"77":{"line":1446,"type":"binary-expr","locations":[{"start":{"line":1446,"column":10},"end":{"line":1446,"column":23}},{"start":{"line":1446,"column":27},"end":{"line":1446,"column":33}}]},"78":{"line":1469,"type":"if","locations":[{"start":{"line":1469,"column":6},"end":{"line":1469,"column":6}},{"start":{"line":1469,"column":6},"end":{"line":1469,"column":6}}]},"79":{"line":1469,"type":"binary-expr","locations":[{"start":{"line":1469,"column":10},"end":{"line":1469,"column":23}},{"start":{"line":1469,"column":27},"end":{"line":1469,"column":33}}]},"80":{"line":1493,"type":"if","locations":[{"start":{"line":1493,"column":8},"end":{"line":1493,"column":8}},{"start":{"line":1493,"column":8},"end":{"line":1493,"column":8}}]},"81":{"line":1514,"type":"binary-expr","locations":[{"start":{"line":1514,"column":18},"end":{"line":1514,"column":42}},{"start":{"line":1514,"column":46},"end":{"line":1514,"column":47}}]},"82":{"line":1528,"type":"cond-expr","locations":[{"start":{"line":1528,"column":41},"end":{"line":1528,"column":52}},{"start":{"line":1528,"column":55},"end":{"line":1528,"column":66}}]},"83":{"line":1545,"type":"cond-expr","locations":[{"start":{"line":1546,"column":10},"end":{"line":1546,"column":21}},{"start":{"line":1547,"column":10},"end":{"line":1547,"column":21}}]},"84":{"line":1545,"type":"binary-expr","locations":[{"start":{"line":1545,"column":14},"end":{"line":1545,"column":39}},{"start":{"line":1545,"column":43},"end":{"line":1545,"column":76}}]},"85":{"line":1571,"type":"if","locations":[{"start":{"line":1571,"column":8},"end":{"line":1571,"column":8}},{"start":{"line":1571,"column":8},"end":{"line":1571,"column":8}}]},"86":{"line":1571,"type":"binary-expr","locations":[{"start":{"line":1571,"column":13},"end":{"line":1571,"column":71}},{"start":{"line":1572,"column":13},"end":{"line":1572,"column":32}},{"start":{"line":1572,"column":36},"end":{"line":1572,"column":52}}]},"87":{"line":1571,"type":"cond-expr","locations":[{"start":{"line":1571,"column":34},"end":{"line":1571,"column":50}},{"start":{"line":1571,"column":55},"end":{"line":1571,"column":70}}]},"88":{"line":1589,"type":"cond-expr","locations":[{"start":{"line":1590,"column":10},"end":{"line":1590,"column":16}},{"start":{"line":1591,"column":10},"end":{"line":1591,"column":48}}]},"89":{"line":1606,"type":"binary-expr","locations":[{"start":{"line":1606,"column":18},"end":{"line":1606,"column":24}},{"start":{"line":1606,"column":28},"end":{"line":1606,"column":51}}]},"90":{"line":1607,"type":"cond-expr","locations":[{"start":{"line":1607,"column":27},"end":{"line":1607,"column":44}},{"start":{"line":1607,"column":47},"end":{"line":1607,"column":48}}]},"91":{"line":1613,"type":"if","locations":[{"start":{"line":1613,"column":8},"end":{"line":1613,"column":8}},{"start":{"line":1613,"column":8},"end":{"line":1613,"column":8}}]},"92":{"line":1614,"type":"cond-expr","locations":[{"start":{"line":1614,"column":49},"end":{"line":1614,"column":64}},{"start":{"line":1614,"column":67},"end":{"line":1614,"column":76}}]},"93":{"line":1616,"type":"cond-expr","locations":[{"start":{"line":1616,"column":34},"end":{"line":1616,"column":43}},{"start":{"line":1616,"column":46},"end":{"line":1616,"column":61}}]},"94":{"line":1632,"type":"binary-expr","locations":[{"start":{"line":1632,"column":6},"end":{"line":1632,"column":12}},{"start":{"line":1632,"column":17},"end":{"line":1632,"column":28}}]},"95":{"line":1656,"type":"if","locations":[{"start":{"line":1656,"column":6},"end":{"line":1656,"column":6}},{"start":{"line":1656,"column":6},"end":{"line":1656,"column":6}}]},"96":{"line":1657,"type":"cond-expr","locations":[{"start":{"line":1658,"column":12},"end":{"line":1658,"column":16}},{"start":{"line":1659,"column":12},"end":{"line":1659,"column":49}}]},"97":{"line":1661,"type":"if","locations":[{"start":{"line":1661,"column":6},"end":{"line":1661,"column":6}},{"start":{"line":1661,"column":6},"end":{"line":1661,"column":6}}]},"98":{"line":1664,"type":"if","locations":[{"start":{"line":1664,"column":6},"end":{"line":1664,"column":6}},{"start":{"line":1664,"column":6},"end":{"line":1664,"column":6}}]},"99":{"line":1667,"type":"cond-expr","locations":[{"start":{"line":1668,"column":10},"end":{"line":1668,"column":24}},{"start":{"line":1669,"column":10},"end":{"line":1669,"column":44}}]},"100":{"line":1688,"type":"if","locations":[{"start":{"line":1688,"column":6},"end":{"line":1688,"column":6}},{"start":{"line":1688,"column":6},"end":{"line":1688,"column":6}}]},"101":{"line":1689,"type":"cond-expr","locations":[{"start":{"line":1689,"column":26},"end":{"line":1689,"column":56}},{"start":{"line":1689,"column":59},"end":{"line":1689,"column":76}}]},"102":{"line":1691,"type":"if","locations":[{"start":{"line":1691,"column":6},"end":{"line":1691,"column":6}},{"start":{"line":1691,"column":6},"end":{"line":1691,"column":6}}]},"103":{"line":1694,"type":"if","locations":[{"start":{"line":1694,"column":6},"end":{"line":1694,"column":6}},{"start":{"line":1694,"column":6},"end":{"line":1694,"column":6}}]},"104":{"line":1698,"type":"if","locations":[{"start":{"line":1698,"column":6},"end":{"line":1698,"column":6}},{"start":{"line":1698,"column":6},"end":{"line":1698,"column":6}}]},"105":{"line":1700,"type":"if","locations":[{"start":{"line":1700,"column":8},"end":{"line":1700,"column":8}},{"start":{"line":1700,"column":8},"end":{"line":1700,"column":8}}]},"106":{"line":1707,"type":"if","locations":[{"start":{"line":1707,"column":8},"end":{"line":1707,"column":8}},{"start":{"line":1707,"column":8},"end":{"line":1707,"column":8}}]},"107":{"line":1707,"type":"binary-expr","locations":[{"start":{"line":1707,"column":12},"end":{"line":1707,"column":28}},{"start":{"line":1707,"column":32},"end":{"line":1707,"column":46}},{"start":{"line":1707,"column":51},"end":{"line":1707,"column":57}},{"start":{"line":1707,"column":61},"end":{"line":1707,"column":68}}]},"108":{"line":1708,"type":"cond-expr","locations":[{"start":{"line":1708,"column":44},"end":{"line":1708,"column":46}},{"start":{"line":1708,"column":49},"end":{"line":1708,"column":54}}]},"109":{"line":1709,"type":"if","locations":[{"start":{"line":1709,"column":10},"end":{"line":1709,"column":10}},{"start":{"line":1709,"column":10},"end":{"line":1709,"column":10}}]},"110":{"line":1713,"type":"cond-expr","locations":[{"start":{"line":1714,"column":14},"end":{"line":1714,"column":48}},{"start":{"line":1715,"column":15},"end":{"line":1715,"column":34}}]},"111":{"line":1715,"type":"cond-expr","locations":[{"start":{"line":1715,"column":24},"end":{"line":1715,"column":29}},{"start":{"line":1715,"column":32},"end":{"line":1715,"column":34}}]},"112":{"line":1719,"type":"binary-expr","locations":[{"start":{"line":1719,"column":6},"end":{"line":1719,"column":12}},{"start":{"line":1719,"column":17},"end":{"line":1719,"column":28}}]},"113":{"line":1720,"type":"binary-expr","locations":[{"start":{"line":1720,"column":6},"end":{"line":1720,"column":12}},{"start":{"line":1720,"column":17},"end":{"line":1720,"column":28}}]},"114":{"line":1724,"type":"if","locations":[{"start":{"line":1724,"column":8},"end":{"line":1724,"column":8}},{"start":{"line":1724,"column":8},"end":{"line":1724,"column":8}}]},"115":{"line":1733,"type":"cond-expr","locations":[{"start":{"line":1733,"column":15},"end":{"line":1733,"column":24}},{"start":{"line":1733,"column":27},"end":{"line":1733,"column":37}}]},"116":{"line":1750,"type":"if","locations":[{"start":{"line":1750,"column":8},"end":{"line":1750,"column":8}},{"start":{"line":1750,"column":8},"end":{"line":1750,"column":8}}]},"117":{"line":1755,"type":"binary-expr","locations":[{"start":{"line":1755,"column":15},"end":{"line":1755,"column":21}},{"start":{"line":1755,"column":25},"end":{"line":1755,"column":27}}]},"118":{"line":1770,"type":"if","locations":[{"start":{"line":1770,"column":6},"end":{"line":1770,"column":6}},{"start":{"line":1770,"column":6},"end":{"line":1770,"column":6}}]},"119":{"line":1786,"type":"cond-expr","locations":[{"start":{"line":1786,"column":27},"end":{"line":1786,"column":39}},{"start":{"line":1786,"column":42},"end":{"line":1786,"column":43}}]},"120":{"line":1789,"type":"if","locations":[{"start":{"line":1789,"column":6},"end":{"line":1789,"column":6}},{"start":{"line":1789,"column":6},"end":{"line":1789,"column":6}}]},"121":{"line":1795,"type":"cond-expr","locations":[{"start":{"line":1795,"column":68},"end":{"line":1795,"column":87}},{"start":{"line":1795,"column":90},"end":{"line":1795,"column":94}}]},"122":{"line":1795,"type":"binary-expr","locations":[{"start":{"line":1795,"column":19},"end":{"line":1795,"column":27}},{"start":{"line":1795,"column":31},"end":{"line":1795,"column":64}}]},"123":{"line":1798,"type":"if","locations":[{"start":{"line":1798,"column":6},"end":{"line":1798,"column":6}},{"start":{"line":1798,"column":6},"end":{"line":1798,"column":6}}]},"124":{"line":1807,"type":"if","locations":[{"start":{"line":1807,"column":8},"end":{"line":1807,"column":8}},{"start":{"line":1807,"column":8},"end":{"line":1807,"column":8}}]},"125":{"line":1807,"type":"binary-expr","locations":[{"start":{"line":1807,"column":12},"end":{"line":1807,"column":20}},{"start":{"line":1807,"column":24},"end":{"line":1807,"column":39}}]},"126":{"line":1810,"type":"if","locations":[{"start":{"line":1810,"column":12},"end":{"line":1810,"column":12}},{"start":{"line":1810,"column":12},"end":{"line":1810,"column":12}}]},"127":{"line":1816,"type":"if","locations":[{"start":{"line":1816,"column":13},"end":{"line":1816,"column":13}},{"start":{"line":1816,"column":13},"end":{"line":1816,"column":13}}]},"128":{"line":1882,"type":"if","locations":[{"start":{"line":1882,"column":8},"end":{"line":1882,"column":8}},{"start":{"line":1882,"column":8},"end":{"line":1882,"column":8}}]},"129":{"line":1882,"type":"binary-expr","locations":[{"start":{"line":1882,"column":12},"end":{"line":1882,"column":41}},{"start":{"line":1882,"column":46},"end":{"line":1882,"column":65}},{"start":{"line":1882,"column":69},"end":{"line":1882,"column":87}}]},"130":{"line":1903,"type":"cond-expr","locations":[{"start":{"line":1903,"column":30},"end":{"line":1903,"column":31}},{"start":{"line":1903,"column":35},"end":{"line":1903,"column":46}}]},"131":{"line":1903,"type":"binary-expr","locations":[{"start":{"line":1903,"column":35},"end":{"line":1903,"column":41}},{"start":{"line":1903,"column":45},"end":{"line":1903,"column":46}}]},"132":{"line":1904,"type":"if","locations":[{"start":{"line":1904,"column":6},"end":{"line":1904,"column":6}},{"start":{"line":1904,"column":6},"end":{"line":1904,"column":6}}]},"133":{"line":1905,"type":"cond-expr","locations":[{"start":{"line":1905,"column":34},"end":{"line":1905,"column":35}},{"start":{"line":1905,"column":39},"end":{"line":1905,"column":53}}]},"134":{"line":1907,"type":"cond-expr","locations":[{"start":{"line":1907,"column":50},"end":{"line":1907,"column":56}},{"start":{"line":1907,"column":60},"end":{"line":1907,"column":69}}]},"135":{"line":1907,"type":"binary-expr","locations":[{"start":{"line":1907,"column":13},"end":{"line":1907,"column":30}},{"start":{"line":1907,"column":34},"end":{"line":1907,"column":46}}]},"136":{"line":1907,"type":"binary-expr","locations":[{"start":{"line":1907,"column":60},"end":{"line":1907,"column":64}},{"start":{"line":1907,"column":68},"end":{"line":1907,"column":69}}]},"137":{"line":1908,"type":"if","locations":[{"start":{"line":1908,"column":6},"end":{"line":1908,"column":6}},{"start":{"line":1908,"column":6},"end":{"line":1908,"column":6}}]},"138":{"line":1911,"type":"cond-expr","locations":[{"start":{"line":1911,"column":29},"end":{"line":1911,"column":30}},{"start":{"line":1911,"column":34},"end":{"line":1911,"column":43}}]},"139":{"line":1932,"type":"if","locations":[{"start":{"line":1932,"column":8},"end":{"line":1932,"column":8}},{"start":{"line":1932,"column":8},"end":{"line":1932,"column":8}}]},"140":{"line":1955,"type":"if","locations":[{"start":{"line":1955,"column":8},"end":{"line":1955,"column":8}},{"start":{"line":1955,"column":8},"end":{"line":1955,"column":8}}]},"141":{"line":1956,"type":"cond-expr","locations":[{"start":{"line":1956,"column":28},"end":{"line":1956,"column":31}},{"start":{"line":1956,"column":34},"end":{"line":1956,"column":39}}]},"142":{"line":1975,"type":"binary-expr","locations":[{"start":{"line":1975,"column":6},"end":{"line":1975,"column":12}},{"start":{"line":1975,"column":17},"end":{"line":1975,"column":28}}]},"143":{"line":1982,"type":"if","locations":[{"start":{"line":1982,"column":8},"end":{"line":1982,"column":8}},{"start":{"line":1982,"column":8},"end":{"line":1982,"column":8}}]},"144":{"line":1982,"type":"binary-expr","locations":[{"start":{"line":1982,"column":12},"end":{"line":1982,"column":31}},{"start":{"line":1982,"column":35},"end":{"line":1982,"column":53}},{"start":{"line":1983,"column":13},"end":{"line":1983,"column":21}},{"start":{"line":1983,"column":25},"end":{"line":1983,"column":39}},{"start":{"line":1983,"column":43},"end":{"line":1983,"column":61}}]},"145":{"line":1984,"type":"if","locations":[{"start":{"line":1984,"column":10},"end":{"line":1984,"column":10}},{"start":{"line":1984,"column":10},"end":{"line":1984,"column":10}}]},"146":{"line":1990,"type":"if","locations":[{"start":{"line":1990,"column":15},"end":{"line":1990,"column":15}},{"start":{"line":1990,"column":15},"end":{"line":1990,"column":15}}]},"147":{"line":2079,"type":"if","locations":[{"start":{"line":2079,"column":8},"end":{"line":2079,"column":8}},{"start":{"line":2079,"column":8},"end":{"line":2079,"column":8}}]},"148":{"line":2097,"type":"if","locations":[{"start":{"line":2097,"column":6},"end":{"line":2097,"column":6}},{"start":{"line":2097,"column":6},"end":{"line":2097,"column":6}}]},"149":{"line":2100,"type":"if","locations":[{"start":{"line":2100,"column":6},"end":{"line":2100,"column":6}},{"start":{"line":2100,"column":6},"end":{"line":2100,"column":6}}]},"150":{"line":2100,"type":"binary-expr","locations":[{"start":{"line":2100,"column":10},"end":{"line":2100,"column":31}},{"start":{"line":2100,"column":35},"end":{"line":2100,"column":62}}]},"151":{"line":2106,"type":"binary-expr","locations":[{"start":{"line":2106,"column":13},"end":{"line":2106,"column":27}},{"start":{"line":2106,"column":31},"end":{"line":2106,"column":45}}]},"152":{"line":2109,"type":"cond-expr","locations":[{"start":{"line":2109,"column":42},"end":{"line":2109,"column":48}},{"start":{"line":2109,"column":51},"end":{"line":2109,"column":60}}]},"153":{"line":2109,"type":"binary-expr","locations":[{"start":{"line":2109,"column":14},"end":{"line":2109,"column":19}},{"start":{"line":2109,"column":23},"end":{"line":2109,"column":38}}]},"154":{"line":2126,"type":"if","locations":[{"start":{"line":2126,"column":6},"end":{"line":2126,"column":6}},{"start":{"line":2126,"column":6},"end":{"line":2126,"column":6}}]},"155":{"line":2129,"type":"if","locations":[{"start":{"line":2129,"column":6},"end":{"line":2129,"column":6}},{"start":{"line":2129,"column":6},"end":{"line":2129,"column":6}}]},"156":{"line":2129,"type":"binary-expr","locations":[{"start":{"line":2129,"column":10},"end":{"line":2129,"column":23}},{"start":{"line":2129,"column":27},"end":{"line":2129,"column":40}},{"start":{"line":2129,"column":45},"end":{"line":2129,"column":61}},{"start":{"line":2129,"column":65},"end":{"line":2129,"column":85}}]},"157":{"line":2130,"type":"binary-expr","locations":[{"start":{"line":2130,"column":15},"end":{"line":2130,"column":30}},{"start":{"line":2130,"column":34},"end":{"line":2130,"column":49}}]},"158":{"line":2156,"type":"if","locations":[{"start":{"line":2156,"column":6},"end":{"line":2156,"column":6}},{"start":{"line":2156,"column":6},"end":{"line":2156,"column":6}}]},"159":{"line":2158,"type":"if","locations":[{"start":{"line":2158,"column":8},"end":{"line":2158,"column":8}},{"start":{"line":2158,"column":8},"end":{"line":2158,"column":8}}]},"160":{"line":2160,"type":"if","locations":[{"start":{"line":2160,"column":15},"end":{"line":2160,"column":15}},{"start":{"line":2160,"column":15},"end":{"line":2160,"column":15}}]},"161":{"line":2164,"type":"if","locations":[{"start":{"line":2164,"column":6},"end":{"line":2164,"column":6}},{"start":{"line":2164,"column":6},"end":{"line":2164,"column":6}}]},"162":{"line":2166,"type":"if","locations":[{"start":{"line":2166,"column":8},"end":{"line":2166,"column":8}},{"start":{"line":2166,"column":8},"end":{"line":2166,"column":8}}]},"163":{"line":2168,"type":"if","locations":[{"start":{"line":2168,"column":15},"end":{"line":2168,"column":15}},{"start":{"line":2168,"column":15},"end":{"line":2168,"column":15}}]},"164":{"line":2176,"type":"if","locations":[{"start":{"line":2176,"column":6},"end":{"line":2176,"column":6}},{"start":{"line":2176,"column":6},"end":{"line":2176,"column":6}}]},"165":{"line":2176,"type":"binary-expr","locations":[{"start":{"line":2176,"column":10},"end":{"line":2176,"column":19}},{"start":{"line":2176,"column":23},"end":{"line":2176,"column":46}}]},"166":{"line":2176,"type":"binary-expr","locations":[{"start":{"line":2176,"column":25},"end":{"line":2176,"column":33}},{"start":{"line":2176,"column":37},"end":{"line":2176,"column":45}}]},"167":{"line":2179,"type":"if","locations":[{"start":{"line":2179,"column":6},"end":{"line":2179,"column":6}},{"start":{"line":2179,"column":6},"end":{"line":2179,"column":6}}]},"168":{"line":2180,"type":"binary-expr","locations":[{"start":{"line":2180,"column":27},"end":{"line":2180,"column":35}},{"start":{"line":2180,"column":39},"end":{"line":2180,"column":81}}]},"169":{"line":2181,"type":"binary-expr","locations":[{"start":{"line":2181,"column":27},"end":{"line":2181,"column":35}},{"start":{"line":2181,"column":39},"end":{"line":2181,"column":80}}]},"170":{"line":2183,"type":"if","locations":[{"start":{"line":2183,"column":8},"end":{"line":2183,"column":8}},{"start":{"line":2183,"column":8},"end":{"line":2183,"column":8}}]},"171":{"line":2183,"type":"binary-expr","locations":[{"start":{"line":2183,"column":12},"end":{"line":2183,"column":24}},{"start":{"line":2183,"column":28},"end":{"line":2183,"column":40}}]},"172":{"line":2184,"type":"cond-expr","locations":[{"start":{"line":2184,"column":42},"end":{"line":2184,"column":56}},{"start":{"line":2184,"column":59},"end":{"line":2184,"column":65}}]},"173":{"line":2184,"type":"cond-expr","locations":[{"start":{"line":2184,"column":82},"end":{"line":2184,"column":95}},{"start":{"line":2184,"column":98},"end":{"line":2184,"column":103}}]},"174":{"line":2187,"type":"if","locations":[{"start":{"line":2187,"column":6},"end":{"line":2187,"column":6}},{"start":{"line":2187,"column":6},"end":{"line":2187,"column":6}}]},"175":{"line":2192,"type":"binary-expr","locations":[{"start":{"line":2192,"column":6},"end":{"line":2192,"column":12}},{"start":{"line":2192,"column":17},"end":{"line":2192,"column":28}}]},"176":{"line":2193,"type":"binary-expr","locations":[{"start":{"line":2193,"column":6},"end":{"line":2193,"column":12}},{"start":{"line":2193,"column":17},"end":{"line":2193,"column":28}}]},"177":{"line":2197,"type":"if","locations":[{"start":{"line":2197,"column":8},"end":{"line":2197,"column":8}},{"start":{"line":2197,"column":8},"end":{"line":2197,"column":8}}]},"178":{"line":2205,"type":"cond-expr","locations":[{"start":{"line":2205,"column":31},"end":{"line":2205,"column":42}},{"start":{"line":2205,"column":45},"end":{"line":2205,"column":57}}]},"179":{"line":2228,"type":"if","locations":[{"start":{"line":2228,"column":6},"end":{"line":2228,"column":6}},{"start":{"line":2228,"column":6},"end":{"line":2228,"column":6}}]},"180":{"line":2234,"type":"if","locations":[{"start":{"line":2234,"column":8},"end":{"line":2234,"column":8}},{"start":{"line":2234,"column":8},"end":{"line":2234,"column":8}}]},"181":{"line":2234,"type":"cond-expr","locations":[{"start":{"line":2235,"column":16},"end":{"line":2235,"column":43}},{"start":{"line":2236,"column":16},"end":{"line":2236,"column":36}}]},"182":{"line":2234,"type":"binary-expr","locations":[{"start":{"line":2234,"column":13},"end":{"line":2234,"column":25}},{"start":{"line":2234,"column":29},"end":{"line":2234,"column":36}}]},"183":{"line":2247,"type":"if","locations":[{"start":{"line":2247,"column":8},"end":{"line":2247,"column":8}},{"start":{"line":2247,"column":8},"end":{"line":2247,"column":8}}]},"184":{"line":2247,"type":"binary-expr","locations":[{"start":{"line":2247,"column":12},"end":{"line":2247,"column":24}},{"start":{"line":2247,"column":28},"end":{"line":2247,"column":35}}]},"185":{"line":2248,"type":"if","locations":[{"start":{"line":2248,"column":10},"end":{"line":2248,"column":10}},{"start":{"line":2248,"column":10},"end":{"line":2248,"column":10}}]},"186":{"line":2248,"type":"binary-expr","locations":[{"start":{"line":2248,"column":14},"end":{"line":2248,"column":36}},{"start":{"line":2248,"column":40},"end":{"line":2248,"column":56}}]},"187":{"line":2252,"type":"cond-expr","locations":[{"start":{"line":2252,"column":36},"end":{"line":2252,"column":71}},{"start":{"line":2252,"column":74},"end":{"line":2252,"column":83}}]},"188":{"line":2253,"type":"if","locations":[{"start":{"line":2253,"column":10},"end":{"line":2253,"column":10}},{"start":{"line":2253,"column":10},"end":{"line":2253,"column":10}}]},"189":{"line":2253,"type":"cond-expr","locations":[{"start":{"line":2253,"column":39},"end":{"line":2253,"column":88}},{"start":{"line":2253,"column":91},"end":{"line":2253,"column":97}}]},"190":{"line":2272,"type":"cond-expr","locations":[{"start":{"line":2272,"column":45},"end":{"line":2272,"column":69}},{"start":{"line":2272,"column":72},"end":{"line":2272,"column":74}}]},"191":{"line":2289,"type":"if","locations":[{"start":{"line":2289,"column":6},"end":{"line":2289,"column":6}},{"start":{"line":2289,"column":6},"end":{"line":2289,"column":6}}]},"192":{"line":2289,"type":"binary-expr","locations":[{"start":{"line":2289,"column":10},"end":{"line":2289,"column":31}},{"start":{"line":2289,"column":35},"end":{"line":2289,"column":50}}]},"193":{"line":2294,"type":"if","locations":[{"start":{"line":2294,"column":10},"end":{"line":2294,"column":10}},{"start":{"line":2294,"column":10},"end":{"line":2294,"column":10}}]},"194":{"line":2297,"type":"binary-expr","locations":[{"start":{"line":2297,"column":17},"end":{"line":2297,"column":38}},{"start":{"line":2297,"column":43},"end":{"line":2297,"column":62}},{"start":{"line":2297,"column":67},"end":{"line":2297,"column":90}}]},"195":{"line":2315,"type":"binary-expr","locations":[{"start":{"line":2315,"column":21},"end":{"line":2315,"column":32}},{"start":{"line":2315,"column":36},"end":{"line":2315,"column":64}}]},"196":{"line":2320,"type":"if","locations":[{"start":{"line":2320,"column":8},"end":{"line":2320,"column":8}},{"start":{"line":2320,"column":8},"end":{"line":2320,"column":8}}]},"197":{"line":2325,"type":"if","locations":[{"start":{"line":2325,"column":8},"end":{"line":2325,"column":8}},{"start":{"line":2325,"column":8},"end":{"line":2325,"column":8}}]},"198":{"line":2325,"type":"binary-expr","locations":[{"start":{"line":2325,"column":13},"end":{"line":2325,"column":18}},{"start":{"line":2325,"column":22},"end":{"line":2325,"column":31}},{"start":{"line":2325,"column":36},"end":{"line":2325,"column":52}}]},"199":{"line":2326,"type":"cond-expr","locations":[{"start":{"line":2326,"column":38},"end":{"line":2326,"column":44}},{"start":{"line":2326,"column":47},"end":{"line":2326,"column":86}}]},"200":{"line":2327,"type":"if","locations":[{"start":{"line":2327,"column":10},"end":{"line":2327,"column":10}},{"start":{"line":2327,"column":10},"end":{"line":2327,"column":10}}]},"201":{"line":2333,"type":"cond-expr","locations":[{"start":{"line":2334,"column":13},"end":{"line":2334,"column":54}},{"start":{"line":2335,"column":12},"end":{"line":2335,"column":63}}]},"202":{"line":2334,"type":"binary-expr","locations":[{"start":{"line":2334,"column":13},"end":{"line":2334,"column":35}},{"start":{"line":2334,"column":40},"end":{"line":2334,"column":53}}]},"203":{"line":2352,"type":"if","locations":[{"start":{"line":2352,"column":6},"end":{"line":2352,"column":6}},{"start":{"line":2352,"column":6},"end":{"line":2352,"column":6}}]},"204":{"line":2355,"type":"binary-expr","locations":[{"start":{"line":2355,"column":21},"end":{"line":2355,"column":40}},{"start":{"line":2355,"column":45},"end":{"line":2355,"column":60}},{"start":{"line":2355,"column":64},"end":{"line":2355,"column":84}}]},"205":{"line":2356,"type":"cond-expr","locations":[{"start":{"line":2356,"column":29},"end":{"line":2356,"column":38}},{"start":{"line":2356,"column":41},"end":{"line":2356,"column":53}}]},"206":{"line":2358,"type":"binary-expr","locations":[{"start":{"line":2358,"column":16},"end":{"line":2358,"column":21}},{"start":{"line":2358,"column":25},"end":{"line":2358,"column":31}}]},"207":{"line":2359,"type":"if","locations":[{"start":{"line":2359,"column":8},"end":{"line":2359,"column":8}},{"start":{"line":2359,"column":8},"end":{"line":2359,"column":8}}]},"208":{"line":2363,"type":"if","locations":[{"start":{"line":2363,"column":8},"end":{"line":2363,"column":8}},{"start":{"line":2363,"column":8},"end":{"line":2363,"column":8}}]},"209":{"line":2364,"type":"binary-expr","locations":[{"start":{"line":2364,"column":10},"end":{"line":2364,"column":16}},{"start":{"line":2364,"column":21},"end":{"line":2364,"column":32}}]},"210":{"line":2365,"type":"binary-expr","locations":[{"start":{"line":2365,"column":10},"end":{"line":2365,"column":16}},{"start":{"line":2365,"column":21},"end":{"line":2365,"column":32}}]},"211":{"line":2370,"type":"cond-expr","locations":[{"start":{"line":2370,"column":36},"end":{"line":2370,"column":84}},{"start":{"line":2370,"column":87},"end":{"line":2370,"column":96}}]},"212":{"line":2373,"type":"if","locations":[{"start":{"line":2373,"column":10},"end":{"line":2373,"column":10}},{"start":{"line":2373,"column":10},"end":{"line":2373,"column":10}}]},"213":{"line":2376,"type":"if","locations":[{"start":{"line":2376,"column":10},"end":{"line":2376,"column":10}},{"start":{"line":2376,"column":10},"end":{"line":2376,"column":10}}]},"214":{"line":2376,"type":"binary-expr","locations":[{"start":{"line":2376,"column":15},"end":{"line":2376,"column":35}},{"start":{"line":2376,"column":40},"end":{"line":2376,"column":48}},{"start":{"line":2376,"column":52},"end":{"line":2376,"column":68}},{"start":{"line":2377,"column":15},"end":{"line":2377,"column":23}},{"start":{"line":2377,"column":28},"end":{"line":2377,"column":86}}]},"215":{"line":2377,"type":"cond-expr","locations":[{"start":{"line":2377,"column":49},"end":{"line":2377,"column":65}},{"start":{"line":2377,"column":70},"end":{"line":2377,"column":85}}]},"216":{"line":2405,"type":"if","locations":[{"start":{"line":2405,"column":8},"end":{"line":2405,"column":8}},{"start":{"line":2405,"column":8},"end":{"line":2405,"column":8}}]},"217":{"line":2411,"type":"cond-expr","locations":[{"start":{"line":2411,"column":32},"end":{"line":2411,"column":80}},{"start":{"line":2411,"column":83},"end":{"line":2411,"column":92}}]},"218":{"line":2414,"type":"if","locations":[{"start":{"line":2414,"column":6},"end":{"line":2414,"column":6}},{"start":{"line":2414,"column":6},"end":{"line":2414,"column":6}}]},"219":{"line":2416,"type":"if","locations":[{"start":{"line":2416,"column":8},"end":{"line":2416,"column":8}},{"start":{"line":2416,"column":8},"end":{"line":2416,"column":8}}]},"220":{"line":2416,"type":"binary-expr","locations":[{"start":{"line":2416,"column":12},"end":{"line":2416,"column":33}},{"start":{"line":2416,"column":38},"end":{"line":2416,"column":55}},{"start":{"line":2416,"column":59},"end":{"line":2416,"column":81}}]},"221":{"line":2417,"type":"cond-expr","locations":[{"start":{"line":2418,"column":14},"end":{"line":2418,"column":19}},{"start":{"line":2419,"column":15},"end":{"line":2419,"column":57}}]},"222":{"line":2419,"type":"cond-expr","locations":[{"start":{"line":2419,"column":36},"end":{"line":2419,"column":52}},{"start":{"line":2419,"column":55},"end":{"line":2419,"column":57}}]},"223":{"line":2421,"type":"if","locations":[{"start":{"line":2421,"column":13},"end":{"line":2421,"column":13}},{"start":{"line":2421,"column":13},"end":{"line":2421,"column":13}}]},"224":{"line":2421,"type":"binary-expr","locations":[{"start":{"line":2421,"column":17},"end":{"line":2421,"column":40}},{"start":{"line":2421,"column":44},"end":{"line":2421,"column":65}}]},"225":{"line":2422,"type":"cond-expr","locations":[{"start":{"line":2423,"column":14},"end":{"line":2423,"column":34}},{"start":{"line":2424,"column":15},"end":{"line":2424,"column":48}}]},"226":{"line":2424,"type":"cond-expr","locations":[{"start":{"line":2424,"column":38},"end":{"line":2424,"column":43}},{"start":{"line":2424,"column":46},"end":{"line":2424,"column":48}}]},"227":{"line":2435,"type":"if","locations":[{"start":{"line":2435,"column":6},"end":{"line":2435,"column":6}},{"start":{"line":2435,"column":6},"end":{"line":2435,"column":6}}]},"228":{"line":2438,"type":"if","locations":[{"start":{"line":2438,"column":13},"end":{"line":2438,"column":13}},{"start":{"line":2438,"column":13},"end":{"line":2438,"column":13}}]},"229":{"line":2438,"type":"cond-expr","locations":[{"start":{"line":2438,"column":38},"end":{"line":2438,"column":54}},{"start":{"line":2438,"column":59},"end":{"line":2438,"column":74}}]},"230":{"line":2452,"type":"cond-expr","locations":[{"start":{"line":2452,"column":32},"end":{"line":2452,"column":41}},{"start":{"line":2452,"column":44},"end":{"line":2452,"column":55}}]},"231":{"line":2481,"type":"cond-expr","locations":[{"start":{"line":2481,"column":27},"end":{"line":2481,"column":41}},{"start":{"line":2481,"column":44},"end":{"line":2481,"column":45}}]},"232":{"line":2484,"type":"if","locations":[{"start":{"line":2484,"column":8},"end":{"line":2484,"column":8}},{"start":{"line":2484,"column":8},"end":{"line":2484,"column":8}}]},"233":{"line":2484,"type":"binary-expr","locations":[{"start":{"line":2484,"column":12},"end":{"line":2484,"column":29}},{"start":{"line":2484,"column":33},"end":{"line":2484,"column":47}}]},"234":{"line":2521,"type":"cond-expr","locations":[{"start":{"line":2522,"column":13},"end":{"line":2522,"column":46}},{"start":{"line":2523,"column":12},"end":{"line":2523,"column":59}}]},"235":{"line":2536,"type":"cond-expr","locations":[{"start":{"line":2536,"column":33},"end":{"line":2536,"column":41}},{"start":{"line":2536,"column":44},"end":{"line":2539,"column":5}}]},"236":{"line":2554,"type":"cond-expr","locations":[{"start":{"line":2554,"column":30},"end":{"line":2554,"column":31}},{"start":{"line":2554,"column":35},"end":{"line":2554,"column":46}}]},"237":{"line":2554,"type":"binary-expr","locations":[{"start":{"line":2554,"column":35},"end":{"line":2554,"column":41}},{"start":{"line":2554,"column":45},"end":{"line":2554,"column":46}}]},"238":{"line":2555,"type":"if","locations":[{"start":{"line":2555,"column":6},"end":{"line":2555,"column":6}},{"start":{"line":2555,"column":6},"end":{"line":2555,"column":6}}]},"239":{"line":2556,"type":"cond-expr","locations":[{"start":{"line":2556,"column":34},"end":{"line":2556,"column":35}},{"start":{"line":2556,"column":39},"end":{"line":2556,"column":53}}]},"240":{"line":2558,"type":"cond-expr","locations":[{"start":{"line":2558,"column":50},"end":{"line":2558,"column":56}},{"start":{"line":2558,"column":60},"end":{"line":2558,"column":69}}]},"241":{"line":2558,"type":"binary-expr","locations":[{"start":{"line":2558,"column":13},"end":{"line":2558,"column":30}},{"start":{"line":2558,"column":34},"end":{"line":2558,"column":46}}]},"242":{"line":2558,"type":"binary-expr","locations":[{"start":{"line":2558,"column":60},"end":{"line":2558,"column":64}},{"start":{"line":2558,"column":68},"end":{"line":2558,"column":69}}]},"243":{"line":2559,"type":"if","locations":[{"start":{"line":2559,"column":6},"end":{"line":2559,"column":6}},{"start":{"line":2559,"column":6},"end":{"line":2559,"column":6}}]},"244":{"line":2562,"type":"cond-expr","locations":[{"start":{"line":2562,"column":29},"end":{"line":2562,"column":30}},{"start":{"line":2562,"column":34},"end":{"line":2562,"column":53}}]},"245":{"line":2649,"type":"binary-expr","locations":[{"start":{"line":2649,"column":18},"end":{"line":2649,"column":53}},{"start":{"line":2649,"column":57},"end":{"line":2649,"column":58}}]},"246":{"line":2668,"type":"binary-expr","locations":[{"start":{"line":2668,"column":20},"end":{"line":2668,"column":28}},{"start":{"line":2668,"column":32},"end":{"line":2668,"column":58}}]},"247":{"line":2669,"type":"cond-expr","locations":[{"start":{"line":2669,"column":27},"end":{"line":2669,"column":40}},{"start":{"line":2669,"column":43},"end":{"line":2669,"column":47}}]},"248":{"line":2672,"type":"if","locations":[{"start":{"line":2672,"column":6},"end":{"line":2672,"column":6}},{"start":{"line":2672,"column":6},"end":{"line":2672,"column":6}}]},"249":{"line":2677,"type":"cond-expr","locations":[{"start":{"line":2677,"column":26},"end":{"line":2677,"column":28}},{"start":{"line":2677,"column":31},"end":{"line":2677,"column":37}}]},"250":{"line":2682,"type":"cond-expr","locations":[{"start":{"line":2682,"column":34},"end":{"line":2682,"column":63}},{"start":{"line":2682,"column":66},"end":{"line":2682,"column":71}}]},"251":{"line":2684,"type":"if","locations":[{"start":{"line":2684,"column":8},"end":{"line":2684,"column":8}},{"start":{"line":2684,"column":8},"end":{"line":2684,"column":8}}]},"252":{"line":2684,"type":"binary-expr","locations":[{"start":{"line":2684,"column":12},"end":{"line":2684,"column":20}},{"start":{"line":2684,"column":24},"end":{"line":2684,"column":39}}]},"253":{"line":2687,"type":"if","locations":[{"start":{"line":2687,"column":12},"end":{"line":2687,"column":12}},{"start":{"line":2687,"column":12},"end":{"line":2687,"column":12}}]},"254":{"line":2691,"type":"if","locations":[{"start":{"line":2691,"column":10},"end":{"line":2691,"column":10}},{"start":{"line":2691,"column":10},"end":{"line":2691,"column":10}}]},"255":{"line":2696,"type":"if","locations":[{"start":{"line":2696,"column":13},"end":{"line":2696,"column":13}},{"start":{"line":2696,"column":13},"end":{"line":2696,"column":13}}]},"256":{"line":2697,"type":"if","locations":[{"start":{"line":2697,"column":10},"end":{"line":2697,"column":10}},{"start":{"line":2697,"column":10},"end":{"line":2697,"column":10}}]},"257":{"line":2697,"type":"binary-expr","locations":[{"start":{"line":2697,"column":14},"end":{"line":2697,"column":22}},{"start":{"line":2697,"column":26},"end":{"line":2697,"column":33}}]},"258":{"line":2740,"type":"cond-expr","locations":[{"start":{"line":2740,"column":30},"end":{"line":2740,"column":36}},{"start":{"line":2740,"column":39},"end":{"line":2740,"column":41}}]},"259":{"line":2742,"type":"binary-expr","locations":[{"start":{"line":2742,"column":14},"end":{"line":2742,"column":52}},{"start":{"line":2742,"column":57},"end":{"line":2742,"column":94}}]},"260":{"line":2742,"type":"cond-expr","locations":[{"start":{"line":2742,"column":26},"end":{"line":2742,"column":33}},{"start":{"line":2742,"column":36},"end":{"line":2742,"column":52}}]},"261":{"line":2743,"type":"cond-expr","locations":[{"start":{"line":2744,"column":10},"end":{"line":2744,"column":85}},{"start":{"line":2745,"column":10},"end":{"line":2745,"column":85}}]},"262":{"line":2744,"type":"cond-expr","locations":[{"start":{"line":2744,"column":40},"end":{"line":2744,"column":41}},{"start":{"line":2744,"column":44},"end":{"line":2744,"column":49}}]},"263":{"line":2744,"type":"cond-expr","locations":[{"start":{"line":2744,"column":65},"end":{"line":2744,"column":74}},{"start":{"line":2744,"column":77},"end":{"line":2744,"column":83}}]},"264":{"line":2745,"type":"cond-expr","locations":[{"start":{"line":2745,"column":40},"end":{"line":2745,"column":49}},{"start":{"line":2745,"column":52},"end":{"line":2745,"column":53}}]},"265":{"line":2745,"type":"cond-expr","locations":[{"start":{"line":2745,"column":69},"end":{"line":2745,"column":75}},{"start":{"line":2745,"column":78},"end":{"line":2745,"column":83}}]},"266":{"line":2760,"type":"if","locations":[{"start":{"line":2760,"column":6},"end":{"line":2760,"column":6}},{"start":{"line":2760,"column":6},"end":{"line":2760,"column":6}}]},"267":{"line":2786,"type":"cond-expr","locations":[{"start":{"line":2786,"column":25},"end":{"line":2786,"column":37}},{"start":{"line":2786,"column":40},"end":{"line":2786,"column":43}}]},"268":{"line":2788,"type":"if","locations":[{"start":{"line":2788,"column":6},"end":{"line":2788,"column":6}},{"start":{"line":2788,"column":6},"end":{"line":2788,"column":6}}]},"269":{"line":2788,"type":"binary-expr","locations":[{"start":{"line":2788,"column":10},"end":{"line":2788,"column":34}},{"start":{"line":2788,"column":38},"end":{"line":2788,"column":53}},{"start":{"line":2788,"column":57},"end":{"line":2788,"column":86}}]},"270":{"line":2793,"type":"if","locations":[{"start":{"line":2793,"column":10},"end":{"line":2793,"column":10}},{"start":{"line":2793,"column":10},"end":{"line":2793,"column":10}}]},"271":{"line":2793,"type":"binary-expr","locations":[{"start":{"line":2793,"column":15},"end":{"line":2793,"column":68}},{"start":{"line":2793,"column":73},"end":{"line":2793,"column":90}}]},"272":{"line":2793,"type":"cond-expr","locations":[{"start":{"line":2793,"column":29},"end":{"line":2793,"column":46}},{"start":{"line":2793,"column":51},"end":{"line":2793,"column":67}}]},"273":{"line":2821,"type":"cond-expr","locations":[{"start":{"line":2821,"column":25},"end":{"line":2821,"column":37}},{"start":{"line":2821,"column":40},"end":{"line":2821,"column":41}}]},"274":{"line":2832,"type":"if","locations":[{"start":{"line":2832,"column":8},"end":{"line":2832,"column":8}},{"start":{"line":2832,"column":8},"end":{"line":2832,"column":8}}]},"275":{"line":2833,"type":"binary-expr","locations":[{"start":{"line":2833,"column":23},"end":{"line":2833,"column":34}},{"start":{"line":2833,"column":38},"end":{"line":2833,"column":48}}]},"276":{"line":2834,"type":"if","locations":[{"start":{"line":2834,"column":15},"end":{"line":2834,"column":15}},{"start":{"line":2834,"column":15},"end":{"line":2834,"column":15}}]},"277":{"line":2835,"type":"binary-expr","locations":[{"start":{"line":2835,"column":19},"end":{"line":2835,"column":30}},{"start":{"line":2835,"column":34},"end":{"line":2835,"column":39}},{"start":{"line":2835,"column":44},"end":{"line":2835,"column":54}},{"start":{"line":2835,"column":58},"end":{"line":2835,"column":74}}]},"278":{"line":2836,"type":"if","locations":[{"start":{"line":2836,"column":15},"end":{"line":2836,"column":15}},{"start":{"line":2836,"column":15},"end":{"line":2836,"column":15}}]},"279":{"line":2837,"type":"binary-expr","locations":[{"start":{"line":2837,"column":19},"end":{"line":2837,"column":30}},{"start":{"line":2837,"column":35},"end":{"line":2837,"column":45}},{"start":{"line":2837,"column":49},"end":{"line":2837,"column":54}}]},"280":{"line":2838,"type":"if","locations":[{"start":{"line":2838,"column":15},"end":{"line":2838,"column":15}},{"start":{"line":2838,"column":15},"end":{"line":2838,"column":15}}]},"281":{"line":2841,"type":"cond-expr","locations":[{"start":{"line":2841,"column":33},"end":{"line":2841,"column":50}},{"start":{"line":2841,"column":55},"end":{"line":2841,"column":71}}]},"282":{"line":2843,"type":"if","locations":[{"start":{"line":2843,"column":8},"end":{"line":2843,"column":8}},{"start":{"line":2843,"column":8},"end":{"line":2843,"column":8}}]},"283":{"line":2863,"type":"if","locations":[{"start":{"line":2863,"column":6},"end":{"line":2863,"column":6}},{"start":{"line":2863,"column":6},"end":{"line":2863,"column":6}}]},"284":{"line":2866,"type":"if","locations":[{"start":{"line":2866,"column":6},"end":{"line":2866,"column":6}},{"start":{"line":2866,"column":6},"end":{"line":2866,"column":6}}]},"285":{"line":2869,"type":"switch","locations":[{"start":{"line":2870,"column":8},"end":{"line":2872,"column":10}},{"start":{"line":2873,"column":8},"end":{"line":2875,"column":10}},{"start":{"line":2876,"column":8},"end":{"line":2878,"column":10}},{"start":{"line":2879,"column":8},"end":{"line":2881,"column":10}}]},"286":{"line":2975,"type":"cond-expr","locations":[{"start":{"line":2975,"column":35},"end":{"line":2975,"column":48}},{"start":{"line":2975,"column":51},"end":{"line":2975,"column":53}}]},"287":{"line":2978,"type":"if","locations":[{"start":{"line":2978,"column":8},"end":{"line":2978,"column":8}},{"start":{"line":2978,"column":8},"end":{"line":2978,"column":8}}]},"288":{"line":3005,"type":"cond-expr","locations":[{"start":{"line":3005,"column":38},"end":{"line":3005,"column":39}},{"start":{"line":3005,"column":42},"end":{"line":3005,"column":56}}]},"289":{"line":3006,"type":"cond-expr","locations":[{"start":{"line":3006,"column":38},"end":{"line":3006,"column":57}},{"start":{"line":3006,"column":60},"end":{"line":3006,"column":69}}]},"290":{"line":3007,"type":"cond-expr","locations":[{"start":{"line":3007,"column":33},"end":{"line":3007,"column":43}},{"start":{"line":3007,"column":46},"end":{"line":3007,"column":55}}]},"291":{"line":3008,"type":"cond-expr","locations":[{"start":{"line":3008,"column":35},"end":{"line":3008,"column":54}},{"start":{"line":3008,"column":57},"end":{"line":3008,"column":66}}]},"292":{"line":3010,"type":"if","locations":[{"start":{"line":3010,"column":8},"end":{"line":3010,"column":8}},{"start":{"line":3010,"column":8},"end":{"line":3010,"column":8}}]},"293":{"line":3014,"type":"cond-expr","locations":[{"start":{"line":3014,"column":54},"end":{"line":3014,"column":61}},{"start":{"line":3014,"column":64},"end":{"line":3014,"column":73}}]},"294":{"line":3015,"type":"cond-expr","locations":[{"start":{"line":3015,"column":34},"end":{"line":3015,"column":35}},{"start":{"line":3015,"column":38},"end":{"line":3015,"column":39}}]},"295":{"line":3017,"type":"if","locations":[{"start":{"line":3017,"column":8},"end":{"line":3017,"column":8}},{"start":{"line":3017,"column":8},"end":{"line":3017,"column":8}}]},"296":{"line":3017,"type":"binary-expr","locations":[{"start":{"line":3017,"column":12},"end":{"line":3017,"column":17}},{"start":{"line":3017,"column":21},"end":{"line":3017,"column":66}}]},"297":{"line":3018,"type":"cond-expr","locations":[{"start":{"line":3018,"column":36},"end":{"line":3018,"column":45}},{"start":{"line":3018,"column":48},"end":{"line":3018,"column":58}}]},"298":{"line":3023,"type":"if","locations":[{"start":{"line":3023,"column":10},"end":{"line":3023,"column":10}},{"start":{"line":3023,"column":10},"end":{"line":3023,"column":10}}]},"299":{"line":3041,"type":"cond-expr","locations":[{"start":{"line":3041,"column":34},"end":{"line":3041,"column":55}},{"start":{"line":3041,"column":58},"end":{"line":3041,"column":59}}]},"300":{"line":3042,"type":"if","locations":[{"start":{"line":3042,"column":8},"end":{"line":3042,"column":8}},{"start":{"line":3042,"column":8},"end":{"line":3042,"column":8}}]},"301":{"line":3045,"type":"cond-expr","locations":[{"start":{"line":3045,"column":32},"end":{"line":3045,"column":38}},{"start":{"line":3045,"column":41},"end":{"line":3045,"column":43}}]},"302":{"line":3048,"type":"cond-expr","locations":[{"start":{"line":3048,"column":28},"end":{"line":3048,"column":35}},{"start":{"line":3048,"column":38},"end":{"line":3048,"column":54}}]},"303":{"line":3049,"type":"if","locations":[{"start":{"line":3049,"column":10},"end":{"line":3049,"column":10}},{"start":{"line":3049,"column":10},"end":{"line":3049,"column":10}}]},"304":{"line":3069,"type":"cond-expr","locations":[{"start":{"line":3069,"column":32},"end":{"line":3069,"column":38}},{"start":{"line":3069,"column":41},"end":{"line":3069,"column":43}}]},"305":{"line":3071,"type":"cond-expr","locations":[{"start":{"line":3071,"column":28},"end":{"line":3071,"column":35}},{"start":{"line":3071,"column":38},"end":{"line":3071,"column":54}}]},"306":{"line":3073,"type":"if","locations":[{"start":{"line":3073,"column":10},"end":{"line":3073,"column":10}},{"start":{"line":3073,"column":10},"end":{"line":3073,"column":10}}]},"307":{"line":3094,"type":"cond-expr","locations":[{"start":{"line":3094,"column":70},"end":{"line":3094,"column":74}},{"start":{"line":3094,"column":77},"end":{"line":3094,"column":81}}]},"308":{"line":3094,"type":"binary-expr","locations":[{"start":{"line":3094,"column":18},"end":{"line":3094,"column":22}},{"start":{"line":3094,"column":26},"end":{"line":3094,"column":39}},{"start":{"line":3094,"column":43},"end":{"line":3094,"column":66}}]},"309":{"line":3108,"type":"cond-expr","locations":[{"start":{"line":3108,"column":37},"end":{"line":3108,"column":57}},{"start":{"line":3108,"column":60},"end":{"line":3108,"column":64}}]},"310":{"line":3108,"type":"binary-expr","locations":[{"start":{"line":3108,"column":14},"end":{"line":3108,"column":26}},{"start":{"line":3108,"column":30},"end":{"line":3108,"column":33}}]},"311":{"line":3147,"type":"switch","locations":[{"start":{"line":3148,"column":10},"end":{"line":3148,"column":34}},{"start":{"line":3149,"column":10},"end":{"line":3149,"column":43}},{"start":{"line":3150,"column":10},"end":{"line":3150,"column":52}},{"start":{"line":3151,"column":10},"end":{"line":3151,"column":61}},{"start":{"line":3152,"column":10},"end":{"line":3152,"column":70}},{"start":{"line":3153,"column":10},"end":{"line":3153,"column":79}},{"start":{"line":3154,"column":10},"end":{"line":3154,"column":88}},{"start":{"line":3155,"column":10},"end":{"line":3155,"column":97}}]},"312":{"line":3162,"type":"cond-expr","locations":[{"start":{"line":3162,"column":34},"end":{"line":3162,"column":40}},{"start":{"line":3162,"column":43},"end":{"line":3162,"column":54}}]},"313":{"line":3175,"type":"if","locations":[{"start":{"line":3175,"column":8},"end":{"line":3175,"column":8}},{"start":{"line":3175,"column":8},"end":{"line":3175,"column":8}}]},"314":{"line":3175,"type":"binary-expr","locations":[{"start":{"line":3175,"column":12},"end":{"line":3175,"column":17}},{"start":{"line":3175,"column":21},"end":{"line":3175,"column":55}}]},"315":{"line":3196,"type":"if","locations":[{"start":{"line":3196,"column":8},"end":{"line":3196,"column":8}},{"start":{"line":3196,"column":8},"end":{"line":3196,"column":8}}]},"316":{"line":3214,"type":"if","locations":[{"start":{"line":3214,"column":8},"end":{"line":3214,"column":8}},{"start":{"line":3214,"column":8},"end":{"line":3214,"column":8}}]},"317":{"line":3214,"type":"binary-expr","locations":[{"start":{"line":3214,"column":12},"end":{"line":3214,"column":19}},{"start":{"line":3214,"column":23},"end":{"line":3214,"column":68}}]},"318":{"line":3218,"type":"if","locations":[{"start":{"line":3218,"column":8},"end":{"line":3218,"column":8}},{"start":{"line":3218,"column":8},"end":{"line":3218,"column":8}}]},"319":{"line":3219,"type":"cond-expr","locations":[{"start":{"line":3219,"column":45},"end":{"line":3219,"column":55}},{"start":{"line":3219,"column":58},"end":{"line":3219,"column":80}}]},"320":{"line":3221,"type":"if","locations":[{"start":{"line":3221,"column":10},"end":{"line":3221,"column":10}},{"start":{"line":3221,"column":10},"end":{"line":3221,"column":10}}]},"321":{"line":3221,"type":"binary-expr","locations":[{"start":{"line":3221,"column":16},"end":{"line":3221,"column":33}},{"start":{"line":3221,"column":37},"end":{"line":3221,"column":55}}]},"322":{"line":3240,"type":"if","locations":[{"start":{"line":3240,"column":8},"end":{"line":3240,"column":8}},{"start":{"line":3240,"column":8},"end":{"line":3240,"column":8}}]},"323":{"line":3242,"type":"cond-expr","locations":[{"start":{"line":3242,"column":30},"end":{"line":3242,"column":47}},{"start":{"line":3242,"column":50},"end":{"line":3242,"column":59}}]},"324":{"line":3257,"type":"if","locations":[{"start":{"line":3257,"column":8},"end":{"line":3257,"column":8}},{"start":{"line":3257,"column":8},"end":{"line":3257,"column":8}}]},"325":{"line":3257,"type":"binary-expr","locations":[{"start":{"line":3257,"column":14},"end":{"line":3257,"column":19}},{"start":{"line":3257,"column":23},"end":{"line":3257,"column":35}}]},"326":{"line":3290,"type":"cond-expr","locations":[{"start":{"line":3290,"column":32},"end":{"line":3290,"column":38}},{"start":{"line":3290,"column":41},"end":{"line":3290,"column":43}}]},"327":{"line":3294,"type":"cond-expr","locations":[{"start":{"line":3294,"column":28},"end":{"line":3294,"column":35}},{"start":{"line":3294,"column":38},"end":{"line":3294,"column":54}}]},"328":{"line":3296,"type":"if","locations":[{"start":{"line":3296,"column":10},"end":{"line":3296,"column":10}},{"start":{"line":3296,"column":10},"end":{"line":3296,"column":10}}]},"329":{"line":3299,"type":"if","locations":[{"start":{"line":3299,"column":10},"end":{"line":3299,"column":10}},{"start":{"line":3299,"column":10},"end":{"line":3299,"column":10}}]},"330":{"line":3299,"type":"binary-expr","locations":[{"start":{"line":3299,"column":14},"end":{"line":3299,"column":22}},{"start":{"line":3299,"column":26},"end":{"line":3299,"column":54}},{"start":{"line":3299,"column":58},"end":{"line":3299,"column":88}}]},"331":{"line":3303,"type":"cond-expr","locations":[{"start":{"line":3303,"column":26},"end":{"line":3303,"column":28}},{"start":{"line":3303,"column":31},"end":{"line":3303,"column":37}}]},"332":{"line":3308,"type":"cond-expr","locations":[{"start":{"line":3308,"column":45},"end":{"line":3308,"column":58}},{"start":{"line":3308,"column":61},"end":{"line":3308,"column":70}}]},"333":{"line":3310,"type":"if","locations":[{"start":{"line":3310,"column":10},"end":{"line":3310,"column":10}},{"start":{"line":3310,"column":10},"end":{"line":3310,"column":10}}]},"334":{"line":3310,"type":"binary-expr","locations":[{"start":{"line":3310,"column":14},"end":{"line":3310,"column":18}},{"start":{"line":3310,"column":22},"end":{"line":3310,"column":41}},{"start":{"line":3310,"column":45},"end":{"line":3310,"column":107}},{"start":{"line":3310,"column":111},"end":{"line":3310,"column":126}},{"start":{"line":3310,"column":130},"end":{"line":3310,"column":142}}]},"335":{"line":3313,"type":"cond-expr","locations":[{"start":{"line":3313,"column":63},"end":{"line":3313,"column":82}},{"start":{"line":3313,"column":85},"end":{"line":3313,"column":103}}]},"336":{"line":3313,"type":"binary-expr","locations":[{"start":{"line":3313,"column":23},"end":{"line":3313,"column":39}},{"start":{"line":3313,"column":43},"end":{"line":3313,"column":59}}]},"337":{"line":3320,"type":"if","locations":[{"start":{"line":3320,"column":10},"end":{"line":3320,"column":10}},{"start":{"line":3320,"column":10},"end":{"line":3320,"column":10}}]},"338":{"line":3320,"type":"binary-expr","locations":[{"start":{"line":3320,"column":14},"end":{"line":3320,"column":21}},{"start":{"line":3320,"column":25},"end":{"line":3320,"column":41}},{"start":{"line":3320,"column":45},"end":{"line":3320,"column":59}},{"start":{"line":3320,"column":63},"end":{"line":3320,"column":95}}]},"339":{"line":3324,"type":"cond-expr","locations":[{"start":{"line":3324,"column":32},"end":{"line":3324,"column":62}},{"start":{"line":3324,"column":65},"end":{"line":3324,"column":70}}]},"340":{"line":3344,"type":"cond-expr","locations":[{"start":{"line":3345,"column":12},"end":{"line":3345,"column":43}},{"start":{"line":3346,"column":12},"end":{"line":3346,"column":68}}]},"341":{"line":3344,"type":"binary-expr","locations":[{"start":{"line":3344,"column":16},"end":{"line":3344,"column":45}},{"start":{"line":3344,"column":49},"end":{"line":3344,"column":70}},{"start":{"line":3344,"column":74},"end":{"line":3344,"column":93}}]},"342":{"line":3359,"type":"if","locations":[{"start":{"line":3359,"column":8},"end":{"line":3359,"column":8}},{"start":{"line":3359,"column":8},"end":{"line":3359,"column":8}}]},"343":{"line":3359,"type":"binary-expr","locations":[{"start":{"line":3359,"column":12},"end":{"line":3359,"column":41}},{"start":{"line":3359,"column":45},"end":{"line":3359,"column":66}}]},"344":{"line":3375,"type":"if","locations":[{"start":{"line":3375,"column":8},"end":{"line":3375,"column":8}},{"start":{"line":3375,"column":8},"end":{"line":3375,"column":8}}]},"345":{"line":3375,"type":"binary-expr","locations":[{"start":{"line":3375,"column":12},"end":{"line":3375,"column":41}},{"start":{"line":3375,"column":45},"end":{"line":3375,"column":66}}]},"346":{"line":3396,"type":"cond-expr","locations":[{"start":{"line":3396,"column":28},"end":{"line":3396,"column":34}},{"start":{"line":3396,"column":37},"end":{"line":3396,"column":40}}]},"347":{"line":3397,"type":"cond-expr","locations":[{"start":{"line":3397,"column":30},"end":{"line":3397,"column":35}},{"start":{"line":3397,"column":38},"end":{"line":3397,"column":44}}]},"348":{"line":3414,"type":"cond-expr","locations":[{"start":{"line":3414,"column":28},"end":{"line":3414,"column":34}},{"start":{"line":3414,"column":37},"end":{"line":3414,"column":39}}]},"349":{"line":3414,"type":"cond-expr","locations":[{"start":{"line":3414,"column":95},"end":{"line":3414,"column":97}},{"start":{"line":3414,"column":100},"end":{"line":3414,"column":106}}]},"350":{"line":3444,"type":"cond-expr","locations":[{"start":{"line":3445,"column":12},"end":{"line":3445,"column":71}},{"start":{"line":3446,"column":12},"end":{"line":3446,"column":107}}]},"351":{"line":3444,"type":"binary-expr","locations":[{"start":{"line":3444,"column":16},"end":{"line":3444,"column":45}},{"start":{"line":3444,"column":49},"end":{"line":3444,"column":70}},{"start":{"line":3444,"column":74},"end":{"line":3444,"column":93}}]},"352":{"line":3474,"type":"cond-expr","locations":[{"start":{"line":3474,"column":29},"end":{"line":3474,"column":38}},{"start":{"line":3474,"column":41},"end":{"line":3474,"column":64}}]},"353":{"line":3486,"type":"if","locations":[{"start":{"line":3486,"column":8},"end":{"line":3486,"column":8}},{"start":{"line":3486,"column":8},"end":{"line":3486,"column":8}}]},"354":{"line":3489,"type":"if","locations":[{"start":{"line":3489,"column":8},"end":{"line":3489,"column":8}},{"start":{"line":3489,"column":8},"end":{"line":3489,"column":8}}]},"355":{"line":3492,"type":"if","locations":[{"start":{"line":3492,"column":8},"end":{"line":3492,"column":8}},{"start":{"line":3492,"column":8},"end":{"line":3492,"column":8}}]},"356":{"line":3492,"type":"binary-expr","locations":[{"start":{"line":3492,"column":12},"end":{"line":3492,"column":19}},{"start":{"line":3492,"column":23},"end":{"line":3492,"column":35}}]},"357":{"line":3497,"type":"if","locations":[{"start":{"line":3497,"column":10},"end":{"line":3497,"column":10}},{"start":{"line":3497,"column":10},"end":{"line":3497,"column":10}}]},"358":{"line":3498,"type":"cond-expr","locations":[{"start":{"line":3498,"column":37},"end":{"line":3498,"column":54}},{"start":{"line":3498,"column":57},"end":{"line":3498,"column":66}}]},"359":{"line":3500,"type":"cond-expr","locations":[{"start":{"line":3500,"column":40},"end":{"line":3500,"column":51}},{"start":{"line":3500,"column":54},"end":{"line":3500,"column":63}}]},"360":{"line":3501,"type":"cond-expr","locations":[{"start":{"line":3501,"column":44},"end":{"line":3501,"column":53}},{"start":{"line":3501,"column":56},"end":{"line":3501,"column":67}}]},"361":{"line":3502,"type":"cond-expr","locations":[{"start":{"line":3502,"column":40},"end":{"line":3502,"column":44}},{"start":{"line":3502,"column":47},"end":{"line":3502,"column":56}}]},"362":{"line":3503,"type":"cond-expr","locations":[{"start":{"line":3503,"column":45},"end":{"line":3503,"column":54}},{"start":{"line":3503,"column":57},"end":{"line":3503,"column":61}}]},"363":{"line":3505,"type":"cond-expr","locations":[{"start":{"line":3505,"column":34},"end":{"line":3505,"column":46}},{"start":{"line":3505,"column":49},"end":{"line":3505,"column":67}}]},"364":{"line":3506,"type":"cond-expr","locations":[{"start":{"line":3506,"column":35},"end":{"line":3506,"column":53}},{"start":{"line":3506,"column":56},"end":{"line":3506,"column":68}}]},"365":{"line":3508,"type":"if","locations":[{"start":{"line":3508,"column":12},"end":{"line":3508,"column":12}},{"start":{"line":3508,"column":12},"end":{"line":3508,"column":12}}]},"366":{"line":3514,"type":"if","locations":[{"start":{"line":3514,"column":12},"end":{"line":3514,"column":12}},{"start":{"line":3514,"column":12},"end":{"line":3514,"column":12}}]},"367":{"line":3521,"type":"cond-expr","locations":[{"start":{"line":3521,"column":35},"end":{"line":3521,"column":42}},{"start":{"line":3521,"column":45},"end":{"line":3521,"column":49}}]},"368":{"line":3522,"type":"cond-expr","locations":[{"start":{"line":3522,"column":29},"end":{"line":3522,"column":46}},{"start":{"line":3522,"column":49},"end":{"line":3522,"column":53}}]},"369":{"line":3524,"type":"if","locations":[{"start":{"line":3524,"column":8},"end":{"line":3524,"column":8}},{"start":{"line":3524,"column":8},"end":{"line":3524,"column":8}}]},"370":{"line":3527,"type":"if","locations":[{"start":{"line":3527,"column":8},"end":{"line":3527,"column":8}},{"start":{"line":3527,"column":8},"end":{"line":3527,"column":8}}]},"371":{"line":3527,"type":"binary-expr","locations":[{"start":{"line":3527,"column":12},"end":{"line":3527,"column":17}},{"start":{"line":3527,"column":21},"end":{"line":3527,"column":38}}]},"372":{"line":3530,"type":"if","locations":[{"start":{"line":3530,"column":8},"end":{"line":3530,"column":8}},{"start":{"line":3530,"column":8},"end":{"line":3530,"column":8}}]},"373":{"line":3530,"type":"binary-expr","locations":[{"start":{"line":3530,"column":12},"end":{"line":3530,"column":16}},{"start":{"line":3530,"column":20},"end":{"line":3530,"column":33}},{"start":{"line":3530,"column":37},"end":{"line":3530,"column":60}}]},"374":{"line":3531,"type":"binary-expr","locations":[{"start":{"line":3531,"column":15},"end":{"line":3531,"column":19}},{"start":{"line":3531,"column":23},"end":{"line":3531,"column":46}}]},"375":{"line":3552,"type":"if","locations":[{"start":{"line":3552,"column":6},"end":{"line":3552,"column":6}},{"start":{"line":3552,"column":6},"end":{"line":3552,"column":6}}]},"376":{"line":3552,"type":"binary-expr","locations":[{"start":{"line":3552,"column":10},"end":{"line":3552,"column":29}},{"start":{"line":3552,"column":33},"end":{"line":3552,"column":56}}]},"377":{"line":3556,"type":"cond-expr","locations":[{"start":{"line":3556,"column":30},"end":{"line":3556,"column":33}},{"start":{"line":3556,"column":37},"end":{"line":3556,"column":47}}]},"378":{"line":3591,"type":"cond-expr","locations":[{"start":{"line":3591,"column":70},"end":{"line":3591,"column":74}},{"start":{"line":3591,"column":77},"end":{"line":3591,"column":81}}]},"379":{"line":3591,"type":"binary-expr","locations":[{"start":{"line":3591,"column":18},"end":{"line":3591,"column":22}},{"start":{"line":3591,"column":26},"end":{"line":3591,"column":39}},{"start":{"line":3591,"column":43},"end":{"line":3591,"column":66}}]},"380":{"line":3592,"type":"cond-expr","locations":[{"start":{"line":3592,"column":33},"end":{"line":3592,"column":40}},{"start":{"line":3592,"column":43},"end":{"line":3592,"column":47}}]},"381":{"line":3607,"type":"cond-expr","locations":[{"start":{"line":3607,"column":46},"end":{"line":3607,"column":47}},{"start":{"line":3607,"column":51},"end":{"line":3607,"column":66}}]},"382":{"line":3607,"type":"binary-expr","locations":[{"start":{"line":3607,"column":51},"end":{"line":3607,"column":61}},{"start":{"line":3607,"column":65},"end":{"line":3607,"column":66}}]},"383":{"line":3608,"type":"if","locations":[{"start":{"line":3608,"column":8},"end":{"line":3608,"column":8}},{"start":{"line":3608,"column":8},"end":{"line":3608,"column":8}}]},"384":{"line":3626,"type":"cond-expr","locations":[{"start":{"line":3627,"column":12},"end":{"line":3627,"column":49}},{"start":{"line":3628,"column":12},"end":{"line":3628,"column":83}}]},"385":{"line":3626,"type":"binary-expr","locations":[{"start":{"line":3626,"column":16},"end":{"line":3626,"column":32}},{"start":{"line":3626,"column":36},"end":{"line":3626,"column":61}}]},"386":{"line":3659,"type":"if","locations":[{"start":{"line":3659,"column":6},"end":{"line":3659,"column":6}},{"start":{"line":3659,"column":6},"end":{"line":3659,"column":6}}]},"387":{"line":3659,"type":"binary-expr","locations":[{"start":{"line":3659,"column":10},"end":{"line":3659,"column":20}},{"start":{"line":3659,"column":24},"end":{"line":3659,"column":49}}]},"388":{"line":3662,"type":"cond-expr","locations":[{"start":{"line":3662,"column":30},"end":{"line":3662,"column":45}},{"start":{"line":3662,"column":48},"end":{"line":3662,"column":49}}]},"389":{"line":3663,"type":"if","locations":[{"start":{"line":3663,"column":6},"end":{"line":3663,"column":6}},{"start":{"line":3663,"column":6},"end":{"line":3663,"column":6}}]},"390":{"line":3667,"type":"cond-expr","locations":[{"start":{"line":3667,"column":27},"end":{"line":3667,"column":41}},{"start":{"line":3667,"column":44},"end":{"line":3667,"column":45}}]},"391":{"line":3668,"type":"if","locations":[{"start":{"line":3668,"column":6},"end":{"line":3668,"column":6}},{"start":{"line":3668,"column":6},"end":{"line":3668,"column":6}}]},"392":{"line":3674,"type":"cond-expr","locations":[{"start":{"line":3674,"column":29},"end":{"line":3674,"column":38}},{"start":{"line":3674,"column":41},"end":{"line":3674,"column":54}}]},"393":{"line":3677,"type":"if","locations":[{"start":{"line":3677,"column":6},"end":{"line":3677,"column":6}},{"start":{"line":3677,"column":6},"end":{"line":3677,"column":6}}]},"394":{"line":3682,"type":"cond-expr","locations":[{"start":{"line":3683,"column":11},"end":{"line":3683,"column":38}},{"start":{"line":3684,"column":11},"end":{"line":3684,"column":44}}]},"395":{"line":3683,"type":"cond-expr","locations":[{"start":{"line":3683,"column":23},"end":{"line":3683,"column":24}},{"start":{"line":3683,"column":27},"end":{"line":3683,"column":38}}]},"396":{"line":3684,"type":"binary-expr","locations":[{"start":{"line":3684,"column":11},"end":{"line":3684,"column":39}},{"start":{"line":3684,"column":43},"end":{"line":3684,"column":44}}]},"397":{"line":3686,"type":"if","locations":[{"start":{"line":3686,"column":6},"end":{"line":3686,"column":6}},{"start":{"line":3686,"column":6},"end":{"line":3686,"column":6}}]},"398":{"line":3688,"type":"if","locations":[{"start":{"line":3688,"column":13},"end":{"line":3688,"column":13}},{"start":{"line":3688,"column":13},"end":{"line":3688,"column":13}}]},"399":{"line":3688,"type":"binary-expr","locations":[{"start":{"line":3688,"column":18},"end":{"line":3688,"column":41}},{"start":{"line":3688,"column":45},"end":{"line":3688,"column":82}},{"start":{"line":3688,"column":87},"end":{"line":3688,"column":105}}]},"400":{"line":3693,"type":"cond-expr","locations":[{"start":{"line":3693,"column":26},"end":{"line":3693,"column":37}},{"start":{"line":3693,"column":40},"end":{"line":3693,"column":47}}]},"401":{"line":3716,"type":"if","locations":[{"start":{"line":3716,"column":6},"end":{"line":3716,"column":6}},{"start":{"line":3716,"column":6},"end":{"line":3716,"column":6}}]},"402":{"line":3716,"type":"binary-expr","locations":[{"start":{"line":3716,"column":10},"end":{"line":3716,"column":32}},{"start":{"line":3716,"column":36},"end":{"line":3716,"column":71}}]},"403":{"line":3716,"type":"binary-expr","locations":[{"start":{"line":3716,"column":38},"end":{"line":3716,"column":45}},{"start":{"line":3716,"column":49},"end":{"line":3716,"column":70}}]},"404":{"line":3723,"type":"cond-expr","locations":[{"start":{"line":3723,"column":34},"end":{"line":3723,"column":113}},{"start":{"line":3723,"column":116},"end":{"line":3723,"column":125}}]},"405":{"line":3723,"type":"cond-expr","locations":[{"start":{"line":3723,"column":55},"end":{"line":3723,"column":63}},{"start":{"line":3723,"column":66},"end":{"line":3723,"column":74}}]},"406":{"line":3723,"type":"cond-expr","locations":[{"start":{"line":3723,"column":86},"end":{"line":3723,"column":94}},{"start":{"line":3723,"column":97},"end":{"line":3723,"column":105}}]},"407":{"line":3725,"type":"if","locations":[{"start":{"line":3725,"column":8},"end":{"line":3725,"column":8}},{"start":{"line":3725,"column":8},"end":{"line":3725,"column":8}}]},"408":{"line":3726,"type":"if","locations":[{"start":{"line":3726,"column":10},"end":{"line":3726,"column":10}},{"start":{"line":3726,"column":10},"end":{"line":3726,"column":10}}]},"409":{"line":3732,"type":"if","locations":[{"start":{"line":3732,"column":8},"end":{"line":3732,"column":8}},{"start":{"line":3732,"column":8},"end":{"line":3732,"column":8}}]},"410":{"line":3733,"type":"if","locations":[{"start":{"line":3733,"column":10},"end":{"line":3733,"column":10}},{"start":{"line":3733,"column":10},"end":{"line":3733,"column":10}}]},"411":{"line":3734,"type":"binary-expr","locations":[{"start":{"line":3734,"column":23},"end":{"line":3734,"column":44}},{"start":{"line":3734,"column":48},"end":{"line":3734,"column":114}}]},"412":{"line":3738,"type":"if","locations":[{"start":{"line":3738,"column":15},"end":{"line":3738,"column":15}},{"start":{"line":3738,"column":15},"end":{"line":3738,"column":15}}]},"413":{"line":3738,"type":"binary-expr","locations":[{"start":{"line":3738,"column":21},"end":{"line":3738,"column":42}},{"start":{"line":3738,"column":46},"end":{"line":3738,"column":112}}]},"414":{"line":3759,"type":"switch","locations":[{"start":{"line":3760,"column":8},"end":{"line":3760,"column":21}},{"start":{"line":3761,"column":8},"end":{"line":3764,"column":35}},{"start":{"line":3766,"column":8},"end":{"line":3767,"column":78}},{"start":{"line":3769,"column":8},"end":{"line":3773,"column":31}},{"start":{"line":3775,"column":8},"end":{"line":3775,"column":23}},{"start":{"line":3776,"column":8},"end":{"line":3779,"column":40}}]},"415":{"line":3767,"type":"binary-expr","locations":[{"start":{"line":3767,"column":17},"end":{"line":3767,"column":42}},{"start":{"line":3767,"column":46},"end":{"line":3767,"column":77}}]},"416":{"line":3771,"type":"cond-expr","locations":[{"start":{"line":3772,"column":14},"end":{"line":3772,"column":29}},{"start":{"line":3773,"column":14},"end":{"line":3773,"column":30}}]},"417":{"line":3804,"type":"if","locations":[{"start":{"line":3804,"column":6},"end":{"line":3804,"column":6}},{"start":{"line":3804,"column":6},"end":{"line":3804,"column":6}}]},"418":{"line":3804,"type":"binary-expr","locations":[{"start":{"line":3804,"column":10},"end":{"line":3804,"column":32}},{"start":{"line":3804,"column":36},"end":{"line":3804,"column":44}}]},"419":{"line":3810,"type":"if","locations":[{"start":{"line":3810,"column":8},"end":{"line":3810,"column":8}},{"start":{"line":3810,"column":8},"end":{"line":3810,"column":8}}]},"420":{"line":3810,"type":"cond-expr","locations":[{"start":{"line":3810,"column":24},"end":{"line":3810,"column":36}},{"start":{"line":3810,"column":39},"end":{"line":3810,"column":70}}]},"421":{"line":3819,"type":"cond-expr","locations":[{"start":{"line":3819,"column":34},"end":{"line":3819,"column":110}},{"start":{"line":3819,"column":113},"end":{"line":3819,"column":122}}]},"422":{"line":3819,"type":"cond-expr","locations":[{"start":{"line":3819,"column":55},"end":{"line":3819,"column":63}},{"start":{"line":3819,"column":66},"end":{"line":3819,"column":74}}]},"423":{"line":3819,"type":"cond-expr","locations":[{"start":{"line":3819,"column":85},"end":{"line":3819,"column":93}},{"start":{"line":3819,"column":96},"end":{"line":3819,"column":104}}]},"424":{"line":3822,"type":"if","locations":[{"start":{"line":3822,"column":8},"end":{"line":3822,"column":8}},{"start":{"line":3822,"column":8},"end":{"line":3822,"column":8}}]},"425":{"line":3822,"type":"cond-expr","locations":[{"start":{"line":3822,"column":37},"end":{"line":3822,"column":103}},{"start":{"line":3822,"column":106},"end":{"line":3822,"column":112}}]},"426":{"line":3825,"type":"binary-expr","locations":[{"start":{"line":3825,"column":8},"end":{"line":3825,"column":16}},{"start":{"line":3825,"column":21},"end":{"line":3825,"column":52}}]},"427":{"line":3827,"type":"if","locations":[{"start":{"line":3827,"column":6},"end":{"line":3827,"column":6}},{"start":{"line":3827,"column":6},"end":{"line":3827,"column":6}}]},"428":{"line":3832,"type":"if","locations":[{"start":{"line":3832,"column":8},"end":{"line":3832,"column":8}},{"start":{"line":3832,"column":8},"end":{"line":3832,"column":8}}]},"429":{"line":3832,"type":"binary-expr","locations":[{"start":{"line":3832,"column":12},"end":{"line":3832,"column":30}},{"start":{"line":3833,"column":13},"end":{"line":3833,"column":36}},{"start":{"line":3833,"column":40},"end":{"line":3833,"column":62}},{"start":{"line":3834,"column":12},"end":{"line":3835,"column":73}}]},"430":{"line":3834,"type":"binary-expr","locations":[{"start":{"line":3834,"column":14},"end":{"line":3834,"column":42}},{"start":{"line":3834,"column":46},"end":{"line":3834,"column":72}},{"start":{"line":3835,"column":14},"end":{"line":3835,"column":42}},{"start":{"line":3835,"column":46},"end":{"line":3835,"column":72}}]},"431":{"line":3852,"type":"binary-expr","locations":[{"start":{"line":3852,"column":19},"end":{"line":3852,"column":34}},{"start":{"line":3852,"column":38},"end":{"line":3852,"column":46}}]},"432":{"line":3853,"type":"cond-expr","locations":[{"start":{"line":3853,"column":37},"end":{"line":3853,"column":49}},{"start":{"line":3853,"column":52},"end":{"line":3853,"column":58}}]},"433":{"line":3854,"type":"cond-expr","locations":[{"start":{"line":3854,"column":24},"end":{"line":3854,"column":55}},{"start":{"line":3854,"column":58},"end":{"line":3854,"column":64}}]},"434":{"line":3864,"type":"cond-expr","locations":[{"start":{"line":3864,"column":29},"end":{"line":3864,"column":33}},{"start":{"line":3864,"column":36},"end":{"line":3866,"column":5}}]},"435":{"line":3878,"type":"cond-expr","locations":[{"start":{"line":3878,"column":27},"end":{"line":3878,"column":39}},{"start":{"line":3878,"column":42},"end":{"line":3878,"column":43}}]},"436":{"line":3883,"type":"if","locations":[{"start":{"line":3883,"column":8},"end":{"line":3883,"column":8}},{"start":{"line":3883,"column":8},"end":{"line":3883,"column":8}}]},"437":{"line":3883,"type":"binary-expr","locations":[{"start":{"line":3883,"column":12},"end":{"line":3883,"column":29}},{"start":{"line":3883,"column":33},"end":{"line":3883,"column":50}}]},"438":{"line":3900,"type":"binary-expr","locations":[{"start":{"line":3900,"column":19},"end":{"line":3900,"column":33}},{"start":{"line":3900,"column":37},"end":{"line":3900,"column":44}}]},"439":{"line":3901,"type":"cond-expr","locations":[{"start":{"line":3901,"column":36},"end":{"line":3901,"column":47}},{"start":{"line":3901,"column":50},"end":{"line":3901,"column":56}}]},"440":{"line":3902,"type":"cond-expr","locations":[{"start":{"line":3902,"column":26},"end":{"line":3902,"column":63}},{"start":{"line":3902,"column":66},"end":{"line":3902,"column":72}}]},"441":{"line":3943,"type":"cond-expr","locations":[{"start":{"line":3943,"column":35},"end":{"line":3943,"column":44}},{"start":{"line":3943,"column":47},"end":{"line":3943,"column":58}}]},"442":{"line":3944,"type":"cond-expr","locations":[{"start":{"line":3944,"column":31},"end":{"line":3944,"column":36}},{"start":{"line":3944,"column":39},"end":{"line":3944,"column":48}}]},"443":{"line":3965,"type":"switch","locations":[{"start":{"line":3966,"column":10},"end":{"line":3966,"column":49}},{"start":{"line":3967,"column":10},"end":{"line":3967,"column":47}},{"start":{"line":3968,"column":10},"end":{"line":3968,"column":70}},{"start":{"line":3969,"column":10},"end":{"line":3969,"column":72}}]},"444":{"line":3987,"type":"if","locations":[{"start":{"line":3987,"column":6},"end":{"line":3987,"column":6}},{"start":{"line":3987,"column":6},"end":{"line":3987,"column":6}}]},"445":{"line":3987,"type":"binary-expr","locations":[{"start":{"line":3987,"column":10},"end":{"line":3987,"column":16}},{"start":{"line":3987,"column":20},"end":{"line":3987,"column":47}},{"start":{"line":3987,"column":51},"end":{"line":3987,"column":86}}]},"446":{"line":4003,"type":"if","locations":[{"start":{"line":4003,"column":6},"end":{"line":4003,"column":6}},{"start":{"line":4003,"column":6},"end":{"line":4003,"column":6}}]},"447":{"line":4003,"type":"binary-expr","locations":[{"start":{"line":4003,"column":12},"end":{"line":4003,"column":37}},{"start":{"line":4003,"column":41},"end":{"line":4003,"column":61}}]},"448":{"line":4023,"type":"switch","locations":[{"start":{"line":4024,"column":8},"end":{"line":4025,"column":37}},{"start":{"line":4027,"column":8},"end":{"line":4027,"column":21}},{"start":{"line":4028,"column":8},"end":{"line":4029,"column":35}},{"start":{"line":4031,"column":8},"end":{"line":4031,"column":24}},{"start":{"line":4031,"column":25},"end":{"line":4031,"column":41}},{"start":{"line":4032,"column":8},"end":{"line":4032,"column":21}},{"start":{"line":4032,"column":22},"end":{"line":4032,"column":36}},{"start":{"line":4032,"column":37},"end":{"line":4032,"column":51}},{"start":{"line":4033,"column":8},"end":{"line":4033,"column":22}},{"start":{"line":4033,"column":23},"end":{"line":4033,"column":44}},{"start":{"line":4033,"column":45},"end":{"line":4033,"column":60}},{"start":{"line":4033,"column":61},"end":{"line":4035,"column":99}},{"start":{"line":4037,"column":8},"end":{"line":4037,"column":23}},{"start":{"line":4038,"column":8},"end":{"line":4039,"column":34}},{"start":{"line":4041,"column":8},"end":{"line":4043,"column":46}}]},"449":{"line":4035,"type":"cond-expr","locations":[{"start":{"line":4035,"column":35},"end":{"line":4035,"column":54}},{"start":{"line":4035,"column":57},"end":{"line":4035,"column":63}}]},"450":{"line":4058,"type":"if","locations":[{"start":{"line":4058,"column":6},"end":{"line":4058,"column":6}},{"start":{"line":4058,"column":6},"end":{"line":4058,"column":6}}]},"451":{"line":4058,"type":"binary-expr","locations":[{"start":{"line":4058,"column":10},"end":{"line":4058,"column":24}},{"start":{"line":4058,"column":28},"end":{"line":4058,"column":48}}]},"452":{"line":4060,"type":"cond-expr","locations":[{"start":{"line":4060,"column":36},"end":{"line":4060,"column":42}},{"start":{"line":4060,"column":45},"end":{"line":4060,"column":84}}]},"453":{"line":4063,"type":"cond-expr","locations":[{"start":{"line":4063,"column":34},"end":{"line":4063,"column":40}},{"start":{"line":4063,"column":43},"end":{"line":4063,"column":55}}]},"454":{"line":4064,"type":"cond-expr","locations":[{"start":{"line":4064,"column":28},"end":{"line":4064,"column":37}},{"start":{"line":4064,"column":40},"end":{"line":4064,"column":64}}]},"455":{"line":4075,"type":"binary-expr","locations":[{"start":{"line":4075,"column":13},"end":{"line":4075,"column":26}},{"start":{"line":4075,"column":30},"end":{"line":4075,"column":56}}]},"456":{"line":4087,"type":"cond-expr","locations":[{"start":{"line":4087,"column":67},"end":{"line":4087,"column":73}},{"start":{"line":4087,"column":76},"end":{"line":4087,"column":78}}]},"457":{"line":4087,"type":"binary-expr","locations":[{"start":{"line":4087,"column":15},"end":{"line":4087,"column":39}},{"start":{"line":4087,"column":43},"end":{"line":4087,"column":63}}]},"458":{"line":4088,"type":"cond-expr","locations":[{"start":{"line":4088,"column":32},"end":{"line":4088,"column":48}},{"start":{"line":4088,"column":51},"end":{"line":4088,"column":57}}]},"459":{"line":4089,"type":"binary-expr","locations":[{"start":{"line":4089,"column":13},"end":{"line":4089,"column":23}},{"start":{"line":4089,"column":27},"end":{"line":4089,"column":41}},{"start":{"line":4089,"column":45},"end":{"line":4089,"column":59}}]},"460":{"line":4102,"type":"if","locations":[{"start":{"line":4102,"column":6},"end":{"line":4102,"column":6}},{"start":{"line":4102,"column":6},"end":{"line":4102,"column":6}}]},"461":{"line":4106,"type":"if","locations":[{"start":{"line":4106,"column":6},"end":{"line":4106,"column":6}},{"start":{"line":4106,"column":6},"end":{"line":4106,"column":6}}]},"462":{"line":4106,"type":"cond-expr","locations":[{"start":{"line":4107,"column":13},"end":{"line":4107,"column":65}},{"start":{"line":4108,"column":13},"end":{"line":4108,"column":48}}]},"463":{"line":4107,"type":"binary-expr","locations":[{"start":{"line":4107,"column":13},"end":{"line":4107,"column":32}},{"start":{"line":4107,"column":36},"end":{"line":4107,"column":65}}]},"464":{"line":4108,"type":"binary-expr","locations":[{"start":{"line":4108,"column":13},"end":{"line":4108,"column":29}},{"start":{"line":4108,"column":33},"end":{"line":4108,"column":48}}]},"465":{"line":4110,"type":"cond-expr","locations":[{"start":{"line":4110,"column":34},"end":{"line":4110,"column":49}},{"start":{"line":4110,"column":54},"end":{"line":4110,"column":69}}]},"466":{"line":4125,"type":"if","locations":[{"start":{"line":4125,"column":6},"end":{"line":4125,"column":6}},{"start":{"line":4125,"column":6},"end":{"line":4125,"column":6}}]},"467":{"line":4125,"type":"binary-expr","locations":[{"start":{"line":4125,"column":11},"end":{"line":4125,"column":27}},{"start":{"line":4125,"column":31},"end":{"line":4125,"column":56}},{"start":{"line":4125,"column":61},"end":{"line":4125,"column":77}}]},"468":{"line":4128,"type":"if","locations":[{"start":{"line":4128,"column":6},"end":{"line":4128,"column":6}},{"start":{"line":4128,"column":6},"end":{"line":4128,"column":6}}]},"469":{"line":4132,"type":"binary-expr","locations":[{"start":{"line":4132,"column":13},"end":{"line":4132,"column":19}},{"start":{"line":4132,"column":24},"end":{"line":4132,"column":38}},{"start":{"line":4132,"column":42},"end":{"line":4132,"column":67}}]},"470":{"line":4144,"type":"if","locations":[{"start":{"line":4144,"column":6},"end":{"line":4144,"column":6}},{"start":{"line":4144,"column":6},"end":{"line":4144,"column":6}}]},"471":{"line":4148,"type":"if","locations":[{"start":{"line":4148,"column":6},"end":{"line":4148,"column":6}},{"start":{"line":4148,"column":6},"end":{"line":4148,"column":6}}]},"472":{"line":4152,"type":"binary-expr","locations":[{"start":{"line":4152,"column":13},"end":{"line":4152,"column":19}},{"start":{"line":4152,"column":23},"end":{"line":4152,"column":39}}]},"473":{"line":4165,"type":"binary-expr","locations":[{"start":{"line":4165,"column":13},"end":{"line":4165,"column":37}},{"start":{"line":4165,"column":41},"end":{"line":4165,"column":51}},{"start":{"line":4165,"column":55},"end":{"line":4165,"column":69}},{"start":{"line":4165,"column":73},"end":{"line":4165,"column":98}}]},"474":{"line":4177,"type":"binary-expr","locations":[{"start":{"line":4177,"column":13},"end":{"line":4177,"column":28}},{"start":{"line":4177,"column":32},"end":{"line":4177,"column":48}}]},"475":{"line":4202,"type":"binary-expr","locations":[{"start":{"line":4202,"column":9},"end":{"line":4202,"column":31}},{"start":{"line":4202,"column":35},"end":{"line":4202,"column":56}},{"start":{"line":4203,"column":9},"end":{"line":4203,"column":31}},{"start":{"line":4203,"column":35},"end":{"line":4203,"column":56}},{"start":{"line":4203,"column":60},"end":{"line":4203,"column":87}},{"start":{"line":4204,"column":9},"end":{"line":4204,"column":46}},{"start":{"line":4204,"column":50},"end":{"line":4204,"column":71}}]},"476":{"line":4207,"type":"if","locations":[{"start":{"line":4207,"column":6},"end":{"line":4207,"column":6}},{"start":{"line":4207,"column":6},"end":{"line":4207,"column":6}}]},"477":{"line":4207,"type":"binary-expr","locations":[{"start":{"line":4207,"column":12},"end":{"line":4207,"column":20}},{"start":{"line":4207,"column":24},"end":{"line":4207,"column":31}}]},"478":{"line":4211,"type":"if","locations":[{"start":{"line":4211,"column":6},"end":{"line":4211,"column":6}},{"start":{"line":4211,"column":6},"end":{"line":4211,"column":6}}]},"479":{"line":4214,"type":"cond-expr","locations":[{"start":{"line":4214,"column":46},"end":{"line":4214,"column":47}},{"start":{"line":4214,"column":50},"end":{"line":4214,"column":66}}]},"480":{"line":4218,"type":"if","locations":[{"start":{"line":4218,"column":6},"end":{"line":4218,"column":6}},{"start":{"line":4218,"column":6},"end":{"line":4218,"column":6}}]},"481":{"line":4220,"type":"cond-expr","locations":[{"start":{"line":4220,"column":29},"end":{"line":4220,"column":68}},{"start":{"line":4220,"column":71},"end":{"line":4220,"column":87}}]},"482":{"line":4221,"type":"cond-expr","locations":[{"start":{"line":4221,"column":29},"end":{"line":4221,"column":65}},{"start":{"line":4221,"column":68},"end":{"line":4221,"column":88}}]},"483":{"line":4225,"type":"if","locations":[{"start":{"line":4225,"column":6},"end":{"line":4225,"column":6}},{"start":{"line":4225,"column":6},"end":{"line":4225,"column":6}}]},"484":{"line":4227,"type":"cond-expr","locations":[{"start":{"line":4227,"column":29},"end":{"line":4227,"column":73}},{"start":{"line":4227,"column":76},"end":{"line":4227,"column":92}}]},"485":{"line":4228,"type":"cond-expr","locations":[{"start":{"line":4228,"column":29},"end":{"line":4228,"column":65}},{"start":{"line":4228,"column":68},"end":{"line":4228,"column":88}}]},"486":{"line":4232,"type":"if","locations":[{"start":{"line":4232,"column":6},"end":{"line":4232,"column":6}},{"start":{"line":4232,"column":6},"end":{"line":4232,"column":6}}]},"487":{"line":4236,"type":"if","locations":[{"start":{"line":4236,"column":6},"end":{"line":4236,"column":6}},{"start":{"line":4236,"column":6},"end":{"line":4236,"column":6}}]},"488":{"line":4237,"type":"cond-expr","locations":[{"start":{"line":4237,"column":36},"end":{"line":4237,"column":45}},{"start":{"line":4237,"column":48},"end":{"line":4237,"column":77}}]},"489":{"line":4240,"type":"if","locations":[{"start":{"line":4240,"column":6},"end":{"line":4240,"column":6}},{"start":{"line":4240,"column":6},"end":{"line":4240,"column":6}}]},"490":{"line":4259,"type":"cond-expr","locations":[{"start":{"line":4259,"column":41},"end":{"line":4259,"column":52}},{"start":{"line":4259,"column":55},"end":{"line":4259,"column":101}}]},"491":{"line":4280,"type":"if","locations":[{"start":{"line":4280,"column":8},"end":{"line":4280,"column":8}},{"start":{"line":4280,"column":8},"end":{"line":4280,"column":8}}]},"492":{"line":4299,"type":"if","locations":[{"start":{"line":4299,"column":8},"end":{"line":4299,"column":8}},{"start":{"line":4299,"column":8},"end":{"line":4299,"column":8}}]},"493":{"line":4323,"type":"cond-expr","locations":[{"start":{"line":4323,"column":52},"end":{"line":4323,"column":67}},{"start":{"line":4323,"column":70},"end":{"line":4323,"column":79}}]},"494":{"line":4350,"type":"if","locations":[{"start":{"line":4350,"column":8},"end":{"line":4350,"column":8}},{"start":{"line":4350,"column":8},"end":{"line":4350,"column":8}}]},"495":{"line":4351,"type":"if","locations":[{"start":{"line":4351,"column":10},"end":{"line":4351,"column":10}},{"start":{"line":4351,"column":10},"end":{"line":4351,"column":10}}]},"496":{"line":4372,"type":"binary-expr","locations":[{"start":{"line":4372,"column":19},"end":{"line":4372,"column":30}},{"start":{"line":4372,"column":34},"end":{"line":4372,"column":47}}]},"497":{"line":4374,"type":"binary-expr","locations":[{"start":{"line":4374,"column":25},"end":{"line":4374,"column":33}},{"start":{"line":4374,"column":37},"end":{"line":4374,"column":53}},{"start":{"line":4375,"column":9},"end":{"line":4375,"column":24}},{"start":{"line":4375,"column":28},"end":{"line":4375,"column":47}}]},"498":{"line":4382,"type":"if","locations":[{"start":{"line":4382,"column":8},"end":{"line":4382,"column":8}},{"start":{"line":4382,"column":8},"end":{"line":4382,"column":8}}]},"499":{"line":4382,"type":"binary-expr","locations":[{"start":{"line":4382,"column":13},"end":{"line":4382,"column":25}},{"start":{"line":4382,"column":29},"end":{"line":4382,"column":49}},{"start":{"line":4382,"column":54},"end":{"line":4382,"column":86}}]},"500":{"line":4397,"type":"if","locations":[{"start":{"line":4397,"column":6},"end":{"line":4397,"column":6}},{"start":{"line":4397,"column":6},"end":{"line":4397,"column":6}}]},"501":{"line":4400,"type":"if","locations":[{"start":{"line":4400,"column":6},"end":{"line":4400,"column":6}},{"start":{"line":4400,"column":6},"end":{"line":4400,"column":6}}]},"502":{"line":4403,"type":"cond-expr","locations":[{"start":{"line":4403,"column":31},"end":{"line":4403,"column":36}},{"start":{"line":4403,"column":39},"end":{"line":4403,"column":52}}]},"503":{"line":4414,"type":"cond-expr","locations":[{"start":{"line":4414,"column":31},"end":{"line":4414,"column":36}},{"start":{"line":4414,"column":39},"end":{"line":4414,"column":52}}]},"504":{"line":4425,"type":"if","locations":[{"start":{"line":4425,"column":6},"end":{"line":4425,"column":6}},{"start":{"line":4425,"column":6},"end":{"line":4425,"column":6}}]},"505":{"line":4430,"type":"cond-expr","locations":[{"start":{"line":4430,"column":28},"end":{"line":4430,"column":62}},{"start":{"line":4430,"column":66},"end":{"line":4430,"column":81}}]},"506":{"line":4430,"type":"binary-expr","locations":[{"start":{"line":4430,"column":66},"end":{"line":4430,"column":72}},{"start":{"line":4430,"column":76},"end":{"line":4430,"column":81}}]},"507":{"line":4443,"type":"cond-expr","locations":[{"start":{"line":4444,"column":10},"end":{"line":4444,"column":25}},{"start":{"line":4445,"column":10},"end":{"line":4445,"column":99}}]},"508":{"line":4471,"type":"if","locations":[{"start":{"line":4471,"column":6},"end":{"line":4471,"column":6}},{"start":{"line":4471,"column":6},"end":{"line":4471,"column":6}}]},"509":{"line":4471,"type":"cond-expr","locations":[{"start":{"line":4471,"column":18},"end":{"line":4471,"column":52}},{"start":{"line":4471,"column":55},"end":{"line":4471,"column":67}}]},"510":{"line":4474,"type":"binary-expr","locations":[{"start":{"line":4474,"column":25},"end":{"line":4474,"column":42}},{"start":{"line":4474,"column":46},"end":{"line":4474,"column":47}}]},"511":{"line":4477,"type":"cond-expr","locations":[{"start":{"line":4477,"column":27},"end":{"line":4477,"column":39}},{"start":{"line":4477,"column":42},"end":{"line":4477,"column":43}}]},"512":{"line":4503,"type":"cond-expr","locations":[{"start":{"line":4503,"column":27},"end":{"line":4503,"column":39}},{"start":{"line":4503,"column":42},"end":{"line":4503,"column":43}}]},"513":{"line":4509,"type":"if","locations":[{"start":{"line":4509,"column":8},"end":{"line":4509,"column":8}},{"start":{"line":4509,"column":8},"end":{"line":4509,"column":8}}]},"514":{"line":4533,"type":"cond-expr","locations":[{"start":{"line":4534,"column":10},"end":{"line":4534,"column":65}},{"start":{"line":4535,"column":10},"end":{"line":4535,"column":12}}]},"515":{"line":4533,"type":"binary-expr","locations":[{"start":{"line":4533,"column":14},"end":{"line":4533,"column":33}},{"start":{"line":4533,"column":37},"end":{"line":4533,"column":55}}]},"516":{"line":4563,"type":"cond-expr","locations":[{"start":{"line":4563,"column":27},"end":{"line":4563,"column":39}},{"start":{"line":4563,"column":42},"end":{"line":4563,"column":43}}]},"517":{"line":4564,"type":"if","locations":[{"start":{"line":4564,"column":6},"end":{"line":4564,"column":6}},{"start":{"line":4564,"column":6},"end":{"line":4564,"column":6}}]},"518":{"line":4567,"type":"if","locations":[{"start":{"line":4567,"column":6},"end":{"line":4567,"column":6}},{"start":{"line":4567,"column":6},"end":{"line":4567,"column":6}}]},"519":{"line":4567,"type":"cond-expr","locations":[{"start":{"line":4567,"column":18},"end":{"line":4567,"column":49}},{"start":{"line":4567,"column":52},"end":{"line":4567,"column":61}}]},"520":{"line":4570,"type":"cond-expr","locations":[{"start":{"line":4570,"column":38},"end":{"line":4570,"column":39}},{"start":{"line":4570,"column":42},"end":{"line":4570,"column":43}}]},"521":{"line":4598,"type":"cond-expr","locations":[{"start":{"line":4598,"column":27},"end":{"line":4598,"column":39}},{"start":{"line":4598,"column":42},"end":{"line":4598,"column":43}}]},"522":{"line":4599,"type":"if","locations":[{"start":{"line":4599,"column":6},"end":{"line":4599,"column":6}},{"start":{"line":4599,"column":6},"end":{"line":4599,"column":6}}]},"523":{"line":4602,"type":"if","locations":[{"start":{"line":4602,"column":6},"end":{"line":4602,"column":6}},{"start":{"line":4602,"column":6},"end":{"line":4602,"column":6}}]},"524":{"line":4602,"type":"cond-expr","locations":[{"start":{"line":4602,"column":18},"end":{"line":4602,"column":49}},{"start":{"line":4602,"column":52},"end":{"line":4602,"column":61}}]},"525":{"line":4605,"type":"binary-expr","locations":[{"start":{"line":4605,"column":20},"end":{"line":4605,"column":22}},{"start":{"line":4605,"column":26},"end":{"line":4605,"column":27}}]},"526":{"line":4606,"type":"cond-expr","locations":[{"start":{"line":4606,"column":41},"end":{"line":4606,"column":42}},{"start":{"line":4606,"column":45},"end":{"line":4606,"column":46}}]},"527":{"line":4659,"type":"cond-expr","locations":[{"start":{"line":4660,"column":10},"end":{"line":4660,"column":74}},{"start":{"line":4661,"column":10},"end":{"line":4661,"column":12}}]},"528":{"line":4659,"type":"binary-expr","locations":[{"start":{"line":4659,"column":14},"end":{"line":4659,"column":19}},{"start":{"line":4659,"column":23},"end":{"line":4659,"column":35}}]},"529":{"line":4714,"type":"cond-expr","locations":[{"start":{"line":4715,"column":10},"end":{"line":4715,"column":68}},{"start":{"line":4716,"column":10},"end":{"line":4716,"column":12}}]},"530":{"line":4714,"type":"binary-expr","locations":[{"start":{"line":4714,"column":14},"end":{"line":4714,"column":19}},{"start":{"line":4714,"column":23},"end":{"line":4714,"column":35}}]},"531":{"line":4748,"type":"cond-expr","locations":[{"start":{"line":4748,"column":27},"end":{"line":4748,"column":39}},{"start":{"line":4748,"column":42},"end":{"line":4748,"column":43}}]},"532":{"line":4749,"type":"if","locations":[{"start":{"line":4749,"column":6},"end":{"line":4749,"column":6}},{"start":{"line":4749,"column":6},"end":{"line":4749,"column":6}}]},"533":{"line":4752,"type":"if","locations":[{"start":{"line":4752,"column":6},"end":{"line":4752,"column":6}},{"start":{"line":4752,"column":6},"end":{"line":4752,"column":6}}]},"534":{"line":4752,"type":"binary-expr","locations":[{"start":{"line":4752,"column":10},"end":{"line":4752,"column":15}},{"start":{"line":4752,"column":19},"end":{"line":4752,"column":43}},{"start":{"line":4752,"column":47},"end":{"line":4752,"column":82}}]},"535":{"line":4877,"type":"cond-expr","locations":[{"start":{"line":4877,"column":21},"end":{"line":4877,"column":29}},{"start":{"line":4877,"column":32},"end":{"line":4877,"column":41}}]},"536":{"line":4901,"type":"cond-expr","locations":[{"start":{"line":4901,"column":27},"end":{"line":4901,"column":39}},{"start":{"line":4901,"column":42},"end":{"line":4901,"column":43}}]},"537":{"line":4902,"type":"if","locations":[{"start":{"line":4902,"column":6},"end":{"line":4902,"column":6}},{"start":{"line":4902,"column":6},"end":{"line":4902,"column":6}}]},"538":{"line":4902,"type":"binary-expr","locations":[{"start":{"line":4902,"column":10},"end":{"line":4902,"column":15}},{"start":{"line":4902,"column":19},"end":{"line":4902,"column":55}}]},"539":{"line":4905,"type":"cond-expr","locations":[{"start":{"line":4905,"column":22},"end":{"line":4905,"column":48}},{"start":{"line":4905,"column":51},"end":{"line":4905,"column":53}}]},"540":{"line":4922,"type":"cond-expr","locations":[{"start":{"line":4922,"column":27},"end":{"line":4922,"column":39}},{"start":{"line":4922,"column":42},"end":{"line":4922,"column":43}}]},"541":{"line":4923,"type":"cond-expr","locations":[{"start":{"line":4923,"column":22},"end":{"line":4923,"column":46}},{"start":{"line":4923,"column":49},"end":{"line":4923,"column":51}}]},"542":{"line":4955,"type":"cond-expr","locations":[{"start":{"line":4955,"column":27},"end":{"line":4955,"column":39}},{"start":{"line":4955,"column":42},"end":{"line":4955,"column":43}}]},"543":{"line":4956,"type":"if","locations":[{"start":{"line":4956,"column":6},"end":{"line":4956,"column":6}},{"start":{"line":4956,"column":6},"end":{"line":4956,"column":6}}]},"544":{"line":4959,"type":"if","locations":[{"start":{"line":4959,"column":6},"end":{"line":4959,"column":6}},{"start":{"line":4959,"column":6},"end":{"line":4959,"column":6}}]},"545":{"line":4960,"type":"cond-expr","locations":[{"start":{"line":4960,"column":36},"end":{"line":4960,"column":68}},{"start":{"line":4960,"column":71},"end":{"line":4960,"column":80}}]},"546":{"line":4961,"type":"if","locations":[{"start":{"line":4961,"column":13},"end":{"line":4961,"column":13}},{"start":{"line":4961,"column":13},"end":{"line":4961,"column":13}}]},"547":{"line":4963,"type":"if","locations":[{"start":{"line":4963,"column":8},"end":{"line":4963,"column":8}},{"start":{"line":4963,"column":8},"end":{"line":4963,"column":8}}]},"548":{"line":4963,"type":"binary-expr","locations":[{"start":{"line":4963,"column":12},"end":{"line":4963,"column":26}},{"start":{"line":4964,"column":13},"end":{"line":4964,"column":89}}]},"549":{"line":4964,"type":"cond-expr","locations":[{"start":{"line":4964,"column":32},"end":{"line":4964,"column":54}},{"start":{"line":4964,"column":59},"end":{"line":4964,"column":88}}]},"550":{"line":4969,"type":"binary-expr","locations":[{"start":{"line":4969,"column":39},"end":{"line":4969,"column":48}},{"start":{"line":4969,"column":52},"end":{"line":4969,"column":53}}]},"551":{"line":5012,"type":"cond-expr","locations":[{"start":{"line":5012,"column":79},"end":{"line":5012,"column":84}},{"start":{"line":5012,"column":87},"end":{"line":5012,"column":89}}]},"552":{"line":5013,"type":"cond-expr","locations":[{"start":{"line":5013,"column":63},"end":{"line":5013,"column":93}},{"start":{"line":5013,"column":96},"end":{"line":5013,"column":100}}]},"553":{"line":5013,"type":"binary-expr","locations":[{"start":{"line":5013,"column":28},"end":{"line":5013,"column":36}},{"start":{"line":5013,"column":40},"end":{"line":5013,"column":59}}]},"554":{"line":5013,"type":"binary-expr","locations":[{"start":{"line":5013,"column":75},"end":{"line":5013,"column":83}},{"start":{"line":5013,"column":87},"end":{"line":5013,"column":92}}]},"555":{"line":5017,"type":"cond-expr","locations":[{"start":{"line":5017,"column":27},"end":{"line":5017,"column":39}},{"start":{"line":5017,"column":42},"end":{"line":5017,"column":43}}]},"556":{"line":5023,"type":"if","locations":[{"start":{"line":5023,"column":8},"end":{"line":5023,"column":8}},{"start":{"line":5023,"column":8},"end":{"line":5023,"column":8}}]},"557":{"line":5023,"type":"cond-expr","locations":[{"start":{"line":5023,"column":20},"end":{"line":5023,"column":45}},{"start":{"line":5023,"column":48},"end":{"line":5023,"column":73}}]},"558":{"line":5027,"type":"if","locations":[{"start":{"line":5027,"column":12},"end":{"line":5027,"column":12}},{"start":{"line":5027,"column":12},"end":{"line":5027,"column":12}}]},"559":{"line":5027,"type":"cond-expr","locations":[{"start":{"line":5027,"column":25},"end":{"line":5027,"column":51}},{"start":{"line":5027,"column":54},"end":{"line":5027,"column":89}}]},"560":{"line":5031,"type":"if","locations":[{"start":{"line":5031,"column":10},"end":{"line":5031,"column":10}},{"start":{"line":5031,"column":10},"end":{"line":5031,"column":10}}]},"561":{"line":5054,"type":"cond-expr","locations":[{"start":{"line":5054,"column":27},"end":{"line":5054,"column":39}},{"start":{"line":5054,"column":42},"end":{"line":5054,"column":43}}]},"562":{"line":5055,"type":"cond-expr","locations":[{"start":{"line":5055,"column":22},"end":{"line":5055,"column":39}},{"start":{"line":5055,"column":42},"end":{"line":5055,"column":51}}]},"563":{"line":5084,"type":"cond-expr","locations":[{"start":{"line":5084,"column":27},"end":{"line":5084,"column":39}},{"start":{"line":5084,"column":42},"end":{"line":5084,"column":43}}]},"564":{"line":5085,"type":"if","locations":[{"start":{"line":5085,"column":6},"end":{"line":5085,"column":6}},{"start":{"line":5085,"column":6},"end":{"line":5085,"column":6}}]},"565":{"line":5089,"type":"if","locations":[{"start":{"line":5089,"column":6},"end":{"line":5089,"column":6}},{"start":{"line":5089,"column":6},"end":{"line":5089,"column":6}}]},"566":{"line":5090,"type":"cond-expr","locations":[{"start":{"line":5090,"column":33},"end":{"line":5090,"column":65}},{"start":{"line":5090,"column":68},"end":{"line":5090,"column":105}}]},"567":{"line":5090,"type":"binary-expr","locations":[{"start":{"line":5090,"column":78},"end":{"line":5090,"column":87}},{"start":{"line":5090,"column":91},"end":{"line":5090,"column":92}}]},"568":{"line":5091,"type":"if","locations":[{"start":{"line":5091,"column":13},"end":{"line":5091,"column":13}},{"start":{"line":5091,"column":13},"end":{"line":5091,"column":13}}]},"569":{"line":5094,"type":"if","locations":[{"start":{"line":5094,"column":8},"end":{"line":5094,"column":8}},{"start":{"line":5094,"column":8},"end":{"line":5094,"column":8}}]},"570":{"line":5094,"type":"cond-expr","locations":[{"start":{"line":5094,"column":31},"end":{"line":5094,"column":46}},{"start":{"line":5094,"column":51},"end":{"line":5094,"column":66}}]},"571":{"line":5099,"type":"if","locations":[{"start":{"line":5099,"column":6},"end":{"line":5099,"column":6}},{"start":{"line":5099,"column":6},"end":{"line":5099,"column":6}}]},"572":{"line":5103,"type":"if","locations":[{"start":{"line":5103,"column":8},"end":{"line":5103,"column":8}},{"start":{"line":5103,"column":8},"end":{"line":5103,"column":8}}]},"573":{"line":5135,"type":"if","locations":[{"start":{"line":5135,"column":6},"end":{"line":5135,"column":6}},{"start":{"line":5135,"column":6},"end":{"line":5135,"column":6}}]},"574":{"line":5135,"type":"binary-expr","locations":[{"start":{"line":5135,"column":12},"end":{"line":5135,"column":17}},{"start":{"line":5135,"column":21},"end":{"line":5135,"column":33}}]},"575":{"line":5227,"type":"if","locations":[{"start":{"line":5227,"column":6},"end":{"line":5227,"column":6}},{"start":{"line":5227,"column":6},"end":{"line":5227,"column":6}}]},"576":{"line":5227,"type":"binary-expr","locations":[{"start":{"line":5227,"column":12},"end":{"line":5227,"column":17}},{"start":{"line":5227,"column":21},"end":{"line":5227,"column":33}}]},"577":{"line":5237,"type":"if","locations":[{"start":{"line":5237,"column":8},"end":{"line":5237,"column":8}},{"start":{"line":5237,"column":8},"end":{"line":5237,"column":8}}]},"578":{"line":5279,"type":"cond-expr","locations":[{"start":{"line":5279,"column":27},"end":{"line":5279,"column":39}},{"start":{"line":5279,"column":42},"end":{"line":5279,"column":43}}]},"579":{"line":5280,"type":"if","locations":[{"start":{"line":5280,"column":6},"end":{"line":5280,"column":6}},{"start":{"line":5280,"column":6},"end":{"line":5280,"column":6}}]},"580":{"line":5283,"type":"if","locations":[{"start":{"line":5283,"column":6},"end":{"line":5283,"column":6}},{"start":{"line":5283,"column":6},"end":{"line":5283,"column":6}}]},"581":{"line":5283,"type":"binary-expr","locations":[{"start":{"line":5283,"column":10},"end":{"line":5283,"column":13}},{"start":{"line":5283,"column":17},"end":{"line":5283,"column":39}},{"start":{"line":5283,"column":43},"end":{"line":5283,"column":76}}]},"582":{"line":5387,"type":"cond-expr","locations":[{"start":{"line":5387,"column":27},"end":{"line":5387,"column":39}},{"start":{"line":5387,"column":42},"end":{"line":5387,"column":43}}]},"583":{"line":5388,"type":"if","locations":[{"start":{"line":5388,"column":6},"end":{"line":5388,"column":6}},{"start":{"line":5388,"column":6},"end":{"line":5388,"column":6}}]},"584":{"line":5391,"type":"if","locations":[{"start":{"line":5391,"column":6},"end":{"line":5391,"column":6}},{"start":{"line":5391,"column":6},"end":{"line":5391,"column":6}}]},"585":{"line":5391,"type":"cond-expr","locations":[{"start":{"line":5391,"column":18},"end":{"line":5391,"column":49}},{"start":{"line":5391,"column":52},"end":{"line":5391,"column":61}}]},"586":{"line":5394,"type":"cond-expr","locations":[{"start":{"line":5394,"column":41},"end":{"line":5394,"column":42}},{"start":{"line":5394,"column":45},"end":{"line":5394,"column":46}}]},"587":{"line":5422,"type":"cond-expr","locations":[{"start":{"line":5422,"column":27},"end":{"line":5422,"column":39}},{"start":{"line":5422,"column":42},"end":{"line":5422,"column":43}}]},"588":{"line":5423,"type":"if","locations":[{"start":{"line":5423,"column":6},"end":{"line":5423,"column":6}},{"start":{"line":5423,"column":6},"end":{"line":5423,"column":6}}]},"589":{"line":5426,"type":"if","locations":[{"start":{"line":5426,"column":6},"end":{"line":5426,"column":6}},{"start":{"line":5426,"column":6},"end":{"line":5426,"column":6}}]},"590":{"line":5426,"type":"cond-expr","locations":[{"start":{"line":5426,"column":18},"end":{"line":5426,"column":49}},{"start":{"line":5426,"column":52},"end":{"line":5426,"column":61}}]},"591":{"line":5429,"type":"binary-expr","locations":[{"start":{"line":5429,"column":20},"end":{"line":5429,"column":22}},{"start":{"line":5429,"column":26},"end":{"line":5429,"column":27}}]},"592":{"line":5430,"type":"cond-expr","locations":[{"start":{"line":5430,"column":38},"end":{"line":5430,"column":39}},{"start":{"line":5430,"column":42},"end":{"line":5430,"column":43}}]},"593":{"line":5483,"type":"cond-expr","locations":[{"start":{"line":5484,"column":10},"end":{"line":5484,"column":75}},{"start":{"line":5485,"column":10},"end":{"line":5485,"column":12}}]},"594":{"line":5483,"type":"binary-expr","locations":[{"start":{"line":5483,"column":14},"end":{"line":5483,"column":19}},{"start":{"line":5483,"column":23},"end":{"line":5483,"column":35}}]},"595":{"line":5538,"type":"cond-expr","locations":[{"start":{"line":5539,"column":10},"end":{"line":5539,"column":62}},{"start":{"line":5540,"column":10},"end":{"line":5540,"column":12}}]},"596":{"line":5538,"type":"binary-expr","locations":[{"start":{"line":5538,"column":14},"end":{"line":5538,"column":19}},{"start":{"line":5538,"column":23},"end":{"line":5538,"column":35}}]},"597":{"line":5612,"type":"cond-expr","locations":[{"start":{"line":5612,"column":27},"end":{"line":5612,"column":39}},{"start":{"line":5612,"column":42},"end":{"line":5612,"column":43}}]},"598":{"line":5613,"type":"if","locations":[{"start":{"line":5613,"column":6},"end":{"line":5613,"column":6}},{"start":{"line":5613,"column":6},"end":{"line":5613,"column":6}}]},"599":{"line":5616,"type":"if","locations":[{"start":{"line":5616,"column":6},"end":{"line":5616,"column":6}},{"start":{"line":5616,"column":6},"end":{"line":5616,"column":6}}]},"600":{"line":5616,"type":"binary-expr","locations":[{"start":{"line":5616,"column":10},"end":{"line":5616,"column":26}},{"start":{"line":5616,"column":30},"end":{"line":5616,"column":58}}]},"601":{"line":5618,"type":"cond-expr","locations":[{"start":{"line":5618,"column":62},"end":{"line":5618,"column":71}},{"start":{"line":5618,"column":74},"end":{"line":5618,"column":82}}]},"602":{"line":5622,"type":"if","locations":[{"start":{"line":5622,"column":6},"end":{"line":5622,"column":6}},{"start":{"line":5622,"column":6},"end":{"line":5622,"column":6}}]},"603":{"line":5622,"type":"binary-expr","locations":[{"start":{"line":5622,"column":12},"end":{"line":5622,"column":28}},{"start":{"line":5622,"column":32},"end":{"line":5622,"column":57}}]},"604":{"line":5625,"type":"cond-expr","locations":[{"start":{"line":5626,"column":10},"end":{"line":5626,"column":37}},{"start":{"line":5627,"column":10},"end":{"line":5627,"column":35}}]},"605":{"line":5625,"type":"binary-expr","locations":[{"start":{"line":5625,"column":14},"end":{"line":5625,"column":22}},{"start":{"line":5625,"column":26},"end":{"line":5625,"column":53}}]},"606":{"line":5649,"type":"if","locations":[{"start":{"line":5649,"column":6},"end":{"line":5649,"column":6}},{"start":{"line":5649,"column":6},"end":{"line":5649,"column":6}}]},"607":{"line":5649,"type":"binary-expr","locations":[{"start":{"line":5649,"column":12},"end":{"line":5649,"column":17}},{"start":{"line":5649,"column":21},"end":{"line":5649,"column":33}}]},"608":{"line":5656,"type":"if","locations":[{"start":{"line":5656,"column":8},"end":{"line":5656,"column":8}},{"start":{"line":5656,"column":8},"end":{"line":5656,"column":8}}]},"609":{"line":5689,"type":"cond-expr","locations":[{"start":{"line":5689,"column":27},"end":{"line":5689,"column":39}},{"start":{"line":5689,"column":42},"end":{"line":5689,"column":43}}]},"610":{"line":5690,"type":"if","locations":[{"start":{"line":5690,"column":6},"end":{"line":5690,"column":6}},{"start":{"line":5690,"column":6},"end":{"line":5690,"column":6}}]},"611":{"line":5694,"type":"if","locations":[{"start":{"line":5694,"column":6},"end":{"line":5694,"column":6}},{"start":{"line":5694,"column":6},"end":{"line":5694,"column":6}}]},"612":{"line":5720,"type":"cond-expr","locations":[{"start":{"line":5721,"column":10},"end":{"line":5721,"column":39}},{"start":{"line":5722,"column":10},"end":{"line":5722,"column":12}}]},"613":{"line":5745,"type":"if","locations":[{"start":{"line":5745,"column":8},"end":{"line":5745,"column":8}},{"start":{"line":5745,"column":8},"end":{"line":5745,"column":8}}]},"614":{"line":5746,"type":"cond-expr","locations":[{"start":{"line":5747,"column":14},"end":{"line":5747,"column":85}},{"start":{"line":5748,"column":14},"end":{"line":5748,"column":19}}]},"615":{"line":5751,"type":"cond-expr","locations":[{"start":{"line":5751,"column":22},"end":{"line":5751,"column":38}},{"start":{"line":5751,"column":41},"end":{"line":5751,"column":43}}]},"616":{"line":5794,"type":"cond-expr","locations":[{"start":{"line":5794,"column":27},"end":{"line":5794,"column":39}},{"start":{"line":5794,"column":42},"end":{"line":5794,"column":43}}]},"617":{"line":5797,"type":"if","locations":[{"start":{"line":5797,"column":6},"end":{"line":5797,"column":6}},{"start":{"line":5797,"column":6},"end":{"line":5797,"column":6}}]},"618":{"line":5797,"type":"binary-expr","locations":[{"start":{"line":5797,"column":10},"end":{"line":5797,"column":16}},{"start":{"line":5797,"column":20},"end":{"line":5797,"column":27}},{"start":{"line":5797,"column":31},"end":{"line":5797,"column":49}}]},"619":{"line":5802,"type":"if","locations":[{"start":{"line":5802,"column":8},"end":{"line":5802,"column":8}},{"start":{"line":5802,"column":8},"end":{"line":5802,"column":8}}]},"620":{"line":5804,"type":"if","locations":[{"start":{"line":5804,"column":15},"end":{"line":5804,"column":15}},{"start":{"line":5804,"column":15},"end":{"line":5804,"column":15}}]},"621":{"line":5830,"type":"cond-expr","locations":[{"start":{"line":5830,"column":34},"end":{"line":5830,"column":52}},{"start":{"line":5830,"column":55},"end":{"line":5830,"column":64}}]},"622":{"line":5831,"type":"cond-expr","locations":[{"start":{"line":5831,"column":33},"end":{"line":5831,"column":51}},{"start":{"line":5831,"column":54},"end":{"line":5831,"column":63}}]},"623":{"line":5833,"type":"if","locations":[{"start":{"line":5833,"column":6},"end":{"line":5833,"column":6}},{"start":{"line":5833,"column":6},"end":{"line":5833,"column":6}}]},"624":{"line":5833,"type":"binary-expr","locations":[{"start":{"line":5833,"column":10},"end":{"line":5833,"column":20}},{"start":{"line":5833,"column":24},"end":{"line":5833,"column":53}}]},"625":{"line":5836,"type":"cond-expr","locations":[{"start":{"line":5836,"column":67},"end":{"line":5836,"column":84}},{"start":{"line":5836,"column":88},"end":{"line":5836,"column":97}}]},"626":{"line":5836,"type":"binary-expr","locations":[{"start":{"line":5836,"column":20},"end":{"line":5836,"column":30}},{"start":{"line":5836,"column":34},"end":{"line":5836,"column":62}}]},"627":{"line":6011,"type":"cond-expr","locations":[{"start":{"line":6011,"column":44},"end":{"line":6011,"column":49}},{"start":{"line":6011,"column":52},"end":{"line":6011,"column":69}}]},"628":{"line":6044,"type":"if","locations":[{"start":{"line":6044,"column":8},"end":{"line":6044,"column":8}},{"start":{"line":6044,"column":8},"end":{"line":6044,"column":8}}]},"629":{"line":6080,"type":"cond-expr","locations":[{"start":{"line":6080,"column":50},"end":{"line":6080,"column":55}},{"start":{"line":6080,"column":58},"end":{"line":6080,"column":73}}]},"630":{"line":6080,"type":"binary-expr","locations":[{"start":{"line":6080,"column":16},"end":{"line":6080,"column":23}},{"start":{"line":6080,"column":27},"end":{"line":6080,"column":46}}]},"631":{"line":6082,"type":"if","locations":[{"start":{"line":6082,"column":6},"end":{"line":6082,"column":6}},{"start":{"line":6082,"column":6},"end":{"line":6082,"column":6}}]},"632":{"line":6084,"type":"if","locations":[{"start":{"line":6084,"column":8},"end":{"line":6084,"column":8}},{"start":{"line":6084,"column":8},"end":{"line":6084,"column":8}}]},"633":{"line":6195,"type":"cond-expr","locations":[{"start":{"line":6195,"column":41},"end":{"line":6195,"column":54}},{"start":{"line":6195,"column":58},"end":{"line":6195,"column":73}}]},"634":{"line":6247,"type":"cond-expr","locations":[{"start":{"line":6247,"column":39},"end":{"line":6247,"column":49}},{"start":{"line":6247,"column":52},"end":{"line":6247,"column":61}}]},"635":{"line":6248,"type":"if","locations":[{"start":{"line":6248,"column":6},"end":{"line":6248,"column":6}},{"start":{"line":6248,"column":6},"end":{"line":6248,"column":6}}]},"636":{"line":6248,"type":"binary-expr","locations":[{"start":{"line":6248,"column":10},"end":{"line":6248,"column":17}},{"start":{"line":6248,"column":21},"end":{"line":6248,"column":67}}]},"637":{"line":6251,"type":"if","locations":[{"start":{"line":6251,"column":6},"end":{"line":6251,"column":6}},{"start":{"line":6251,"column":6},"end":{"line":6251,"column":6}}]},"638":{"line":6251,"type":"binary-expr","locations":[{"start":{"line":6251,"column":10},"end":{"line":6251,"column":40}},{"start":{"line":6251,"column":44},"end":{"line":6251,"column":65}}]},"639":{"line":6307,"type":"cond-expr","locations":[{"start":{"line":6307,"column":39},"end":{"line":6307,"column":50}},{"start":{"line":6307,"column":53},"end":{"line":6307,"column":63}}]},"640":{"line":6514,"type":"if","locations":[{"start":{"line":6514,"column":6},"end":{"line":6514,"column":6}},{"start":{"line":6514,"column":6},"end":{"line":6514,"column":6}}]},"641":{"line":6551,"type":"cond-expr","locations":[{"start":{"line":6551,"column":32},"end":{"line":6551,"column":53}},{"start":{"line":6551,"column":56},"end":{"line":6551,"column":57}}]},"642":{"line":6552,"type":"if","locations":[{"start":{"line":6552,"column":6},"end":{"line":6552,"column":6}},{"start":{"line":6552,"column":6},"end":{"line":6552,"column":6}}]},"643":{"line":6556,"type":"if","locations":[{"start":{"line":6556,"column":6},"end":{"line":6556,"column":6}},{"start":{"line":6556,"column":6},"end":{"line":6556,"column":6}}]},"644":{"line":6556,"type":"binary-expr","locations":[{"start":{"line":6556,"column":10},"end":{"line":6556,"column":38}},{"start":{"line":6556,"column":43},"end":{"line":6556,"column":48}},{"start":{"line":6556,"column":52},"end":{"line":6556,"column":92}}]},"645":{"line":6559,"type":"cond-expr","locations":[{"start":{"line":6559,"column":36},"end":{"line":6559,"column":68}},{"start":{"line":6559,"column":72},"end":{"line":6559,"column":86}}]},"646":{"line":6559,"type":"binary-expr","locations":[{"start":{"line":6559,"column":72},"end":{"line":6559,"column":81}},{"start":{"line":6559,"column":85},"end":{"line":6559,"column":86}}]},"647":{"line":6561,"type":"cond-expr","locations":[{"start":{"line":6562,"column":11},"end":{"line":6562,"column":76}},{"start":{"line":6563,"column":11},"end":{"line":6563,"column":69}}]},"648":{"line":6561,"type":"binary-expr","locations":[{"start":{"line":6561,"column":14},"end":{"line":6561,"column":43}},{"start":{"line":6561,"column":47},"end":{"line":6561,"column":67}},{"start":{"line":6561,"column":71},"end":{"line":6561,"column":91}}]},"649":{"line":6562,"type":"binary-expr","locations":[{"start":{"line":6562,"column":11},"end":{"line":6562,"column":30}},{"start":{"line":6562,"column":34},"end":{"line":6562,"column":76}}]},"650":{"line":6563,"type":"binary-expr","locations":[{"start":{"line":6563,"column":11},"end":{"line":6563,"column":19}},{"start":{"line":6563,"column":23},"end":{"line":6563,"column":69}}]},"651":{"line":6642,"type":"cond-expr","locations":[{"start":{"line":6642,"column":45},"end":{"line":6642,"column":69}},{"start":{"line":6642,"column":72},"end":{"line":6642,"column":74}}]},"652":{"line":6645,"type":"cond-expr","locations":[{"start":{"line":6645,"column":28},"end":{"line":6645,"column":32}},{"start":{"line":6645,"column":36},"end":{"line":6645,"column":87}}]},"653":{"line":6645,"type":"cond-expr","locations":[{"start":{"line":6645,"column":64},"end":{"line":6645,"column":75}},{"start":{"line":6645,"column":78},"end":{"line":6645,"column":87}}]},"654":{"line":6645,"type":"binary-expr","locations":[{"start":{"line":6645,"column":37},"end":{"line":6645,"column":43}},{"start":{"line":6645,"column":47},"end":{"line":6645,"column":60}}]},"655":{"line":6646,"type":"cond-expr","locations":[{"start":{"line":6646,"column":33},"end":{"line":6646,"column":56}},{"start":{"line":6646,"column":59},"end":{"line":6646,"column":88}}]},"656":{"line":6708,"type":"cond-expr","locations":[{"start":{"line":6708,"column":39},"end":{"line":6708,"column":47}},{"start":{"line":6708,"column":50},"end":{"line":6708,"column":57}}]},"657":{"line":6773,"type":"cond-expr","locations":[{"start":{"line":6773,"column":19},"end":{"line":6773,"column":20}},{"start":{"line":6773,"column":23},"end":{"line":6773,"column":24}}]},"658":{"line":6903,"type":"cond-expr","locations":[{"start":{"line":6903,"column":39},"end":{"line":6903,"column":50}},{"start":{"line":6903,"column":53},"end":{"line":6903,"column":63}}]},"659":{"line":6929,"type":"if","locations":[{"start":{"line":6929,"column":6},"end":{"line":6929,"column":6}},{"start":{"line":6929,"column":6},"end":{"line":6929,"column":6}}]},"660":{"line":6929,"type":"cond-expr","locations":[{"start":{"line":6929,"column":18},"end":{"line":6929,"column":54}},{"start":{"line":6929,"column":57},"end":{"line":6929,"column":66}}]},"661":{"line":6932,"type":"cond-expr","locations":[{"start":{"line":6932,"column":28},"end":{"line":6932,"column":65}},{"start":{"line":6932,"column":68},"end":{"line":6932,"column":77}}]},"662":{"line":6939,"type":"cond-expr","locations":[{"start":{"line":6939,"column":28},"end":{"line":6939,"column":29}},{"start":{"line":6939,"column":33},"end":{"line":6939,"column":40}}]},"663":{"line":6939,"type":"binary-expr","locations":[{"start":{"line":6939,"column":33},"end":{"line":6939,"column":35}},{"start":{"line":6939,"column":39},"end":{"line":6939,"column":40}}]},"664":{"line":6990,"type":"cond-expr","locations":[{"start":{"line":6990,"column":32},"end":{"line":6990,"column":53}},{"start":{"line":6990,"column":56},"end":{"line":6990,"column":57}}]},"665":{"line":6991,"type":"cond-expr","locations":[{"start":{"line":6991,"column":32},"end":{"line":6991,"column":38}},{"start":{"line":6991,"column":41},"end":{"line":6991,"column":64}}]},"666":{"line":7044,"type":"cond-expr","locations":[{"start":{"line":7044,"column":39},"end":{"line":7044,"column":48}},{"start":{"line":7044,"column":51},"end":{"line":7044,"column":59}}]},"667":{"line":7045,"type":"if","locations":[{"start":{"line":7045,"column":6},"end":{"line":7045,"column":6}},{"start":{"line":7045,"column":6},"end":{"line":7045,"column":6}}]},"668":{"line":7045,"type":"binary-expr","locations":[{"start":{"line":7045,"column":10},"end":{"line":7045,"column":17}},{"start":{"line":7045,"column":21},"end":{"line":7045,"column":67}}]},"669":{"line":7048,"type":"if","locations":[{"start":{"line":7048,"column":6},"end":{"line":7048,"column":6}},{"start":{"line":7048,"column":6},"end":{"line":7048,"column":6}}]},"670":{"line":7048,"type":"binary-expr","locations":[{"start":{"line":7048,"column":10},"end":{"line":7048,"column":40}},{"start":{"line":7048,"column":44},"end":{"line":7048,"column":65}}]},"671":{"line":7103,"type":"if","locations":[{"start":{"line":7103,"column":6},"end":{"line":7103,"column":6}},{"start":{"line":7103,"column":6},"end":{"line":7103,"column":6}}]},"672":{"line":7106,"type":"if","locations":[{"start":{"line":7106,"column":6},"end":{"line":7106,"column":6}},{"start":{"line":7106,"column":6},"end":{"line":7106,"column":6}}]},"673":{"line":7106,"type":"binary-expr","locations":[{"start":{"line":7106,"column":10},"end":{"line":7106,"column":17}},{"start":{"line":7106,"column":21},"end":{"line":7106,"column":66}}]},"674":{"line":7154,"type":"if","locations":[{"start":{"line":7154,"column":6},"end":{"line":7154,"column":6}},{"start":{"line":7154,"column":6},"end":{"line":7154,"column":6}}]},"675":{"line":7158,"type":"if","locations":[{"start":{"line":7158,"column":6},"end":{"line":7158,"column":6}},{"start":{"line":7158,"column":6},"end":{"line":7158,"column":6}}]},"676":{"line":7158,"type":"binary-expr","locations":[{"start":{"line":7158,"column":10},"end":{"line":7158,"column":15}},{"start":{"line":7158,"column":19},"end":{"line":7158,"column":68}}]},"677":{"line":7199,"type":"if","locations":[{"start":{"line":7199,"column":6},"end":{"line":7199,"column":6}},{"start":{"line":7199,"column":6},"end":{"line":7199,"column":6}}]},"678":{"line":7202,"type":"if","locations":[{"start":{"line":7202,"column":6},"end":{"line":7202,"column":6}},{"start":{"line":7202,"column":6},"end":{"line":7202,"column":6}}]},"679":{"line":7202,"type":"binary-expr","locations":[{"start":{"line":7202,"column":10},"end":{"line":7202,"column":15}},{"start":{"line":7202,"column":19},"end":{"line":7202,"column":59}}]},"680":{"line":7205,"type":"if","locations":[{"start":{"line":7205,"column":6},"end":{"line":7205,"column":6}},{"start":{"line":7205,"column":6},"end":{"line":7205,"column":6}}]},"681":{"line":7206,"type":"cond-expr","locations":[{"start":{"line":7206,"column":40},"end":{"line":7206,"column":42}},{"start":{"line":7206,"column":45},"end":{"line":7206,"column":56}}]},"682":{"line":7208,"type":"if","locations":[{"start":{"line":7208,"column":6},"end":{"line":7208,"column":6}},{"start":{"line":7208,"column":6},"end":{"line":7208,"column":6}}]},"683":{"line":7209,"type":"cond-expr","locations":[{"start":{"line":7209,"column":34},"end":{"line":7209,"column":36}},{"start":{"line":7209,"column":39},"end":{"line":7209,"column":47}}]},"684":{"line":7263,"type":"binary-expr","locations":[{"start":{"line":7263,"column":14},"end":{"line":7263,"column":23}},{"start":{"line":7263,"column":27},"end":{"line":7265,"column":5}}]},"685":{"line":7293,"type":"if","locations":[{"start":{"line":7293,"column":6},"end":{"line":7293,"column":6}},{"start":{"line":7293,"column":6},"end":{"line":7293,"column":6}}]},"686":{"line":7294,"type":"if","locations":[{"start":{"line":7294,"column":8},"end":{"line":7294,"column":8}},{"start":{"line":7294,"column":8},"end":{"line":7294,"column":8}}]},"687":{"line":7302,"type":"cond-expr","locations":[{"start":{"line":7302,"column":35},"end":{"line":7302,"column":36}},{"start":{"line":7302,"column":39},"end":{"line":7302,"column":40}}]},"688":{"line":7304,"type":"if","locations":[{"start":{"line":7304,"column":8},"end":{"line":7304,"column":8}},{"start":{"line":7304,"column":8},"end":{"line":7304,"column":8}}]},"689":{"line":7327,"type":"if","locations":[{"start":{"line":7327,"column":6},"end":{"line":7327,"column":6}},{"start":{"line":7327,"column":6},"end":{"line":7327,"column":6}}]},"690":{"line":7327,"type":"binary-expr","locations":[{"start":{"line":7327,"column":10},"end":{"line":7327,"column":15}},{"start":{"line":7327,"column":19},"end":{"line":7327,"column":49}}]},"691":{"line":7330,"type":"cond-expr","locations":[{"start":{"line":7330,"column":32},"end":{"line":7330,"column":43}},{"start":{"line":7330,"column":46},"end":{"line":7330,"column":67}}]},"692":{"line":7330,"type":"binary-expr","locations":[{"start":{"line":7330,"column":11},"end":{"line":7330,"column":15}},{"start":{"line":7330,"column":19},"end":{"line":7330,"column":28}}]},"693":{"line":7330,"type":"binary-expr","locations":[{"start":{"line":7330,"column":56},"end":{"line":7330,"column":58}},{"start":{"line":7330,"column":62},"end":{"line":7330,"column":63}}]},"694":{"line":7352,"type":"if","locations":[{"start":{"line":7352,"column":6},"end":{"line":7352,"column":6}},{"start":{"line":7352,"column":6},"end":{"line":7352,"column":6}}]},"695":{"line":7353,"type":"if","locations":[{"start":{"line":7353,"column":8},"end":{"line":7353,"column":8}},{"start":{"line":7353,"column":8},"end":{"line":7353,"column":8}}]},"696":{"line":7362,"type":"if","locations":[{"start":{"line":7362,"column":8},"end":{"line":7362,"column":8}},{"start":{"line":7362,"column":8},"end":{"line":7362,"column":8}}]},"697":{"line":7365,"type":"if","locations":[{"start":{"line":7365,"column":8},"end":{"line":7365,"column":8}},{"start":{"line":7365,"column":8},"end":{"line":7365,"column":8}}]},"698":{"line":7409,"type":"if","locations":[{"start":{"line":7409,"column":6},"end":{"line":7409,"column":6}},{"start":{"line":7409,"column":6},"end":{"line":7409,"column":6}}]},"699":{"line":7445,"type":"cond-expr","locations":[{"start":{"line":7445,"column":41},"end":{"line":7445,"column":65}},{"start":{"line":7445,"column":68},"end":{"line":7445,"column":85}}]},"700":{"line":7503,"type":"if","locations":[{"start":{"line":7503,"column":6},"end":{"line":7503,"column":6}},{"start":{"line":7503,"column":6},"end":{"line":7503,"column":6}}]},"701":{"line":7666,"type":"if","locations":[{"start":{"line":7666,"column":6},"end":{"line":7666,"column":6}},{"start":{"line":7666,"column":6},"end":{"line":7666,"column":6}}]},"702":{"line":7669,"type":"cond-expr","locations":[{"start":{"line":7669,"column":24},"end":{"line":7669,"column":25}},{"start":{"line":7669,"column":29},"end":{"line":7669,"column":39}}]},"703":{"line":7669,"type":"binary-expr","locations":[{"start":{"line":7669,"column":29},"end":{"line":7669,"column":34}},{"start":{"line":7669,"column":38},"end":{"line":7669,"column":39}}]},"704":{"line":7670,"type":"if","locations":[{"start":{"line":7670,"column":6},"end":{"line":7670,"column":6}},{"start":{"line":7670,"column":6},"end":{"line":7670,"column":6}}]},"705":{"line":7673,"type":"if","locations":[{"start":{"line":7673,"column":13},"end":{"line":7673,"column":13}},{"start":{"line":7673,"column":13},"end":{"line":7673,"column":13}}]},"706":{"line":7675,"type":"binary-expr","locations":[{"start":{"line":7675,"column":18},"end":{"line":7675,"column":38}},{"start":{"line":7675,"column":42},"end":{"line":7675,"column":80}}]},"707":{"line":7675,"type":"binary-expr","locations":[{"start":{"line":7675,"column":52},"end":{"line":7675,"column":68}},{"start":{"line":7675,"column":72},"end":{"line":7675,"column":73}}]},"708":{"line":7676,"type":"cond-expr","locations":[{"start":{"line":7676,"column":43},"end":{"line":7676,"column":61}},{"start":{"line":7676,"column":64},"end":{"line":7676,"column":72}}]},"709":{"line":7680,"type":"if","locations":[{"start":{"line":7680,"column":8},"end":{"line":7680,"column":8}},{"start":{"line":7680,"column":8},"end":{"line":7680,"column":8}}]},"710":{"line":7683,"type":"if","locations":[{"start":{"line":7683,"column":8},"end":{"line":7683,"column":8}},{"start":{"line":7683,"column":8},"end":{"line":7683,"column":8}}]},"711":{"line":7691,"type":"if","locations":[{"start":{"line":7691,"column":8},"end":{"line":7691,"column":8}},{"start":{"line":7691,"column":8},"end":{"line":7691,"column":8}}]},"712":{"line":7695,"type":"if","locations":[{"start":{"line":7695,"column":8},"end":{"line":7695,"column":8}},{"start":{"line":7695,"column":8},"end":{"line":7695,"column":8}}]},"713":{"line":7698,"type":"if","locations":[{"start":{"line":7698,"column":10},"end":{"line":7698,"column":10}},{"start":{"line":7698,"column":10},"end":{"line":7698,"column":10}}]},"714":{"line":7698,"type":"binary-expr","locations":[{"start":{"line":7698,"column":14},"end":{"line":7698,"column":24}},{"start":{"line":7698,"column":28},"end":{"line":7698,"column":41}}]},"715":{"line":7706,"type":"if","locations":[{"start":{"line":7706,"column":8},"end":{"line":7706,"column":8}},{"start":{"line":7706,"column":8},"end":{"line":7706,"column":8}}]},"716":{"line":7706,"type":"binary-expr","locations":[{"start":{"line":7706,"column":12},"end":{"line":7706,"column":26}},{"start":{"line":7706,"column":30},"end":{"line":7706,"column":46}}]},"717":{"line":7721,"type":"binary-expr","locations":[{"start":{"line":7721,"column":23},"end":{"line":7721,"column":31}},{"start":{"line":7721,"column":36},"end":{"line":7721,"column":45}},{"start":{"line":7721,"column":49},"end":{"line":7721,"column":57}}]},"718":{"line":7723,"type":"if","locations":[{"start":{"line":7723,"column":8},"end":{"line":7723,"column":8}},{"start":{"line":7723,"column":8},"end":{"line":7723,"column":8}}]},"719":{"line":7724,"type":"binary-expr","locations":[{"start":{"line":7724,"column":28},"end":{"line":7724,"column":35}},{"start":{"line":7724,"column":39},"end":{"line":7724,"column":49}}]},"720":{"line":7726,"type":"if","locations":[{"start":{"line":7726,"column":10},"end":{"line":7726,"column":10}},{"start":{"line":7726,"column":10},"end":{"line":7726,"column":10}}]},"721":{"line":7726,"type":"binary-expr","locations":[{"start":{"line":7726,"column":14},"end":{"line":7726,"column":27}},{"start":{"line":7726,"column":31},"end":{"line":7726,"column":39}}]},"722":{"line":7730,"type":"binary-expr","locations":[{"start":{"line":7730,"column":25},"end":{"line":7730,"column":39}},{"start":{"line":7730,"column":43},"end":{"line":7730,"column":62}}]},"723":{"line":7732,"type":"if","locations":[{"start":{"line":7732,"column":10},"end":{"line":7732,"column":10}},{"start":{"line":7732,"column":10},"end":{"line":7732,"column":10}}]},"724":{"line":7733,"type":"if","locations":[{"start":{"line":7733,"column":12},"end":{"line":7733,"column":12}},{"start":{"line":7733,"column":12},"end":{"line":7733,"column":12}}]},"725":{"line":7739,"type":"if","locations":[{"start":{"line":7739,"column":15},"end":{"line":7739,"column":15}},{"start":{"line":7739,"column":15},"end":{"line":7739,"column":15}}]},"726":{"line":7743,"type":"if","locations":[{"start":{"line":7743,"column":8},"end":{"line":7743,"column":8}},{"start":{"line":7743,"column":8},"end":{"line":7743,"column":8}}]},"727":{"line":7743,"type":"binary-expr","locations":[{"start":{"line":7743,"column":12},"end":{"line":7743,"column":20}},{"start":{"line":7743,"column":24},"end":{"line":7743,"column":33}}]},"728":{"line":7746,"type":"if","locations":[{"start":{"line":7746,"column":13},"end":{"line":7746,"column":13}},{"start":{"line":7746,"column":13},"end":{"line":7746,"column":13}}]},"729":{"line":7746,"type":"binary-expr","locations":[{"start":{"line":7746,"column":17},"end":{"line":7746,"column":27}},{"start":{"line":7746,"column":31},"end":{"line":7746,"column":47}}]},"730":{"line":7749,"type":"if","locations":[{"start":{"line":7749,"column":8},"end":{"line":7749,"column":8}},{"start":{"line":7749,"column":8},"end":{"line":7749,"column":8}}]},"731":{"line":7753,"type":"if","locations":[{"start":{"line":7753,"column":8},"end":{"line":7753,"column":8}},{"start":{"line":7753,"column":8},"end":{"line":7753,"column":8}}]},"732":{"line":7753,"type":"binary-expr","locations":[{"start":{"line":7753,"column":12},"end":{"line":7753,"column":20}},{"start":{"line":7753,"column":24},"end":{"line":7753,"column":34}},{"start":{"line":7753,"column":38},"end":{"line":7753,"column":51}}]},"733":{"line":7901,"type":"if","locations":[{"start":{"line":7901,"column":6},"end":{"line":7901,"column":6}},{"start":{"line":7901,"column":6},"end":{"line":7901,"column":6}}]},"734":{"line":7901,"type":"binary-expr","locations":[{"start":{"line":7901,"column":10},"end":{"line":7901,"column":35}},{"start":{"line":7901,"column":40},"end":{"line":7901,"column":48}},{"start":{"line":7901,"column":52},"end":{"line":7901,"column":81}}]},"735":{"line":7906,"type":"cond-expr","locations":[{"start":{"line":7906,"column":29},"end":{"line":7906,"column":55}},{"start":{"line":7906,"column":58},"end":{"line":7906,"column":65}}]},"736":{"line":7909,"type":"if","locations":[{"start":{"line":7909,"column":8},"end":{"line":7909,"column":8}},{"start":{"line":7909,"column":8},"end":{"line":7909,"column":8}}]},"737":{"line":7953,"type":"if","locations":[{"start":{"line":7953,"column":6},"end":{"line":7953,"column":6}},{"start":{"line":7953,"column":6},"end":{"line":7953,"column":6}}]},"738":{"line":7953,"type":"binary-expr","locations":[{"start":{"line":7953,"column":10},"end":{"line":7953,"column":35}},{"start":{"line":7953,"column":39},"end":{"line":7953,"column":78}}]},"739":{"line":7986,"type":"if","locations":[{"start":{"line":7986,"column":6},"end":{"line":7986,"column":6}},{"start":{"line":7986,"column":6},"end":{"line":7986,"column":6}}]},"740":{"line":8137,"type":"if","locations":[{"start":{"line":8137,"column":6},"end":{"line":8137,"column":6}},{"start":{"line":8137,"column":6},"end":{"line":8137,"column":6}}]},"741":{"line":8140,"type":"cond-expr","locations":[{"start":{"line":8140,"column":47},"end":{"line":8140,"column":62}},{"start":{"line":8140,"column":67},"end":{"line":8140,"column":78}}]},"742":{"line":8140,"type":"binary-expr","locations":[{"start":{"line":8140,"column":67},"end":{"line":8140,"column":73}},{"start":{"line":8140,"column":77},"end":{"line":8140,"column":78}}]},"743":{"line":8150,"type":"switch","locations":[{"start":{"line":8151,"column":10},"end":{"line":8151,"column":47}},{"start":{"line":8152,"column":10},"end":{"line":8152,"column":56}},{"start":{"line":8153,"column":10},"end":{"line":8153,"column":65}}]},"744":{"line":8197,"type":"if","locations":[{"start":{"line":8197,"column":6},"end":{"line":8197,"column":6}},{"start":{"line":8197,"column":6},"end":{"line":8197,"column":6}}]},"745":{"line":8248,"type":"if","locations":[{"start":{"line":8248,"column":6},"end":{"line":8248,"column":6}},{"start":{"line":8248,"column":6},"end":{"line":8248,"column":6}}]},"746":{"line":8251,"type":"if","locations":[{"start":{"line":8251,"column":6},"end":{"line":8251,"column":6}},{"start":{"line":8251,"column":6},"end":{"line":8251,"column":6}}]},"747":{"line":8253,"type":"if","locations":[{"start":{"line":8253,"column":13},"end":{"line":8253,"column":13}},{"start":{"line":8253,"column":13},"end":{"line":8253,"column":13}}]},"748":{"line":8254,"type":"cond-expr","locations":[{"start":{"line":8254,"column":41},"end":{"line":8254,"column":58}},{"start":{"line":8254,"column":61},"end":{"line":8254,"column":68}}]},"749":{"line":8255,"type":"cond-expr","locations":[{"start":{"line":8255,"column":43},"end":{"line":8255,"column":61}},{"start":{"line":8255,"column":64},"end":{"line":8255,"column":72}}]},"750":{"line":8282,"type":"cond-expr","locations":[{"start":{"line":8282,"column":34},"end":{"line":8282,"column":42}},{"start":{"line":8282,"column":45},"end":{"line":8282,"column":52}}]},"751":{"line":8340,"type":"if","locations":[{"start":{"line":8340,"column":6},"end":{"line":8340,"column":6}},{"start":{"line":8340,"column":6},"end":{"line":8340,"column":6}}]},"752":{"line":8340,"type":"binary-expr","locations":[{"start":{"line":8340,"column":10},"end":{"line":8340,"column":16}},{"start":{"line":8340,"column":20},"end":{"line":8340,"column":46}},{"start":{"line":8340,"column":50},"end":{"line":8340,"column":91}}]},"753":{"line":8343,"type":"if","locations":[{"start":{"line":8343,"column":11},"end":{"line":8343,"column":11}},{"start":{"line":8343,"column":11},"end":{"line":8343,"column":11}}]},"754":{"line":8348,"type":"cond-expr","locations":[{"start":{"line":8349,"column":10},"end":{"line":8349,"column":72}},{"start":{"line":8350,"column":10},"end":{"line":8350,"column":34}}]},"755":{"line":8399,"type":"cond-expr","locations":[{"start":{"line":8400,"column":10},"end":{"line":8400,"column":70}},{"start":{"line":8401,"column":10},"end":{"line":8401,"column":32}}]},"756":{"line":8469,"type":"binary-expr","locations":[{"start":{"line":8469,"column":13},"end":{"line":8469,"column":32}},{"start":{"line":8469,"column":36},"end":{"line":8469,"column":54}},{"start":{"line":8470,"column":8},"end":{"line":8470,"column":44}},{"start":{"line":8470,"column":48},"end":{"line":8470,"column":91}}]},"757":{"line":8489,"type":"binary-expr","locations":[{"start":{"line":8489,"column":18},"end":{"line":8489,"column":31}},{"start":{"line":8489,"column":35},"end":{"line":8491,"column":5}}]},"758":{"line":8490,"type":"binary-expr","locations":[{"start":{"line":8490,"column":13},"end":{"line":8490,"column":32}},{"start":{"line":8490,"column":36},"end":{"line":8490,"column":58}},{"start":{"line":8490,"column":62},"end":{"line":8490,"column":97}}]},"759":{"line":8510,"type":"binary-expr","locations":[{"start":{"line":8510,"column":13},"end":{"line":8510,"column":27}},{"start":{"line":8510,"column":31},"end":{"line":8510,"column":46}},{"start":{"line":8510,"column":51},"end":{"line":8510,"column":70}},{"start":{"line":8510,"column":74},"end":{"line":8510,"column":108}}]},"760":{"line":8530,"type":"binary-expr","locations":[{"start":{"line":8530,"column":13},"end":{"line":8530,"column":32}},{"start":{"line":8530,"column":36},"end":{"line":8530,"column":70}}]},"761":{"line":8550,"type":"binary-expr","locations":[{"start":{"line":8550,"column":13},"end":{"line":8550,"column":20}},{"start":{"line":8550,"column":24},"end":{"line":8550,"column":44}},{"start":{"line":8550,"column":48},"end":{"line":8550,"column":67}},{"start":{"line":8550,"column":71},"end":{"line":8550,"column":92}}]},"762":{"line":8581,"type":"if","locations":[{"start":{"line":8581,"column":6},"end":{"line":8581,"column":6}},{"start":{"line":8581,"column":6},"end":{"line":8581,"column":6}}]},"763":{"line":8584,"type":"if","locations":[{"start":{"line":8584,"column":6},"end":{"line":8584,"column":6}},{"start":{"line":8584,"column":6},"end":{"line":8584,"column":6}}]},"764":{"line":8584,"type":"binary-expr","locations":[{"start":{"line":8584,"column":10},"end":{"line":8584,"column":28}},{"start":{"line":8584,"column":33},"end":{"line":8584,"column":47}},{"start":{"line":8584,"column":51},"end":{"line":8584,"column":66}},{"start":{"line":8584,"column":70},"end":{"line":8584,"column":88}},{"start":{"line":8585,"column":11},"end":{"line":8585,"column":30}},{"start":{"line":8585,"column":34},"end":{"line":8585,"column":58}}]},"765":{"line":8636,"type":"cond-expr","locations":[{"start":{"line":8636,"column":53},"end":{"line":8636,"column":89}},{"start":{"line":8636,"column":92},"end":{"line":8636,"column":101}}]},"766":{"line":8637,"type":"cond-expr","locations":[{"start":{"line":8637,"column":32},"end":{"line":8637,"column":56}},{"start":{"line":8637,"column":59},"end":{"line":8637,"column":68}}]},"767":{"line":8638,"type":"cond-expr","locations":[{"start":{"line":8638,"column":37},"end":{"line":8638,"column":74}},{"start":{"line":8638,"column":77},"end":{"line":8638,"column":85}}]},"768":{"line":8659,"type":"binary-expr","locations":[{"start":{"line":8659,"column":13},"end":{"line":8659,"column":32}},{"start":{"line":8659,"column":36},"end":{"line":8659,"column":68}},{"start":{"line":8659,"column":72},"end":{"line":8659,"column":107}}]},"769":{"line":8690,"type":"binary-expr","locations":[{"start":{"line":8690,"column":13},"end":{"line":8690,"column":37}},{"start":{"line":8690,"column":41},"end":{"line":8690,"column":62}}]},"770":{"line":8713,"type":"binary-expr","locations":[{"start":{"line":8713,"column":13},"end":{"line":8713,"column":28}},{"start":{"line":8713,"column":32},"end":{"line":8713,"column":66}}]},"771":{"line":8740,"type":"binary-expr","locations":[{"start":{"line":8740,"column":13},"end":{"line":8740,"column":20}},{"start":{"line":8740,"column":25},"end":{"line":8740,"column":41}},{"start":{"line":8740,"column":45},"end":{"line":8740,"column":63}}]},"772":{"line":8783,"type":"cond-expr","locations":[{"start":{"line":8783,"column":53},"end":{"line":8783,"column":89}},{"start":{"line":8783,"column":92},"end":{"line":8783,"column":101}}]},"773":{"line":8815,"type":"binary-expr","locations":[{"start":{"line":8815,"column":13},"end":{"line":8815,"column":28}},{"start":{"line":8815,"column":32},"end":{"line":8815,"column":47}}]},"774":{"line":8835,"type":"if","locations":[{"start":{"line":8835,"column":6},"end":{"line":8835,"column":6}},{"start":{"line":8835,"column":6},"end":{"line":8835,"column":6}}]},"775":{"line":8838,"type":"if","locations":[{"start":{"line":8838,"column":6},"end":{"line":8838,"column":6}},{"start":{"line":8838,"column":6},"end":{"line":8838,"column":6}}]},"776":{"line":8841,"type":"binary-expr","locations":[{"start":{"line":8841,"column":13},"end":{"line":8841,"column":32}},{"start":{"line":8841,"column":36},"end":{"line":8841,"column":60}}]},"777":{"line":8887,"type":"binary-expr","locations":[{"start":{"line":8887,"column":13},"end":{"line":8887,"column":37}},{"start":{"line":8887,"column":42},"end":{"line":8887,"column":61}},{"start":{"line":8887,"column":65},"end":{"line":8887,"column":101}}]},"778":{"line":8924,"type":"if","locations":[{"start":{"line":8924,"column":6},"end":{"line":8924,"column":6}},{"start":{"line":8924,"column":6},"end":{"line":8924,"column":6}}]},"779":{"line":8924,"type":"binary-expr","locations":[{"start":{"line":8924,"column":10},"end":{"line":8924,"column":95}},{"start":{"line":8925,"column":11},"end":{"line":8925,"column":53}},{"start":{"line":8925,"column":58},"end":{"line":8925,"column":136}}]},"780":{"line":8924,"type":"binary-expr","locations":[{"start":{"line":8924,"column":12},"end":{"line":8924,"column":31}},{"start":{"line":8924,"column":35},"end":{"line":8924,"column":71}},{"start":{"line":8924,"column":75},"end":{"line":8924,"column":94}}]},"781":{"line":8925,"type":"binary-expr","locations":[{"start":{"line":8925,"column":84},"end":{"line":8925,"column":109}},{"start":{"line":8925,"column":113},"end":{"line":8925,"column":136}}]},"782":{"line":8938,"type":"binary-expr","locations":[{"start":{"line":8938,"column":13},"end":{"line":8938,"column":33}},{"start":{"line":8938,"column":37},"end":{"line":8938,"column":71}}]},"783":{"line":8958,"type":"binary-expr","locations":[{"start":{"line":8958,"column":13},"end":{"line":8958,"column":28}},{"start":{"line":8958,"column":32},"end":{"line":8958,"column":68}}]},"784":{"line":8978,"type":"binary-expr","locations":[{"start":{"line":8978,"column":13},"end":{"line":8978,"column":37}},{"start":{"line":8978,"column":42},"end":{"line":8978,"column":61}},{"start":{"line":8978,"column":65},"end":{"line":8978,"column":101}}]},"785":{"line":8998,"type":"binary-expr","locations":[{"start":{"line":8998,"column":13},"end":{"line":8998,"column":32}},{"start":{"line":8998,"column":36},"end":{"line":8998,"column":58}},{"start":{"line":8998,"column":62},"end":{"line":8998,"column":103}}]},"786":{"line":9085,"type":"cond-expr","locations":[{"start":{"line":9085,"column":27},"end":{"line":9085,"column":43}},{"start":{"line":9085,"column":46},"end":{"line":9085,"column":47}}]},"787":{"line":9086,"type":"if","locations":[{"start":{"line":9086,"column":6},"end":{"line":9086,"column":6}},{"start":{"line":9086,"column":6},"end":{"line":9086,"column":6}}]},"788":{"line":9089,"type":"if","locations":[{"start":{"line":9089,"column":6},"end":{"line":9089,"column":6}},{"start":{"line":9089,"column":6},"end":{"line":9089,"column":6}}]},"789":{"line":9207,"type":"cond-expr","locations":[{"start":{"line":9208,"column":10},"end":{"line":9208,"column":48}},{"start":{"line":9209,"column":10},"end":{"line":9209,"column":36}}]},"790":{"line":9248,"type":"if","locations":[{"start":{"line":9248,"column":6},"end":{"line":9248,"column":6}},{"start":{"line":9248,"column":6},"end":{"line":9248,"column":6}}]},"791":{"line":9248,"type":"binary-expr","locations":[{"start":{"line":9248,"column":10},"end":{"line":9248,"column":15}},{"start":{"line":9248,"column":19},"end":{"line":9248,"column":63}}]},"792":{"line":9251,"type":"cond-expr","locations":[{"start":{"line":9251,"column":26},"end":{"line":9251,"column":56}},{"start":{"line":9251,"column":59},"end":{"line":9251,"column":65}}]},"793":{"line":9550,"type":"cond-expr","locations":[{"start":{"line":9550,"column":36},"end":{"line":9550,"column":45}},{"start":{"line":9550,"column":48},"end":{"line":9550,"column":88}}]},"794":{"line":9551,"type":"cond-expr","locations":[{"start":{"line":9551,"column":36},"end":{"line":9551,"column":48}},{"start":{"line":9551,"column":51},"end":{"line":9551,"column":57}}]},"795":{"line":9577,"type":"if","locations":[{"start":{"line":9577,"column":6},"end":{"line":9577,"column":6}},{"start":{"line":9577,"column":6},"end":{"line":9577,"column":6}}]},"796":{"line":9581,"type":"if","locations":[{"start":{"line":9581,"column":6},"end":{"line":9581,"column":6}},{"start":{"line":9581,"column":6},"end":{"line":9581,"column":6}}]},"797":{"line":9581,"type":"binary-expr","locations":[{"start":{"line":9581,"column":10},"end":{"line":9581,"column":17}},{"start":{"line":9581,"column":21},"end":{"line":9581,"column":33}}]},"798":{"line":9583,"type":"cond-expr","locations":[{"start":{"line":9583,"column":36},"end":{"line":9583,"column":42}},{"start":{"line":9583,"column":45},"end":{"line":9583,"column":84}}]},"799":{"line":9584,"type":"if","locations":[{"start":{"line":9584,"column":8},"end":{"line":9584,"column":8}},{"start":{"line":9584,"column":8},"end":{"line":9584,"column":8}}]},"800":{"line":9590,"type":"binary-expr","locations":[{"start":{"line":9590,"column":13},"end":{"line":9590,"column":19}},{"start":{"line":9590,"column":24},"end":{"line":9590,"column":47}},{"start":{"line":9590,"column":51},"end":{"line":9590,"column":79}},{"start":{"line":9591,"column":9},"end":{"line":9591,"column":24}},{"start":{"line":9591,"column":28},"end":{"line":9591,"column":47}}]},"801":{"line":9618,"type":"if","locations":[{"start":{"line":9618,"column":6},"end":{"line":9618,"column":6}},{"start":{"line":9618,"column":6},"end":{"line":9618,"column":6}}]},"802":{"line":9618,"type":"binary-expr","locations":[{"start":{"line":9618,"column":10},"end":{"line":9618,"column":15}},{"start":{"line":9618,"column":19},"end":{"line":9618,"column":60}}]},"803":{"line":9630,"type":"if","locations":[{"start":{"line":9630,"column":8},"end":{"line":9630,"column":8}},{"start":{"line":9630,"column":8},"end":{"line":9630,"column":8}}]},"804":{"line":9631,"type":"if","locations":[{"start":{"line":9631,"column":10},"end":{"line":9631,"column":10}},{"start":{"line":9631,"column":10},"end":{"line":9631,"column":10}}]},"805":{"line":9671,"type":"cond-expr","locations":[{"start":{"line":9671,"column":29},"end":{"line":9671,"column":37}},{"start":{"line":9671,"column":40},"end":{"line":9678,"column":5}}]},"806":{"line":9672,"type":"cond-expr","locations":[{"start":{"line":9672,"column":34},"end":{"line":9672,"column":43}},{"start":{"line":9672,"column":46},"end":{"line":9672,"column":64}}]},"807":{"line":9673,"type":"if","locations":[{"start":{"line":9673,"column":6},"end":{"line":9673,"column":6}},{"start":{"line":9673,"column":6},"end":{"line":9673,"column":6}}]},"808":{"line":9673,"type":"binary-expr","locations":[{"start":{"line":9673,"column":11},"end":{"line":9673,"column":36}},{"start":{"line":9673,"column":40},"end":{"line":9673,"column":65}},{"start":{"line":9674,"column":11},"end":{"line":9674,"column":38}},{"start":{"line":9674,"column":42},"end":{"line":9674,"column":61}}]},"809":{"line":9677,"type":"cond-expr","locations":[{"start":{"line":9677,"column":32},"end":{"line":9677,"column":50}},{"start":{"line":9677,"column":53},"end":{"line":9677,"column":55}}]},"810":{"line":9703,"type":"if","locations":[{"start":{"line":9703,"column":6},"end":{"line":9703,"column":6}},{"start":{"line":9703,"column":6},"end":{"line":9703,"column":6}}]},"811":{"line":9706,"type":"if","locations":[{"start":{"line":9706,"column":6},"end":{"line":9706,"column":6}},{"start":{"line":9706,"column":6},"end":{"line":9706,"column":6}}]},"812":{"line":9710,"type":"binary-expr","locations":[{"start":{"line":9710,"column":16},"end":{"line":9710,"column":22}},{"start":{"line":9710,"column":26},"end":{"line":9710,"column":42}},{"start":{"line":9711,"column":9},"end":{"line":9711,"column":24}},{"start":{"line":9711,"column":28},"end":{"line":9711,"column":47}},{"start":{"line":9711,"column":52},"end":{"line":9711,"column":58}},{"start":{"line":9711,"column":63},"end":{"line":9711,"column":64}}]},"813":{"line":9715,"type":"binary-expr","locations":[{"start":{"line":9715,"column":20},"end":{"line":9715,"column":45}},{"start":{"line":9715,"column":49},"end":{"line":9715,"column":74}}]},"814":{"line":9723,"type":"if","locations":[{"start":{"line":9723,"column":8},"end":{"line":9723,"column":8}},{"start":{"line":9723,"column":8},"end":{"line":9723,"column":8}}]},"815":{"line":9723,"type":"binary-expr","locations":[{"start":{"line":9723,"column":12},"end":{"line":9723,"column":50}},{"start":{"line":9724,"column":12},"end":{"line":9724,"column":85}}]},"816":{"line":9723,"type":"binary-expr","locations":[{"start":{"line":9723,"column":14},"end":{"line":9723,"column":25}},{"start":{"line":9723,"column":29},"end":{"line":9723,"column":49}}]},"817":{"line":9724,"type":"binary-expr","locations":[{"start":{"line":9724,"column":14},"end":{"line":9724,"column":34}},{"start":{"line":9724,"column":39},"end":{"line":9724,"column":46}},{"start":{"line":9724,"column":50},"end":{"line":9724,"column":83}}]},"818":{"line":9820,"type":"if","locations":[{"start":{"line":9820,"column":6},"end":{"line":9820,"column":6}},{"start":{"line":9820,"column":6},"end":{"line":9820,"column":6}}]},"819":{"line":9823,"type":"if","locations":[{"start":{"line":9823,"column":6},"end":{"line":9823,"column":6}},{"start":{"line":9823,"column":6},"end":{"line":9823,"column":6}}]},"820":{"line":9889,"type":"if","locations":[{"start":{"line":9889,"column":6},"end":{"line":9889,"column":6}},{"start":{"line":9889,"column":6},"end":{"line":9889,"column":6}}]},"821":{"line":9892,"type":"cond-expr","locations":[{"start":{"line":9893,"column":10},"end":{"line":9893,"column":69}},{"start":{"line":9894,"column":10},"end":{"line":9894,"column":49}}]},"822":{"line":9926,"type":"cond-expr","locations":[{"start":{"line":9926,"column":36},"end":{"line":9926,"column":45}},{"start":{"line":9926,"column":48},"end":{"line":9926,"column":60}}]},"823":{"line":9927,"type":"if","locations":[{"start":{"line":9927,"column":6},"end":{"line":9927,"column":6}},{"start":{"line":9927,"column":6},"end":{"line":9927,"column":6}}]},"824":{"line":9928,"type":"if","locations":[{"start":{"line":9928,"column":8},"end":{"line":9928,"column":8}},{"start":{"line":9928,"column":8},"end":{"line":9928,"column":8}}]},"825":{"line":9928,"type":"binary-expr","locations":[{"start":{"line":9928,"column":12},"end":{"line":9928,"column":26}},{"start":{"line":9928,"column":30},"end":{"line":9928,"column":50}}]},"826":{"line":9930,"type":"cond-expr","locations":[{"start":{"line":9930,"column":38},"end":{"line":9930,"column":44}},{"start":{"line":9930,"column":47},"end":{"line":9930,"column":86}}]},"827":{"line":9931,"type":"cond-expr","locations":[{"start":{"line":9931,"column":36},"end":{"line":9931,"column":45}},{"start":{"line":9931,"column":48},"end":{"line":9931,"column":66}}]},"828":{"line":9933,"type":"cond-expr","locations":[{"start":{"line":9933,"column":40},"end":{"line":9933,"column":52}},{"start":{"line":9933,"column":55},"end":{"line":9933,"column":61}}]},"829":{"line":9935,"type":"cond-expr","locations":[{"start":{"line":9935,"column":34},"end":{"line":9935,"column":53}},{"start":{"line":9935,"column":56},"end":{"line":9935,"column":62}}]},"830":{"line":9962,"type":"if","locations":[{"start":{"line":9962,"column":6},"end":{"line":9962,"column":6}},{"start":{"line":9962,"column":6},"end":{"line":9962,"column":6}}]},"831":{"line":9966,"type":"cond-expr","locations":[{"start":{"line":9966,"column":64},"end":{"line":9966,"column":73}},{"start":{"line":9966,"column":76},"end":{"line":9966,"column":88}}]},"832":{"line":9966,"type":"binary-expr","locations":[{"start":{"line":9966,"column":14},"end":{"line":9966,"column":37}},{"start":{"line":9966,"column":41},"end":{"line":9966,"column":60}}]},"833":{"line":9973,"type":"binary-expr","locations":[{"start":{"line":9973,"column":13},"end":{"line":9973,"column":27}},{"start":{"line":9973,"column":31},"end":{"line":9973,"column":47}}]},"834":{"line":9975,"type":"if","locations":[{"start":{"line":9975,"column":8},"end":{"line":9975,"column":8}},{"start":{"line":9975,"column":8},"end":{"line":9975,"column":8}}]},"835":{"line":9976,"type":"if","locations":[{"start":{"line":9976,"column":10},"end":{"line":9976,"column":10}},{"start":{"line":9976,"column":10},"end":{"line":9976,"column":10}}]},"836":{"line":9978,"type":"if","locations":[{"start":{"line":9978,"column":17},"end":{"line":9978,"column":17}},{"start":{"line":9978,"column":17},"end":{"line":9978,"column":17}}]},"837":{"line":9979,"type":"cond-expr","locations":[{"start":{"line":9979,"column":53},"end":{"line":9979,"column":55}},{"start":{"line":9979,"column":58},"end":{"line":9979,"column":60}}]},"838":{"line":10017,"type":"binary-expr","locations":[{"start":{"line":10017,"column":18},"end":{"line":10017,"column":33}},{"start":{"line":10017,"column":37},"end":{"line":10017,"column":57}}]},"839":{"line":10020,"type":"if","locations":[{"start":{"line":10020,"column":6},"end":{"line":10020,"column":6}},{"start":{"line":10020,"column":6},"end":{"line":10020,"column":6}}]},"840":{"line":10021,"type":"if","locations":[{"start":{"line":10021,"column":8},"end":{"line":10021,"column":8}},{"start":{"line":10021,"column":8},"end":{"line":10021,"column":8}}]},"841":{"line":10021,"type":"binary-expr","locations":[{"start":{"line":10021,"column":12},"end":{"line":10021,"column":17}},{"start":{"line":10021,"column":21},"end":{"line":10021,"column":37}}]},"842":{"line":10023,"type":"if","locations":[{"start":{"line":10023,"column":10},"end":{"line":10023,"column":10}},{"start":{"line":10023,"column":10},"end":{"line":10023,"column":10}}]},"843":{"line":10024,"type":"cond-expr","locations":[{"start":{"line":10024,"column":44},"end":{"line":10024,"column":52}},{"start":{"line":10024,"column":55},"end":{"line":10024,"column":57}}]},"844":{"line":10026,"type":"cond-expr","locations":[{"start":{"line":10026,"column":56},"end":{"line":10026,"column":70}},{"start":{"line":10026,"column":73},"end":{"line":10026,"column":82}}]},"845":{"line":10032,"type":"cond-expr","locations":[{"start":{"line":10032,"column":15},"end":{"line":10032,"column":24}},{"start":{"line":10032,"column":27},"end":{"line":10032,"column":37}}]},"846":{"line":10128,"type":"binary-expr","locations":[{"start":{"line":10128,"column":14},"end":{"line":10128,"column":20}},{"start":{"line":10128,"column":24},"end":{"line":10128,"column":25}}]},"847":{"line":10129,"type":"if","locations":[{"start":{"line":10129,"column":6},"end":{"line":10129,"column":6}},{"start":{"line":10129,"column":6},"end":{"line":10129,"column":6}}]},"848":{"line":10133,"type":"binary-expr","locations":[{"start":{"line":10133,"column":14},"end":{"line":10133,"column":18}},{"start":{"line":10133,"column":22},"end":{"line":10133,"column":23}}]},"849":{"line":10135,"type":"binary-expr","locations":[{"start":{"line":10135,"column":13},"end":{"line":10135,"column":43}},{"start":{"line":10135,"column":47},"end":{"line":10135,"column":76}}]},"850":{"line":10166,"type":"if","locations":[{"start":{"line":10166,"column":6},"end":{"line":10166,"column":6}},{"start":{"line":10166,"column":6},"end":{"line":10166,"column":6}}]},"851":{"line":10166,"type":"binary-expr","locations":[{"start":{"line":10166,"column":10},"end":{"line":10166,"column":18}},{"start":{"line":10166,"column":22},"end":{"line":10166,"column":56}}]},"852":{"line":10172,"type":"if","locations":[{"start":{"line":10172,"column":6},"end":{"line":10172,"column":6}},{"start":{"line":10172,"column":6},"end":{"line":10172,"column":6}}]},"853":{"line":10173,"type":"if","locations":[{"start":{"line":10173,"column":8},"end":{"line":10173,"column":8}},{"start":{"line":10173,"column":8},"end":{"line":10173,"column":8}}]},"854":{"line":10173,"type":"binary-expr","locations":[{"start":{"line":10173,"column":12},"end":{"line":10173,"column":17}},{"start":{"line":10173,"column":21},"end":{"line":10173,"column":44}}]},"855":{"line":10177,"type":"if","locations":[{"start":{"line":10177,"column":13},"end":{"line":10177,"column":13}},{"start":{"line":10177,"column":13},"end":{"line":10177,"column":13}}]},"856":{"line":10182,"type":"if","locations":[{"start":{"line":10182,"column":6},"end":{"line":10182,"column":6}},{"start":{"line":10182,"column":6},"end":{"line":10182,"column":6}}]},"857":{"line":10182,"type":"binary-expr","locations":[{"start":{"line":10182,"column":10},"end":{"line":10182,"column":15}},{"start":{"line":10182,"column":19},"end":{"line":10182,"column":24}}]},"858":{"line":10186,"type":"binary-expr","locations":[{"start":{"line":10186,"column":12},"end":{"line":10186,"column":16}},{"start":{"line":10186,"column":20},"end":{"line":10186,"column":21}}]},"859":{"line":10187,"type":"if","locations":[{"start":{"line":10187,"column":6},"end":{"line":10187,"column":6}},{"start":{"line":10187,"column":6},"end":{"line":10187,"column":6}}]},"860":{"line":10191,"type":"binary-expr","locations":[{"start":{"line":10191,"column":14},"end":{"line":10191,"column":18}},{"start":{"line":10191,"column":22},"end":{"line":10191,"column":23}}]},"861":{"line":10193,"type":"if","locations":[{"start":{"line":10193,"column":6},"end":{"line":10193,"column":6}},{"start":{"line":10193,"column":6},"end":{"line":10193,"column":6}}]},"862":{"line":10193,"type":"binary-expr","locations":[{"start":{"line":10193,"column":10},"end":{"line":10193,"column":18}},{"start":{"line":10193,"column":22},"end":{"line":10193,"column":29}},{"start":{"line":10193,"column":33},"end":{"line":10193,"column":40}}]},"863":{"line":10223,"type":"cond-expr","locations":[{"start":{"line":10223,"column":32},"end":{"line":10223,"column":76}},{"start":{"line":10223,"column":80},"end":{"line":10223,"column":84}}]},"864":{"line":10241,"type":"binary-expr","locations":[{"start":{"line":10241,"column":13},"end":{"line":10241,"column":19}},{"start":{"line":10241,"column":24},"end":{"line":10241,"column":72}}]},"865":{"line":10260,"type":"binary-expr","locations":[{"start":{"line":10260,"column":13},"end":{"line":10260,"column":19}},{"start":{"line":10260,"column":23},"end":{"line":10260,"column":86}}]},"866":{"line":10289,"type":"cond-expr","locations":[{"start":{"line":10290,"column":10},"end":{"line":10290,"column":16}},{"start":{"line":10291,"column":10},"end":{"line":10291,"column":64}}]},"867":{"line":10291,"type":"cond-expr","locations":[{"start":{"line":10291,"column":35},"end":{"line":10291,"column":36}},{"start":{"line":10291,"column":40},"end":{"line":10291,"column":54}}]},"868":{"line":10291,"type":"binary-expr","locations":[{"start":{"line":10291,"column":40},"end":{"line":10291,"column":49}},{"start":{"line":10291,"column":53},"end":{"line":10291,"column":54}}]},"869":{"line":10294,"type":"binary-expr","locations":[{"start":{"line":10294,"column":13},"end":{"line":10294,"column":26}},{"start":{"line":10294,"column":30},"end":{"line":10294,"column":74}}]},"870":{"line":10332,"type":"cond-expr","locations":[{"start":{"line":10333,"column":10},"end":{"line":10333,"column":57}},{"start":{"line":10334,"column":10},"end":{"line":10334,"column":16}}]},"871":{"line":10332,"type":"binary-expr","locations":[{"start":{"line":10332,"column":14},"end":{"line":10332,"column":20}},{"start":{"line":10332,"column":24},"end":{"line":10332,"column":55}}]},"872":{"line":10353,"type":"cond-expr","locations":[{"start":{"line":10354,"column":10},"end":{"line":10354,"column":57}},{"start":{"line":10355,"column":11},"end":{"line":10355,"column":27}}]},"873":{"line":10353,"type":"binary-expr","locations":[{"start":{"line":10353,"column":14},"end":{"line":10353,"column":20}},{"start":{"line":10353,"column":24},"end":{"line":10353,"column":53}}]},"874":{"line":10355,"type":"binary-expr","locations":[{"start":{"line":10355,"column":11},"end":{"line":10355,"column":17}},{"start":{"line":10355,"column":21},"end":{"line":10355,"column":27}}]},"875":{"line":10378,"type":"cond-expr","locations":[{"start":{"line":10378,"column":31},"end":{"line":10378,"column":34}},{"start":{"line":10378,"column":37},"end":{"line":10378,"column":39}}]},"876":{"line":10408,"type":"if","locations":[{"start":{"line":10408,"column":6},"end":{"line":10408,"column":6}},{"start":{"line":10408,"column":6},"end":{"line":10408,"column":6}}]},"877":{"line":10408,"type":"binary-expr","locations":[{"start":{"line":10408,"column":10},"end":{"line":10408,"column":29}},{"start":{"line":10408,"column":33},"end":{"line":10408,"column":56}}]},"878":{"line":10494,"type":"if","locations":[{"start":{"line":10494,"column":6},"end":{"line":10494,"column":6}},{"start":{"line":10494,"column":6},"end":{"line":10494,"column":6}}]},"879":{"line":10494,"type":"cond-expr","locations":[{"start":{"line":10494,"column":18},"end":{"line":10494,"column":54}},{"start":{"line":10494,"column":57},"end":{"line":10494,"column":70}}]},"880":{"line":10496,"type":"if","locations":[{"start":{"line":10496,"column":13},"end":{"line":10496,"column":13}},{"start":{"line":10496,"column":13},"end":{"line":10496,"column":13}}]},"881":{"line":10500,"type":"binary-expr","locations":[{"start":{"line":10500,"column":36},"end":{"line":10500,"column":41}},{"start":{"line":10500,"column":46},"end":{"line":10500,"column":83}}]},"882":{"line":10500,"type":"cond-expr","locations":[{"start":{"line":10500,"column":76},"end":{"line":10500,"column":78}},{"start":{"line":10500,"column":81},"end":{"line":10500,"column":83}}]},"883":{"line":10527,"type":"if","locations":[{"start":{"line":10527,"column":6},"end":{"line":10527,"column":6}},{"start":{"line":10527,"column":6},"end":{"line":10527,"column":6}}]},"884":{"line":10527,"type":"binary-expr","locations":[{"start":{"line":10527,"column":10},"end":{"line":10527,"column":15}},{"start":{"line":10527,"column":19},"end":{"line":10527,"column":26}},{"start":{"line":10527,"column":30},"end":{"line":10527,"column":48}}]},"885":{"line":10533,"type":"if","locations":[{"start":{"line":10533,"column":8},"end":{"line":10533,"column":8}},{"start":{"line":10533,"column":8},"end":{"line":10533,"column":8}}]},"886":{"line":10563,"type":"cond-expr","locations":[{"start":{"line":10563,"column":31},"end":{"line":10563,"column":34}},{"start":{"line":10563,"column":37},"end":{"line":10563,"column":39}}]},"887":{"line":10586,"type":"cond-expr","locations":[{"start":{"line":10586,"column":31},"end":{"line":10586,"column":34}},{"start":{"line":10586,"column":37},"end":{"line":10586,"column":39}}]},"888":{"line":10612,"type":"cond-expr","locations":[{"start":{"line":10613,"column":10},"end":{"line":10613,"column":11}},{"start":{"line":10614,"column":10},"end":{"line":10614,"column":71}}]},"889":{"line":10614,"type":"cond-expr","locations":[{"start":{"line":10614,"column":35},"end":{"line":10614,"column":36}},{"start":{"line":10614,"column":40},"end":{"line":10614,"column":54}}]},"890":{"line":10614,"type":"binary-expr","locations":[{"start":{"line":10614,"column":40},"end":{"line":10614,"column":49}},{"start":{"line":10614,"column":53},"end":{"line":10614,"column":54}}]},"891":{"line":10720,"type":"if","locations":[{"start":{"line":10720,"column":6},"end":{"line":10720,"column":6}},{"start":{"line":10720,"column":6},"end":{"line":10720,"column":6}}]},"892":{"line":10720,"type":"binary-expr","locations":[{"start":{"line":10720,"column":10},"end":{"line":10720,"column":22}},{"start":{"line":10720,"column":26},"end":{"line":10720,"column":71}}]},"893":{"line":10724,"type":"binary-expr","locations":[{"start":{"line":10724,"column":42},"end":{"line":10724,"column":54}},{"start":{"line":10724,"column":58},"end":{"line":10724,"column":65}}]},"894":{"line":10733,"type":"binary-expr","locations":[{"start":{"line":10733,"column":24},"end":{"line":10733,"column":43}},{"start":{"line":10733,"column":47},"end":{"line":10733,"column":56}}]},"895":{"line":10738,"type":"binary-expr","locations":[{"start":{"line":10738,"column":9},"end":{"line":10738,"column":23}},{"start":{"line":10738,"column":27},"end":{"line":10738,"column":36}}]},"896":{"line":10740,"type":"cond-expr","locations":[{"start":{"line":10740,"column":41},"end":{"line":10740,"column":53}},{"start":{"line":10740,"column":56},"end":{"line":10740,"column":65}}]},"897":{"line":10741,"type":"binary-expr","locations":[{"start":{"line":10741,"column":9},"end":{"line":10741,"column":25}},{"start":{"line":10741,"column":29},"end":{"line":10741,"column":38}}]},"898":{"line":10746,"type":"cond-expr","locations":[{"start":{"line":10747,"column":12},"end":{"line":10747,"column":29}},{"start":{"line":10748,"column":13},"end":{"line":10748,"column":66}}]},"899":{"line":10752,"type":"binary-expr","locations":[{"start":{"line":10752,"column":8},"end":{"line":10752,"column":24}},{"start":{"line":10752,"column":29},"end":{"line":10752,"column":63}}]},"900":{"line":10758,"type":"if","locations":[{"start":{"line":10758,"column":8},"end":{"line":10758,"column":8}},{"start":{"line":10758,"column":8},"end":{"line":10758,"column":8}}]},"901":{"line":10762,"type":"if","locations":[{"start":{"line":10762,"column":8},"end":{"line":10762,"column":8}},{"start":{"line":10762,"column":8},"end":{"line":10762,"column":8}}]},"902":{"line":10766,"type":"if","locations":[{"start":{"line":10766,"column":8},"end":{"line":10766,"column":8}},{"start":{"line":10766,"column":8},"end":{"line":10766,"column":8}}]},"903":{"line":10781,"type":"if","locations":[{"start":{"line":10781,"column":6},"end":{"line":10781,"column":6}},{"start":{"line":10781,"column":6},"end":{"line":10781,"column":6}}]},"904":{"line":10785,"type":"cond-expr","locations":[{"start":{"line":10785,"column":31},"end":{"line":10785,"column":71}},{"start":{"line":10785,"column":74},"end":{"line":10785,"column":80}}]},"905":{"line":10790,"type":"binary-expr","locations":[{"start":{"line":10790,"column":30},"end":{"line":10790,"column":38}},{"start":{"line":10790,"column":42},"end":{"line":10790,"column":47}}]},"906":{"line":10791,"type":"cond-expr","locations":[{"start":{"line":10792,"column":12},"end":{"line":10792,"column":14}},{"start":{"line":10793,"column":12},"end":{"line":10793,"column":34}}]},"907":{"line":10796,"type":"cond-expr","locations":[{"start":{"line":10797,"column":13},"end":{"line":10797,"column":31}},{"start":{"line":10798,"column":13},"end":{"line":10798,"column":15}}]},"908":{"line":10800,"type":"cond-expr","locations":[{"start":{"line":10801,"column":12},"end":{"line":10802,"column":67}},{"start":{"line":10803,"column":12},"end":{"line":10803,"column":17}}]},"909":{"line":10815,"type":"if","locations":[{"start":{"line":10815,"column":6},"end":{"line":10815,"column":6}},{"start":{"line":10815,"column":6},"end":{"line":10815,"column":6}}]},"910":{"line":10845,"type":"if","locations":[{"start":{"line":10845,"column":6},"end":{"line":10845,"column":6}},{"start":{"line":10845,"column":6},"end":{"line":10845,"column":6}}]},"911":{"line":10848,"type":"if","locations":[{"start":{"line":10848,"column":6},"end":{"line":10848,"column":6}},{"start":{"line":10848,"column":6},"end":{"line":10848,"column":6}}]},"912":{"line":10848,"type":"cond-expr","locations":[{"start":{"line":10848,"column":18},"end":{"line":10848,"column":53}},{"start":{"line":10848,"column":56},"end":{"line":10848,"column":69}}]},"913":{"line":10876,"type":"if","locations":[{"start":{"line":10876,"column":6},"end":{"line":10876,"column":6}},{"start":{"line":10876,"column":6},"end":{"line":10876,"column":6}}]},"914":{"line":10879,"type":"if","locations":[{"start":{"line":10879,"column":6},"end":{"line":10879,"column":6}},{"start":{"line":10879,"column":6},"end":{"line":10879,"column":6}}]},"915":{"line":10879,"type":"cond-expr","locations":[{"start":{"line":10879,"column":18},"end":{"line":10879,"column":53}},{"start":{"line":10879,"column":56},"end":{"line":10879,"column":69}}]},"916":{"line":10906,"type":"if","locations":[{"start":{"line":10906,"column":6},"end":{"line":10906,"column":6}},{"start":{"line":10906,"column":6},"end":{"line":10906,"column":6}}]},"917":{"line":10909,"type":"if","locations":[{"start":{"line":10909,"column":6},"end":{"line":10909,"column":6}},{"start":{"line":10909,"column":6},"end":{"line":10909,"column":6}}]},"918":{"line":10909,"type":"cond-expr","locations":[{"start":{"line":10909,"column":18},"end":{"line":10909,"column":53}},{"start":{"line":10909,"column":56},"end":{"line":10909,"column":69}}]},"919":{"line":10956,"type":"if","locations":[{"start":{"line":10956,"column":6},"end":{"line":10956,"column":6}},{"start":{"line":10956,"column":6},"end":{"line":10956,"column":6}}]},"920":{"line":10956,"type":"binary-expr","locations":[{"start":{"line":10956,"column":10},"end":{"line":10956,"column":15}},{"start":{"line":10956,"column":19},"end":{"line":10956,"column":57}}]},"921":{"line":10962,"type":"if","locations":[{"start":{"line":10962,"column":6},"end":{"line":10962,"column":6}},{"start":{"line":10962,"column":6},"end":{"line":10962,"column":6}}]},"922":{"line":10963,"type":"if","locations":[{"start":{"line":10963,"column":8},"end":{"line":10963,"column":8}},{"start":{"line":10963,"column":8},"end":{"line":10963,"column":8}}]},"923":{"line":10964,"type":"cond-expr","locations":[{"start":{"line":10964,"column":51},"end":{"line":10964,"column":68}},{"start":{"line":10964,"column":71},"end":{"line":10964,"column":80}}]},"924":{"line":10965,"type":"cond-expr","locations":[{"start":{"line":10965,"column":42},"end":{"line":10965,"column":62}},{"start":{"line":10965,"column":66},"end":{"line":10965,"column":72}}]},"925":{"line":10965,"type":"binary-expr","locations":[{"start":{"line":10965,"column":42},"end":{"line":10965,"column":57}},{"start":{"line":10965,"column":61},"end":{"line":10965,"column":62}}]},"926":{"line":10966,"type":"cond-expr","locations":[{"start":{"line":10966,"column":45},"end":{"line":10966,"column":75}},{"start":{"line":10966,"column":78},"end":{"line":10966,"column":86}}]},"927":{"line":10968,"type":"binary-expr","locations":[{"start":{"line":10968,"column":19},"end":{"line":10968,"column":27}},{"start":{"line":10968,"column":31},"end":{"line":10968,"column":32}}]},"928":{"line":10972,"type":"if","locations":[{"start":{"line":10972,"column":6},"end":{"line":10972,"column":6}},{"start":{"line":10972,"column":6},"end":{"line":10972,"column":6}}]},"929":{"line":10976,"type":"if","locations":[{"start":{"line":10976,"column":6},"end":{"line":10976,"column":6}},{"start":{"line":10976,"column":6},"end":{"line":10976,"column":6}}]},"930":{"line":10980,"type":"if","locations":[{"start":{"line":10980,"column":6},"end":{"line":10980,"column":6}},{"start":{"line":10980,"column":6},"end":{"line":10980,"column":6}}]},"931":{"line":10983,"type":"if","locations":[{"start":{"line":10983,"column":6},"end":{"line":10983,"column":6}},{"start":{"line":10983,"column":6},"end":{"line":10983,"column":6}}]},"932":{"line":10984,"type":"if","locations":[{"start":{"line":10984,"column":8},"end":{"line":10984,"column":8}},{"start":{"line":10984,"column":8},"end":{"line":10984,"column":8}}]},"933":{"line":10989,"type":"if","locations":[{"start":{"line":10989,"column":10},"end":{"line":10989,"column":10}},{"start":{"line":10989,"column":10},"end":{"line":10989,"column":10}}]},"934":{"line":10990,"type":"binary-expr","locations":[{"start":{"line":10990,"column":50},"end":{"line":10990,"column":73}},{"start":{"line":10990,"column":77},"end":{"line":10990,"column":79}}]},"935":{"line":10996,"type":"cond-expr","locations":[{"start":{"line":10996,"column":52},"end":{"line":10996,"column":55}},{"start":{"line":10996,"column":58},"end":{"line":10996,"column":64}}]},"936":{"line":10998,"type":"if","locations":[{"start":{"line":10998,"column":13},"end":{"line":10998,"column":13}},{"start":{"line":10998,"column":13},"end":{"line":10998,"column":13}}]},"937":{"line":11000,"type":"if","locations":[{"start":{"line":11000,"column":8},"end":{"line":11000,"column":8}},{"start":{"line":11000,"column":8},"end":{"line":11000,"column":8}}]},"938":{"line":11027,"type":"cond-expr","locations":[{"start":{"line":11028,"column":10},"end":{"line":11028,"column":57}},{"start":{"line":11029,"column":10},"end":{"line":11029,"column":16}}]},"939":{"line":11027,"type":"binary-expr","locations":[{"start":{"line":11027,"column":14},"end":{"line":11027,"column":20}},{"start":{"line":11027,"column":24},"end":{"line":11027,"column":53}}]},"940":{"line":11051,"type":"if","locations":[{"start":{"line":11051,"column":6},"end":{"line":11051,"column":6}},{"start":{"line":11051,"column":6},"end":{"line":11051,"column":6}}]},"941":{"line":11051,"type":"binary-expr","locations":[{"start":{"line":11051,"column":10},"end":{"line":11051,"column":15}},{"start":{"line":11051,"column":19},"end":{"line":11051,"column":57}}]},"942":{"line":11055,"type":"binary-expr","locations":[{"start":{"line":11055,"column":13},"end":{"line":11055,"column":45}},{"start":{"line":11055,"column":49},"end":{"line":11055,"column":51}}]},"943":{"line":11055,"type":"binary-expr","locations":[{"start":{"line":11055,"column":26},"end":{"line":11055,"column":33}},{"start":{"line":11055,"column":37},"end":{"line":11055,"column":44}}]},"944":{"line":11084,"type":"cond-expr","locations":[{"start":{"line":11084,"column":28},"end":{"line":11084,"column":29}},{"start":{"line":11084,"column":32},"end":{"line":11084,"column":44}}]},"945":{"line":11127,"type":"if","locations":[{"start":{"line":11127,"column":6},"end":{"line":11127,"column":6}},{"start":{"line":11127,"column":6},"end":{"line":11127,"column":6}}]},"946":{"line":11127,"type":"binary-expr","locations":[{"start":{"line":11127,"column":10},"end":{"line":11127,"column":15}},{"start":{"line":11127,"column":19},"end":{"line":11127,"column":55}}]},"947":{"line":11130,"type":"cond-expr","locations":[{"start":{"line":11131,"column":10},"end":{"line":11131,"column":23}},{"start":{"line":11132,"column":10},"end":{"line":11132,"column":37}}]},"948":{"line":11327,"type":"if","locations":[{"start":{"line":11327,"column":6},"end":{"line":11327,"column":6}},{"start":{"line":11327,"column":6},"end":{"line":11327,"column":6}}]},"949":{"line":11329,"type":"cond-expr","locations":[{"start":{"line":11329,"column":28},"end":{"line":11329,"column":40}},{"start":{"line":11329,"column":43},"end":{"line":11329,"column":52}}]},"950":{"line":11330,"type":"cond-expr","locations":[{"start":{"line":11330,"column":52},"end":{"line":11330,"column":80}},{"start":{"line":11330,"column":83},"end":{"line":11330,"column":92}}]},"951":{"line":11330,"type":"binary-expr","locations":[{"start":{"line":11330,"column":27},"end":{"line":11330,"column":32}},{"start":{"line":11330,"column":36},"end":{"line":11330,"column":48}}]},"952":{"line":11332,"type":"if","locations":[{"start":{"line":11332,"column":8},"end":{"line":11332,"column":8}},{"start":{"line":11332,"column":8},"end":{"line":11332,"column":8}}]},"953":{"line":11332,"type":"cond-expr","locations":[{"start":{"line":11332,"column":28},"end":{"line":11332,"column":46}},{"start":{"line":11332,"column":49},"end":{"line":11332,"column":54}}]},"954":{"line":11339,"type":"if","locations":[{"start":{"line":11339,"column":6},"end":{"line":11339,"column":6}},{"start":{"line":11339,"column":6},"end":{"line":11339,"column":6}}]},"955":{"line":11347,"type":"if","locations":[{"start":{"line":11347,"column":6},"end":{"line":11347,"column":6}},{"start":{"line":11347,"column":6},"end":{"line":11347,"column":6}}]},"956":{"line":11349,"type":"if","locations":[{"start":{"line":11349,"column":13},"end":{"line":11349,"column":13}},{"start":{"line":11349,"column":13},"end":{"line":11349,"column":13}}]},"957":{"line":11349,"type":"binary-expr","locations":[{"start":{"line":11349,"column":17},"end":{"line":11349,"column":34}},{"start":{"line":11349,"column":38},"end":{"line":11349,"column":56}}]},"958":{"line":11357,"type":"if","locations":[{"start":{"line":11357,"column":8},"end":{"line":11357,"column":8}},{"start":{"line":11357,"column":8},"end":{"line":11357,"column":8}}]},"959":{"line":11361,"type":"if","locations":[{"start":{"line":11361,"column":14},"end":{"line":11361,"column":14}},{"start":{"line":11361,"column":14},"end":{"line":11361,"column":14}}]},"960":{"line":11361,"type":"binary-expr","locations":[{"start":{"line":11361,"column":18},"end":{"line":11361,"column":23}},{"start":{"line":11361,"column":27},"end":{"line":11361,"column":35}}]},"961":{"line":11435,"type":"cond-expr","locations":[{"start":{"line":11435,"column":27},"end":{"line":11435,"column":45}},{"start":{"line":11435,"column":48},"end":{"line":11435,"column":70}}]},"962":{"line":11498,"type":"if","locations":[{"start":{"line":11498,"column":6},"end":{"line":11498,"column":6}},{"start":{"line":11498,"column":6},"end":{"line":11498,"column":6}}]},"963":{"line":11498,"type":"binary-expr","locations":[{"start":{"line":11498,"column":10},"end":{"line":11498,"column":14}},{"start":{"line":11498,"column":18},"end":{"line":11498,"column":50}}]},"964":{"line":11501,"type":"binary-expr","locations":[{"start":{"line":11501,"column":14},"end":{"line":11501,"column":20}},{"start":{"line":11501,"column":24},"end":{"line":11501,"column":25}}]},"965":{"line":11502,"type":"cond-expr","locations":[{"start":{"line":11502,"column":28},"end":{"line":11502,"column":29}},{"start":{"line":11502,"column":33},"end":{"line":11502,"column":43}}]},"966":{"line":11502,"type":"binary-expr","locations":[{"start":{"line":11502,"column":33},"end":{"line":11502,"column":38}},{"start":{"line":11502,"column":42},"end":{"line":11502,"column":43}}]},"967":{"line":11504,"type":"if","locations":[{"start":{"line":11504,"column":6},"end":{"line":11504,"column":6}},{"start":{"line":11504,"column":6},"end":{"line":11504,"column":6}}]},"968":{"line":11508,"type":"binary-expr","locations":[{"start":{"line":11508,"column":14},"end":{"line":11508,"column":18}},{"start":{"line":11508,"column":22},"end":{"line":11508,"column":23}}]},"969":{"line":11513,"type":"binary-expr","locations":[{"start":{"line":11513,"column":57},"end":{"line":11513,"column":61}},{"start":{"line":11513,"column":65},"end":{"line":11513,"column":66}}]},"970":{"line":11555,"type":"if","locations":[{"start":{"line":11555,"column":6},"end":{"line":11555,"column":6}},{"start":{"line":11555,"column":6},"end":{"line":11555,"column":6}}]},"971":{"line":11555,"type":"binary-expr","locations":[{"start":{"line":11555,"column":10},"end":{"line":11555,"column":15}},{"start":{"line":11555,"column":19},"end":{"line":11555,"column":37}}]},"972":{"line":11563,"type":"if","locations":[{"start":{"line":11563,"column":8},"end":{"line":11563,"column":8}},{"start":{"line":11563,"column":8},"end":{"line":11563,"column":8}}]},"973":{"line":11610,"type":"binary-expr","locations":[{"start":{"line":11610,"column":14},"end":{"line":11610,"column":21}},{"start":{"line":11610,"column":25},"end":{"line":11610,"column":26}}]},"974":{"line":11610,"type":"binary-expr","locations":[{"start":{"line":11610,"column":31},"end":{"line":11610,"column":38}},{"start":{"line":11610,"column":42},"end":{"line":11610,"column":43}}]},"975":{"line":11810,"type":"if","locations":[{"start":{"line":11810,"column":6},"end":{"line":11810,"column":6}},{"start":{"line":11810,"column":6},"end":{"line":11810,"column":6}}]},"976":{"line":11810,"type":"binary-expr","locations":[{"start":{"line":11810,"column":10},"end":{"line":11810,"column":17}},{"start":{"line":11810,"column":21},"end":{"line":11810,"column":66}}]},"977":{"line":11814,"type":"cond-expr","locations":[{"start":{"line":11815,"column":10},"end":{"line":11815,"column":87}},{"start":{"line":11816,"column":10},"end":{"line":11816,"column":39}}]},"978":{"line":11815,"type":"cond-expr","locations":[{"start":{"line":11815,"column":41},"end":{"line":11815,"column":51}},{"start":{"line":11815,"column":54},"end":{"line":11815,"column":76}}]},"979":{"line":12076,"type":"if","locations":[{"start":{"line":12076,"column":8},"end":{"line":12076,"column":8}},{"start":{"line":12076,"column":8},"end":{"line":12076,"column":8}}]},"980":{"line":12089,"type":"if","locations":[{"start":{"line":12089,"column":6},"end":{"line":12089,"column":6}},{"start":{"line":12089,"column":6},"end":{"line":12089,"column":6}}]},"981":{"line":12089,"type":"binary-expr","locations":[{"start":{"line":12089,"column":10},"end":{"line":12089,"column":25}},{"start":{"line":12089,"column":29},"end":{"line":12089,"column":38}}]},"982":{"line":12117,"type":"if","locations":[{"start":{"line":12117,"column":8},"end":{"line":12117,"column":8}},{"start":{"line":12117,"column":8},"end":{"line":12117,"column":8}}]},"983":{"line":12117,"type":"binary-expr","locations":[{"start":{"line":12117,"column":12},"end":{"line":12117,"column":20}},{"start":{"line":12117,"column":24},"end":{"line":12117,"column":30}}]},"984":{"line":12120,"type":"cond-expr","locations":[{"start":{"line":12120,"column":24},"end":{"line":12120,"column":25}},{"start":{"line":12120,"column":28},"end":{"line":12120,"column":61}}]},"985":{"line":12120,"type":"binary-expr","locations":[{"start":{"line":12120,"column":38},"end":{"line":12120,"column":52}},{"start":{"line":12120,"column":56},"end":{"line":12120,"column":57}}]},"986":{"line":12123,"type":"if","locations":[{"start":{"line":12123,"column":8},"end":{"line":12123,"column":8}},{"start":{"line":12123,"column":8},"end":{"line":12123,"column":8}}]},"987":{"line":12126,"type":"cond-expr","locations":[{"start":{"line":12126,"column":88},"end":{"line":12126,"column":95}},{"start":{"line":12126,"column":98},"end":{"line":12126,"column":100}}]},"988":{"line":12144,"type":"binary-expr","locations":[{"start":{"line":12144,"column":30},"end":{"line":12144,"column":49}},{"start":{"line":12144,"column":53},"end":{"line":12144,"column":61}}]},"989":{"line":12151,"type":"cond-expr","locations":[{"start":{"line":12151,"column":39},"end":{"line":12151,"column":46}},{"start":{"line":12151,"column":49},"end":{"line":12151,"column":51}}]},"990":{"line":12160,"type":"cond-expr","locations":[{"start":{"line":12160,"column":39},"end":{"line":12160,"column":41}},{"start":{"line":12160,"column":44},"end":{"line":12160,"column":51}}]},"991":{"line":12163,"type":"cond-expr","locations":[{"start":{"line":12163,"column":35},"end":{"line":12163,"column":56}},{"start":{"line":12163,"column":59},"end":{"line":12163,"column":76}}]},"992":{"line":12169,"type":"cond-expr","locations":[{"start":{"line":12169,"column":34},"end":{"line":12169,"column":42}},{"start":{"line":12169,"column":45},"end":{"line":12169,"column":50}}]},"993":{"line":12170,"type":"cond-expr","locations":[{"start":{"line":12170,"column":35},"end":{"line":12170,"column":46}},{"start":{"line":12170,"column":49},"end":{"line":12170,"column":57}}]},"994":{"line":12189,"type":"cond-expr","locations":[{"start":{"line":12189,"column":30},"end":{"line":12189,"column":31}},{"start":{"line":12189,"column":35},"end":{"line":12189,"column":46}}]},"995":{"line":12189,"type":"binary-expr","locations":[{"start":{"line":12189,"column":35},"end":{"line":12189,"column":41}},{"start":{"line":12189,"column":45},"end":{"line":12189,"column":46}}]},"996":{"line":12192,"type":"if","locations":[{"start":{"line":12192,"column":6},"end":{"line":12192,"column":6}},{"start":{"line":12192,"column":6},"end":{"line":12192,"column":6}}]},"997":{"line":12192,"type":"binary-expr","locations":[{"start":{"line":12192,"column":10},"end":{"line":12192,"column":29}},{"start":{"line":12192,"column":34},"end":{"line":12192,"column":43}},{"start":{"line":12192,"column":47},"end":{"line":12192,"column":54}}]},"998":{"line":12195,"type":"if","locations":[{"start":{"line":12195,"column":6},"end":{"line":12195,"column":6}},{"start":{"line":12195,"column":6},"end":{"line":12195,"column":6}}]},"999":{"line":12197,"type":"if","locations":[{"start":{"line":12197,"column":13},"end":{"line":12197,"column":13}},{"start":{"line":12197,"column":13},"end":{"line":12197,"column":13}}]},"1000":{"line":12200,"type":"if","locations":[{"start":{"line":12200,"column":6},"end":{"line":12200,"column":6}},{"start":{"line":12200,"column":6},"end":{"line":12200,"column":6}}]},"1001":{"line":12201,"type":"binary-expr","locations":[{"start":{"line":12201,"column":15},"end":{"line":12201,"column":19}},{"start":{"line":12201,"column":23},"end":{"line":12201,"column":24}}]},"1002":{"line":12202,"type":"cond-expr","locations":[{"start":{"line":12202,"column":27},"end":{"line":12202,"column":49}},{"start":{"line":12202,"column":52},"end":{"line":12202,"column":76}}]},"1003":{"line":12219,"type":"cond-expr","locations":[{"start":{"line":12219,"column":46},"end":{"line":12219,"column":92}},{"start":{"line":12219,"column":96},"end":{"line":12219,"column":106}}]},"1004":{"line":12219,"type":"cond-expr","locations":[{"start":{"line":12219,"column":79},"end":{"line":12219,"column":86}},{"start":{"line":12219,"column":89},"end":{"line":12219,"column":91}}]},"1005":{"line":12221,"type":"if","locations":[{"start":{"line":12221,"column":6},"end":{"line":12221,"column":6}},{"start":{"line":12221,"column":6},"end":{"line":12221,"column":6}}]},"1006":{"line":12225,"type":"cond-expr","locations":[{"start":{"line":12225,"column":34},"end":{"line":12225,"column":37}},{"start":{"line":12225,"column":40},"end":{"line":12225,"column":49}}]},"1007":{"line":12231,"type":"binary-expr","locations":[{"start":{"line":12231,"column":22},"end":{"line":12231,"column":28}},{"start":{"line":12231,"column":32},"end":{"line":12231,"column":46}}]},"1008":{"line":12233,"type":"if","locations":[{"start":{"line":12233,"column":8},"end":{"line":12233,"column":8}},{"start":{"line":12233,"column":8},"end":{"line":12233,"column":8}}]},"1009":{"line":12233,"type":"binary-expr","locations":[{"start":{"line":12233,"column":12},"end":{"line":12233,"column":19}},{"start":{"line":12233,"column":23},"end":{"line":12233,"column":36}},{"start":{"line":12233,"column":40},"end":{"line":12233,"column":69}},{"start":{"line":12233,"column":73},"end":{"line":12233,"column":93}}]},"1010":{"line":12238,"type":"cond-expr","locations":[{"start":{"line":12239,"column":14},"end":{"line":12239,"column":37}},{"start":{"line":12240,"column":14},"end":{"line":12240,"column":67}}]},"1011":{"line":12238,"type":"binary-expr","locations":[{"start":{"line":12238,"column":18},"end":{"line":12238,"column":30}},{"start":{"line":12238,"column":34},"end":{"line":12238,"column":42}}]},"1012":{"line":12244,"type":"binary-expr","locations":[{"start":{"line":12244,"column":23},"end":{"line":12244,"column":29}},{"start":{"line":12244,"column":33},"end":{"line":12244,"column":42}}]},"1013":{"line":12246,"type":"if","locations":[{"start":{"line":12246,"column":8},"end":{"line":12246,"column":8}},{"start":{"line":12246,"column":8},"end":{"line":12246,"column":8}}]},"1014":{"line":12246,"type":"binary-expr","locations":[{"start":{"line":12246,"column":12},"end":{"line":12246,"column":24}},{"start":{"line":12246,"column":28},"end":{"line":12246,"column":37}}]},"1015":{"line":12247,"type":"if","locations":[{"start":{"line":12247,"column":10},"end":{"line":12247,"column":10}},{"start":{"line":12247,"column":10},"end":{"line":12247,"column":10}}]},"1016":{"line":12254,"type":"if","locations":[{"start":{"line":12254,"column":8},"end":{"line":12254,"column":8}},{"start":{"line":12254,"column":8},"end":{"line":12254,"column":8}}]},"1017":{"line":12254,"type":"binary-expr","locations":[{"start":{"line":12254,"column":12},"end":{"line":12254,"column":25}},{"start":{"line":12254,"column":29},"end":{"line":12254,"column":36}}]},"1018":{"line":12255,"type":"cond-expr","locations":[{"start":{"line":12255,"column":29},"end":{"line":12255,"column":34}},{"start":{"line":12255,"column":37},"end":{"line":12255,"column":58}}]},"1019":{"line":12266,"type":"cond-expr","locations":[{"start":{"line":12266,"column":59},"end":{"line":12266,"column":70}},{"start":{"line":12266,"column":73},"end":{"line":12266,"column":83}}]},"1020":{"line":12267,"type":"cond-expr","locations":[{"start":{"line":12267,"column":67},"end":{"line":12267,"column":72}},{"start":{"line":12267,"column":75},"end":{"line":12267,"column":81}}]},"1021":{"line":12272,"type":"if","locations":[{"start":{"line":12272,"column":8},"end":{"line":12272,"column":8}},{"start":{"line":12272,"column":8},"end":{"line":12272,"column":8}}]},"1022":{"line":12272,"type":"binary-expr","locations":[{"start":{"line":12272,"column":12},"end":{"line":12272,"column":24}},{"start":{"line":12272,"column":28},"end":{"line":12272,"column":43}}]},"1023":{"line":12284,"type":"if","locations":[{"start":{"line":12284,"column":6},"end":{"line":12284,"column":6}},{"start":{"line":12284,"column":6},"end":{"line":12284,"column":6}}]},"1024":{"line":12286,"type":"binary-expr","locations":[{"start":{"line":12286,"column":20},"end":{"line":12286,"column":34}},{"start":{"line":12286,"column":39},"end":{"line":12286,"column":58}}]},"1025":{"line":12323,"type":"if","locations":[{"start":{"line":12323,"column":2},"end":{"line":12323,"column":2}},{"start":{"line":12323,"column":2},"end":{"line":12323,"column":2}}]},"1026":{"line":12323,"type":"binary-expr","locations":[{"start":{"line":12323,"column":6},"end":{"line":12323,"column":33}},{"start":{"line":12323,"column":37},"end":{"line":12323,"column":66}},{"start":{"line":12323,"column":70},"end":{"line":12323,"column":80}}]},"1027":{"line":12337,"type":"if","locations":[{"start":{"line":12337,"column":7},"end":{"line":12337,"column":7}},{"start":{"line":12337,"column":7},"end":{"line":12337,"column":7}}]},"1028":{"line":12337,"type":"binary-expr","locations":[{"start":{"line":12337,"column":11},"end":{"line":12337,"column":22}},{"start":{"line":12337,"column":26},"end":{"line":12337,"column":36}}]},"1029":{"line":12339,"type":"if","locations":[{"start":{"line":12339,"column":4},"end":{"line":12339,"column":4}},{"start":{"line":12339,"column":4},"end":{"line":12339,"column":4}}]}},"code":["/**"," * @license"," * lodash 3.10.1 (Custom Build) <https://lodash.com/>"," * Build: `lodash modern -d -o ./index.js`"," * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>"," * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>"," * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors"," * Available under MIT license <https://lodash.com/license>"," */",";(function() {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used as the semantic version number. */","  var VERSION = '3.10.1';","","  /** Used to compose bitmasks for wrapper metadata. */","  var BIND_FLAG = 1,","      BIND_KEY_FLAG = 2,","      CURRY_BOUND_FLAG = 4,","      CURRY_FLAG = 8,","      CURRY_RIGHT_FLAG = 16,","      PARTIAL_FLAG = 32,","      PARTIAL_RIGHT_FLAG = 64,","      ARY_FLAG = 128,","      REARG_FLAG = 256;","","  /** Used as default options for `_.trunc`. */","  var DEFAULT_TRUNC_LENGTH = 30,","      DEFAULT_TRUNC_OMISSION = '...';","","  /** Used to detect when a function becomes hot. */","  var HOT_COUNT = 150,","      HOT_SPAN = 16;","","  /** Used as the size to enable large array optimizations. */","  var LARGE_ARRAY_SIZE = 200;","","  /** Used to indicate the type of lazy iteratees. */","  var LAZY_FILTER_FLAG = 1,","      LAZY_MAP_FLAG = 2;","","  /** Used as the `TypeError` message for \"Functions\" methods. */","  var FUNC_ERROR_TEXT = 'Expected a function';","","  /** Used as the internal argument placeholder. */","  var PLACEHOLDER = '__lodash_placeholder__';","","  /** `Object#toString` result references. */","  var argsTag = '[object Arguments]',","      arrayTag = '[object Array]',","      boolTag = '[object Boolean]',","      dateTag = '[object Date]',","      errorTag = '[object Error]',","      funcTag = '[object Function]',","      mapTag = '[object Map]',","      numberTag = '[object Number]',","      objectTag = '[object Object]',","      regexpTag = '[object RegExp]',","      setTag = '[object Set]',","      stringTag = '[object String]',","      weakMapTag = '[object WeakMap]';","","  var arrayBufferTag = '[object ArrayBuffer]',","      float32Tag = '[object Float32Array]',","      float64Tag = '[object Float64Array]',","      int8Tag = '[object Int8Array]',","      int16Tag = '[object Int16Array]',","      int32Tag = '[object Int32Array]',","      uint8Tag = '[object Uint8Array]',","      uint8ClampedTag = '[object Uint8ClampedArray]',","      uint16Tag = '[object Uint16Array]',","      uint32Tag = '[object Uint32Array]';","","  /** Used to match empty string literals in compiled template source. */","  var reEmptyStringLeading = /\\b__p \\+= '';/g,","      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,","      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;","","  /** Used to match HTML entities and HTML characters. */","  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,","      reUnescapedHtml = /[&<>\"'`]/g,","      reHasEscapedHtml = RegExp(reEscapedHtml.source),","      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);","","  /** Used to match template delimiters. */","  var reEscape = /<%-([\\s\\S]+?)%>/g,","      reEvaluate = /<%([\\s\\S]+?)%>/g,","      reInterpolate = /<%=([\\s\\S]+?)%>/g;","","  /** Used to match property names within property paths. */","  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,","      reIsPlainProp = /^\\w*$/,","      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;","","  /**","   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)","   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).","   */","  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,","      reHasRegExpChars = RegExp(reRegExpChars.source);","","  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */","  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;","","  /** Used to match backslashes in property paths. */","  var reEscapeChar = /\\\\(\\\\)?/g;","","  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */","  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;","","  /** Used to match `RegExp` flags from their coerced string values. */","  var reFlags = /\\w*$/;","","  /** Used to detect hexadecimal string values. */","  var reHasHexPrefix = /^0[xX]/;","","  /** Used to detect host constructors (Safari > 5). */","  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;","","  /** Used to detect unsigned integer values. */","  var reIsUint = /^\\d+$/;","","  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */","  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;","","  /** Used to ensure capturing order of template delimiters. */","  var reNoMatch = /($^)/;","","  /** Used to match unescaped characters in compiled string literals. */","  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;","","  /** Used to match words to create compound words. */","  var reWords = (function() {","    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',","        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';","","    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');","  }());","","  /** Used to assign default `context` object properties. */","  var contextProps = [","    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',","    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',","    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',","    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',","    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'","  ];","","  /** Used to make template sourceURLs easier to identify. */","  var templateCounter = -1;","","  /** Used to identify `toStringTag` values of typed arrays. */","  var typedArrayTags = {};","  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =","  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =","  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =","  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =","  typedArrayTags[uint32Tag] = true;","  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =","  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =","  typedArrayTags[dateTag] = typedArrayTags[errorTag] =","  typedArrayTags[funcTag] = typedArrayTags[mapTag] =","  typedArrayTags[numberTag] = typedArrayTags[objectTag] =","  typedArrayTags[regexpTag] = typedArrayTags[setTag] =","  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;","","  /** Used to identify `toStringTag` values supported by `_.clone`. */","  var cloneableTags = {};","  cloneableTags[argsTag] = cloneableTags[arrayTag] =","  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =","  cloneableTags[dateTag] = cloneableTags[float32Tag] =","  cloneableTags[float64Tag] = cloneableTags[int8Tag] =","  cloneableTags[int16Tag] = cloneableTags[int32Tag] =","  cloneableTags[numberTag] = cloneableTags[objectTag] =","  cloneableTags[regexpTag] = cloneableTags[stringTag] =","  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =","  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;","  cloneableTags[errorTag] = cloneableTags[funcTag] =","  cloneableTags[mapTag] = cloneableTags[setTag] =","  cloneableTags[weakMapTag] = false;","","  /** Used to map latin-1 supplementary letters to basic latin letters. */","  var deburredLetters = {","    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',","    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',","    '\\xc7': 'C',  '\\xe7': 'c',","    '\\xd0': 'D',  '\\xf0': 'd',","    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',","    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',","    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',","    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',","    '\\xd1': 'N',  '\\xf1': 'n',","    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',","    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',","    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',","    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',","    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',","    '\\xc6': 'Ae', '\\xe6': 'ae',","    '\\xde': 'Th', '\\xfe': 'th',","    '\\xdf': 'ss'","  };","","  /** Used to map characters to HTML entities. */","  var htmlEscapes = {","    '&': '&amp;',","    '<': '&lt;',","    '>': '&gt;',","    '\"': '&quot;',","    \"'\": '&#39;',","    '`': '&#96;'","  };","","  /** Used to map HTML entities to characters. */","  var htmlUnescapes = {","    '&amp;': '&',","    '&lt;': '<',","    '&gt;': '>',","    '&quot;': '\"',","    '&#39;': \"'\",","    '&#96;': '`'","  };","","  /** Used to determine if values are of the language type `Object`. */","  var objectTypes = {","    'function': true,","    'object': true","  };","","  /** Used to escape characters for inclusion in compiled regexes. */","  var regexpEscapes = {","    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',","    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',","    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',","    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',","    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'","  };","","  /** Used to escape characters for inclusion in compiled string literals. */","  var stringEscapes = {","    '\\\\': '\\\\',","    \"'\": \"'\",","    '\\n': 'n',","    '\\r': 'r',","    '\\u2028': 'u2028',","    '\\u2029': 'u2029'","  };","","  /** Detect free variable `exports`. */","  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;","","  /** Detect free variable `module`. */","  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;","","  /** Detect free variable `global` from Node.js. */","  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;","","  /** Detect free variable `self`. */","  var freeSelf = objectTypes[typeof self] && self && self.Object && self;","","  /** Detect free variable `window`. */","  var freeWindow = objectTypes[typeof window] && window && window.Object && window;","","  /** Detect the popular CommonJS extension `module.exports`. */","  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;","","  /**","   * Used as a reference to the global object.","   *","   * The `this` value is used if it's the global object to avoid Greasemonkey's","   * restricted `window` object, otherwise the `window` object is used.","   */","  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;","","  /*--------------------------------------------------------------------------*/","","  /**","   * The base implementation of `compareAscending` which compares values and","   * sorts them in ascending order without guaranteeing a stable sort.","   *","   * @private","   * @param {*} value The value to compare.","   * @param {*} other The other value to compare.","   * @returns {number} Returns the sort order indicator for `value`.","   */","  function baseCompareAscending(value, other) {","    if (value !== other) {","      var valIsNull = value === null,","          valIsUndef = value === undefined,","          valIsReflexive = value === value;","","      var othIsNull = other === null,","          othIsUndef = other === undefined,","          othIsReflexive = other === other;","","      if ((value > other && !othIsNull) || !valIsReflexive ||","          (valIsNull && !othIsUndef && othIsReflexive) ||","          (valIsUndef && othIsReflexive)) {","        return 1;","      }","      if ((value < other && !valIsNull) || !othIsReflexive ||","          (othIsNull && !valIsUndef && valIsReflexive) ||","          (othIsUndef && valIsReflexive)) {","        return -1;","      }","    }","    return 0;","  }","","  /**","   * The base implementation of `_.findIndex` and `_.findLastIndex` without","   * support for callback shorthands and `this` binding.","   *","   * @private","   * @param {Array} array The array to search.","   * @param {Function} predicate The function invoked per iteration.","   * @param {boolean} [fromRight] Specify iterating from right to left.","   * @returns {number} Returns the index of the matched value, else `-1`.","   */","  function baseFindIndex(array, predicate, fromRight) {","    var length = array.length,","        index = fromRight ? length : -1;","","    while ((fromRight ? index-- : ++index < length)) {","      if (predicate(array[index], index, array)) {","        return index;","      }","    }","    return -1;","  }","","  /**","   * The base implementation of `_.indexOf` without support for binary searches.","   *","   * @private","   * @param {Array} array The array to search.","   * @param {*} value The value to search for.","   * @param {number} fromIndex The index to search from.","   * @returns {number} Returns the index of the matched value, else `-1`.","   */","  function baseIndexOf(array, value, fromIndex) {","    if (value !== value) {","      return indexOfNaN(array, fromIndex);","    }","    var index = fromIndex - 1,","        length = array.length;","","    while (++index < length) {","      if (array[index] === value) {","        return index;","      }","    }","    return -1;","  }","","  /**","   * The base implementation of `_.isFunction` without support for environments","   * with incorrect `typeof` results.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","   */","  function baseIsFunction(value) {","    // Avoid a Chakra JIT bug in compatibility modes of IE 11.","    // See https://github.com/jashkenas/underscore/issues/1621 for more details.","    return typeof value == 'function' || false;","  }","","  /**","   * Converts `value` to a string if it's not one. An empty string is returned","   * for `null` or `undefined` values.","   *","   * @private","   * @param {*} value The value to process.","   * @returns {string} Returns the string.","   */","  function baseToString(value) {","    return value == null ? '' : (value + '');","  }","","  /**","   * Used by `_.trim` and `_.trimLeft` to get the index of the first character","   * of `string` that is not found in `chars`.","   *","   * @private","   * @param {string} string The string to inspect.","   * @param {string} chars The characters to find.","   * @returns {number} Returns the index of the first character not found in `chars`.","   */","  function charsLeftIndex(string, chars) {","    var index = -1,","        length = string.length;","","    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}","    return index;","  }","","  /**","   * Used by `_.trim` and `_.trimRight` to get the index of the last character","   * of `string` that is not found in `chars`.","   *","   * @private","   * @param {string} string The string to inspect.","   * @param {string} chars The characters to find.","   * @returns {number} Returns the index of the last character not found in `chars`.","   */","  function charsRightIndex(string, chars) {","    var index = string.length;","","    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}","    return index;","  }","","  /**","   * Used by `_.sortBy` to compare transformed elements of a collection and stable","   * sort them in ascending order.","   *","   * @private","   * @param {Object} object The object to compare.","   * @param {Object} other The other object to compare.","   * @returns {number} Returns the sort order indicator for `object`.","   */","  function compareAscending(object, other) {","    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);","  }","","  /**","   * Used by `_.sortByOrder` to compare multiple properties of a value to another","   * and stable sort them.","   *","   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,","   * a value is sorted in ascending order if its corresponding order is \"asc\", and","   * descending if \"desc\".","   *","   * @private","   * @param {Object} object The object to compare.","   * @param {Object} other The other object to compare.","   * @param {boolean[]} orders The order to sort by for each property.","   * @returns {number} Returns the sort order indicator for `object`.","   */","  function compareMultiple(object, other, orders) {","    var index = -1,","        objCriteria = object.criteria,","        othCriteria = other.criteria,","        length = objCriteria.length,","        ordersLength = orders.length;","","    while (++index < length) {","      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);","      if (result) {","        if (index >= ordersLength) {","          return result;","        }","        var order = orders[index];","        return result * ((order === 'asc' || order === true) ? 1 : -1);","      }","    }","    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications","    // that causes it, under certain circumstances, to provide the same value for","    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247","    // for more details.","    //","    // This also ensures a stable sort in V8 and other engines.","    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.","    return object.index - other.index;","  }","","  /**","   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.","   *","   * @private","   * @param {string} letter The matched letter to deburr.","   * @returns {string} Returns the deburred letter.","   */","  function deburrLetter(letter) {","    return deburredLetters[letter];","  }","","  /**","   * Used by `_.escape` to convert characters to HTML entities.","   *","   * @private","   * @param {string} chr The matched character to escape.","   * @returns {string} Returns the escaped character.","   */","  function escapeHtmlChar(chr) {","    return htmlEscapes[chr];","  }","","  /**","   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.","   *","   * @private","   * @param {string} chr The matched character to escape.","   * @param {string} leadingChar The capture group for a leading character.","   * @param {string} whitespaceChar The capture group for a whitespace character.","   * @returns {string} Returns the escaped character.","   */","  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {","    if (leadingChar) {","      chr = regexpEscapes[chr];","    } else if (whitespaceChar) {","      chr = stringEscapes[chr];","    }","    return '\\\\' + chr;","  }","","  /**","   * Used by `_.template` to escape characters for inclusion in compiled string literals.","   *","   * @private","   * @param {string} chr The matched character to escape.","   * @returns {string} Returns the escaped character.","   */","  function escapeStringChar(chr) {","    return '\\\\' + stringEscapes[chr];","  }","","  /**","   * Gets the index at which the first occurrence of `NaN` is found in `array`.","   *","   * @private","   * @param {Array} array The array to search.","   * @param {number} fromIndex The index to search from.","   * @param {boolean} [fromRight] Specify iterating from right to left.","   * @returns {number} Returns the index of the matched `NaN`, else `-1`.","   */","  function indexOfNaN(array, fromIndex, fromRight) {","    var length = array.length,","        index = fromIndex + (fromRight ? 0 : -1);","","    while ((fromRight ? index-- : ++index < length)) {","      var other = array[index];","      if (other !== other) {","        return index;","      }","    }","    return -1;","  }","","  /**","   * Checks if `value` is object-like.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.","   */","  function isObjectLike(value) {","    return !!value && typeof value == 'object';","  }","","  /**","   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a","   * character code is whitespace.","   *","   * @private","   * @param {number} charCode The character code to inspect.","   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.","   */","  function isSpace(charCode) {","    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||","      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));","  }","","  /**","   * Replaces all `placeholder` elements in `array` with an internal placeholder","   * and returns an array of their indexes.","   *","   * @private","   * @param {Array} array The array to modify.","   * @param {*} placeholder The placeholder to replace.","   * @returns {Array} Returns the new array of placeholder indexes.","   */","  function replaceHolders(array, placeholder) {","    var index = -1,","        length = array.length,","        resIndex = -1,","        result = [];","","    while (++index < length) {","      if (array[index] === placeholder) {","        array[index] = PLACEHOLDER;","        result[++resIndex] = index;","      }","    }","    return result;","  }","","  /**","   * An implementation of `_.uniq` optimized for sorted arrays without support","   * for callback shorthands and `this` binding.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {Function} [iteratee] The function invoked per iteration.","   * @returns {Array} Returns the new duplicate-value-free array.","   */","  function sortedUniq(array, iteratee) {","    var seen,","        index = -1,","        length = array.length,","        resIndex = -1,","        result = [];","","    while (++index < length) {","      var value = array[index],","          computed = iteratee ? iteratee(value, index, array) : value;","","      if (!index || seen !== computed) {","        seen = computed;","        result[++resIndex] = value;","      }","    }","    return result;","  }","","  /**","   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace","   * character of `string`.","   *","   * @private","   * @param {string} string The string to inspect.","   * @returns {number} Returns the index of the first non-whitespace character.","   */","  function trimmedLeftIndex(string) {","    var index = -1,","        length = string.length;","","    while (++index < length && isSpace(string.charCodeAt(index))) {}","    return index;","  }","","  /**","   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace","   * character of `string`.","   *","   * @private","   * @param {string} string The string to inspect.","   * @returns {number} Returns the index of the last non-whitespace character.","   */","  function trimmedRightIndex(string) {","    var index = string.length;","","    while (index-- && isSpace(string.charCodeAt(index))) {}","    return index;","  }","","  /**","   * Used by `_.unescape` to convert HTML entities to characters.","   *","   * @private","   * @param {string} chr The matched character to unescape.","   * @returns {string} Returns the unescaped character.","   */","  function unescapeHtmlChar(chr) {","    return htmlUnescapes[chr];","  }","","  /*--------------------------------------------------------------------------*/","","  /**","   * Create a new pristine `lodash` function using the given `context` object.","   *","   * @static","   * @memberOf _","   * @category Utility","   * @param {Object} [context=root] The context object.","   * @returns {Function} Returns a new `lodash` function.","   * @example","   *","   * _.mixin({ 'foo': _.constant('foo') });","   *","   * var lodash = _.runInContext();","   * lodash.mixin({ 'bar': lodash.constant('bar') });","   *","   * _.isFunction(_.foo);","   * // => true","   * _.isFunction(_.bar);","   * // => false","   *","   * lodash.isFunction(lodash.foo);","   * // => false","   * lodash.isFunction(lodash.bar);","   * // => true","   *","   * // using `context` to mock `Date#getTime` use in `_.now`","   * var mock = _.runInContext({","   *   'Date': function() {","   *     return { 'getTime': getTimeMock };","   *   }","   * });","   *","   * // or creating a suped-up `defer` in Node.js","   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;","   */","  function runInContext(context) {","    // Avoid issues with some ES3 environments that attempt to use values, named","    // after built-in constructors like `Object`, for the creation of literals.","    // ES5 clears this up by stating that literals must use built-in constructors.","    // See https://es5.github.io/#x11.1.5 for more details.","    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;","","    /** Native constructor references. */","    var Array = context.Array,","        Date = context.Date,","        Error = context.Error,","        Function = context.Function,","        Math = context.Math,","        Number = context.Number,","        Object = context.Object,","        RegExp = context.RegExp,","        String = context.String,","        TypeError = context.TypeError;","","    /** Used for native method references. */","    var arrayProto = Array.prototype,","        objectProto = Object.prototype,","        stringProto = String.prototype;","","    /** Used to resolve the decompiled source of functions. */","    var fnToString = Function.prototype.toString;","","    /** Used to check objects for own properties. */","    var hasOwnProperty = objectProto.hasOwnProperty;","","    /** Used to generate unique IDs. */","    var idCounter = 0;","","    /**","     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)","     * of values.","     */","    var objToString = objectProto.toString;","","    /** Used to restore the original `_` reference in `_.noConflict`. */","    var oldDash = root._;","","    /** Used to detect if a method is native. */","    var reIsNative = RegExp('^' +","      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')","      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'","    );","","    /** Native method references. */","    var ArrayBuffer = context.ArrayBuffer,","        clearTimeout = context.clearTimeout,","        parseFloat = context.parseFloat,","        pow = Math.pow,","        propertyIsEnumerable = objectProto.propertyIsEnumerable,","        Set = getNative(context, 'Set'),","        setTimeout = context.setTimeout,","        splice = arrayProto.splice,","        Uint8Array = context.Uint8Array,","        WeakMap = getNative(context, 'WeakMap');","","    /* Native method references for those with the same name as other `lodash` methods. */","    var nativeCeil = Math.ceil,","        nativeCreate = getNative(Object, 'create'),","        nativeFloor = Math.floor,","        nativeIsArray = getNative(Array, 'isArray'),","        nativeIsFinite = context.isFinite,","        nativeKeys = getNative(Object, 'keys'),","        nativeMax = Math.max,","        nativeMin = Math.min,","        nativeNow = getNative(Date, 'now'),","        nativeParseInt = context.parseInt,","        nativeRandom = Math.random;","","    /** Used as references for `-Infinity` and `Infinity`. */","    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,","        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;","","    /** Used as references for the maximum length and index of an array. */","    var MAX_ARRAY_LENGTH = 4294967295,","        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,","        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;","","    /**","     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)","     * of an array-like value.","     */","    var MAX_SAFE_INTEGER = 9007199254740991;","","    /** Used to store function metadata. */","    var metaMap = WeakMap && new WeakMap;","","    /** Used to lookup unminified function names. */","    var realNames = {};","","    /*------------------------------------------------------------------------*/","","    /**","     * Creates a `lodash` object which wraps `value` to enable implicit chaining.","     * Methods that operate on and return arrays, collections, and functions can","     * be chained together. Methods that retrieve a single value or may return a","     * primitive value will automatically end the chain returning the unwrapped","     * value. Explicit chaining may be enabled using `_.chain`. The execution of","     * chained methods is lazy, that is, execution is deferred until `_#value`","     * is implicitly or explicitly called.","     *","     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut","     * fusion is an optimization strategy which merge iteratee calls; this can help","     * to avoid the creation of intermediate data structures and greatly reduce the","     * number of iteratee executions.","     *","     * Chaining is supported in custom builds as long as the `_#value` method is","     * directly or indirectly included in the build.","     *","     * In addition to lodash methods, wrappers have `Array` and `String` methods.","     *","     * The wrapper `Array` methods are:","     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,","     * `splice`, and `unshift`","     *","     * The wrapper `String` methods are:","     * `replace` and `split`","     *","     * The wrapper methods that support shortcut fusion are:","     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,","     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,","     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,","     * and `where`","     *","     * The chainable wrapper methods are:","     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,","     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,","     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,","     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,","     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,","     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,","     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,","     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,","     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,","     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,","     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,","     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,","     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,","     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,","     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,","     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,","     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`","     *","     * The wrapper methods that are **not** chainable by default are:","     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,","     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,","     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,","     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,","     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,","     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,","     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,","     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,","     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,","     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,","     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,","     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,","     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,","     * `unescape`, `uniqueId`, `value`, and `words`","     *","     * The wrapper method `sample` will return a wrapped value when `n` is provided,","     * otherwise an unwrapped value is returned.","     *","     * @name _","     * @constructor","     * @category Chain","     * @param {*} value The value to wrap in a `lodash` instance.","     * @returns {Object} Returns the new `lodash` wrapper instance.","     * @example","     *","     * var wrapped = _([1, 2, 3]);","     *","     * // returns an unwrapped value","     * wrapped.reduce(function(total, n) {","     *   return total + n;","     * });","     * // => 6","     *","     * // returns a wrapped value","     * var squares = wrapped.map(function(n) {","     *   return n * n;","     * });","     *","     * _.isArray(squares);","     * // => false","     *","     * _.isArray(squares.value());","     * // => true","     */","    function lodash(value) {","      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {","        if (value instanceof LodashWrapper) {","          return value;","        }","        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {","          return wrapperClone(value);","        }","      }","      return new LodashWrapper(value);","    }","","    /**","     * The function whose prototype all chaining wrappers inherit from.","     *","     * @private","     */","    function baseLodash() {","      // No operation performed.","    }","","    /**","     * The base constructor for creating `lodash` wrapper objects.","     *","     * @private","     * @param {*} value The value to wrap.","     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.","     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.","     */","    function LodashWrapper(value, chainAll, actions) {","      this.__wrapped__ = value;","      this.__actions__ = actions || [];","      this.__chain__ = !!chainAll;","    }","","    /**","     * An object environment feature flags.","     *","     * @static","     * @memberOf _","     * @type Object","     */","    var support = lodash.support = {};","","    /**","     * By default, the template delimiters used by lodash are like those in","     * embedded Ruby (ERB). Change the following template settings to use","     * alternative delimiters.","     *","     * @static","     * @memberOf _","     * @type Object","     */","    lodash.templateSettings = {","","      /**","       * Used to detect `data` property values to be HTML-escaped.","       *","       * @memberOf _.templateSettings","       * @type RegExp","       */","      'escape': reEscape,","","      /**","       * Used to detect code to be evaluated.","       *","       * @memberOf _.templateSettings","       * @type RegExp","       */","      'evaluate': reEvaluate,","","      /**","       * Used to detect `data` property values to inject.","       *","       * @memberOf _.templateSettings","       * @type RegExp","       */","      'interpolate': reInterpolate,","","      /**","       * Used to reference the data object in the template text.","       *","       * @memberOf _.templateSettings","       * @type string","       */","      'variable': '',","","      /**","       * Used to import variables into the compiled template.","       *","       * @memberOf _.templateSettings","       * @type Object","       */","      'imports': {","","        /**","         * A reference to the `lodash` function.","         *","         * @memberOf _.templateSettings.imports","         * @type Function","         */","        '_': lodash","      }","    };","","    /*------------------------------------------------------------------------*/","","    /**","     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.","     *","     * @private","     * @param {*} value The value to wrap.","     */","    function LazyWrapper(value) {","      this.__wrapped__ = value;","      this.__actions__ = [];","      this.__dir__ = 1;","      this.__filtered__ = false;","      this.__iteratees__ = [];","      this.__takeCount__ = POSITIVE_INFINITY;","      this.__views__ = [];","    }","","    /**","     * Creates a clone of the lazy wrapper object.","     *","     * @private","     * @name clone","     * @memberOf LazyWrapper","     * @returns {Object} Returns the cloned `LazyWrapper` object.","     */","    function lazyClone() {","      var result = new LazyWrapper(this.__wrapped__);","      result.__actions__ = arrayCopy(this.__actions__);","      result.__dir__ = this.__dir__;","      result.__filtered__ = this.__filtered__;","      result.__iteratees__ = arrayCopy(this.__iteratees__);","      result.__takeCount__ = this.__takeCount__;","      result.__views__ = arrayCopy(this.__views__);","      return result;","    }","","    /**","     * Reverses the direction of lazy iteration.","     *","     * @private","     * @name reverse","     * @memberOf LazyWrapper","     * @returns {Object} Returns the new reversed `LazyWrapper` object.","     */","    function lazyReverse() {","      if (this.__filtered__) {","        var result = new LazyWrapper(this);","        result.__dir__ = -1;","        result.__filtered__ = true;","      } else {","        result = this.clone();","        result.__dir__ *= -1;","      }","      return result;","    }","","    /**","     * Extracts the unwrapped value from its lazy wrapper.","     *","     * @private","     * @name value","     * @memberOf LazyWrapper","     * @returns {*} Returns the unwrapped value.","     */","    function lazyValue() {","      var array = this.__wrapped__.value(),","          dir = this.__dir__,","          isArr = isArray(array),","          isRight = dir < 0,","          arrLength = isArr ? array.length : 0,","          view = getView(0, arrLength, this.__views__),","          start = view.start,","          end = view.end,","          length = end - start,","          index = isRight ? end : (start - 1),","          iteratees = this.__iteratees__,","          iterLength = iteratees.length,","          resIndex = 0,","          takeCount = nativeMin(length, this.__takeCount__);","","      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {","        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);","      }","      var result = [];","","      outer:","      while (length-- && resIndex < takeCount) {","        index += dir;","","        var iterIndex = -1,","            value = array[index];","","        while (++iterIndex < iterLength) {","          var data = iteratees[iterIndex],","              iteratee = data.iteratee,","              type = data.type,","              computed = iteratee(value);","","          if (type == LAZY_MAP_FLAG) {","            value = computed;","          } else if (!computed) {","            if (type == LAZY_FILTER_FLAG) {","              continue outer;","            } else {","              break outer;","            }","          }","        }","        result[resIndex++] = value;","      }","      return result;","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Creates a cache object to store key/value pairs.","     *","     * @private","     * @static","     * @name Cache","     * @memberOf _.memoize","     */","    function MapCache() {","      this.__data__ = {};","    }","","    /**","     * Removes `key` and its value from the cache.","     *","     * @private","     * @name delete","     * @memberOf _.memoize.Cache","     * @param {string} key The key of the value to remove.","     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.","     */","    function mapDelete(key) {","      return this.has(key) && delete this.__data__[key];","    }","","    /**","     * Gets the cached value for `key`.","     *","     * @private","     * @name get","     * @memberOf _.memoize.Cache","     * @param {string} key The key of the value to get.","     * @returns {*} Returns the cached value.","     */","    function mapGet(key) {","      return key == '__proto__' ? undefined : this.__data__[key];","    }","","    /**","     * Checks if a cached value for `key` exists.","     *","     * @private","     * @name has","     * @memberOf _.memoize.Cache","     * @param {string} key The key of the entry to check.","     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.","     */","    function mapHas(key) {","      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);","    }","","    /**","     * Sets `value` to `key` of the cache.","     *","     * @private","     * @name set","     * @memberOf _.memoize.Cache","     * @param {string} key The key of the value to cache.","     * @param {*} value The value to cache.","     * @returns {Object} Returns the cache object.","     */","    function mapSet(key, value) {","      if (key != '__proto__') {","        this.__data__[key] = value;","      }","      return this;","    }","","    /*------------------------------------------------------------------------*/","","    /**","     *","     * Creates a cache object to store unique values.","     *","     * @private","     * @param {Array} [values] The values to cache.","     */","    function SetCache(values) {","      var length = values ? values.length : 0;","","      this.data = { 'hash': nativeCreate(null), 'set': new Set };","      while (length--) {","        this.push(values[length]);","      }","    }","","    /**","     * Checks if `value` is in `cache` mimicking the return signature of","     * `_.indexOf` by returning `0` if the value is found, else `-1`.","     *","     * @private","     * @param {Object} cache The cache to search.","     * @param {*} value The value to search for.","     * @returns {number} Returns `0` if `value` is found, else `-1`.","     */","    function cacheIndexOf(cache, value) {","      var data = cache.data,","          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];","","      return result ? 0 : -1;","    }","","    /**","     * Adds `value` to the cache.","     *","     * @private","     * @name push","     * @memberOf SetCache","     * @param {*} value The value to cache.","     */","    function cachePush(value) {","      var data = this.data;","      if (typeof value == 'string' || isObject(value)) {","        data.set.add(value);","      } else {","        data.hash[value] = true;","      }","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Creates a new array joining `array` with `other`.","     *","     * @private","     * @param {Array} array The array to join.","     * @param {Array} other The other array to join.","     * @returns {Array} Returns the new concatenated array.","     */","    function arrayConcat(array, other) {","      var index = -1,","          length = array.length,","          othIndex = -1,","          othLength = other.length,","          result = Array(length + othLength);","","      while (++index < length) {","        result[index] = array[index];","      }","      while (++othIndex < othLength) {","        result[index++] = other[othIndex];","      }","      return result;","    }","","    /**","     * Copies the values of `source` to `array`.","     *","     * @private","     * @param {Array} source The array to copy values from.","     * @param {Array} [array=[]] The array to copy values to.","     * @returns {Array} Returns `array`.","     */","    function arrayCopy(source, array) {","      var index = -1,","          length = source.length;","","      array || (array = Array(length));","      while (++index < length) {","        array[index] = source[index];","      }","      return array;","    }","","    /**","     * A specialized version of `_.forEach` for arrays without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {Array} Returns `array`.","     */","    function arrayEach(array, iteratee) {","      var index = -1,","          length = array.length;","","      while (++index < length) {","        if (iteratee(array[index], index, array) === false) {","          break;","        }","      }","      return array;","    }","","    /**","     * A specialized version of `_.forEachRight` for arrays without support for","     * callback shorthands and `this` binding.","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {Array} Returns `array`.","     */","    function arrayEachRight(array, iteratee) {","      var length = array.length;","","      while (length--) {","        if (iteratee(array[length], length, array) === false) {","          break;","        }","      }","      return array;","    }","","    /**","     * A specialized version of `_.every` for arrays without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} predicate The function invoked per iteration.","     * @returns {boolean} Returns `true` if all elements pass the predicate check,","     *  else `false`.","     */","    function arrayEvery(array, predicate) {","      var index = -1,","          length = array.length;","","      while (++index < length) {","        if (!predicate(array[index], index, array)) {","          return false;","        }","      }","      return true;","    }","","    /**","     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`","     * with one argument: (value).","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @param {Function} comparator The function used to compare values.","     * @param {*} exValue The initial extremum value.","     * @returns {*} Returns the extremum value.","     */","    function arrayExtremum(array, iteratee, comparator, exValue) {","      var index = -1,","          length = array.length,","          computed = exValue,","          result = computed;","","      while (++index < length) {","        var value = array[index],","            current = +iteratee(value);","","        if (comparator(current, computed)) {","          computed = current;","          result = value;","        }","      }","      return result;","    }","","    /**","     * A specialized version of `_.filter` for arrays without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} predicate The function invoked per iteration.","     * @returns {Array} Returns the new filtered array.","     */","    function arrayFilter(array, predicate) {","      var index = -1,","          length = array.length,","          resIndex = -1,","          result = [];","","      while (++index < length) {","        var value = array[index];","        if (predicate(value, index, array)) {","          result[++resIndex] = value;","        }","      }","      return result;","    }","","    /**","     * A specialized version of `_.map` for arrays without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {Array} Returns the new mapped array.","     */","    function arrayMap(array, iteratee) {","      var index = -1,","          length = array.length,","          result = Array(length);","","      while (++index < length) {","        result[index] = iteratee(array[index], index, array);","      }","      return result;","    }","","    /**","     * Appends the elements of `values` to `array`.","     *","     * @private","     * @param {Array} array The array to modify.","     * @param {Array} values The values to append.","     * @returns {Array} Returns `array`.","     */","    function arrayPush(array, values) {","      var index = -1,","          length = values.length,","          offset = array.length;","","      while (++index < length) {","        array[offset + index] = values[index];","      }","      return array;","    }","","    /**","     * A specialized version of `_.reduce` for arrays without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @param {*} [accumulator] The initial value.","     * @param {boolean} [initFromArray] Specify using the first element of `array`","     *  as the initial value.","     * @returns {*} Returns the accumulated value.","     */","    function arrayReduce(array, iteratee, accumulator, initFromArray) {","      var index = -1,","          length = array.length;","","      if (initFromArray && length) {","        accumulator = array[++index];","      }","      while (++index < length) {","        accumulator = iteratee(accumulator, array[index], index, array);","      }","      return accumulator;","    }","","    /**","     * A specialized version of `_.reduceRight` for arrays without support for","     * callback shorthands and `this` binding.","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @param {*} [accumulator] The initial value.","     * @param {boolean} [initFromArray] Specify using the last element of `array`","     *  as the initial value.","     * @returns {*} Returns the accumulated value.","     */","    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {","      var length = array.length;","      if (initFromArray && length) {","        accumulator = array[--length];","      }","      while (length--) {","        accumulator = iteratee(accumulator, array[length], length, array);","      }","      return accumulator;","    }","","    /**","     * A specialized version of `_.some` for arrays without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} predicate The function invoked per iteration.","     * @returns {boolean} Returns `true` if any element passes the predicate check,","     *  else `false`.","     */","    function arraySome(array, predicate) {","      var index = -1,","          length = array.length;","","      while (++index < length) {","        if (predicate(array[index], index, array)) {","          return true;","        }","      }","      return false;","    }","","    /**","     * A specialized version of `_.sum` for arrays without support for callback","     * shorthands and `this` binding..","     *","     * @private","     * @param {Array} array The array to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {number} Returns the sum.","     */","    function arraySum(array, iteratee) {","      var length = array.length,","          result = 0;","","      while (length--) {","        result += +iteratee(array[length]) || 0;","      }","      return result;","    }","","    /**","     * Used by `_.defaults` to customize its `_.assign` use.","     *","     * @private","     * @param {*} objectValue The destination object property value.","     * @param {*} sourceValue The source object property value.","     * @returns {*} Returns the value to assign to the destination object.","     */","    function assignDefaults(objectValue, sourceValue) {","      return objectValue === undefined ? sourceValue : objectValue;","    }","","    /**","     * Used by `_.template` to customize its `_.assign` use.","     *","     * **Note:** This function is like `assignDefaults` except that it ignores","     * inherited property values when checking if a property is `undefined`.","     *","     * @private","     * @param {*} objectValue The destination object property value.","     * @param {*} sourceValue The source object property value.","     * @param {string} key The key associated with the object and source values.","     * @param {Object} object The destination object.","     * @returns {*} Returns the value to assign to the destination object.","     */","    function assignOwnDefaults(objectValue, sourceValue, key, object) {","      return (objectValue === undefined || !hasOwnProperty.call(object, key))","        ? sourceValue","        : objectValue;","    }","","    /**","     * A specialized version of `_.assign` for customizing assigned values without","     * support for argument juggling, multiple sources, and `this` binding `customizer`","     * functions.","     *","     * @private","     * @param {Object} object The destination object.","     * @param {Object} source The source object.","     * @param {Function} customizer The function to customize assigned values.","     * @returns {Object} Returns `object`.","     */","    function assignWith(object, source, customizer) {","      var index = -1,","          props = keys(source),","          length = props.length;","","      while (++index < length) {","        var key = props[index],","            value = object[key],","            result = customizer(value, source[key], key, object, source);","","        if ((result === result ? (result !== value) : (value === value)) ||","            (value === undefined && !(key in object))) {","          object[key] = result;","        }","      }","      return object;","    }","","    /**","     * The base implementation of `_.assign` without support for argument juggling,","     * multiple sources, and `customizer` functions.","     *","     * @private","     * @param {Object} object The destination object.","     * @param {Object} source The source object.","     * @returns {Object} Returns `object`.","     */","    function baseAssign(object, source) {","      return source == null","        ? object","        : baseCopy(source, keys(source), object);","    }","","    /**","     * The base implementation of `_.at` without support for string collections","     * and individual key arguments.","     *","     * @private","     * @param {Array|Object} collection The collection to iterate over.","     * @param {number[]|string[]} props The property names or indexes of elements to pick.","     * @returns {Array} Returns the new array of picked elements.","     */","    function baseAt(collection, props) {","      var index = -1,","          isNil = collection == null,","          isArr = !isNil && isArrayLike(collection),","          length = isArr ? collection.length : 0,","          propsLength = props.length,","          result = Array(propsLength);","","      while(++index < propsLength) {","        var key = props[index];","        if (isArr) {","          result[index] = isIndex(key, length) ? collection[key] : undefined;","        } else {","          result[index] = isNil ? undefined : collection[key];","        }","      }","      return result;","    }","","    /**","     * Copies properties of `source` to `object`.","     *","     * @private","     * @param {Object} source The object to copy properties from.","     * @param {Array} props The property names to copy.","     * @param {Object} [object={}] The object to copy properties to.","     * @returns {Object} Returns `object`.","     */","    function baseCopy(source, props, object) {","      object || (object = {});","","      var index = -1,","          length = props.length;","","      while (++index < length) {","        var key = props[index];","        object[key] = source[key];","      }","      return object;","    }","","    /**","     * The base implementation of `_.callback` which supports specifying the","     * number of arguments to provide to `func`.","     *","     * @private","     * @param {*} [func=_.identity] The value to convert to a callback.","     * @param {*} [thisArg] The `this` binding of `func`.","     * @param {number} [argCount] The number of arguments to provide to `func`.","     * @returns {Function} Returns the callback.","     */","    function baseCallback(func, thisArg, argCount) {","      var type = typeof func;","      if (type == 'function') {","        return thisArg === undefined","          ? func","          : bindCallback(func, thisArg, argCount);","      }","      if (func == null) {","        return identity;","      }","      if (type == 'object') {","        return baseMatches(func);","      }","      return thisArg === undefined","        ? property(func)","        : baseMatchesProperty(func, thisArg);","    }","","    /**","     * The base implementation of `_.clone` without support for argument juggling","     * and `this` binding `customizer` functions.","     *","     * @private","     * @param {*} value The value to clone.","     * @param {boolean} [isDeep] Specify a deep clone.","     * @param {Function} [customizer] The function to customize cloning values.","     * @param {string} [key] The key of `value`.","     * @param {Object} [object] The object `value` belongs to.","     * @param {Array} [stackA=[]] Tracks traversed source objects.","     * @param {Array} [stackB=[]] Associates clones with source counterparts.","     * @returns {*} Returns the cloned value.","     */","    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {","      var result;","      if (customizer) {","        result = object ? customizer(value, key, object) : customizer(value);","      }","      if (result !== undefined) {","        return result;","      }","      if (!isObject(value)) {","        return value;","      }","      var isArr = isArray(value);","      if (isArr) {","        result = initCloneArray(value);","        if (!isDeep) {","          return arrayCopy(value, result);","        }","      } else {","        var tag = objToString.call(value),","            isFunc = tag == funcTag;","","        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {","          result = initCloneObject(isFunc ? {} : value);","          if (!isDeep) {","            return baseAssign(result, value);","          }","        } else {","          return cloneableTags[tag]","            ? initCloneByTag(value, tag, isDeep)","            : (object ? value : {});","        }","      }","      // Check for circular references and return its corresponding clone.","      stackA || (stackA = []);","      stackB || (stackB = []);","","      var length = stackA.length;","      while (length--) {","        if (stackA[length] == value) {","          return stackB[length];","        }","      }","      // Add the source value to the stack of traversed objects and associate it with its clone.","      stackA.push(value);","      stackB.push(result);","","      // Recursively populate clone (susceptible to call stack limits).","      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {","        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);","      });","      return result;","    }","","    /**","     * The base implementation of `_.create` without support for assigning","     * properties to the created object.","     *","     * @private","     * @param {Object} prototype The object to inherit from.","     * @returns {Object} Returns the new object.","     */","    var baseCreate = (function() {","      function object() {}","      return function(prototype) {","        if (isObject(prototype)) {","          object.prototype = prototype;","          var result = new object;","          object.prototype = undefined;","        }","        return result || {};","      };","    }());","","    /**","     * The base implementation of `_.delay` and `_.defer` which accepts an index","     * of where to slice the arguments to provide to `func`.","     *","     * @private","     * @param {Function} func The function to delay.","     * @param {number} wait The number of milliseconds to delay invocation.","     * @param {Object} args The arguments provide to `func`.","     * @returns {number} Returns the timer id.","     */","    function baseDelay(func, wait, args) {","      if (typeof func != 'function') {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      return setTimeout(function() { func.apply(undefined, args); }, wait);","    }","","    /**","     * The base implementation of `_.difference` which accepts a single array","     * of values to exclude.","     *","     * @private","     * @param {Array} array The array to inspect.","     * @param {Array} values The values to exclude.","     * @returns {Array} Returns the new array of filtered values.","     */","    function baseDifference(array, values) {","      var length = array ? array.length : 0,","          result = [];","","      if (!length) {","        return result;","      }","      var index = -1,","          indexOf = getIndexOf(),","          isCommon = indexOf == baseIndexOf,","          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,","          valuesLength = values.length;","","      if (cache) {","        indexOf = cacheIndexOf;","        isCommon = false;","        values = cache;","      }","      outer:","      while (++index < length) {","        var value = array[index];","","        if (isCommon && value === value) {","          var valuesIndex = valuesLength;","          while (valuesIndex--) {","            if (values[valuesIndex] === value) {","              continue outer;","            }","          }","          result.push(value);","        }","        else if (indexOf(values, value, 0) < 0) {","          result.push(value);","        }","      }","      return result;","    }","","    /**","     * The base implementation of `_.forEach` without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {Array|Object|string} Returns `collection`.","     */","    var baseEach = createBaseEach(baseForOwn);","","    /**","     * The base implementation of `_.forEachRight` without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {Array|Object|string} Returns `collection`.","     */","    var baseEachRight = createBaseEach(baseForOwnRight, true);","","    /**","     * The base implementation of `_.every` without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} predicate The function invoked per iteration.","     * @returns {boolean} Returns `true` if all elements pass the predicate check,","     *  else `false`","     */","    function baseEvery(collection, predicate) {","      var result = true;","      baseEach(collection, function(value, index, collection) {","        result = !!predicate(value, index, collection);","        return result;","      });","      return result;","    }","","    /**","     * Gets the extremum value of `collection` invoking `iteratee` for each value","     * in `collection` to generate the criterion by which the value is ranked.","     * The `iteratee` is invoked with three arguments: (value, index|key, collection).","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @param {Function} comparator The function used to compare values.","     * @param {*} exValue The initial extremum value.","     * @returns {*} Returns the extremum value.","     */","    function baseExtremum(collection, iteratee, comparator, exValue) {","      var computed = exValue,","          result = computed;","","      baseEach(collection, function(value, index, collection) {","        var current = +iteratee(value, index, collection);","        if (comparator(current, computed) || (current === exValue && current === result)) {","          computed = current;","          result = value;","        }","      });","      return result;","    }","","    /**","     * The base implementation of `_.fill` without an iteratee call guard.","     *","     * @private","     * @param {Array} array The array to fill.","     * @param {*} value The value to fill `array` with.","     * @param {number} [start=0] The start position.","     * @param {number} [end=array.length] The end position.","     * @returns {Array} Returns `array`.","     */","    function baseFill(array, value, start, end) {","      var length = array.length;","","      start = start == null ? 0 : (+start || 0);","      if (start < 0) {","        start = -start > length ? 0 : (length + start);","      }","      end = (end === undefined || end > length) ? length : (+end || 0);","      if (end < 0) {","        end += length;","      }","      length = start > end ? 0 : (end >>> 0);","      start >>>= 0;","","      while (start < length) {","        array[start++] = value;","      }","      return array;","    }","","    /**","     * The base implementation of `_.filter` without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} predicate The function invoked per iteration.","     * @returns {Array} Returns the new filtered array.","     */","    function baseFilter(collection, predicate) {","      var result = [];","      baseEach(collection, function(value, index, collection) {","        if (predicate(value, index, collection)) {","          result.push(value);","        }","      });","      return result;","    }","","    /**","     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,","     * without support for callback shorthands and `this` binding, which iterates","     * over `collection` using the provided `eachFunc`.","     *","     * @private","     * @param {Array|Object|string} collection The collection to search.","     * @param {Function} predicate The function invoked per iteration.","     * @param {Function} eachFunc The function to iterate over `collection`.","     * @param {boolean} [retKey] Specify returning the key of the found element","     *  instead of the element itself.","     * @returns {*} Returns the found element or its key, else `undefined`.","     */","    function baseFind(collection, predicate, eachFunc, retKey) {","      var result;","      eachFunc(collection, function(value, key, collection) {","        if (predicate(value, key, collection)) {","          result = retKey ? key : value;","          return false;","        }","      });","      return result;","    }","","    /**","     * The base implementation of `_.flatten` with added support for restricting","     * flattening and specifying the start index.","     *","     * @private","     * @param {Array} array The array to flatten.","     * @param {boolean} [isDeep] Specify a deep flatten.","     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.","     * @param {Array} [result=[]] The initial result value.","     * @returns {Array} Returns the new flattened array.","     */","    function baseFlatten(array, isDeep, isStrict, result) {","      result || (result = []);","","      var index = -1,","          length = array.length;","","      while (++index < length) {","        var value = array[index];","        if (isObjectLike(value) && isArrayLike(value) &&","            (isStrict || isArray(value) || isArguments(value))) {","          if (isDeep) {","            // Recursively flatten arrays (susceptible to call stack limits).","            baseFlatten(value, isDeep, isStrict, result);","          } else {","            arrayPush(result, value);","          }","        } else if (!isStrict) {","          result[result.length] = value;","        }","      }","      return result;","    }","","    /**","     * The base implementation of `baseForIn` and `baseForOwn` which iterates","     * over `object` properties returned by `keysFunc` invoking `iteratee` for","     * each property. Iteratee functions may exit iteration early by explicitly","     * returning `false`.","     *","     * @private","     * @param {Object} object The object to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @param {Function} keysFunc The function to get the keys of `object`.","     * @returns {Object} Returns `object`.","     */","    var baseFor = createBaseFor();","","    /**","     * This function is like `baseFor` except that it iterates over properties","     * in the opposite order.","     *","     * @private","     * @param {Object} object The object to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @param {Function} keysFunc The function to get the keys of `object`.","     * @returns {Object} Returns `object`.","     */","    var baseForRight = createBaseFor(true);","","    /**","     * The base implementation of `_.forIn` without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Object} object The object to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {Object} Returns `object`.","     */","    function baseForIn(object, iteratee) {","      return baseFor(object, iteratee, keysIn);","    }","","    /**","     * The base implementation of `_.forOwn` without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Object} object The object to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {Object} Returns `object`.","     */","    function baseForOwn(object, iteratee) {","      return baseFor(object, iteratee, keys);","    }","","    /**","     * The base implementation of `_.forOwnRight` without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Object} object The object to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {Object} Returns `object`.","     */","    function baseForOwnRight(object, iteratee) {","      return baseForRight(object, iteratee, keys);","    }","","    /**","     * The base implementation of `_.functions` which creates an array of","     * `object` function property names filtered from those provided.","     *","     * @private","     * @param {Object} object The object to inspect.","     * @param {Array} props The property names to filter.","     * @returns {Array} Returns the new array of filtered property names.","     */","    function baseFunctions(object, props) {","      var index = -1,","          length = props.length,","          resIndex = -1,","          result = [];","","      while (++index < length) {","        var key = props[index];","        if (isFunction(object[key])) {","          result[++resIndex] = key;","        }","      }","      return result;","    }","","    /**","     * The base implementation of `get` without support for string paths","     * and default values.","     *","     * @private","     * @param {Object} object The object to query.","     * @param {Array} path The path of the property to get.","     * @param {string} [pathKey] The key representation of path.","     * @returns {*} Returns the resolved value.","     */","    function baseGet(object, path, pathKey) {","      if (object == null) {","        return;","      }","      if (pathKey !== undefined && pathKey in toObject(object)) {","        path = [pathKey];","      }","      var index = 0,","          length = path.length;","","      while (object != null && index < length) {","        object = object[path[index++]];","      }","      return (index && index == length) ? object : undefined;","    }","","    /**","     * The base implementation of `_.isEqual` without support for `this` binding","     * `customizer` functions.","     *","     * @private","     * @param {*} value The value to compare.","     * @param {*} other The other value to compare.","     * @param {Function} [customizer] The function to customize comparing values.","     * @param {boolean} [isLoose] Specify performing partial comparisons.","     * @param {Array} [stackA] Tracks traversed `value` objects.","     * @param {Array} [stackB] Tracks traversed `other` objects.","     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.","     */","    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {","      if (value === other) {","        return true;","      }","      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {","        return value !== value && other !== other;","      }","      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);","    }","","    /**","     * A specialized version of `baseIsEqual` for arrays and objects which performs","     * deep comparisons and tracks traversed objects enabling objects with circular","     * references to be compared.","     *","     * @private","     * @param {Object} object The object to compare.","     * @param {Object} other The other object to compare.","     * @param {Function} equalFunc The function to determine equivalents of values.","     * @param {Function} [customizer] The function to customize comparing objects.","     * @param {boolean} [isLoose] Specify performing partial comparisons.","     * @param {Array} [stackA=[]] Tracks traversed `value` objects.","     * @param {Array} [stackB=[]] Tracks traversed `other` objects.","     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.","     */","    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {","      var objIsArr = isArray(object),","          othIsArr = isArray(other),","          objTag = arrayTag,","          othTag = arrayTag;","","      if (!objIsArr) {","        objTag = objToString.call(object);","        if (objTag == argsTag) {","          objTag = objectTag;","        } else if (objTag != objectTag) {","          objIsArr = isTypedArray(object);","        }","      }","      if (!othIsArr) {","        othTag = objToString.call(other);","        if (othTag == argsTag) {","          othTag = objectTag;","        } else if (othTag != objectTag) {","          othIsArr = isTypedArray(other);","        }","      }","      var objIsObj = objTag == objectTag,","          othIsObj = othTag == objectTag,","          isSameTag = objTag == othTag;","","      if (isSameTag && !(objIsArr || objIsObj)) {","        return equalByTag(object, other, objTag);","      }","      if (!isLoose) {","        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),","            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');","","        if (objIsWrapped || othIsWrapped) {","          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);","        }","      }","      if (!isSameTag) {","        return false;","      }","      // Assume cyclic values are equal.","      // For more information on detecting circular references see https://es5.github.io/#JO.","      stackA || (stackA = []);","      stackB || (stackB = []);","","      var length = stackA.length;","      while (length--) {","        if (stackA[length] == object) {","          return stackB[length] == other;","        }","      }","      // Add `object` and `other` to the stack of traversed objects.","      stackA.push(object);","      stackB.push(other);","","      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);","","      stackA.pop();","      stackB.pop();","","      return result;","    }","","    /**","     * The base implementation of `_.isMatch` without support for callback","     * shorthands and `this` binding.","     *","     * @private","     * @param {Object} object The object to inspect.","     * @param {Array} matchData The propery names, values, and compare flags to match.","     * @param {Function} [customizer] The function to customize comparing objects.","     * @returns {boolean} Returns `true` if `object` is a match, else `false`.","     */","    function baseIsMatch(object, matchData, customizer) {","      var index = matchData.length,","          length = index,","          noCustomizer = !customizer;","","      if (object == null) {","        return !length;","      }","      object = toObject(object);","      while (index--) {","        var data = matchData[index];","        if ((noCustomizer && data[2])","              ? data[1] !== object[data[0]]","              : !(data[0] in object)","            ) {","          return false;","        }","      }","      while (++index < length) {","        data = matchData[index];","        var key = data[0],","            objValue = object[key],","            srcValue = data[1];","","        if (noCustomizer && data[2]) {","          if (objValue === undefined && !(key in object)) {","            return false;","          }","        } else {","          var result = customizer ? customizer(objValue, srcValue, key) : undefined;","          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {","            return false;","          }","        }","      }","      return true;","    }","","    /**","     * The base implementation of `_.map` without support for callback shorthands","     * and `this` binding.","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {Array} Returns the new mapped array.","     */","    function baseMap(collection, iteratee) {","      var index = -1,","          result = isArrayLike(collection) ? Array(collection.length) : [];","","      baseEach(collection, function(value, key, collection) {","        result[++index] = iteratee(value, key, collection);","      });","      return result;","    }","","    /**","     * The base implementation of `_.matches` which does not clone `source`.","     *","     * @private","     * @param {Object} source The object of property values to match.","     * @returns {Function} Returns the new function.","     */","    function baseMatches(source) {","      var matchData = getMatchData(source);","      if (matchData.length == 1 && matchData[0][2]) {","        var key = matchData[0][0],","            value = matchData[0][1];","","        return function(object) {","          if (object == null) {","            return false;","          }","          return object[key] === value && (value !== undefined || (key in toObject(object)));","        };","      }","      return function(object) {","        return baseIsMatch(object, matchData);","      };","    }","","    /**","     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.","     *","     * @private","     * @param {string} path The path of the property to get.","     * @param {*} srcValue The value to compare.","     * @returns {Function} Returns the new function.","     */","    function baseMatchesProperty(path, srcValue) {","      var isArr = isArray(path),","          isCommon = isKey(path) && isStrictComparable(srcValue),","          pathKey = (path + '');","","      path = toPath(path);","      return function(object) {","        if (object == null) {","          return false;","        }","        var key = pathKey;","        object = toObject(object);","        if ((isArr || !isCommon) && !(key in object)) {","          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));","          if (object == null) {","            return false;","          }","          key = last(path);","          object = toObject(object);","        }","        return object[key] === srcValue","          ? (srcValue !== undefined || (key in object))","          : baseIsEqual(srcValue, object[key], undefined, true);","      };","    }","","    /**","     * The base implementation of `_.merge` without support for argument juggling,","     * multiple sources, and `this` binding `customizer` functions.","     *","     * @private","     * @param {Object} object The destination object.","     * @param {Object} source The source object.","     * @param {Function} [customizer] The function to customize merged values.","     * @param {Array} [stackA=[]] Tracks traversed source objects.","     * @param {Array} [stackB=[]] Associates values with source counterparts.","     * @returns {Object} Returns `object`.","     */","    function baseMerge(object, source, customizer, stackA, stackB) {","      if (!isObject(object)) {","        return object;","      }","      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),","          props = isSrcArr ? undefined : keys(source);","","      arrayEach(props || source, function(srcValue, key) {","        if (props) {","          key = srcValue;","          srcValue = source[key];","        }","        if (isObjectLike(srcValue)) {","          stackA || (stackA = []);","          stackB || (stackB = []);","          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);","        }","        else {","          var value = object[key],","              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,","              isCommon = result === undefined;","","          if (isCommon) {","            result = srcValue;","          }","          if ((result !== undefined || (isSrcArr && !(key in object))) &&","              (isCommon || (result === result ? (result !== value) : (value === value)))) {","            object[key] = result;","          }","        }","      });","      return object;","    }","","    /**","     * A specialized version of `baseMerge` for arrays and objects which performs","     * deep merges and tracks traversed objects enabling objects with circular","     * references to be merged.","     *","     * @private","     * @param {Object} object The destination object.","     * @param {Object} source The source object.","     * @param {string} key The key of the value to merge.","     * @param {Function} mergeFunc The function to merge values.","     * @param {Function} [customizer] The function to customize merged values.","     * @param {Array} [stackA=[]] Tracks traversed source objects.","     * @param {Array} [stackB=[]] Associates values with source counterparts.","     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.","     */","    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {","      var length = stackA.length,","          srcValue = source[key];","","      while (length--) {","        if (stackA[length] == srcValue) {","          object[key] = stackB[length];","          return;","        }","      }","      var value = object[key],","          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,","          isCommon = result === undefined;","","      if (isCommon) {","        result = srcValue;","        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {","          result = isArray(value)","            ? value","            : (isArrayLike(value) ? arrayCopy(value) : []);","        }","        else if (isPlainObject(srcValue) || isArguments(srcValue)) {","          result = isArguments(value)","            ? toPlainObject(value)","            : (isPlainObject(value) ? value : {});","        }","        else {","          isCommon = false;","        }","      }","      // Add the source value to the stack of traversed objects and associate","      // it with its merged value.","      stackA.push(srcValue);","      stackB.push(result);","","      if (isCommon) {","        // Recursively merge objects and arrays (susceptible to call stack limits).","        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);","      } else if (result === result ? (result !== value) : (value === value)) {","        object[key] = result;","      }","    }","","    /**","     * The base implementation of `_.property` without support for deep paths.","     *","     * @private","     * @param {string} key The key of the property to get.","     * @returns {Function} Returns the new function.","     */","    function baseProperty(key) {","      return function(object) {","        return object == null ? undefined : object[key];","      };","    }","","    /**","     * A specialized version of `baseProperty` which supports deep paths.","     *","     * @private","     * @param {Array|string} path The path of the property to get.","     * @returns {Function} Returns the new function.","     */","    function basePropertyDeep(path) {","      var pathKey = (path + '');","      path = toPath(path);","      return function(object) {","        return baseGet(object, path, pathKey);","      };","    }","","    /**","     * The base implementation of `_.pullAt` without support for individual","     * index arguments and capturing the removed elements.","     *","     * @private","     * @param {Array} array The array to modify.","     * @param {number[]} indexes The indexes of elements to remove.","     * @returns {Array} Returns `array`.","     */","    function basePullAt(array, indexes) {","      var length = array ? indexes.length : 0;","      while (length--) {","        var index = indexes[length];","        if (index != previous && isIndex(index)) {","          var previous = index;","          splice.call(array, index, 1);","        }","      }","      return array;","    }","","    /**","     * The base implementation of `_.random` without support for argument juggling","     * and returning floating-point numbers.","     *","     * @private","     * @param {number} min The minimum possible value.","     * @param {number} max The maximum possible value.","     * @returns {number} Returns the random number.","     */","    function baseRandom(min, max) {","      return min + nativeFloor(nativeRandom() * (max - min + 1));","    }","","    /**","     * The base implementation of `_.reduce` and `_.reduceRight` without support","     * for callback shorthands and `this` binding, which iterates over `collection`","     * using the provided `eachFunc`.","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @param {*} accumulator The initial value.","     * @param {boolean} initFromCollection Specify using the first or last element","     *  of `collection` as the initial value.","     * @param {Function} eachFunc The function to iterate over `collection`.","     * @returns {*} Returns the accumulated value.","     */","    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {","      eachFunc(collection, function(value, index, collection) {","        accumulator = initFromCollection","          ? (initFromCollection = false, value)","          : iteratee(accumulator, value, index, collection);","      });","      return accumulator;","    }","","    /**","     * The base implementation of `setData` without support for hot loop detection.","     *","     * @private","     * @param {Function} func The function to associate metadata with.","     * @param {*} data The metadata.","     * @returns {Function} Returns `func`.","     */","    var baseSetData = !metaMap ? identity : function(func, data) {","      metaMap.set(func, data);","      return func;","    };","","    /**","     * The base implementation of `_.slice` without an iteratee call guard.","     *","     * @private","     * @param {Array} array The array to slice.","     * @param {number} [start=0] The start position.","     * @param {number} [end=array.length] The end position.","     * @returns {Array} Returns the slice of `array`.","     */","    function baseSlice(array, start, end) {","      var index = -1,","          length = array.length;","","      start = start == null ? 0 : (+start || 0);","      if (start < 0) {","        start = -start > length ? 0 : (length + start);","      }","      end = (end === undefined || end > length) ? length : (+end || 0);","      if (end < 0) {","        end += length;","      }","      length = start > end ? 0 : ((end - start) >>> 0);","      start >>>= 0;","","      var result = Array(length);","      while (++index < length) {","        result[index] = array[index + start];","      }","      return result;","    }","","    /**","     * The base implementation of `_.some` without support for callback shorthands","     * and `this` binding.","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} predicate The function invoked per iteration.","     * @returns {boolean} Returns `true` if any element passes the predicate check,","     *  else `false`.","     */","    function baseSome(collection, predicate) {","      var result;","","      baseEach(collection, function(value, index, collection) {","        result = predicate(value, index, collection);","        return !result;","      });","      return !!result;","    }","","    /**","     * The base implementation of `_.sortBy` which uses `comparer` to define","     * the sort order of `array` and replaces criteria objects with their","     * corresponding values.","     *","     * @private","     * @param {Array} array The array to sort.","     * @param {Function} comparer The function to define sort order.","     * @returns {Array} Returns `array`.","     */","    function baseSortBy(array, comparer) {","      var length = array.length;","","      array.sort(comparer);","      while (length--) {","        array[length] = array[length].value;","      }","      return array;","    }","","    /**","     * The base implementation of `_.sortByOrder` without param guards.","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.","     * @param {boolean[]} orders The sort orders of `iteratees`.","     * @returns {Array} Returns the new sorted array.","     */","    function baseSortByOrder(collection, iteratees, orders) {","      var callback = getCallback(),","          index = -1;","","      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });","","      var result = baseMap(collection, function(value) {","        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });","        return { 'criteria': criteria, 'index': ++index, 'value': value };","      });","","      return baseSortBy(result, function(object, other) {","        return compareMultiple(object, other, orders);","      });","    }","","    /**","     * The base implementation of `_.sum` without support for callback shorthands","     * and `this` binding.","     *","     * @private","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} iteratee The function invoked per iteration.","     * @returns {number} Returns the sum.","     */","    function baseSum(collection, iteratee) {","      var result = 0;","      baseEach(collection, function(value, index, collection) {","        result += +iteratee(value, index, collection) || 0;","      });","      return result;","    }","","    /**","     * The base implementation of `_.uniq` without support for callback shorthands","     * and `this` binding.","     *","     * @private","     * @param {Array} array The array to inspect.","     * @param {Function} [iteratee] The function invoked per iteration.","     * @returns {Array} Returns the new duplicate-value-free array.","     */","    function baseUniq(array, iteratee) {","      var index = -1,","          indexOf = getIndexOf(),","          length = array.length,","          isCommon = indexOf == baseIndexOf,","          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,","          seen = isLarge ? createCache() : null,","          result = [];","","      if (seen) {","        indexOf = cacheIndexOf;","        isCommon = false;","      } else {","        isLarge = false;","        seen = iteratee ? [] : result;","      }","      outer:","      while (++index < length) {","        var value = array[index],","            computed = iteratee ? iteratee(value, index, array) : value;","","        if (isCommon && value === value) {","          var seenIndex = seen.length;","          while (seenIndex--) {","            if (seen[seenIndex] === computed) {","              continue outer;","            }","          }","          if (iteratee) {","            seen.push(computed);","          }","          result.push(value);","        }","        else if (indexOf(seen, computed, 0) < 0) {","          if (iteratee || isLarge) {","            seen.push(computed);","          }","          result.push(value);","        }","      }","      return result;","    }","","    /**","     * The base implementation of `_.values` and `_.valuesIn` which creates an","     * array of `object` property values corresponding to the property names","     * of `props`.","     *","     * @private","     * @param {Object} object The object to query.","     * @param {Array} props The property names to get values for.","     * @returns {Object} Returns the array of property values.","     */","    function baseValues(object, props) {","      var index = -1,","          length = props.length,","          result = Array(length);","","      while (++index < length) {","        result[index] = object[props[index]];","      }","      return result;","    }","","    /**","     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,","     * and `_.takeWhile` without support for callback shorthands and `this` binding.","     *","     * @private","     * @param {Array} array The array to query.","     * @param {Function} predicate The function invoked per iteration.","     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.","     * @param {boolean} [fromRight] Specify iterating from right to left.","     * @returns {Array} Returns the slice of `array`.","     */","    function baseWhile(array, predicate, isDrop, fromRight) {","      var length = array.length,","          index = fromRight ? length : -1;","","      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}","      return isDrop","        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))","        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));","    }","","    /**","     * The base implementation of `wrapperValue` which returns the result of","     * performing a sequence of actions on the unwrapped `value`, where each","     * successive action is supplied the return value of the previous.","     *","     * @private","     * @param {*} value The unwrapped value.","     * @param {Array} actions Actions to peform to resolve the unwrapped value.","     * @returns {*} Returns the resolved value.","     */","    function baseWrapperValue(value, actions) {","      var result = value;","      if (result instanceof LazyWrapper) {","        result = result.value();","      }","      var index = -1,","          length = actions.length;","","      while (++index < length) {","        var action = actions[index];","        result = action.func.apply(action.thisArg, arrayPush([result], action.args));","      }","      return result;","    }","","    /**","     * Performs a binary search of `array` to determine the index at which `value`","     * should be inserted into `array` in order to maintain its sort order.","     *","     * @private","     * @param {Array} array The sorted array to inspect.","     * @param {*} value The value to evaluate.","     * @param {boolean} [retHighest] Specify returning the highest qualified index.","     * @returns {number} Returns the index at which `value` should be inserted","     *  into `array`.","     */","    function binaryIndex(array, value, retHighest) {","      var low = 0,","          high = array ? array.length : low;","","      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {","        while (low < high) {","          var mid = (low + high) >>> 1,","              computed = array[mid];","","          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {","            low = mid + 1;","          } else {","            high = mid;","          }","        }","        return high;","      }","      return binaryIndexBy(array, value, identity, retHighest);","    }","","    /**","     * This function is like `binaryIndex` except that it invokes `iteratee` for","     * `value` and each element of `array` to compute their sort ranking. The","     * iteratee is invoked with one argument; (value).","     *","     * @private","     * @param {Array} array The sorted array to inspect.","     * @param {*} value The value to evaluate.","     * @param {Function} iteratee The function invoked per iteration.","     * @param {boolean} [retHighest] Specify returning the highest qualified index.","     * @returns {number} Returns the index at which `value` should be inserted","     *  into `array`.","     */","    function binaryIndexBy(array, value, iteratee, retHighest) {","      value = iteratee(value);","","      var low = 0,","          high = array ? array.length : 0,","          valIsNaN = value !== value,","          valIsNull = value === null,","          valIsUndef = value === undefined;","","      while (low < high) {","        var mid = nativeFloor((low + high) / 2),","            computed = iteratee(array[mid]),","            isDef = computed !== undefined,","            isReflexive = computed === computed;","","        if (valIsNaN) {","          var setLow = isReflexive || retHighest;","        } else if (valIsNull) {","          setLow = isReflexive && isDef && (retHighest || computed != null);","        } else if (valIsUndef) {","          setLow = isReflexive && (retHighest || isDef);","        } else if (computed == null) {","          setLow = false;","        } else {","          setLow = retHighest ? (computed <= value) : (computed < value);","        }","        if (setLow) {","          low = mid + 1;","        } else {","          high = mid;","        }","      }","      return nativeMin(high, MAX_ARRAY_INDEX);","    }","","    /**","     * A specialized version of `baseCallback` which only supports `this` binding","     * and specifying the number of arguments to provide to `func`.","     *","     * @private","     * @param {Function} func The function to bind.","     * @param {*} thisArg The `this` binding of `func`.","     * @param {number} [argCount] The number of arguments to provide to `func`.","     * @returns {Function} Returns the callback.","     */","    function bindCallback(func, thisArg, argCount) {","      if (typeof func != 'function') {","        return identity;","      }","      if (thisArg === undefined) {","        return func;","      }","      switch (argCount) {","        case 1: return function(value) {","          return func.call(thisArg, value);","        };","        case 3: return function(value, index, collection) {","          return func.call(thisArg, value, index, collection);","        };","        case 4: return function(accumulator, value, index, collection) {","          return func.call(thisArg, accumulator, value, index, collection);","        };","        case 5: return function(value, other, key, object, source) {","          return func.call(thisArg, value, other, key, object, source);","        };","      }","      return function() {","        return func.apply(thisArg, arguments);","      };","    }","","    /**","     * Creates a clone of the given array buffer.","     *","     * @private","     * @param {ArrayBuffer} buffer The array buffer to clone.","     * @returns {ArrayBuffer} Returns the cloned array buffer.","     */","    function bufferClone(buffer) {","      var result = new ArrayBuffer(buffer.byteLength),","          view = new Uint8Array(result);","","      view.set(new Uint8Array(buffer));","      return result;","    }","","    /**","     * Creates an array that is the composition of partially applied arguments,","     * placeholders, and provided arguments into a single array of arguments.","     *","     * @private","     * @param {Array|Object} args The provided arguments.","     * @param {Array} partials The arguments to prepend to those provided.","     * @param {Array} holders The `partials` placeholder indexes.","     * @returns {Array} Returns the new array of composed arguments.","     */","    function composeArgs(args, partials, holders) {","      var holdersLength = holders.length,","          argsIndex = -1,","          argsLength = nativeMax(args.length - holdersLength, 0),","          leftIndex = -1,","          leftLength = partials.length,","          result = Array(leftLength + argsLength);","","      while (++leftIndex < leftLength) {","        result[leftIndex] = partials[leftIndex];","      }","      while (++argsIndex < holdersLength) {","        result[holders[argsIndex]] = args[argsIndex];","      }","      while (argsLength--) {","        result[leftIndex++] = args[argsIndex++];","      }","      return result;","    }","","    /**","     * This function is like `composeArgs` except that the arguments composition","     * is tailored for `_.partialRight`.","     *","     * @private","     * @param {Array|Object} args The provided arguments.","     * @param {Array} partials The arguments to append to those provided.","     * @param {Array} holders The `partials` placeholder indexes.","     * @returns {Array} Returns the new array of composed arguments.","     */","    function composeArgsRight(args, partials, holders) {","      var holdersIndex = -1,","          holdersLength = holders.length,","          argsIndex = -1,","          argsLength = nativeMax(args.length - holdersLength, 0),","          rightIndex = -1,","          rightLength = partials.length,","          result = Array(argsLength + rightLength);","","      while (++argsIndex < argsLength) {","        result[argsIndex] = args[argsIndex];","      }","      var offset = argsIndex;","      while (++rightIndex < rightLength) {","        result[offset + rightIndex] = partials[rightIndex];","      }","      while (++holdersIndex < holdersLength) {","        result[offset + holders[holdersIndex]] = args[argsIndex++];","      }","      return result;","    }","","    /**","     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.","     *","     * @private","     * @param {Function} setter The function to set keys and values of the accumulator object.","     * @param {Function} [initializer] The function to initialize the accumulator object.","     * @returns {Function} Returns the new aggregator function.","     */","    function createAggregator(setter, initializer) {","      return function(collection, iteratee, thisArg) {","        var result = initializer ? initializer() : {};","        iteratee = getCallback(iteratee, thisArg, 3);","","        if (isArray(collection)) {","          var index = -1,","              length = collection.length;","","          while (++index < length) {","            var value = collection[index];","            setter(result, value, iteratee(value, index, collection), collection);","          }","        } else {","          baseEach(collection, function(value, key, collection) {","            setter(result, value, iteratee(value, key, collection), collection);","          });","        }","        return result;","      };","    }","","    /**","     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.","     *","     * @private","     * @param {Function} assigner The function to assign values.","     * @returns {Function} Returns the new assigner function.","     */","    function createAssigner(assigner) {","      return restParam(function(object, sources) {","        var index = -1,","            length = object == null ? 0 : sources.length,","            customizer = length > 2 ? sources[length - 2] : undefined,","            guard = length > 2 ? sources[2] : undefined,","            thisArg = length > 1 ? sources[length - 1] : undefined;","","        if (typeof customizer == 'function') {","          customizer = bindCallback(customizer, thisArg, 5);","          length -= 2;","        } else {","          customizer = typeof thisArg == 'function' ? thisArg : undefined;","          length -= (customizer ? 1 : 0);","        }","        if (guard && isIterateeCall(sources[0], sources[1], guard)) {","          customizer = length < 3 ? undefined : customizer;","          length = 1;","        }","        while (++index < length) {","          var source = sources[index];","          if (source) {","            assigner(object, source, customizer);","          }","        }","        return object;","      });","    }","","    /**","     * Creates a `baseEach` or `baseEachRight` function.","     *","     * @private","     * @param {Function} eachFunc The function to iterate over a collection.","     * @param {boolean} [fromRight] Specify iterating from right to left.","     * @returns {Function} Returns the new base function.","     */","    function createBaseEach(eachFunc, fromRight) {","      return function(collection, iteratee) {","        var length = collection ? getLength(collection) : 0;","        if (!isLength(length)) {","          return eachFunc(collection, iteratee);","        }","        var index = fromRight ? length : -1,","            iterable = toObject(collection);","","        while ((fromRight ? index-- : ++index < length)) {","          if (iteratee(iterable[index], index, iterable) === false) {","            break;","          }","        }","        return collection;","      };","    }","","    /**","     * Creates a base function for `_.forIn` or `_.forInRight`.","     *","     * @private","     * @param {boolean} [fromRight] Specify iterating from right to left.","     * @returns {Function} Returns the new base function.","     */","    function createBaseFor(fromRight) {","      return function(object, iteratee, keysFunc) {","        var iterable = toObject(object),","            props = keysFunc(object),","            length = props.length,","            index = fromRight ? length : -1;","","        while ((fromRight ? index-- : ++index < length)) {","          var key = props[index];","          if (iteratee(iterable[key], key, iterable) === false) {","            break;","          }","        }","        return object;","      };","    }","","    /**","     * Creates a function that wraps `func` and invokes it with the `this`","     * binding of `thisArg`.","     *","     * @private","     * @param {Function} func The function to bind.","     * @param {*} [thisArg] The `this` binding of `func`.","     * @returns {Function} Returns the new bound function.","     */","    function createBindWrapper(func, thisArg) {","      var Ctor = createCtorWrapper(func);","","      function wrapper() {","        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;","        return fn.apply(thisArg, arguments);","      }","      return wrapper;","    }","","    /**","     * Creates a `Set` cache object to optimize linear searches of large arrays.","     *","     * @private","     * @param {Array} [values] The values to cache.","     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.","     */","    function createCache(values) {","      return (nativeCreate && Set) ? new SetCache(values) : null;","    }","","    /**","     * Creates a function that produces compound words out of the words in a","     * given string.","     *","     * @private","     * @param {Function} callback The function to combine each word.","     * @returns {Function} Returns the new compounder function.","     */","    function createCompounder(callback) {","      return function(string) {","        var index = -1,","            array = words(deburr(string)),","            length = array.length,","            result = '';","","        while (++index < length) {","          result = callback(result, array[index], index);","        }","        return result;","      };","    }","","    /**","     * Creates a function that produces an instance of `Ctor` regardless of","     * whether it was invoked as part of a `new` expression or by `call` or `apply`.","     *","     * @private","     * @param {Function} Ctor The constructor to wrap.","     * @returns {Function} Returns the new wrapped function.","     */","    function createCtorWrapper(Ctor) {","      return function() {","        // Use a `switch` statement to work with class constructors.","        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist","        // for more details.","        var args = arguments;","        switch (args.length) {","          case 0: return new Ctor;","          case 1: return new Ctor(args[0]);","          case 2: return new Ctor(args[0], args[1]);","          case 3: return new Ctor(args[0], args[1], args[2]);","          case 4: return new Ctor(args[0], args[1], args[2], args[3]);","          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);","          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);","          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);","        }","        var thisBinding = baseCreate(Ctor.prototype),","            result = Ctor.apply(thisBinding, args);","","        // Mimic the constructor's `return` behavior.","        // See https://es5.github.io/#x13.2.2 for more details.","        return isObject(result) ? result : thisBinding;","      };","    }","","    /**","     * Creates a `_.curry` or `_.curryRight` function.","     *","     * @private","     * @param {boolean} flag The curry bit flag.","     * @returns {Function} Returns the new curry function.","     */","    function createCurry(flag) {","      function curryFunc(func, arity, guard) {","        if (guard && isIterateeCall(func, arity, guard)) {","          arity = undefined;","        }","        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);","        result.placeholder = curryFunc.placeholder;","        return result;","      }","      return curryFunc;","    }","","    /**","     * Creates a `_.defaults` or `_.defaultsDeep` function.","     *","     * @private","     * @param {Function} assigner The function to assign values.","     * @param {Function} customizer The function to customize assigned values.","     * @returns {Function} Returns the new defaults function.","     */","    function createDefaults(assigner, customizer) {","      return restParam(function(args) {","        var object = args[0];","        if (object == null) {","          return object;","        }","        args.push(customizer);","        return assigner.apply(undefined, args);","      });","    }","","    /**","     * Creates a `_.max` or `_.min` function.","     *","     * @private","     * @param {Function} comparator The function used to compare values.","     * @param {*} exValue The initial extremum value.","     * @returns {Function} Returns the new extremum function.","     */","    function createExtremum(comparator, exValue) {","      return function(collection, iteratee, thisArg) {","        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {","          iteratee = undefined;","        }","        iteratee = getCallback(iteratee, thisArg, 3);","        if (iteratee.length == 1) {","          collection = isArray(collection) ? collection : toIterable(collection);","          var result = arrayExtremum(collection, iteratee, comparator, exValue);","          if (!(collection.length && result === exValue)) {","            return result;","          }","        }","        return baseExtremum(collection, iteratee, comparator, exValue);","      };","    }","","    /**","     * Creates a `_.find` or `_.findLast` function.","     *","     * @private","     * @param {Function} eachFunc The function to iterate over a collection.","     * @param {boolean} [fromRight] Specify iterating from right to left.","     * @returns {Function} Returns the new find function.","     */","    function createFind(eachFunc, fromRight) {","      return function(collection, predicate, thisArg) {","        predicate = getCallback(predicate, thisArg, 3);","        if (isArray(collection)) {","          var index = baseFindIndex(collection, predicate, fromRight);","          return index > -1 ? collection[index] : undefined;","        }","        return baseFind(collection, predicate, eachFunc);","      };","    }","","    /**","     * Creates a `_.findIndex` or `_.findLastIndex` function.","     *","     * @private","     * @param {boolean} [fromRight] Specify iterating from right to left.","     * @returns {Function} Returns the new find function.","     */","    function createFindIndex(fromRight) {","      return function(array, predicate, thisArg) {","        if (!(array && array.length)) {","          return -1;","        }","        predicate = getCallback(predicate, thisArg, 3);","        return baseFindIndex(array, predicate, fromRight);","      };","    }","","    /**","     * Creates a `_.findKey` or `_.findLastKey` function.","     *","     * @private","     * @param {Function} objectFunc The function to iterate over an object.","     * @returns {Function} Returns the new find function.","     */","    function createFindKey(objectFunc) {","      return function(object, predicate, thisArg) {","        predicate = getCallback(predicate, thisArg, 3);","        return baseFind(object, predicate, objectFunc, true);","      };","    }","","    /**","     * Creates a `_.flow` or `_.flowRight` function.","     *","     * @private","     * @param {boolean} [fromRight] Specify iterating from right to left.","     * @returns {Function} Returns the new flow function.","     */","    function createFlow(fromRight) {","      return function() {","        var wrapper,","            length = arguments.length,","            index = fromRight ? length : -1,","            leftIndex = 0,","            funcs = Array(length);","","        while ((fromRight ? index-- : ++index < length)) {","          var func = funcs[leftIndex++] = arguments[index];","          if (typeof func != 'function') {","            throw new TypeError(FUNC_ERROR_TEXT);","          }","          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {","            wrapper = new LodashWrapper([], true);","          }","        }","        index = wrapper ? -1 : length;","        while (++index < length) {","          func = funcs[index];","","          var funcName = getFuncName(func),","              data = funcName == 'wrapper' ? getData(func) : undefined;","","          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {","            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);","          } else {","            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);","          }","        }","        return function() {","          var args = arguments,","              value = args[0];","","          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {","            return wrapper.plant(value).value();","          }","          var index = 0,","              result = length ? funcs[index].apply(this, args) : value;","","          while (++index < length) {","            result = funcs[index].call(this, result);","          }","          return result;","        };","      };","    }","","    /**","     * Creates a function for `_.forEach` or `_.forEachRight`.","     *","     * @private","     * @param {Function} arrayFunc The function to iterate over an array.","     * @param {Function} eachFunc The function to iterate over a collection.","     * @returns {Function} Returns the new each function.","     */","    function createForEach(arrayFunc, eachFunc) {","      return function(collection, iteratee, thisArg) {","        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))","          ? arrayFunc(collection, iteratee)","          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));","      };","    }","","    /**","     * Creates a function for `_.forIn` or `_.forInRight`.","     *","     * @private","     * @param {Function} objectFunc The function to iterate over an object.","     * @returns {Function} Returns the new each function.","     */","    function createForIn(objectFunc) {","      return function(object, iteratee, thisArg) {","        if (typeof iteratee != 'function' || thisArg !== undefined) {","          iteratee = bindCallback(iteratee, thisArg, 3);","        }","        return objectFunc(object, iteratee, keysIn);","      };","    }","","    /**","     * Creates a function for `_.forOwn` or `_.forOwnRight`.","     *","     * @private","     * @param {Function} objectFunc The function to iterate over an object.","     * @returns {Function} Returns the new each function.","     */","    function createForOwn(objectFunc) {","      return function(object, iteratee, thisArg) {","        if (typeof iteratee != 'function' || thisArg !== undefined) {","          iteratee = bindCallback(iteratee, thisArg, 3);","        }","        return objectFunc(object, iteratee);","      };","    }","","    /**","     * Creates a function for `_.mapKeys` or `_.mapValues`.","     *","     * @private","     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.","     * @returns {Function} Returns the new map function.","     */","    function createObjectMapper(isMapKeys) {","      return function(object, iteratee, thisArg) {","        var result = {};","        iteratee = getCallback(iteratee, thisArg, 3);","","        baseForOwn(object, function(value, key, object) {","          var mapped = iteratee(value, key, object);","          key = isMapKeys ? mapped : key;","          value = isMapKeys ? value : mapped;","          result[key] = value;","        });","        return result;","      };","    }","","    /**","     * Creates a function for `_.padLeft` or `_.padRight`.","     *","     * @private","     * @param {boolean} [fromRight] Specify padding from the right.","     * @returns {Function} Returns the new pad function.","     */","    function createPadDir(fromRight) {","      return function(string, length, chars) {","        string = baseToString(string);","        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);","      };","    }","","    /**","     * Creates a `_.partial` or `_.partialRight` function.","     *","     * @private","     * @param {boolean} flag The partial bit flag.","     * @returns {Function} Returns the new partial function.","     */","    function createPartial(flag) {","      var partialFunc = restParam(function(func, partials) {","        var holders = replaceHolders(partials, partialFunc.placeholder);","        return createWrapper(func, flag, undefined, partials, holders);","      });","      return partialFunc;","    }","","    /**","     * Creates a function for `_.reduce` or `_.reduceRight`.","     *","     * @private","     * @param {Function} arrayFunc The function to iterate over an array.","     * @param {Function} eachFunc The function to iterate over a collection.","     * @returns {Function} Returns the new each function.","     */","    function createReduce(arrayFunc, eachFunc) {","      return function(collection, iteratee, accumulator, thisArg) {","        var initFromArray = arguments.length < 3;","        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))","          ? arrayFunc(collection, iteratee, accumulator, initFromArray)","          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);","      };","    }","","    /**","     * Creates a function that wraps `func` and invokes it with optional `this`","     * binding of, partial application, and currying.","     *","     * @private","     * @param {Function|string} func The function or method name to reference.","     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.","     * @param {*} [thisArg] The `this` binding of `func`.","     * @param {Array} [partials] The arguments to prepend to those provided to the new function.","     * @param {Array} [holders] The `partials` placeholder indexes.","     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.","     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.","     * @param {Array} [argPos] The argument positions of the new function.","     * @param {number} [ary] The arity cap of `func`.","     * @param {number} [arity] The arity of `func`.","     * @returns {Function} Returns the new wrapped function.","     */","    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {","      var isAry = bitmask & ARY_FLAG,","          isBind = bitmask & BIND_FLAG,","          isBindKey = bitmask & BIND_KEY_FLAG,","          isCurry = bitmask & CURRY_FLAG,","          isCurryBound = bitmask & CURRY_BOUND_FLAG,","          isCurryRight = bitmask & CURRY_RIGHT_FLAG,","          Ctor = isBindKey ? undefined : createCtorWrapper(func);","","      function wrapper() {","        // Avoid `arguments` object use disqualifying optimizations by","        // converting it to an array before providing it to other functions.","        var length = arguments.length,","            index = length,","            args = Array(length);","","        while (index--) {","          args[index] = arguments[index];","        }","        if (partials) {","          args = composeArgs(args, partials, holders);","        }","        if (partialsRight) {","          args = composeArgsRight(args, partialsRight, holdersRight);","        }","        if (isCurry || isCurryRight) {","          var placeholder = wrapper.placeholder,","              argsHolders = replaceHolders(args, placeholder);","","          length -= argsHolders.length;","          if (length < arity) {","            var newArgPos = argPos ? arrayCopy(argPos) : undefined,","                newArity = nativeMax(arity - length, 0),","                newsHolders = isCurry ? argsHolders : undefined,","                newHoldersRight = isCurry ? undefined : argsHolders,","                newPartials = isCurry ? args : undefined,","                newPartialsRight = isCurry ? undefined : args;","","            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);","            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);","","            if (!isCurryBound) {","              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);","            }","            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],","                result = createHybridWrapper.apply(undefined, newData);","","            if (isLaziable(func)) {","              setData(result, newData);","            }","            result.placeholder = placeholder;","            return result;","          }","        }","        var thisBinding = isBind ? thisArg : this,","            fn = isBindKey ? thisBinding[func] : func;","","        if (argPos) {","          args = reorder(args, argPos);","        }","        if (isAry && ary < args.length) {","          args.length = ary;","        }","        if (this && this !== root && this instanceof wrapper) {","          fn = Ctor || createCtorWrapper(func);","        }","        return fn.apply(thisBinding, args);","      }","      return wrapper;","    }","","    /**","     * Creates the padding required for `string` based on the given `length`.","     * The `chars` string is truncated if the number of characters exceeds `length`.","     *","     * @private","     * @param {string} string The string to create padding for.","     * @param {number} [length=0] The padding length.","     * @param {string} [chars=' '] The string used as padding.","     * @returns {string} Returns the pad for `string`.","     */","    function createPadding(string, length, chars) {","      var strLength = string.length;","      length = +length;","","      if (strLength >= length || !nativeIsFinite(length)) {","        return '';","      }","      var padLength = length - strLength;","      chars = chars == null ? ' ' : (chars + '');","      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);","    }","","    /**","     * Creates a function that wraps `func` and invokes it with the optional `this`","     * binding of `thisArg` and the `partials` prepended to those provided to","     * the wrapper.","     *","     * @private","     * @param {Function} func The function to partially apply arguments to.","     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.","     * @param {*} thisArg The `this` binding of `func`.","     * @param {Array} partials The arguments to prepend to those provided to the new function.","     * @returns {Function} Returns the new bound function.","     */","    function createPartialWrapper(func, bitmask, thisArg, partials) {","      var isBind = bitmask & BIND_FLAG,","          Ctor = createCtorWrapper(func);","","      function wrapper() {","        // Avoid `arguments` object use disqualifying optimizations by","        // converting it to an array before providing it `func`.","        var argsIndex = -1,","            argsLength = arguments.length,","            leftIndex = -1,","            leftLength = partials.length,","            args = Array(leftLength + argsLength);","","        while (++leftIndex < leftLength) {","          args[leftIndex] = partials[leftIndex];","        }","        while (argsLength--) {","          args[leftIndex++] = arguments[++argsIndex];","        }","        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;","        return fn.apply(isBind ? thisArg : this, args);","      }","      return wrapper;","    }","","    /**","     * Creates a `_.ceil`, `_.floor`, or `_.round` function.","     *","     * @private","     * @param {string} methodName The name of the `Math` method to use when rounding.","     * @returns {Function} Returns the new round function.","     */","    function createRound(methodName) {","      var func = Math[methodName];","      return function(number, precision) {","        precision = precision === undefined ? 0 : (+precision || 0);","        if (precision) {","          precision = pow(10, precision);","          return func(number * precision) / precision;","        }","        return func(number);","      };","    }","","    /**","     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.","     *","     * @private","     * @param {boolean} [retHighest] Specify returning the highest qualified index.","     * @returns {Function} Returns the new index function.","     */","    function createSortedIndex(retHighest) {","      return function(array, value, iteratee, thisArg) {","        var callback = getCallback(iteratee);","        return (iteratee == null && callback === baseCallback)","          ? binaryIndex(array, value, retHighest)","          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);","      };","    }","","    /**","     * Creates a function that either curries or invokes `func` with optional","     * `this` binding and partially applied arguments.","     *","     * @private","     * @param {Function|string} func The function or method name to reference.","     * @param {number} bitmask The bitmask of flags.","     *  The bitmask may be composed of the following flags:","     *     1 - `_.bind`","     *     2 - `_.bindKey`","     *     4 - `_.curry` or `_.curryRight` of a bound function","     *     8 - `_.curry`","     *    16 - `_.curryRight`","     *    32 - `_.partial`","     *    64 - `_.partialRight`","     *   128 - `_.rearg`","     *   256 - `_.ary`","     * @param {*} [thisArg] The `this` binding of `func`.","     * @param {Array} [partials] The arguments to be partially applied.","     * @param {Array} [holders] The `partials` placeholder indexes.","     * @param {Array} [argPos] The argument positions of the new function.","     * @param {number} [ary] The arity cap of `func`.","     * @param {number} [arity] The arity of `func`.","     * @returns {Function} Returns the new wrapped function.","     */","    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {","      var isBindKey = bitmask & BIND_KEY_FLAG;","      if (!isBindKey && typeof func != 'function') {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      var length = partials ? partials.length : 0;","      if (!length) {","        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);","        partials = holders = undefined;","      }","      length -= (holders ? holders.length : 0);","      if (bitmask & PARTIAL_RIGHT_FLAG) {","        var partialsRight = partials,","            holdersRight = holders;","","        partials = holders = undefined;","      }","      var data = isBindKey ? undefined : getData(func),","          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];","","      if (data) {","        mergeData(newData, data);","        bitmask = newData[1];","        arity = newData[9];","      }","      newData[9] = arity == null","        ? (isBindKey ? 0 : func.length)","        : (nativeMax(arity - length, 0) || 0);","","      if (bitmask == BIND_FLAG) {","        var result = createBindWrapper(newData[0], newData[2]);","      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {","        result = createPartialWrapper.apply(undefined, newData);","      } else {","        result = createHybridWrapper.apply(undefined, newData);","      }","      var setter = data ? baseSetData : setData;","      return setter(result, newData);","    }","","    /**","     * A specialized version of `baseIsEqualDeep` for arrays with support for","     * partial deep comparisons.","     *","     * @private","     * @param {Array} array The array to compare.","     * @param {Array} other The other array to compare.","     * @param {Function} equalFunc The function to determine equivalents of values.","     * @param {Function} [customizer] The function to customize comparing arrays.","     * @param {boolean} [isLoose] Specify performing partial comparisons.","     * @param {Array} [stackA] Tracks traversed `value` objects.","     * @param {Array} [stackB] Tracks traversed `other` objects.","     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.","     */","    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {","      var index = -1,","          arrLength = array.length,","          othLength = other.length;","","      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {","        return false;","      }","      // Ignore non-index properties.","      while (++index < arrLength) {","        var arrValue = array[index],","            othValue = other[index],","            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;","","        if (result !== undefined) {","          if (result) {","            continue;","          }","          return false;","        }","        // Recursively compare arrays (susceptible to call stack limits).","        if (isLoose) {","          if (!arraySome(other, function(othValue) {","                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);","              })) {","            return false;","          }","        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {","          return false;","        }","      }","      return true;","    }","","    /**","     * A specialized version of `baseIsEqualDeep` for comparing objects of","     * the same `toStringTag`.","     *","     * **Note:** This function only supports comparing values with tags of","     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.","     *","     * @private","     * @param {Object} object The object to compare.","     * @param {Object} other The other object to compare.","     * @param {string} tag The `toStringTag` of the objects to compare.","     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.","     */","    function equalByTag(object, other, tag) {","      switch (tag) {","        case boolTag:","        case dateTag:","          // Coerce dates and booleans to numbers, dates to milliseconds and booleans","          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.","          return +object == +other;","","        case errorTag:","          return object.name == other.name && object.message == other.message;","","        case numberTag:","          // Treat `NaN` vs. `NaN` as equal.","          return (object != +object)","            ? other != +other","            : object == +other;","","        case regexpTag:","        case stringTag:","          // Coerce regexes to strings and treat strings primitives and string","          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.","          return object == (other + '');","      }","      return false;","    }","","    /**","     * A specialized version of `baseIsEqualDeep` for objects with support for","     * partial deep comparisons.","     *","     * @private","     * @param {Object} object The object to compare.","     * @param {Object} other The other object to compare.","     * @param {Function} equalFunc The function to determine equivalents of values.","     * @param {Function} [customizer] The function to customize comparing values.","     * @param {boolean} [isLoose] Specify performing partial comparisons.","     * @param {Array} [stackA] Tracks traversed `value` objects.","     * @param {Array} [stackB] Tracks traversed `other` objects.","     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.","     */","    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {","      var objProps = keys(object),","          objLength = objProps.length,","          othProps = keys(other),","          othLength = othProps.length;","","      if (objLength != othLength && !isLoose) {","        return false;","      }","      var index = objLength;","      while (index--) {","        var key = objProps[index];","        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {","          return false;","        }","      }","      var skipCtor = isLoose;","      while (++index < objLength) {","        key = objProps[index];","        var objValue = object[key],","            othValue = other[key],","            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;","","        // Recursively compare objects (susceptible to call stack limits).","        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {","          return false;","        }","        skipCtor || (skipCtor = key == 'constructor');","      }","      if (!skipCtor) {","        var objCtor = object.constructor,","            othCtor = other.constructor;","","        // Non `Object` object instances with different constructors are not equal.","        if (objCtor != othCtor &&","            ('constructor' in object && 'constructor' in other) &&","            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&","              typeof othCtor == 'function' && othCtor instanceof othCtor)) {","          return false;","        }","      }","      return true;","    }","","    /**","     * Gets the appropriate \"callback\" function. If the `_.callback` method is","     * customized this function returns the custom method, otherwise it returns","     * the `baseCallback` function. If arguments are provided the chosen function","     * is invoked with them and its result is returned.","     *","     * @private","     * @returns {Function} Returns the chosen function or its result.","     */","    function getCallback(func, thisArg, argCount) {","      var result = lodash.callback || callback;","      result = result === callback ? baseCallback : result;","      return argCount ? result(func, thisArg, argCount) : result;","    }","","    /**","     * Gets metadata for `func`.","     *","     * @private","     * @param {Function} func The function to query.","     * @returns {*} Returns the metadata for `func`.","     */","    var getData = !metaMap ? noop : function(func) {","      return metaMap.get(func);","    };","","    /**","     * Gets the name of `func`.","     *","     * @private","     * @param {Function} func The function to query.","     * @returns {string} Returns the function name.","     */","    function getFuncName(func) {","      var result = func.name,","          array = realNames[result],","          length = array ? array.length : 0;","","      while (length--) {","        var data = array[length],","            otherFunc = data.func;","        if (otherFunc == null || otherFunc == func) {","          return data.name;","        }","      }","      return result;","    }","","    /**","     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is","     * customized this function returns the custom method, otherwise it returns","     * the `baseIndexOf` function. If arguments are provided the chosen function","     * is invoked with them and its result is returned.","     *","     * @private","     * @returns {Function|number} Returns the chosen function or its result.","     */","    function getIndexOf(collection, target, fromIndex) {","      var result = lodash.indexOf || indexOf;","      result = result === indexOf ? baseIndexOf : result;","      return collection ? result(collection, target, fromIndex) : result;","    }","","    /**","     * Gets the \"length\" property value of `object`.","     *","     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)","     * that affects Safari on at least iOS 8.1-8.3 ARM64.","     *","     * @private","     * @param {Object} object The object to query.","     * @returns {*} Returns the \"length\" value.","     */","    var getLength = baseProperty('length');","","    /**","     * Gets the propery names, values, and compare flags of `object`.","     *","     * @private","     * @param {Object} object The object to query.","     * @returns {Array} Returns the match data of `object`.","     */","    function getMatchData(object) {","      var result = pairs(object),","          length = result.length;","","      while (length--) {","        result[length][2] = isStrictComparable(result[length][1]);","      }","      return result;","    }","","    /**","     * Gets the native function at `key` of `object`.","     *","     * @private","     * @param {Object} object The object to query.","     * @param {string} key The key of the method to get.","     * @returns {*} Returns the function if it's native, else `undefined`.","     */","    function getNative(object, key) {","      var value = object == null ? undefined : object[key];","      return isNative(value) ? value : undefined;","    }","","    /**","     * Gets the view, applying any `transforms` to the `start` and `end` positions.","     *","     * @private","     * @param {number} start The start of the view.","     * @param {number} end The end of the view.","     * @param {Array} transforms The transformations to apply to the view.","     * @returns {Object} Returns an object containing the `start` and `end`","     *  positions of the view.","     */","    function getView(start, end, transforms) {","      var index = -1,","          length = transforms.length;","","      while (++index < length) {","        var data = transforms[index],","            size = data.size;","","        switch (data.type) {","          case 'drop':      start += size; break;","          case 'dropRight': end -= size; break;","          case 'take':      end = nativeMin(end, start + size); break;","          case 'takeRight': start = nativeMax(start, end - size); break;","        }","      }","      return { 'start': start, 'end': end };","    }","","    /**","     * Initializes an array clone.","     *","     * @private","     * @param {Array} array The array to clone.","     * @returns {Array} Returns the initialized clone.","     */","    function initCloneArray(array) {","      var length = array.length,","          result = new array.constructor(length);","","      // Add array properties assigned by `RegExp#exec`.","      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {","        result.index = array.index;","        result.input = array.input;","      }","      return result;","    }","","    /**","     * Initializes an object clone.","     *","     * @private","     * @param {Object} object The object to clone.","     * @returns {Object} Returns the initialized clone.","     */","    function initCloneObject(object) {","      var Ctor = object.constructor;","      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {","        Ctor = Object;","      }","      return new Ctor;","    }","","    /**","     * Initializes an object clone based on its `toStringTag`.","     *","     * **Note:** This function only supports cloning values with tags of","     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.","     *","     * @private","     * @param {Object} object The object to clone.","     * @param {string} tag The `toStringTag` of the object to clone.","     * @param {boolean} [isDeep] Specify a deep clone.","     * @returns {Object} Returns the initialized clone.","     */","    function initCloneByTag(object, tag, isDeep) {","      var Ctor = object.constructor;","      switch (tag) {","        case arrayBufferTag:","          return bufferClone(object);","","        case boolTag:","        case dateTag:","          return new Ctor(+object);","","        case float32Tag: case float64Tag:","        case int8Tag: case int16Tag: case int32Tag:","        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:","          var buffer = object.buffer;","          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);","","        case numberTag:","        case stringTag:","          return new Ctor(object);","","        case regexpTag:","          var result = new Ctor(object.source, reFlags.exec(object));","          result.lastIndex = object.lastIndex;","      }","      return result;","    }","","    /**","     * Invokes the method at `path` on `object`.","     *","     * @private","     * @param {Object} object The object to query.","     * @param {Array|string} path The path of the method to invoke.","     * @param {Array} args The arguments to invoke the method with.","     * @returns {*} Returns the result of the invoked method.","     */","    function invokePath(object, path, args) {","      if (object != null && !isKey(path, object)) {","        path = toPath(path);","        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));","        path = last(path);","      }","      var func = object == null ? object : object[path];","      return func == null ? undefined : func.apply(object, args);","    }","","    /**","     * Checks if `value` is array-like.","     *","     * @private","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.","     */","    function isArrayLike(value) {","      return value != null && isLength(getLength(value));","    }","","    /**","     * Checks if `value` is a valid array-like index.","     *","     * @private","     * @param {*} value The value to check.","     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.","     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.","     */","    function isIndex(value, length) {","      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;","      length = length == null ? MAX_SAFE_INTEGER : length;","      return value > -1 && value % 1 == 0 && value < length;","    }","","    /**","     * Checks if the provided arguments are from an iteratee call.","     *","     * @private","     * @param {*} value The potential iteratee value argument.","     * @param {*} index The potential iteratee index or key argument.","     * @param {*} object The potential iteratee object argument.","     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.","     */","    function isIterateeCall(value, index, object) {","      if (!isObject(object)) {","        return false;","      }","      var type = typeof index;","      if (type == 'number'","          ? (isArrayLike(object) && isIndex(index, object.length))","          : (type == 'string' && index in object)) {","        var other = object[index];","        return value === value ? (value === other) : (other !== other);","      }","      return false;","    }","","    /**","     * Checks if `value` is a property name and not a property path.","     *","     * @private","     * @param {*} value The value to check.","     * @param {Object} [object] The object to query keys on.","     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.","     */","    function isKey(value, object) {","      var type = typeof value;","      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {","        return true;","      }","      if (isArray(value)) {","        return false;","      }","      var result = !reIsDeepProp.test(value);","      return result || (object != null && value in toObject(object));","    }","","    /**","     * Checks if `func` has a lazy counterpart.","     *","     * @private","     * @param {Function} func The function to check.","     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.","     */","    function isLaziable(func) {","      var funcName = getFuncName(func);","      if (!(funcName in LazyWrapper.prototype)) {","        return false;","      }","      var other = lodash[funcName];","      if (func === other) {","        return true;","      }","      var data = getData(other);","      return !!data && func === data[0];","    }","","    /**","     * Checks if `value` is a valid array-like length.","     *","     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).","     *","     * @private","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.","     */","    function isLength(value) {","      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;","    }","","    /**","     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.","     *","     * @private","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` if suitable for strict","     *  equality comparisons, else `false`.","     */","    function isStrictComparable(value) {","      return value === value && !isObject(value);","    }","","    /**","     * Merges the function metadata of `source` into `data`.","     *","     * Merging metadata reduces the number of wrappers required to invoke a function.","     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`","     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`","     * augment function arguments, making the order in which they are executed important,","     * preventing the merging of metadata. However, we make an exception for a safe","     * common case where curried functions have `_.ary` and or `_.rearg` applied.","     *","     * @private","     * @param {Array} data The destination metadata.","     * @param {Array} source The source metadata.","     * @returns {Array} Returns `data`.","     */","    function mergeData(data, source) {","      var bitmask = data[1],","          srcBitmask = source[1],","          newBitmask = bitmask | srcBitmask,","          isCommon = newBitmask < ARY_FLAG;","","      var isCombo =","        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||","        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||","        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);","","      // Exit early if metadata can't be merged.","      if (!(isCommon || isCombo)) {","        return data;","      }","      // Use source `thisArg` if available.","      if (srcBitmask & BIND_FLAG) {","        data[2] = source[2];","        // Set when currying a bound function.","        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;","      }","      // Compose partial arguments.","      var value = source[3];","      if (value) {","        var partials = data[3];","        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);","        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);","      }","      // Compose partial right arguments.","      value = source[5];","      if (value) {","        partials = data[5];","        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);","        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);","      }","      // Use source `argPos` if available.","      value = source[7];","      if (value) {","        data[7] = arrayCopy(value);","      }","      // Use source `ary` if it's smaller.","      if (srcBitmask & ARY_FLAG) {","        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);","      }","      // Use source `arity` if one is not provided.","      if (data[9] == null) {","        data[9] = source[9];","      }","      // Use source `func` and merge bitmasks.","      data[0] = source[0];","      data[1] = newBitmask;","","      return data;","    }","","    /**","     * Used by `_.defaultsDeep` to customize its `_.merge` use.","     *","     * @private","     * @param {*} objectValue The destination object property value.","     * @param {*} sourceValue The source object property value.","     * @returns {*} Returns the value to assign to the destination object.","     */","    function mergeDefaults(objectValue, sourceValue) {","      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);","    }","","    /**","     * A specialized version of `_.pick` which picks `object` properties specified","     * by `props`.","     *","     * @private","     * @param {Object} object The source object.","     * @param {string[]} props The property names to pick.","     * @returns {Object} Returns the new object.","     */","    function pickByArray(object, props) {","      object = toObject(object);","","      var index = -1,","          length = props.length,","          result = {};","","      while (++index < length) {","        var key = props[index];","        if (key in object) {","          result[key] = object[key];","        }","      }","      return result;","    }","","    /**","     * A specialized version of `_.pick` which picks `object` properties `predicate`","     * returns truthy for.","     *","     * @private","     * @param {Object} object The source object.","     * @param {Function} predicate The function invoked per iteration.","     * @returns {Object} Returns the new object.","     */","    function pickByCallback(object, predicate) {","      var result = {};","      baseForIn(object, function(value, key, object) {","        if (predicate(value, key, object)) {","          result[key] = value;","        }","      });","      return result;","    }","","    /**","     * Reorder `array` according to the specified indexes where the element at","     * the first index is assigned as the first element, the element at","     * the second index is assigned as the second element, and so on.","     *","     * @private","     * @param {Array} array The array to reorder.","     * @param {Array} indexes The arranged array indexes.","     * @returns {Array} Returns `array`.","     */","    function reorder(array, indexes) {","      var arrLength = array.length,","          length = nativeMin(indexes.length, arrLength),","          oldArray = arrayCopy(array);","","      while (length--) {","        var index = indexes[length];","        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;","      }","      return array;","    }","","    /**","     * Sets metadata for `func`.","     *","     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short","     * period of time, it will trip its breaker and transition to an identity function","     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)","     * for more details.","     *","     * @private","     * @param {Function} func The function to associate metadata with.","     * @param {*} data The metadata.","     * @returns {Function} Returns `func`.","     */","    var setData = (function() {","      var count = 0,","          lastCalled = 0;","","      return function(key, value) {","        var stamp = now(),","            remaining = HOT_SPAN - (stamp - lastCalled);","","        lastCalled = stamp;","        if (remaining > 0) {","          if (++count >= HOT_COUNT) {","            return key;","          }","        } else {","          count = 0;","        }","        return baseSetData(key, value);","      };","    }());","","    /**","     * A fallback implementation of `Object.keys` which creates an array of the","     * own enumerable property names of `object`.","     *","     * @private","     * @param {Object} object The object to query.","     * @returns {Array} Returns the array of property names.","     */","    function shimKeys(object) {","      var props = keysIn(object),","          propsLength = props.length,","          length = propsLength && object.length;","","      var allowIndexes = !!length && isLength(length) &&","        (isArray(object) || isArguments(object));","","      var index = -1,","          result = [];","","      while (++index < propsLength) {","        var key = props[index];","        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {","          result.push(key);","        }","      }","      return result;","    }","","    /**","     * Converts `value` to an array-like object if it's not one.","     *","     * @private","     * @param {*} value The value to process.","     * @returns {Array|Object} Returns the array-like object.","     */","    function toIterable(value) {","      if (value == null) {","        return [];","      }","      if (!isArrayLike(value)) {","        return values(value);","      }","      return isObject(value) ? value : Object(value);","    }","","    /**","     * Converts `value` to an object if it's not one.","     *","     * @private","     * @param {*} value The value to process.","     * @returns {Object} Returns the object.","     */","    function toObject(value) {","      return isObject(value) ? value : Object(value);","    }","","    /**","     * Converts `value` to property path array if it's not one.","     *","     * @private","     * @param {*} value The value to process.","     * @returns {Array} Returns the property path array.","     */","    function toPath(value) {","      if (isArray(value)) {","        return value;","      }","      var result = [];","      baseToString(value).replace(rePropName, function(match, number, quote, string) {","        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));","      });","      return result;","    }","","    /**","     * Creates a clone of `wrapper`.","     *","     * @private","     * @param {Object} wrapper The wrapper to clone.","     * @returns {Object} Returns the cloned wrapper.","     */","    function wrapperClone(wrapper) {","      return wrapper instanceof LazyWrapper","        ? wrapper.clone()","        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Creates an array of elements split into groups the length of `size`.","     * If `collection` can't be split evenly, the final chunk will be the remaining","     * elements.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to process.","     * @param {number} [size=1] The length of each chunk.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Array} Returns the new array containing chunks.","     * @example","     *","     * _.chunk(['a', 'b', 'c', 'd'], 2);","     * // => [['a', 'b'], ['c', 'd']]","     *","     * _.chunk(['a', 'b', 'c', 'd'], 3);","     * // => [['a', 'b', 'c'], ['d']]","     */","    function chunk(array, size, guard) {","      if (guard ? isIterateeCall(array, size, guard) : size == null) {","        size = 1;","      } else {","        size = nativeMax(nativeFloor(size) || 1, 1);","      }","      var index = 0,","          length = array ? array.length : 0,","          resIndex = -1,","          result = Array(nativeCeil(length / size));","","      while (index < length) {","        result[++resIndex] = baseSlice(array, index, (index += size));","      }","      return result;","    }","","    /**","     * Creates an array with all falsey values removed. The values `false`, `null`,","     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to compact.","     * @returns {Array} Returns the new array of filtered values.","     * @example","     *","     * _.compact([0, 1, false, 2, '', 3]);","     * // => [1, 2, 3]","     */","    function compact(array) {","      var index = -1,","          length = array ? array.length : 0,","          resIndex = -1,","          result = [];","","      while (++index < length) {","        var value = array[index];","        if (value) {","          result[++resIndex] = value;","        }","      }","      return result;","    }","","    /**","     * Creates an array of unique `array` values not included in the other","     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)","     * for equality comparisons.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to inspect.","     * @param {...Array} [values] The arrays of values to exclude.","     * @returns {Array} Returns the new array of filtered values.","     * @example","     *","     * _.difference([1, 2, 3], [4, 2]);","     * // => [1, 3]","     */","    var difference = restParam(function(array, values) {","      return (isObjectLike(array) && isArrayLike(array))","        ? baseDifference(array, baseFlatten(values, false, true))","        : [];","    });","","    /**","     * Creates a slice of `array` with `n` elements dropped from the beginning.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @param {number} [n=1] The number of elements to drop.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.drop([1, 2, 3]);","     * // => [2, 3]","     *","     * _.drop([1, 2, 3], 2);","     * // => [3]","     *","     * _.drop([1, 2, 3], 5);","     * // => []","     *","     * _.drop([1, 2, 3], 0);","     * // => [1, 2, 3]","     */","    function drop(array, n, guard) {","      var length = array ? array.length : 0;","      if (!length) {","        return [];","      }","      if (guard ? isIterateeCall(array, n, guard) : n == null) {","        n = 1;","      }","      return baseSlice(array, n < 0 ? 0 : n);","    }","","    /**","     * Creates a slice of `array` with `n` elements dropped from the end.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @param {number} [n=1] The number of elements to drop.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.dropRight([1, 2, 3]);","     * // => [1, 2]","     *","     * _.dropRight([1, 2, 3], 2);","     * // => [1]","     *","     * _.dropRight([1, 2, 3], 5);","     * // => []","     *","     * _.dropRight([1, 2, 3], 0);","     * // => [1, 2, 3]","     */","    function dropRight(array, n, guard) {","      var length = array ? array.length : 0;","      if (!length) {","        return [];","      }","      if (guard ? isIterateeCall(array, n, guard) : n == null) {","        n = 1;","      }","      n = length - (+n || 0);","      return baseSlice(array, 0, n < 0 ? 0 : n);","    }","","    /**","     * Creates a slice of `array` excluding elements dropped from the end.","     * Elements are dropped until `predicate` returns falsey. The predicate is","     * bound to `thisArg` and invoked with three arguments: (value, index, array).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that match the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.dropRightWhile([1, 2, 3], function(n) {","     *   return n > 1;","     * });","     * // => [1]","     *","     * var users = [","     *   { 'user': 'barney',  'active': true },","     *   { 'user': 'fred',    'active': false },","     *   { 'user': 'pebbles', 'active': false }","     * ];","     *","     * // using the `_.matches` callback shorthand","     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');","     * // => ['barney', 'fred']","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');","     * // => ['barney']","     *","     * // using the `_.property` callback shorthand","     * _.pluck(_.dropRightWhile(users, 'active'), 'user');","     * // => ['barney', 'fred', 'pebbles']","     */","    function dropRightWhile(array, predicate, thisArg) {","      return (array && array.length)","        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)","        : [];","    }","","    /**","     * Creates a slice of `array` excluding elements dropped from the beginning.","     * Elements are dropped until `predicate` returns falsey. The predicate is","     * bound to `thisArg` and invoked with three arguments: (value, index, array).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.dropWhile([1, 2, 3], function(n) {","     *   return n < 3;","     * });","     * // => [3]","     *","     * var users = [","     *   { 'user': 'barney',  'active': false },","     *   { 'user': 'fred',    'active': false },","     *   { 'user': 'pebbles', 'active': true }","     * ];","     *","     * // using the `_.matches` callback shorthand","     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');","     * // => ['fred', 'pebbles']","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.pluck(_.dropWhile(users, 'active', false), 'user');","     * // => ['pebbles']","     *","     * // using the `_.property` callback shorthand","     * _.pluck(_.dropWhile(users, 'active'), 'user');","     * // => ['barney', 'fred', 'pebbles']","     */","    function dropWhile(array, predicate, thisArg) {","      return (array && array.length)","        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)","        : [];","    }","","    /**","     * Fills elements of `array` with `value` from `start` up to, but not","     * including, `end`.","     *","     * **Note:** This method mutates `array`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to fill.","     * @param {*} value The value to fill `array` with.","     * @param {number} [start=0] The start position.","     * @param {number} [end=array.length] The end position.","     * @returns {Array} Returns `array`.","     * @example","     *","     * var array = [1, 2, 3];","     *","     * _.fill(array, 'a');","     * console.log(array);","     * // => ['a', 'a', 'a']","     *","     * _.fill(Array(3), 2);","     * // => [2, 2, 2]","     *","     * _.fill([4, 6, 8], '*', 1, 2);","     * // => [4, '*', 8]","     */","    function fill(array, value, start, end) {","      var length = array ? array.length : 0;","      if (!length) {","        return [];","      }","      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {","        start = 0;","        end = length;","      }","      return baseFill(array, value, start, end);","    }","","    /**","     * This method is like `_.find` except that it returns the index of the first","     * element `predicate` returns truthy for instead of the element itself.","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to search.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {number} Returns the index of the found element, else `-1`.","     * @example","     *","     * var users = [","     *   { 'user': 'barney',  'active': false },","     *   { 'user': 'fred',    'active': false },","     *   { 'user': 'pebbles', 'active': true }","     * ];","     *","     * _.findIndex(users, function(chr) {","     *   return chr.user == 'barney';","     * });","     * // => 0","     *","     * // using the `_.matches` callback shorthand","     * _.findIndex(users, { 'user': 'fred', 'active': false });","     * // => 1","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.findIndex(users, 'active', false);","     * // => 0","     *","     * // using the `_.property` callback shorthand","     * _.findIndex(users, 'active');","     * // => 2","     */","    var findIndex = createFindIndex();","","    /**","     * This method is like `_.findIndex` except that it iterates over elements","     * of `collection` from right to left.","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to search.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {number} Returns the index of the found element, else `-1`.","     * @example","     *","     * var users = [","     *   { 'user': 'barney',  'active': true },","     *   { 'user': 'fred',    'active': false },","     *   { 'user': 'pebbles', 'active': false }","     * ];","     *","     * _.findLastIndex(users, function(chr) {","     *   return chr.user == 'pebbles';","     * });","     * // => 2","     *","     * // using the `_.matches` callback shorthand","     * _.findLastIndex(users, { 'user': 'barney', 'active': true });","     * // => 0","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.findLastIndex(users, 'active', false);","     * // => 2","     *","     * // using the `_.property` callback shorthand","     * _.findLastIndex(users, 'active');","     * // => 0","     */","    var findLastIndex = createFindIndex(true);","","    /**","     * Gets the first element of `array`.","     *","     * @static","     * @memberOf _","     * @alias head","     * @category Array","     * @param {Array} array The array to query.","     * @returns {*} Returns the first element of `array`.","     * @example","     *","     * _.first([1, 2, 3]);","     * // => 1","     *","     * _.first([]);","     * // => undefined","     */","    function first(array) {","      return array ? array[0] : undefined;","    }","","    /**","     * Flattens a nested array. If `isDeep` is `true` the array is recursively","     * flattened, otherwise it is only flattened a single level.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to flatten.","     * @param {boolean} [isDeep] Specify a deep flatten.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Array} Returns the new flattened array.","     * @example","     *","     * _.flatten([1, [2, 3, [4]]]);","     * // => [1, 2, 3, [4]]","     *","     * // using `isDeep`","     * _.flatten([1, [2, 3, [4]]], true);","     * // => [1, 2, 3, 4]","     */","    function flatten(array, isDeep, guard) {","      var length = array ? array.length : 0;","      if (guard && isIterateeCall(array, isDeep, guard)) {","        isDeep = false;","      }","      return length ? baseFlatten(array, isDeep) : [];","    }","","    /**","     * Recursively flattens a nested array.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to recursively flatten.","     * @returns {Array} Returns the new flattened array.","     * @example","     *","     * _.flattenDeep([1, [2, 3, [4]]]);","     * // => [1, 2, 3, 4]","     */","    function flattenDeep(array) {","      var length = array ? array.length : 0;","      return length ? baseFlatten(array, true) : [];","    }","","    /**","     * Gets the index at which the first occurrence of `value` is found in `array`","     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)","     * for equality comparisons. If `fromIndex` is negative, it is used as the offset","     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`","     * performs a faster binary search.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to search.","     * @param {*} value The value to search for.","     * @param {boolean|number} [fromIndex=0] The index to search from or `true`","     *  to perform a binary search on a sorted array.","     * @returns {number} Returns the index of the matched value, else `-1`.","     * @example","     *","     * _.indexOf([1, 2, 1, 2], 2);","     * // => 1","     *","     * // using `fromIndex`","     * _.indexOf([1, 2, 1, 2], 2, 2);","     * // => 3","     *","     * // performing a binary search","     * _.indexOf([1, 1, 2, 2], 2, true);","     * // => 2","     */","    function indexOf(array, value, fromIndex) {","      var length = array ? array.length : 0;","      if (!length) {","        return -1;","      }","      if (typeof fromIndex == 'number') {","        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;","      } else if (fromIndex) {","        var index = binaryIndex(array, value);","        if (index < length &&","            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {","          return index;","        }","        return -1;","      }","      return baseIndexOf(array, value, fromIndex || 0);","    }","","    /**","     * Gets all but the last element of `array`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.initial([1, 2, 3]);","     * // => [1, 2]","     */","    function initial(array) {","      return dropRight(array, 1);","    }","","    /**","     * Creates an array of unique values that are included in all of the provided","     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)","     * for equality comparisons.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {...Array} [arrays] The arrays to inspect.","     * @returns {Array} Returns the new array of shared values.","     * @example","     * _.intersection([1, 2], [4, 2], [2, 1]);","     * // => [2]","     */","    var intersection = restParam(function(arrays) {","      var othLength = arrays.length,","          othIndex = othLength,","          caches = Array(length),","          indexOf = getIndexOf(),","          isCommon = indexOf == baseIndexOf,","          result = [];","","      while (othIndex--) {","        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];","        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;","      }","      var array = arrays[0],","          index = -1,","          length = array ? array.length : 0,","          seen = caches[0];","","      outer:","      while (++index < length) {","        value = array[index];","        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {","          var othIndex = othLength;","          while (--othIndex) {","            var cache = caches[othIndex];","            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {","              continue outer;","            }","          }","          if (seen) {","            seen.push(value);","          }","          result.push(value);","        }","      }","      return result;","    });","","    /**","     * Gets the last element of `array`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @returns {*} Returns the last element of `array`.","     * @example","     *","     * _.last([1, 2, 3]);","     * // => 3","     */","    function last(array) {","      var length = array ? array.length : 0;","      return length ? array[length - 1] : undefined;","    }","","    /**","     * This method is like `_.indexOf` except that it iterates over elements of","     * `array` from right to left.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to search.","     * @param {*} value The value to search for.","     * @param {boolean|number} [fromIndex=array.length-1] The index to search from","     *  or `true` to perform a binary search on a sorted array.","     * @returns {number} Returns the index of the matched value, else `-1`.","     * @example","     *","     * _.lastIndexOf([1, 2, 1, 2], 2);","     * // => 3","     *","     * // using `fromIndex`","     * _.lastIndexOf([1, 2, 1, 2], 2, 2);","     * // => 1","     *","     * // performing a binary search","     * _.lastIndexOf([1, 1, 2, 2], 2, true);","     * // => 3","     */","    function lastIndexOf(array, value, fromIndex) {","      var length = array ? array.length : 0;","      if (!length) {","        return -1;","      }","      var index = length;","      if (typeof fromIndex == 'number') {","        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;","      } else if (fromIndex) {","        index = binaryIndex(array, value, true) - 1;","        var other = array[index];","        if (value === value ? (value === other) : (other !== other)) {","          return index;","        }","        return -1;","      }","      if (value !== value) {","        return indexOfNaN(array, index, true);","      }","      while (index--) {","        if (array[index] === value) {","          return index;","        }","      }","      return -1;","    }","","    /**","     * Removes all provided values from `array` using","     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)","     * for equality comparisons.","     *","     * **Note:** Unlike `_.without`, this method mutates `array`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to modify.","     * @param {...*} [values] The values to remove.","     * @returns {Array} Returns `array`.","     * @example","     *","     * var array = [1, 2, 3, 1, 2, 3];","     *","     * _.pull(array, 2, 3);","     * console.log(array);","     * // => [1, 1]","     */","    function pull() {","      var args = arguments,","          array = args[0];","","      if (!(array && array.length)) {","        return array;","      }","      var index = 0,","          indexOf = getIndexOf(),","          length = args.length;","","      while (++index < length) {","        var fromIndex = 0,","            value = args[index];","","        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {","          splice.call(array, fromIndex, 1);","        }","      }","      return array;","    }","","    /**","     * Removes elements from `array` corresponding to the given indexes and returns","     * an array of the removed elements. Indexes may be specified as an array of","     * indexes or as individual arguments.","     *","     * **Note:** Unlike `_.at`, this method mutates `array`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to modify.","     * @param {...(number|number[])} [indexes] The indexes of elements to remove,","     *  specified as individual indexes or arrays of indexes.","     * @returns {Array} Returns the new array of removed elements.","     * @example","     *","     * var array = [5, 10, 15, 20];","     * var evens = _.pullAt(array, 1, 3);","     *","     * console.log(array);","     * // => [5, 15]","     *","     * console.log(evens);","     * // => [10, 20]","     */","    var pullAt = restParam(function(array, indexes) {","      indexes = baseFlatten(indexes);","","      var result = baseAt(array, indexes);","      basePullAt(array, indexes.sort(baseCompareAscending));","      return result;","    });","","    /**","     * Removes all elements from `array` that `predicate` returns truthy for","     * and returns an array of the removed elements. The predicate is bound to","     * `thisArg` and invoked with three arguments: (value, index, array).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * **Note:** Unlike `_.filter`, this method mutates `array`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to modify.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Array} Returns the new array of removed elements.","     * @example","     *","     * var array = [1, 2, 3, 4];","     * var evens = _.remove(array, function(n) {","     *   return n % 2 == 0;","     * });","     *","     * console.log(array);","     * // => [1, 3]","     *","     * console.log(evens);","     * // => [2, 4]","     */","    function remove(array, predicate, thisArg) {","      var result = [];","      if (!(array && array.length)) {","        return result;","      }","      var index = -1,","          indexes = [],","          length = array.length;","","      predicate = getCallback(predicate, thisArg, 3);","      while (++index < length) {","        var value = array[index];","        if (predicate(value, index, array)) {","          result.push(value);","          indexes.push(index);","        }","      }","      basePullAt(array, indexes);","      return result;","    }","","    /**","     * Gets all but the first element of `array`.","     *","     * @static","     * @memberOf _","     * @alias tail","     * @category Array","     * @param {Array} array The array to query.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.rest([1, 2, 3]);","     * // => [2, 3]","     */","    function rest(array) {","      return drop(array, 1);","    }","","    /**","     * Creates a slice of `array` from `start` up to, but not including, `end`.","     *","     * **Note:** This method is used instead of `Array#slice` to support node","     * lists in IE < 9 and to ensure dense arrays are returned.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to slice.","     * @param {number} [start=0] The start position.","     * @param {number} [end=array.length] The end position.","     * @returns {Array} Returns the slice of `array`.","     */","    function slice(array, start, end) {","      var length = array ? array.length : 0;","      if (!length) {","        return [];","      }","      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {","        start = 0;","        end = length;","      }","      return baseSlice(array, start, end);","    }","","    /**","     * Uses a binary search to determine the lowest index at which `value` should","     * be inserted into `array` in order to maintain its sort order. If an iteratee","     * function is provided it is invoked for `value` and each element of `array`","     * to compute their sort ranking. The iteratee is bound to `thisArg` and","     * invoked with one argument; (value).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The sorted array to inspect.","     * @param {*} value The value to evaluate.","     * @param {Function|Object|string} [iteratee=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {number} Returns the index at which `value` should be inserted","     *  into `array`.","     * @example","     *","     * _.sortedIndex([30, 50], 40);","     * // => 1","     *","     * _.sortedIndex([4, 4, 5, 5], 5);","     * // => 2","     *","     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };","     *","     * // using an iteratee function","     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {","     *   return this.data[word];","     * }, dict);","     * // => 1","     *","     * // using the `_.property` callback shorthand","     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');","     * // => 1","     */","    var sortedIndex = createSortedIndex();","","    /**","     * This method is like `_.sortedIndex` except that it returns the highest","     * index at which `value` should be inserted into `array` in order to","     * maintain its sort order.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The sorted array to inspect.","     * @param {*} value The value to evaluate.","     * @param {Function|Object|string} [iteratee=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {number} Returns the index at which `value` should be inserted","     *  into `array`.","     * @example","     *","     * _.sortedLastIndex([4, 4, 5, 5], 5);","     * // => 4","     */","    var sortedLastIndex = createSortedIndex(true);","","    /**","     * Creates a slice of `array` with `n` elements taken from the beginning.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @param {number} [n=1] The number of elements to take.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.take([1, 2, 3]);","     * // => [1]","     *","     * _.take([1, 2, 3], 2);","     * // => [1, 2]","     *","     * _.take([1, 2, 3], 5);","     * // => [1, 2, 3]","     *","     * _.take([1, 2, 3], 0);","     * // => []","     */","    function take(array, n, guard) {","      var length = array ? array.length : 0;","      if (!length) {","        return [];","      }","      if (guard ? isIterateeCall(array, n, guard) : n == null) {","        n = 1;","      }","      return baseSlice(array, 0, n < 0 ? 0 : n);","    }","","    /**","     * Creates a slice of `array` with `n` elements taken from the end.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @param {number} [n=1] The number of elements to take.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.takeRight([1, 2, 3]);","     * // => [3]","     *","     * _.takeRight([1, 2, 3], 2);","     * // => [2, 3]","     *","     * _.takeRight([1, 2, 3], 5);","     * // => [1, 2, 3]","     *","     * _.takeRight([1, 2, 3], 0);","     * // => []","     */","    function takeRight(array, n, guard) {","      var length = array ? array.length : 0;","      if (!length) {","        return [];","      }","      if (guard ? isIterateeCall(array, n, guard) : n == null) {","        n = 1;","      }","      n = length - (+n || 0);","      return baseSlice(array, n < 0 ? 0 : n);","    }","","    /**","     * Creates a slice of `array` with elements taken from the end. Elements are","     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`","     * and invoked with three arguments: (value, index, array).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.takeRightWhile([1, 2, 3], function(n) {","     *   return n > 1;","     * });","     * // => [2, 3]","     *","     * var users = [","     *   { 'user': 'barney',  'active': true },","     *   { 'user': 'fred',    'active': false },","     *   { 'user': 'pebbles', 'active': false }","     * ];","     *","     * // using the `_.matches` callback shorthand","     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');","     * // => ['pebbles']","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');","     * // => ['fred', 'pebbles']","     *","     * // using the `_.property` callback shorthand","     * _.pluck(_.takeRightWhile(users, 'active'), 'user');","     * // => []","     */","    function takeRightWhile(array, predicate, thisArg) {","      return (array && array.length)","        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)","        : [];","    }","","    /**","     * Creates a slice of `array` with elements taken from the beginning. Elements","     * are taken until `predicate` returns falsey. The predicate is bound to","     * `thisArg` and invoked with three arguments: (value, index, array).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to query.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Array} Returns the slice of `array`.","     * @example","     *","     * _.takeWhile([1, 2, 3], function(n) {","     *   return n < 3;","     * });","     * // => [1, 2]","     *","     * var users = [","     *   { 'user': 'barney',  'active': false },","     *   { 'user': 'fred',    'active': false},","     *   { 'user': 'pebbles', 'active': true }","     * ];","     *","     * // using the `_.matches` callback shorthand","     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');","     * // => ['barney']","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.pluck(_.takeWhile(users, 'active', false), 'user');","     * // => ['barney', 'fred']","     *","     * // using the `_.property` callback shorthand","     * _.pluck(_.takeWhile(users, 'active'), 'user');","     * // => []","     */","    function takeWhile(array, predicate, thisArg) {","      return (array && array.length)","        ? baseWhile(array, getCallback(predicate, thisArg, 3))","        : [];","    }","","    /**","     * Creates an array of unique values, in order, from all of the provided arrays","     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)","     * for equality comparisons.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {...Array} [arrays] The arrays to inspect.","     * @returns {Array} Returns the new array of combined values.","     * @example","     *","     * _.union([1, 2], [4, 2], [2, 1]);","     * // => [1, 2, 4]","     */","    var union = restParam(function(arrays) {","      return baseUniq(baseFlatten(arrays, false, true));","    });","","    /**","     * Creates a duplicate-free version of an array, using","     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)","     * for equality comparisons, in which only the first occurence of each element","     * is kept. Providing `true` for `isSorted` performs a faster search algorithm","     * for sorted arrays. If an iteratee function is provided it is invoked for","     * each element in the array to generate the criterion by which uniqueness","     * is computed. The `iteratee` is bound to `thisArg` and invoked with three","     * arguments: (value, index, array).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @alias unique","     * @category Array","     * @param {Array} array The array to inspect.","     * @param {boolean} [isSorted] Specify the array is sorted.","     * @param {Function|Object|string} [iteratee] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Array} Returns the new duplicate-value-free array.","     * @example","     *","     * _.uniq([2, 1, 2]);","     * // => [2, 1]","     *","     * // using `isSorted`","     * _.uniq([1, 1, 2], true);","     * // => [1, 2]","     *","     * // using an iteratee function","     * _.uniq([1, 2.5, 1.5, 2], function(n) {","     *   return this.floor(n);","     * }, Math);","     * // => [1, 2.5]","     *","     * // using the `_.property` callback shorthand","     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');","     * // => [{ 'x': 1 }, { 'x': 2 }]","     */","    function uniq(array, isSorted, iteratee, thisArg) {","      var length = array ? array.length : 0;","      if (!length) {","        return [];","      }","      if (isSorted != null && typeof isSorted != 'boolean') {","        thisArg = iteratee;","        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;","        isSorted = false;","      }","      var callback = getCallback();","      if (!(iteratee == null && callback === baseCallback)) {","        iteratee = callback(iteratee, thisArg, 3);","      }","      return (isSorted && getIndexOf() == baseIndexOf)","        ? sortedUniq(array, iteratee)","        : baseUniq(array, iteratee);","    }","","    /**","     * This method is like `_.zip` except that it accepts an array of grouped","     * elements and creates an array regrouping the elements to their pre-zip","     * configuration.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array of grouped elements to process.","     * @returns {Array} Returns the new array of regrouped elements.","     * @example","     *","     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);","     * // => [['fred', 30, true], ['barney', 40, false]]","     *","     * _.unzip(zipped);","     * // => [['fred', 'barney'], [30, 40], [true, false]]","     */","    function unzip(array) {","      if (!(array && array.length)) {","        return [];","      }","      var index = -1,","          length = 0;","","      array = arrayFilter(array, function(group) {","        if (isArrayLike(group)) {","          length = nativeMax(group.length, length);","          return true;","        }","      });","      var result = Array(length);","      while (++index < length) {","        result[index] = arrayMap(array, baseProperty(index));","      }","      return result;","    }","","    /**","     * This method is like `_.unzip` except that it accepts an iteratee to specify","     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`","     * and invoked with four arguments: (accumulator, value, index, group).","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array of grouped elements to process.","     * @param {Function} [iteratee] The function to combine regrouped values.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Array} Returns the new array of regrouped elements.","     * @example","     *","     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);","     * // => [[1, 10, 100], [2, 20, 200]]","     *","     * _.unzipWith(zipped, _.add);","     * // => [3, 30, 300]","     */","    function unzipWith(array, iteratee, thisArg) {","      var length = array ? array.length : 0;","      if (!length) {","        return [];","      }","      var result = unzip(array);","      if (iteratee == null) {","        return result;","      }","      iteratee = bindCallback(iteratee, thisArg, 4);","      return arrayMap(result, function(group) {","        return arrayReduce(group, iteratee, undefined, true);","      });","    }","","    /**","     * Creates an array excluding all provided values using","     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)","     * for equality comparisons.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {Array} array The array to filter.","     * @param {...*} [values] The values to exclude.","     * @returns {Array} Returns the new array of filtered values.","     * @example","     *","     * _.without([1, 2, 1, 3], 1, 2);","     * // => [3]","     */","    var without = restParam(function(array, values) {","      return isArrayLike(array)","        ? baseDifference(array, values)","        : [];","    });","","    /**","     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)","     * of the provided arrays.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {...Array} [arrays] The arrays to inspect.","     * @returns {Array} Returns the new array of values.","     * @example","     *","     * _.xor([1, 2], [4, 2]);","     * // => [1, 4]","     */","    function xor() {","      var index = -1,","          length = arguments.length;","","      while (++index < length) {","        var array = arguments[index];","        if (isArrayLike(array)) {","          var result = result","            ? arrayPush(baseDifference(result, array), baseDifference(array, result))","            : array;","        }","      }","      return result ? baseUniq(result) : [];","    }","","    /**","     * Creates an array of grouped elements, the first of which contains the first","     * elements of the given arrays, the second of which contains the second elements","     * of the given arrays, and so on.","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {...Array} [arrays] The arrays to process.","     * @returns {Array} Returns the new array of grouped elements.","     * @example","     *","     * _.zip(['fred', 'barney'], [30, 40], [true, false]);","     * // => [['fred', 30, true], ['barney', 40, false]]","     */","    var zip = restParam(unzip);","","    /**","     * The inverse of `_.pairs`; this method returns an object composed from arrays","     * of property names and values. Provide either a single two dimensional array,","     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names","     * and one of corresponding values.","     *","     * @static","     * @memberOf _","     * @alias object","     * @category Array","     * @param {Array} props The property names.","     * @param {Array} [values=[]] The property values.","     * @returns {Object} Returns the new object.","     * @example","     *","     * _.zipObject([['fred', 30], ['barney', 40]]);","     * // => { 'fred': 30, 'barney': 40 }","     *","     * _.zipObject(['fred', 'barney'], [30, 40]);","     * // => { 'fred': 30, 'barney': 40 }","     */","    function zipObject(props, values) {","      var index = -1,","          length = props ? props.length : 0,","          result = {};","","      if (length && !values && !isArray(props[0])) {","        values = [];","      }","      while (++index < length) {","        var key = props[index];","        if (values) {","          result[key] = values[index];","        } else if (key) {","          result[key[0]] = key[1];","        }","      }","      return result;","    }","","    /**","     * This method is like `_.zip` except that it accepts an iteratee to specify","     * how grouped values should be combined. The `iteratee` is bound to `thisArg`","     * and invoked with four arguments: (accumulator, value, index, group).","     *","     * @static","     * @memberOf _","     * @category Array","     * @param {...Array} [arrays] The arrays to process.","     * @param {Function} [iteratee] The function to combine grouped values.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Array} Returns the new array of grouped elements.","     * @example","     *","     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);","     * // => [111, 222]","     */","    var zipWith = restParam(function(arrays) {","      var length = arrays.length,","          iteratee = length > 2 ? arrays[length - 2] : undefined,","          thisArg = length > 1 ? arrays[length - 1] : undefined;","","      if (length > 2 && typeof iteratee == 'function') {","        length -= 2;","      } else {","        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;","        thisArg = undefined;","      }","      arrays.length = length;","      return unzipWith(arrays, iteratee, thisArg);","    });","","    /*------------------------------------------------------------------------*/","","    /**","     * Creates a `lodash` object that wraps `value` with explicit method","     * chaining enabled.","     *","     * @static","     * @memberOf _","     * @category Chain","     * @param {*} value The value to wrap.","     * @returns {Object} Returns the new `lodash` wrapper instance.","     * @example","     *","     * var users = [","     *   { 'user': 'barney',  'age': 36 },","     *   { 'user': 'fred',    'age': 40 },","     *   { 'user': 'pebbles', 'age': 1 }","     * ];","     *","     * var youngest = _.chain(users)","     *   .sortBy('age')","     *   .map(function(chr) {","     *     return chr.user + ' is ' + chr.age;","     *   })","     *   .first()","     *   .value();","     * // => 'pebbles is 1'","     */","    function chain(value) {","      var result = lodash(value);","      result.__chain__ = true;","      return result;","    }","","    /**","     * This method invokes `interceptor` and returns `value`. The interceptor is","     * bound to `thisArg` and invoked with one argument; (value). The purpose of","     * this method is to \"tap into\" a method chain in order to perform operations","     * on intermediate results within the chain.","     *","     * @static","     * @memberOf _","     * @category Chain","     * @param {*} value The value to provide to `interceptor`.","     * @param {Function} interceptor The function to invoke.","     * @param {*} [thisArg] The `this` binding of `interceptor`.","     * @returns {*} Returns `value`.","     * @example","     *","     * _([1, 2, 3])","     *  .tap(function(array) {","     *    array.pop();","     *  })","     *  .reverse()","     *  .value();","     * // => [2, 1]","     */","    function tap(value, interceptor, thisArg) {","      interceptor.call(thisArg, value);","      return value;","    }","","    /**","     * This method is like `_.tap` except that it returns the result of `interceptor`.","     *","     * @static","     * @memberOf _","     * @category Chain","     * @param {*} value The value to provide to `interceptor`.","     * @param {Function} interceptor The function to invoke.","     * @param {*} [thisArg] The `this` binding of `interceptor`.","     * @returns {*} Returns the result of `interceptor`.","     * @example","     *","     * _('  abc  ')","     *  .chain()","     *  .trim()","     *  .thru(function(value) {","     *    return [value];","     *  })","     *  .value();","     * // => ['abc']","     */","    function thru(value, interceptor, thisArg) {","      return interceptor.call(thisArg, value);","    }","","    /**","     * Enables explicit method chaining on the wrapper object.","     *","     * @name chain","     * @memberOf _","     * @category Chain","     * @returns {Object} Returns the new `lodash` wrapper instance.","     * @example","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36 },","     *   { 'user': 'fred',   'age': 40 }","     * ];","     *","     * // without explicit chaining","     * _(users).first();","     * // => { 'user': 'barney', 'age': 36 }","     *","     * // with explicit chaining","     * _(users).chain()","     *   .first()","     *   .pick('user')","     *   .value();","     * // => { 'user': 'barney' }","     */","    function wrapperChain() {","      return chain(this);","    }","","    /**","     * Executes the chained sequence and returns the wrapped result.","     *","     * @name commit","     * @memberOf _","     * @category Chain","     * @returns {Object} Returns the new `lodash` wrapper instance.","     * @example","     *","     * var array = [1, 2];","     * var wrapped = _(array).push(3);","     *","     * console.log(array);","     * // => [1, 2]","     *","     * wrapped = wrapped.commit();","     * console.log(array);","     * // => [1, 2, 3]","     *","     * wrapped.last();","     * // => 3","     *","     * console.log(array);","     * // => [1, 2, 3]","     */","    function wrapperCommit() {","      return new LodashWrapper(this.value(), this.__chain__);","    }","","    /**","     * Creates a new array joining a wrapped array with any additional arrays","     * and/or values.","     *","     * @name concat","     * @memberOf _","     * @category Chain","     * @param {...*} [values] The values to concatenate.","     * @returns {Array} Returns the new concatenated array.","     * @example","     *","     * var array = [1];","     * var wrapped = _(array).concat(2, [3], [[4]]);","     *","     * console.log(wrapped.value());","     * // => [1, 2, 3, [4]]","     *","     * console.log(array);","     * // => [1]","     */","    var wrapperConcat = restParam(function(values) {","      values = baseFlatten(values);","      return this.thru(function(array) {","        return arrayConcat(isArray(array) ? array : [toObject(array)], values);","      });","    });","","    /**","     * Creates a clone of the chained sequence planting `value` as the wrapped value.","     *","     * @name plant","     * @memberOf _","     * @category Chain","     * @returns {Object} Returns the new `lodash` wrapper instance.","     * @example","     *","     * var array = [1, 2];","     * var wrapped = _(array).map(function(value) {","     *   return Math.pow(value, 2);","     * });","     *","     * var other = [3, 4];","     * var otherWrapped = wrapped.plant(other);","     *","     * otherWrapped.value();","     * // => [9, 16]","     *","     * wrapped.value();","     * // => [1, 4]","     */","    function wrapperPlant(value) {","      var result,","          parent = this;","","      while (parent instanceof baseLodash) {","        var clone = wrapperClone(parent);","        if (result) {","          previous.__wrapped__ = clone;","        } else {","          result = clone;","        }","        var previous = clone;","        parent = parent.__wrapped__;","      }","      previous.__wrapped__ = value;","      return result;","    }","","    /**","     * Reverses the wrapped array so the first element becomes the last, the","     * second element becomes the second to last, and so on.","     *","     * **Note:** This method mutates the wrapped array.","     *","     * @name reverse","     * @memberOf _","     * @category Chain","     * @returns {Object} Returns the new reversed `lodash` wrapper instance.","     * @example","     *","     * var array = [1, 2, 3];","     *","     * _(array).reverse().value()","     * // => [3, 2, 1]","     *","     * console.log(array);","     * // => [3, 2, 1]","     */","    function wrapperReverse() {","      var value = this.__wrapped__;","","      var interceptor = function(value) {","        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();","      };","      if (value instanceof LazyWrapper) {","        var wrapped = value;","        if (this.__actions__.length) {","          wrapped = new LazyWrapper(this);","        }","        wrapped = wrapped.reverse();","        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });","        return new LodashWrapper(wrapped, this.__chain__);","      }","      return this.thru(interceptor);","    }","","    /**","     * Produces the result of coercing the unwrapped value to a string.","     *","     * @name toString","     * @memberOf _","     * @category Chain","     * @returns {string} Returns the coerced string value.","     * @example","     *","     * _([1, 2, 3]).toString();","     * // => '1,2,3'","     */","    function wrapperToString() {","      return (this.value() + '');","    }","","    /**","     * Executes the chained sequence to extract the unwrapped value.","     *","     * @name value","     * @memberOf _","     * @alias run, toJSON, valueOf","     * @category Chain","     * @returns {*} Returns the resolved unwrapped value.","     * @example","     *","     * _([1, 2, 3]).value();","     * // => [1, 2, 3]","     */","    function wrapperValue() {","      return baseWrapperValue(this.__wrapped__, this.__actions__);","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Creates an array of elements corresponding to the given keys, or indexes,","     * of `collection`. Keys may be specified as individual arguments or as arrays","     * of keys.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {...(number|number[]|string|string[])} [props] The property names","     *  or indexes of elements to pick, specified individually or in arrays.","     * @returns {Array} Returns the new array of picked elements.","     * @example","     *","     * _.at(['a', 'b', 'c'], [0, 2]);","     * // => ['a', 'c']","     *","     * _.at(['barney', 'fred', 'pebbles'], 0, 2);","     * // => ['barney', 'pebbles']","     */","    var at = restParam(function(collection, props) {","      return baseAt(collection, baseFlatten(props));","    });","","    /**","     * Creates an object composed of keys generated from the results of running","     * each element of `collection` through `iteratee`. The corresponding value","     * of each key is the number of times the key was returned by `iteratee`.","     * The `iteratee` is bound to `thisArg` and invoked with three arguments:","     * (value, index|key, collection).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [iteratee=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Object} Returns the composed aggregate object.","     * @example","     *","     * _.countBy([4.3, 6.1, 6.4], function(n) {","     *   return Math.floor(n);","     * });","     * // => { '4': 1, '6': 2 }","     *","     * _.countBy([4.3, 6.1, 6.4], function(n) {","     *   return this.floor(n);","     * }, Math);","     * // => { '4': 1, '6': 2 }","     *","     * _.countBy(['one', 'two', 'three'], 'length');","     * // => { '3': 2, '5': 1 }","     */","    var countBy = createAggregator(function(result, value, key) {","      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);","    });","","    /**","     * Checks if `predicate` returns truthy for **all** elements of `collection`.","     * The predicate is bound to `thisArg` and invoked with three arguments:","     * (value, index|key, collection).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @alias all","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {boolean} Returns `true` if all elements pass the predicate check,","     *  else `false`.","     * @example","     *","     * _.every([true, 1, null, 'yes'], Boolean);","     * // => false","     *","     * var users = [","     *   { 'user': 'barney', 'active': false },","     *   { 'user': 'fred',   'active': false }","     * ];","     *","     * // using the `_.matches` callback shorthand","     * _.every(users, { 'user': 'barney', 'active': false });","     * // => false","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.every(users, 'active', false);","     * // => true","     *","     * // using the `_.property` callback shorthand","     * _.every(users, 'active');","     * // => false","     */","    function every(collection, predicate, thisArg) {","      var func = isArray(collection) ? arrayEvery : baseEvery;","      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {","        predicate = undefined;","      }","      if (typeof predicate != 'function' || thisArg !== undefined) {","        predicate = getCallback(predicate, thisArg, 3);","      }","      return func(collection, predicate);","    }","","    /**","     * Iterates over elements of `collection`, returning an array of all elements","     * `predicate` returns truthy for. The predicate is bound to `thisArg` and","     * invoked with three arguments: (value, index|key, collection).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @alias select","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Array} Returns the new filtered array.","     * @example","     *","     * _.filter([4, 5, 6], function(n) {","     *   return n % 2 == 0;","     * });","     * // => [4, 6]","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36, 'active': true },","     *   { 'user': 'fred',   'age': 40, 'active': false }","     * ];","     *","     * // using the `_.matches` callback shorthand","     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');","     * // => ['barney']","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.pluck(_.filter(users, 'active', false), 'user');","     * // => ['fred']","     *","     * // using the `_.property` callback shorthand","     * _.pluck(_.filter(users, 'active'), 'user');","     * // => ['barney']","     */","    function filter(collection, predicate, thisArg) {","      var func = isArray(collection) ? arrayFilter : baseFilter;","      predicate = getCallback(predicate, thisArg, 3);","      return func(collection, predicate);","    }","","    /**","     * Iterates over elements of `collection`, returning the first element","     * `predicate` returns truthy for. The predicate is bound to `thisArg` and","     * invoked with three arguments: (value, index|key, collection).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @alias detect","     * @category Collection","     * @param {Array|Object|string} collection The collection to search.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {*} Returns the matched element, else `undefined`.","     * @example","     *","     * var users = [","     *   { 'user': 'barney',  'age': 36, 'active': true },","     *   { 'user': 'fred',    'age': 40, 'active': false },","     *   { 'user': 'pebbles', 'age': 1,  'active': true }","     * ];","     *","     * _.result(_.find(users, function(chr) {","     *   return chr.age < 40;","     * }), 'user');","     * // => 'barney'","     *","     * // using the `_.matches` callback shorthand","     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');","     * // => 'pebbles'","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.result(_.find(users, 'active', false), 'user');","     * // => 'fred'","     *","     * // using the `_.property` callback shorthand","     * _.result(_.find(users, 'active'), 'user');","     * // => 'barney'","     */","    var find = createFind(baseEach);","","    /**","     * This method is like `_.find` except that it iterates over elements of","     * `collection` from right to left.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to search.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {*} Returns the matched element, else `undefined`.","     * @example","     *","     * _.findLast([1, 2, 3, 4], function(n) {","     *   return n % 2 == 1;","     * });","     * // => 3","     */","    var findLast = createFind(baseEachRight, true);","","    /**","     * Performs a deep comparison between each element in `collection` and the","     * source object, returning the first element that has equivalent property","     * values.","     *","     * **Note:** This method supports comparing arrays, booleans, `Date` objects,","     * numbers, `Object` objects, regexes, and strings. Objects are compared by","     * their own, not inherited, enumerable properties. For comparing a single","     * own or inherited property value see `_.matchesProperty`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to search.","     * @param {Object} source The object of property values to match.","     * @returns {*} Returns the matched element, else `undefined`.","     * @example","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36, 'active': true },","     *   { 'user': 'fred',   'age': 40, 'active': false }","     * ];","     *","     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');","     * // => 'barney'","     *","     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');","     * // => 'fred'","     */","    function findWhere(collection, source) {","      return find(collection, baseMatches(source));","    }","","    /**","     * Iterates over elements of `collection` invoking `iteratee` for each element.","     * The `iteratee` is bound to `thisArg` and invoked with three arguments:","     * (value, index|key, collection). Iteratee functions may exit iteration early","     * by explicitly returning `false`.","     *","     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property","     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`","     * may be used for object iteration.","     *","     * @static","     * @memberOf _","     * @alias each","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Array|Object|string} Returns `collection`.","     * @example","     *","     * _([1, 2]).forEach(function(n) {","     *   console.log(n);","     * }).value();","     * // => logs each value from left to right and returns the array","     *","     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {","     *   console.log(n, key);","     * });","     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)","     */","    var forEach = createForEach(arrayEach, baseEach);","","    /**","     * This method is like `_.forEach` except that it iterates over elements of","     * `collection` from right to left.","     *","     * @static","     * @memberOf _","     * @alias eachRight","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Array|Object|string} Returns `collection`.","     * @example","     *","     * _([1, 2]).forEachRight(function(n) {","     *   console.log(n);","     * }).value();","     * // => logs each value from right to left and returns the array","     */","    var forEachRight = createForEach(arrayEachRight, baseEachRight);","","    /**","     * Creates an object composed of keys generated from the results of running","     * each element of `collection` through `iteratee`. The corresponding value","     * of each key is an array of the elements responsible for generating the key.","     * The `iteratee` is bound to `thisArg` and invoked with three arguments:","     * (value, index|key, collection).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [iteratee=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Object} Returns the composed aggregate object.","     * @example","     *","     * _.groupBy([4.2, 6.1, 6.4], function(n) {","     *   return Math.floor(n);","     * });","     * // => { '4': [4.2], '6': [6.1, 6.4] }","     *","     * _.groupBy([4.2, 6.1, 6.4], function(n) {","     *   return this.floor(n);","     * }, Math);","     * // => { '4': [4.2], '6': [6.1, 6.4] }","     *","     * // using the `_.property` callback shorthand","     * _.groupBy(['one', 'two', 'three'], 'length');","     * // => { '3': ['one', 'two'], '5': ['three'] }","     */","    var groupBy = createAggregator(function(result, value, key) {","      if (hasOwnProperty.call(result, key)) {","        result[key].push(value);","      } else {","        result[key] = [value];","      }","    });","","    /**","     * Checks if `value` is in `collection` using","     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)","     * for equality comparisons. If `fromIndex` is negative, it is used as the offset","     * from the end of `collection`.","     *","     * @static","     * @memberOf _","     * @alias contains, include","     * @category Collection","     * @param {Array|Object|string} collection The collection to search.","     * @param {*} target The value to search for.","     * @param {number} [fromIndex=0] The index to search from.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.","     * @returns {boolean} Returns `true` if a matching element is found, else `false`.","     * @example","     *","     * _.includes([1, 2, 3], 1);","     * // => true","     *","     * _.includes([1, 2, 3], 1, 2);","     * // => false","     *","     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');","     * // => true","     *","     * _.includes('pebbles', 'eb');","     * // => true","     */","    function includes(collection, target, fromIndex, guard) {","      var length = collection ? getLength(collection) : 0;","      if (!isLength(length)) {","        collection = values(collection);","        length = collection.length;","      }","      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {","        fromIndex = 0;","      } else {","        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);","      }","      return (typeof collection == 'string' || !isArray(collection) && isString(collection))","        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)","        : (!!length && getIndexOf(collection, target, fromIndex) > -1);","    }","","    /**","     * Creates an object composed of keys generated from the results of running","     * each element of `collection` through `iteratee`. The corresponding value","     * of each key is the last element responsible for generating the key. The","     * iteratee function is bound to `thisArg` and invoked with three arguments:","     * (value, index|key, collection).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [iteratee=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Object} Returns the composed aggregate object.","     * @example","     *","     * var keyData = [","     *   { 'dir': 'left', 'code': 97 },","     *   { 'dir': 'right', 'code': 100 }","     * ];","     *","     * _.indexBy(keyData, 'dir');","     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }","     *","     * _.indexBy(keyData, function(object) {","     *   return String.fromCharCode(object.code);","     * });","     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }","     *","     * _.indexBy(keyData, function(object) {","     *   return this.fromCharCode(object.code);","     * }, String);","     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }","     */","    var indexBy = createAggregator(function(result, value, key) {","      result[key] = value;","    });","","    /**","     * Invokes the method at `path` of each element in `collection`, returning","     * an array of the results of each invoked method. Any additional arguments","     * are provided to each invoked method. If `methodName` is a function it is","     * invoked for, and `this` bound to, each element in `collection`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Array|Function|string} path The path of the method to invoke or","     *  the function invoked per iteration.","     * @param {...*} [args] The arguments to invoke the method with.","     * @returns {Array} Returns the array of results.","     * @example","     *","     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');","     * // => [[1, 5, 7], [1, 2, 3]]","     *","     * _.invoke([123, 456], String.prototype.split, '');","     * // => [['1', '2', '3'], ['4', '5', '6']]","     */","    var invoke = restParam(function(collection, path, args) {","      var index = -1,","          isFunc = typeof path == 'function',","          isProp = isKey(path),","          result = isArrayLike(collection) ? Array(collection.length) : [];","","      baseEach(collection, function(value) {","        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);","        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);","      });","      return result;","    });","","    /**","     * Creates an array of values by running each element in `collection` through","     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three","     * arguments: (value, index|key, collection).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * Many lodash methods are guarded to work as iteratees for methods like","     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.","     *","     * The guarded methods are:","     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,","     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,","     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,","     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,","     * `sum`, `uniq`, and `words`","     *","     * @static","     * @memberOf _","     * @alias collect","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [iteratee=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Array} Returns the new mapped array.","     * @example","     *","     * function timesThree(n) {","     *   return n * 3;","     * }","     *","     * _.map([1, 2], timesThree);","     * // => [3, 6]","     *","     * _.map({ 'a': 1, 'b': 2 }, timesThree);","     * // => [3, 6] (iteration order is not guaranteed)","     *","     * var users = [","     *   { 'user': 'barney' },","     *   { 'user': 'fred' }","     * ];","     *","     * // using the `_.property` callback shorthand","     * _.map(users, 'user');","     * // => ['barney', 'fred']","     */","    function map(collection, iteratee, thisArg) {","      var func = isArray(collection) ? arrayMap : baseMap;","      iteratee = getCallback(iteratee, thisArg, 3);","      return func(collection, iteratee);","    }","","    /**","     * Creates an array of elements split into two groups, the first of which","     * contains elements `predicate` returns truthy for, while the second of which","     * contains elements `predicate` returns falsey for. The predicate is bound","     * to `thisArg` and invoked with three arguments: (value, index|key, collection).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Array} Returns the array of grouped elements.","     * @example","     *","     * _.partition([1, 2, 3], function(n) {","     *   return n % 2;","     * });","     * // => [[1, 3], [2]]","     *","     * _.partition([1.2, 2.3, 3.4], function(n) {","     *   return this.floor(n) % 2;","     * }, Math);","     * // => [[1.2, 3.4], [2.3]]","     *","     * var users = [","     *   { 'user': 'barney',  'age': 36, 'active': false },","     *   { 'user': 'fred',    'age': 40, 'active': true },","     *   { 'user': 'pebbles', 'age': 1,  'active': false }","     * ];","     *","     * var mapper = function(array) {","     *   return _.pluck(array, 'user');","     * };","     *","     * // using the `_.matches` callback shorthand","     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);","     * // => [['pebbles'], ['barney', 'fred']]","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.map(_.partition(users, 'active', false), mapper);","     * // => [['barney', 'pebbles'], ['fred']]","     *","     * // using the `_.property` callback shorthand","     * _.map(_.partition(users, 'active'), mapper);","     * // => [['fred'], ['barney', 'pebbles']]","     */","    var partition = createAggregator(function(result, value, key) {","      result[key ? 0 : 1].push(value);","    }, function() { return [[], []]; });","","    /**","     * Gets the property value of `path` from all elements in `collection`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Array|string} path The path of the property to pluck.","     * @returns {Array} Returns the property values.","     * @example","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36 },","     *   { 'user': 'fred',   'age': 40 }","     * ];","     *","     * _.pluck(users, 'user');","     * // => ['barney', 'fred']","     *","     * var userIndex = _.indexBy(users, 'user');","     * _.pluck(userIndex, 'age');","     * // => [36, 40] (iteration order is not guaranteed)","     */","    function pluck(collection, path) {","      return map(collection, property(path));","    }","","    /**","     * Reduces `collection` to a value which is the accumulated result of running","     * each element in `collection` through `iteratee`, where each successive","     * invocation is supplied the return value of the previous. If `accumulator`","     * is not provided the first element of `collection` is used as the initial","     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:","     * (accumulator, value, index|key, collection).","     *","     * Many lodash methods are guarded to work as iteratees for methods like","     * `_.reduce`, `_.reduceRight`, and `_.transform`.","     *","     * The guarded methods are:","     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,","     * and `sortByOrder`","     *","     * @static","     * @memberOf _","     * @alias foldl, inject","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [accumulator] The initial value.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {*} Returns the accumulated value.","     * @example","     *","     * _.reduce([1, 2], function(total, n) {","     *   return total + n;","     * });","     * // => 3","     *","     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {","     *   result[key] = n * 3;","     *   return result;","     * }, {});","     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)","     */","    var reduce = createReduce(arrayReduce, baseEach);","","    /**","     * This method is like `_.reduce` except that it iterates over elements of","     * `collection` from right to left.","     *","     * @static","     * @memberOf _","     * @alias foldr","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [accumulator] The initial value.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {*} Returns the accumulated value.","     * @example","     *","     * var array = [[0, 1], [2, 3], [4, 5]];","     *","     * _.reduceRight(array, function(flattened, other) {","     *   return flattened.concat(other);","     * }, []);","     * // => [4, 5, 2, 3, 0, 1]","     */","    var reduceRight = createReduce(arrayReduceRight, baseEachRight);","","    /**","     * The opposite of `_.filter`; this method returns the elements of `collection`","     * that `predicate` does **not** return truthy for.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Array} Returns the new filtered array.","     * @example","     *","     * _.reject([1, 2, 3, 4], function(n) {","     *   return n % 2 == 0;","     * });","     * // => [1, 3]","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36, 'active': false },","     *   { 'user': 'fred',   'age': 40, 'active': true }","     * ];","     *","     * // using the `_.matches` callback shorthand","     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');","     * // => ['barney']","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.pluck(_.reject(users, 'active', false), 'user');","     * // => ['fred']","     *","     * // using the `_.property` callback shorthand","     * _.pluck(_.reject(users, 'active'), 'user');","     * // => ['barney']","     */","    function reject(collection, predicate, thisArg) {","      var func = isArray(collection) ? arrayFilter : baseFilter;","      predicate = getCallback(predicate, thisArg, 3);","      return func(collection, function(value, index, collection) {","        return !predicate(value, index, collection);","      });","    }","","    /**","     * Gets a random element or `n` random elements from a collection.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to sample.","     * @param {number} [n] The number of elements to sample.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {*} Returns the random sample(s).","     * @example","     *","     * _.sample([1, 2, 3, 4]);","     * // => 2","     *","     * _.sample([1, 2, 3, 4], 2);","     * // => [3, 1]","     */","    function sample(collection, n, guard) {","      if (guard ? isIterateeCall(collection, n, guard) : n == null) {","        collection = toIterable(collection);","        var length = collection.length;","        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;","      }","      var index = -1,","          result = toArray(collection),","          length = result.length,","          lastIndex = length - 1;","","      n = nativeMin(n < 0 ? 0 : (+n || 0), length);","      while (++index < n) {","        var rand = baseRandom(index, lastIndex),","            value = result[rand];","","        result[rand] = result[index];","        result[index] = value;","      }","      result.length = n;","      return result;","    }","","    /**","     * Creates an array of shuffled values, using a version of the","     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to shuffle.","     * @returns {Array} Returns the new shuffled array.","     * @example","     *","     * _.shuffle([1, 2, 3, 4]);","     * // => [4, 1, 3, 2]","     */","    function shuffle(collection) {","      return sample(collection, POSITIVE_INFINITY);","    }","","    /**","     * Gets the size of `collection` by returning its length for array-like","     * values or the number of own enumerable properties for objects.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to inspect.","     * @returns {number} Returns the size of `collection`.","     * @example","     *","     * _.size([1, 2, 3]);","     * // => 3","     *","     * _.size({ 'a': 1, 'b': 2 });","     * // => 2","     *","     * _.size('pebbles');","     * // => 7","     */","    function size(collection) {","      var length = collection ? getLength(collection) : 0;","      return isLength(length) ? length : keys(collection).length;","    }","","    /**","     * Checks if `predicate` returns truthy for **any** element of `collection`.","     * The function returns as soon as it finds a passing value and does not iterate","     * over the entire collection. The predicate is bound to `thisArg` and invoked","     * with three arguments: (value, index|key, collection).","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @alias any","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {boolean} Returns `true` if any element passes the predicate check,","     *  else `false`.","     * @example","     *","     * _.some([null, 0, 'yes', false], Boolean);","     * // => true","     *","     * var users = [","     *   { 'user': 'barney', 'active': true },","     *   { 'user': 'fred',   'active': false }","     * ];","     *","     * // using the `_.matches` callback shorthand","     * _.some(users, { 'user': 'barney', 'active': false });","     * // => false","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.some(users, 'active', false);","     * // => true","     *","     * // using the `_.property` callback shorthand","     * _.some(users, 'active');","     * // => true","     */","    function some(collection, predicate, thisArg) {","      var func = isArray(collection) ? arraySome : baseSome;","      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {","        predicate = undefined;","      }","      if (typeof predicate != 'function' || thisArg !== undefined) {","        predicate = getCallback(predicate, thisArg, 3);","      }","      return func(collection, predicate);","    }","","    /**","     * Creates an array of elements, sorted in ascending order by the results of","     * running each element in a collection through `iteratee`. This method performs","     * a stable sort, that is, it preserves the original sort order of equal elements.","     * The `iteratee` is bound to `thisArg` and invoked with three arguments:","     * (value, index|key, collection).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [iteratee=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Array} Returns the new sorted array.","     * @example","     *","     * _.sortBy([1, 2, 3], function(n) {","     *   return Math.sin(n);","     * });","     * // => [3, 1, 2]","     *","     * _.sortBy([1, 2, 3], function(n) {","     *   return this.sin(n);","     * }, Math);","     * // => [3, 1, 2]","     *","     * var users = [","     *   { 'user': 'fred' },","     *   { 'user': 'pebbles' },","     *   { 'user': 'barney' }","     * ];","     *","     * // using the `_.property` callback shorthand","     * _.pluck(_.sortBy(users, 'user'), 'user');","     * // => ['barney', 'fred', 'pebbles']","     */","    function sortBy(collection, iteratee, thisArg) {","      if (collection == null) {","        return [];","      }","      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {","        iteratee = undefined;","      }","      var index = -1;","      iteratee = getCallback(iteratee, thisArg, 3);","","      var result = baseMap(collection, function(value, key, collection) {","        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };","      });","      return baseSortBy(result, compareAscending);","    }","","    /**","     * This method is like `_.sortBy` except that it can sort by multiple iteratees","     * or property names.","     *","     * If a property name is provided for an iteratee the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If an object is provided for an iteratee the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees","     *  The iteratees to sort by, specified as individual values or arrays of values.","     * @returns {Array} Returns the new sorted array.","     * @example","     *","     * var users = [","     *   { 'user': 'fred',   'age': 48 },","     *   { 'user': 'barney', 'age': 36 },","     *   { 'user': 'fred',   'age': 42 },","     *   { 'user': 'barney', 'age': 34 }","     * ];","     *","     * _.map(_.sortByAll(users, ['user', 'age']), _.values);","     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]","     *","     * _.map(_.sortByAll(users, 'user', function(chr) {","     *   return Math.floor(chr.age / 10);","     * }), _.values);","     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]","     */","    var sortByAll = restParam(function(collection, iteratees) {","      if (collection == null) {","        return [];","      }","      var guard = iteratees[2];","      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {","        iteratees.length = 1;","      }","      return baseSortByOrder(collection, baseFlatten(iteratees), []);","    });","","    /**","     * This method is like `_.sortByAll` except that it allows specifying the","     * sort orders of the iteratees to sort by. If `orders` is unspecified, all","     * values are sorted in ascending order. Otherwise, a value is sorted in","     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".","     *","     * If a property name is provided for an iteratee the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If an object is provided for an iteratee the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.","     * @param {boolean[]} [orders] The sort orders of `iteratees`.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.","     * @returns {Array} Returns the new sorted array.","     * @example","     *","     * var users = [","     *   { 'user': 'fred',   'age': 48 },","     *   { 'user': 'barney', 'age': 34 },","     *   { 'user': 'fred',   'age': 42 },","     *   { 'user': 'barney', 'age': 36 }","     * ];","     *","     * // sort by `user` in ascending order and by `age` in descending order","     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);","     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]","     */","    function sortByOrder(collection, iteratees, orders, guard) {","      if (collection == null) {","        return [];","      }","      if (guard && isIterateeCall(iteratees, orders, guard)) {","        orders = undefined;","      }","      if (!isArray(iteratees)) {","        iteratees = iteratees == null ? [] : [iteratees];","      }","      if (!isArray(orders)) {","        orders = orders == null ? [] : [orders];","      }","      return baseSortByOrder(collection, iteratees, orders);","    }","","    /**","     * Performs a deep comparison between each element in `collection` and the","     * source object, returning an array of all elements that have equivalent","     * property values.","     *","     * **Note:** This method supports comparing arrays, booleans, `Date` objects,","     * numbers, `Object` objects, regexes, and strings. Objects are compared by","     * their own, not inherited, enumerable properties. For comparing a single","     * own or inherited property value see `_.matchesProperty`.","     *","     * @static","     * @memberOf _","     * @category Collection","     * @param {Array|Object|string} collection The collection to search.","     * @param {Object} source The object of property values to match.","     * @returns {Array} Returns the new filtered array.","     * @example","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },","     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }","     * ];","     *","     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');","     * // => ['barney']","     *","     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');","     * // => ['fred']","     */","    function where(collection, source) {","      return filter(collection, baseMatches(source));","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Gets the number of milliseconds that have elapsed since the Unix epoch","     * (1 January 1970 00:00:00 UTC).","     *","     * @static","     * @memberOf _","     * @category Date","     * @example","     *","     * _.defer(function(stamp) {","     *   console.log(_.now() - stamp);","     * }, _.now());","     * // => logs the number of milliseconds it took for the deferred function to be invoked","     */","    var now = nativeNow || function() {","      return new Date().getTime();","    };","","    /*------------------------------------------------------------------------*/","","    /**","     * The opposite of `_.before`; this method creates a function that invokes","     * `func` once it is called `n` or more times.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {number} n The number of calls before `func` is invoked.","     * @param {Function} func The function to restrict.","     * @returns {Function} Returns the new restricted function.","     * @example","     *","     * var saves = ['profile', 'settings'];","     *","     * var done = _.after(saves.length, function() {","     *   console.log('done saving!');","     * });","     *","     * _.forEach(saves, function(type) {","     *   asyncSave({ 'type': type, 'complete': done });","     * });","     * // => logs 'done saving!' after the two async saves have completed","     */","    function after(n, func) {","      if (typeof func != 'function') {","        if (typeof n == 'function') {","          var temp = n;","          n = func;","          func = temp;","        } else {","          throw new TypeError(FUNC_ERROR_TEXT);","        }","      }","      n = nativeIsFinite(n = +n) ? n : 0;","      return function() {","        if (--n < 1) {","          return func.apply(this, arguments);","        }","      };","    }","","    /**","     * Creates a function that accepts up to `n` arguments ignoring any","     * additional arguments.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to cap arguments for.","     * @param {number} [n=func.length] The arity cap.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Function} Returns the new function.","     * @example","     *","     * _.map(['6', '8', '10'], _.ary(parseInt, 1));","     * // => [6, 8, 10]","     */","    function ary(func, n, guard) {","      if (guard && isIterateeCall(func, n, guard)) {","        n = undefined;","      }","      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);","      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);","    }","","    /**","     * Creates a function that invokes `func`, with the `this` binding and arguments","     * of the created function, while it is called less than `n` times. Subsequent","     * calls to the created function return the result of the last `func` invocation.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {number} n The number of calls at which `func` is no longer invoked.","     * @param {Function} func The function to restrict.","     * @returns {Function} Returns the new restricted function.","     * @example","     *","     * jQuery('#add').on('click', _.before(5, addContactToList));","     * // => allows adding up to 4 contacts to the list","     */","    function before(n, func) {","      var result;","      if (typeof func != 'function') {","        if (typeof n == 'function') {","          var temp = n;","          n = func;","          func = temp;","        } else {","          throw new TypeError(FUNC_ERROR_TEXT);","        }","      }","      return function() {","        if (--n > 0) {","          result = func.apply(this, arguments);","        }","        if (n <= 1) {","          func = undefined;","        }","        return result;","      };","    }","","    /**","     * Creates a function that invokes `func` with the `this` binding of `thisArg`","     * and prepends any additional `_.bind` arguments to those provided to the","     * bound function.","     *","     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,","     * may be used as a placeholder for partially applied arguments.","     *","     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"","     * property of bound functions.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to bind.","     * @param {*} thisArg The `this` binding of `func`.","     * @param {...*} [partials] The arguments to be partially applied.","     * @returns {Function} Returns the new bound function.","     * @example","     *","     * var greet = function(greeting, punctuation) {","     *   return greeting + ' ' + this.user + punctuation;","     * };","     *","     * var object = { 'user': 'fred' };","     *","     * var bound = _.bind(greet, object, 'hi');","     * bound('!');","     * // => 'hi fred!'","     *","     * // using placeholders","     * var bound = _.bind(greet, object, _, '!');","     * bound('hi');","     * // => 'hi fred!'","     */","    var bind = restParam(function(func, thisArg, partials) {","      var bitmask = BIND_FLAG;","      if (partials.length) {","        var holders = replaceHolders(partials, bind.placeholder);","        bitmask |= PARTIAL_FLAG;","      }","      return createWrapper(func, bitmask, thisArg, partials, holders);","    });","","    /**","     * Binds methods of an object to the object itself, overwriting the existing","     * method. Method names may be specified as individual arguments or as arrays","     * of method names. If no method names are provided all enumerable function","     * properties, own and inherited, of `object` are bound.","     *","     * **Note:** This method does not set the \"length\" property of bound functions.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Object} object The object to bind and assign the bound methods to.","     * @param {...(string|string[])} [methodNames] The object method names to bind,","     *  specified as individual method names or arrays of method names.","     * @returns {Object} Returns `object`.","     * @example","     *","     * var view = {","     *   'label': 'docs',","     *   'onClick': function() {","     *     console.log('clicked ' + this.label);","     *   }","     * };","     *","     * _.bindAll(view);","     * jQuery('#docs').on('click', view.onClick);","     * // => logs 'clicked docs' when the element is clicked","     */","    var bindAll = restParam(function(object, methodNames) {","      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);","","      var index = -1,","          length = methodNames.length;","","      while (++index < length) {","        var key = methodNames[index];","        object[key] = createWrapper(object[key], BIND_FLAG, object);","      }","      return object;","    });","","    /**","     * Creates a function that invokes the method at `object[key]` and prepends","     * any additional `_.bindKey` arguments to those provided to the bound function.","     *","     * This method differs from `_.bind` by allowing bound functions to reference","     * methods that may be redefined or don't yet exist.","     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)","     * for more details.","     *","     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic","     * builds, may be used as a placeholder for partially applied arguments.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Object} object The object the method belongs to.","     * @param {string} key The key of the method.","     * @param {...*} [partials] The arguments to be partially applied.","     * @returns {Function} Returns the new bound function.","     * @example","     *","     * var object = {","     *   'user': 'fred',","     *   'greet': function(greeting, punctuation) {","     *     return greeting + ' ' + this.user + punctuation;","     *   }","     * };","     *","     * var bound = _.bindKey(object, 'greet', 'hi');","     * bound('!');","     * // => 'hi fred!'","     *","     * object.greet = function(greeting, punctuation) {","     *   return greeting + 'ya ' + this.user + punctuation;","     * };","     *","     * bound('!');","     * // => 'hiya fred!'","     *","     * // using placeholders","     * var bound = _.bindKey(object, 'greet', _, '!');","     * bound('hi');","     * // => 'hiya fred!'","     */","    var bindKey = restParam(function(object, key, partials) {","      var bitmask = BIND_FLAG | BIND_KEY_FLAG;","      if (partials.length) {","        var holders = replaceHolders(partials, bindKey.placeholder);","        bitmask |= PARTIAL_FLAG;","      }","      return createWrapper(key, bitmask, object, partials, holders);","    });","","    /**","     * Creates a function that accepts one or more arguments of `func` that when","     * called either invokes `func` returning its result, if all `func` arguments","     * have been provided, or returns a function that accepts one or more of the","     * remaining `func` arguments, and so on. The arity of `func` may be specified","     * if `func.length` is not sufficient.","     *","     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,","     * may be used as a placeholder for provided arguments.","     *","     * **Note:** This method does not set the \"length\" property of curried functions.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to curry.","     * @param {number} [arity=func.length] The arity of `func`.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Function} Returns the new curried function.","     * @example","     *","     * var abc = function(a, b, c) {","     *   return [a, b, c];","     * };","     *","     * var curried = _.curry(abc);","     *","     * curried(1)(2)(3);","     * // => [1, 2, 3]","     *","     * curried(1, 2)(3);","     * // => [1, 2, 3]","     *","     * curried(1, 2, 3);","     * // => [1, 2, 3]","     *","     * // using placeholders","     * curried(1)(_, 3)(2);","     * // => [1, 2, 3]","     */","    var curry = createCurry(CURRY_FLAG);","","    /**","     * This method is like `_.curry` except that arguments are applied to `func`","     * in the manner of `_.partialRight` instead of `_.partial`.","     *","     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic","     * builds, may be used as a placeholder for provided arguments.","     *","     * **Note:** This method does not set the \"length\" property of curried functions.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to curry.","     * @param {number} [arity=func.length] The arity of `func`.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Function} Returns the new curried function.","     * @example","     *","     * var abc = function(a, b, c) {","     *   return [a, b, c];","     * };","     *","     * var curried = _.curryRight(abc);","     *","     * curried(3)(2)(1);","     * // => [1, 2, 3]","     *","     * curried(2, 3)(1);","     * // => [1, 2, 3]","     *","     * curried(1, 2, 3);","     * // => [1, 2, 3]","     *","     * // using placeholders","     * curried(3)(1, _)(2);","     * // => [1, 2, 3]","     */","    var curryRight = createCurry(CURRY_RIGHT_FLAG);","","    /**","     * Creates a debounced function that delays invoking `func` until after `wait`","     * milliseconds have elapsed since the last time the debounced function was","     * invoked. The debounced function comes with a `cancel` method to cancel","     * delayed invocations. Provide an options object to indicate that `func`","     * should be invoked on the leading and/or trailing edge of the `wait` timeout.","     * Subsequent calls to the debounced function return the result of the last","     * `func` invocation.","     *","     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked","     * on the trailing edge of the timeout only if the the debounced function is","     * invoked more than once during the `wait` timeout.","     *","     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)","     * for details over the differences between `_.debounce` and `_.throttle`.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to debounce.","     * @param {number} [wait=0] The number of milliseconds to delay.","     * @param {Object} [options] The options object.","     * @param {boolean} [options.leading=false] Specify invoking on the leading","     *  edge of the timeout.","     * @param {number} [options.maxWait] The maximum time `func` is allowed to be","     *  delayed before it is invoked.","     * @param {boolean} [options.trailing=true] Specify invoking on the trailing","     *  edge of the timeout.","     * @returns {Function} Returns the new debounced function.","     * @example","     *","     * // avoid costly calculations while the window size is in flux","     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));","     *","     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls","     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {","     *   'leading': true,","     *   'trailing': false","     * }));","     *","     * // ensure `batchLog` is invoked once after 1 second of debounced calls","     * var source = new EventSource('/stream');","     * jQuery(source).on('message', _.debounce(batchLog, 250, {","     *   'maxWait': 1000","     * }));","     *","     * // cancel a debounced call","     * var todoChanges = _.debounce(batchLog, 1000);","     * Object.observe(models.todo, todoChanges);","     *","     * Object.observe(models, function(changes) {","     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {","     *     todoChanges.cancel();","     *   }","     * }, ['delete']);","     *","     * // ...at some point `models.todo` is changed","     * models.todo.completed = true;","     *","     * // ...before 1 second has passed `models.todo` is deleted","     * // which cancels the debounced `todoChanges` call","     * delete models.todo;","     */","    function debounce(func, wait, options) {","      var args,","          maxTimeoutId,","          result,","          stamp,","          thisArg,","          timeoutId,","          trailingCall,","          lastCalled = 0,","          maxWait = false,","          trailing = true;","","      if (typeof func != 'function') {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      wait = wait < 0 ? 0 : (+wait || 0);","      if (options === true) {","        var leading = true;","        trailing = false;","      } else if (isObject(options)) {","        leading = !!options.leading;","        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);","        trailing = 'trailing' in options ? !!options.trailing : trailing;","      }","","      function cancel() {","        if (timeoutId) {","          clearTimeout(timeoutId);","        }","        if (maxTimeoutId) {","          clearTimeout(maxTimeoutId);","        }","        lastCalled = 0;","        maxTimeoutId = timeoutId = trailingCall = undefined;","      }","","      function complete(isCalled, id) {","        if (id) {","          clearTimeout(id);","        }","        maxTimeoutId = timeoutId = trailingCall = undefined;","        if (isCalled) {","          lastCalled = now();","          result = func.apply(thisArg, args);","          if (!timeoutId && !maxTimeoutId) {","            args = thisArg = undefined;","          }","        }","      }","","      function delayed() {","        var remaining = wait - (now() - stamp);","        if (remaining <= 0 || remaining > wait) {","          complete(trailingCall, maxTimeoutId);","        } else {","          timeoutId = setTimeout(delayed, remaining);","        }","      }","","      function maxDelayed() {","        complete(trailing, timeoutId);","      }","","      function debounced() {","        args = arguments;","        stamp = now();","        thisArg = this;","        trailingCall = trailing && (timeoutId || !leading);","","        if (maxWait === false) {","          var leadingCall = leading && !timeoutId;","        } else {","          if (!maxTimeoutId && !leading) {","            lastCalled = stamp;","          }","          var remaining = maxWait - (stamp - lastCalled),","              isCalled = remaining <= 0 || remaining > maxWait;","","          if (isCalled) {","            if (maxTimeoutId) {","              maxTimeoutId = clearTimeout(maxTimeoutId);","            }","            lastCalled = stamp;","            result = func.apply(thisArg, args);","          }","          else if (!maxTimeoutId) {","            maxTimeoutId = setTimeout(maxDelayed, remaining);","          }","        }","        if (isCalled && timeoutId) {","          timeoutId = clearTimeout(timeoutId);","        }","        else if (!timeoutId && wait !== maxWait) {","          timeoutId = setTimeout(delayed, wait);","        }","        if (leadingCall) {","          isCalled = true;","          result = func.apply(thisArg, args);","        }","        if (isCalled && !timeoutId && !maxTimeoutId) {","          args = thisArg = undefined;","        }","        return result;","      }","      debounced.cancel = cancel;","      return debounced;","    }","","    /**","     * Defers invoking the `func` until the current call stack has cleared. Any","     * additional arguments are provided to `func` when it is invoked.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to defer.","     * @param {...*} [args] The arguments to invoke the function with.","     * @returns {number} Returns the timer id.","     * @example","     *","     * _.defer(function(text) {","     *   console.log(text);","     * }, 'deferred');","     * // logs 'deferred' after one or more milliseconds","     */","    var defer = restParam(function(func, args) {","      return baseDelay(func, 1, args);","    });","","    /**","     * Invokes `func` after `wait` milliseconds. Any additional arguments are","     * provided to `func` when it is invoked.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to delay.","     * @param {number} wait The number of milliseconds to delay invocation.","     * @param {...*} [args] The arguments to invoke the function with.","     * @returns {number} Returns the timer id.","     * @example","     *","     * _.delay(function(text) {","     *   console.log(text);","     * }, 1000, 'later');","     * // => logs 'later' after one second","     */","    var delay = restParam(function(func, wait, args) {","      return baseDelay(func, wait, args);","    });","","    /**","     * Creates a function that returns the result of invoking the provided","     * functions with the `this` binding of the created function, where each","     * successive invocation is supplied the return value of the previous.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {...Function} [funcs] Functions to invoke.","     * @returns {Function} Returns the new function.","     * @example","     *","     * function square(n) {","     *   return n * n;","     * }","     *","     * var addSquare = _.flow(_.add, square);","     * addSquare(1, 2);","     * // => 9","     */","    var flow = createFlow();","","    /**","     * This method is like `_.flow` except that it creates a function that","     * invokes the provided functions from right to left.","     *","     * @static","     * @memberOf _","     * @alias backflow, compose","     * @category Function","     * @param {...Function} [funcs] Functions to invoke.","     * @returns {Function} Returns the new function.","     * @example","     *","     * function square(n) {","     *   return n * n;","     * }","     *","     * var addSquare = _.flowRight(square, _.add);","     * addSquare(1, 2);","     * // => 9","     */","    var flowRight = createFlow(true);","","    /**","     * Creates a function that memoizes the result of `func`. If `resolver` is","     * provided it determines the cache key for storing the result based on the","     * arguments provided to the memoized function. By default, the first argument","     * provided to the memoized function is coerced to a string and used as the","     * cache key. The `func` is invoked with the `this` binding of the memoized","     * function.","     *","     * **Note:** The cache is exposed as the `cache` property on the memoized","     * function. Its creation may be customized by replacing the `_.memoize.Cache`","     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)","     * method interface of `get`, `has`, and `set`.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to have its output memoized.","     * @param {Function} [resolver] The function to resolve the cache key.","     * @returns {Function} Returns the new memoizing function.","     * @example","     *","     * var upperCase = _.memoize(function(string) {","     *   return string.toUpperCase();","     * });","     *","     * upperCase('fred');","     * // => 'FRED'","     *","     * // modifying the result cache","     * upperCase.cache.set('fred', 'BARNEY');","     * upperCase('fred');","     * // => 'BARNEY'","     *","     * // replacing `_.memoize.Cache`","     * var object = { 'user': 'fred' };","     * var other = { 'user': 'barney' };","     * var identity = _.memoize(_.identity);","     *","     * identity(object);","     * // => { 'user': 'fred' }","     * identity(other);","     * // => { 'user': 'fred' }","     *","     * _.memoize.Cache = WeakMap;","     * var identity = _.memoize(_.identity);","     *","     * identity(object);","     * // => { 'user': 'fred' }","     * identity(other);","     * // => { 'user': 'barney' }","     */","    function memoize(func, resolver) {","      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      var memoized = function() {","        var args = arguments,","            key = resolver ? resolver.apply(this, args) : args[0],","            cache = memoized.cache;","","        if (cache.has(key)) {","          return cache.get(key);","        }","        var result = func.apply(this, args);","        memoized.cache = cache.set(key, result);","        return result;","      };","      memoized.cache = new memoize.Cache;","      return memoized;","    }","","    /**","     * Creates a function that runs each argument through a corresponding","     * transform function.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to wrap.","     * @param {...(Function|Function[])} [transforms] The functions to transform","     * arguments, specified as individual functions or arrays of functions.","     * @returns {Function} Returns the new function.","     * @example","     *","     * function doubled(n) {","     *   return n * 2;","     * }","     *","     * function square(n) {","     *   return n * n;","     * }","     *","     * var modded = _.modArgs(function(x, y) {","     *   return [x, y];","     * }, square, doubled);","     *","     * modded(1, 2);","     * // => [1, 4]","     *","     * modded(5, 10);","     * // => [25, 20]","     */","    var modArgs = restParam(function(func, transforms) {","      transforms = baseFlatten(transforms);","      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      var length = transforms.length;","      return restParam(function(args) {","        var index = nativeMin(args.length, length);","        while (index--) {","          args[index] = transforms[index](args[index]);","        }","        return func.apply(this, args);","      });","    });","","    /**","     * Creates a function that negates the result of the predicate `func`. The","     * `func` predicate is invoked with the `this` binding and arguments of the","     * created function.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} predicate The predicate to negate.","     * @returns {Function} Returns the new function.","     * @example","     *","     * function isEven(n) {","     *   return n % 2 == 0;","     * }","     *","     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));","     * // => [1, 3, 5]","     */","    function negate(predicate) {","      if (typeof predicate != 'function') {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      return function() {","        return !predicate.apply(this, arguments);","      };","    }","","    /**","     * Creates a function that is restricted to invoking `func` once. Repeat calls","     * to the function return the value of the first call. The `func` is invoked","     * with the `this` binding and arguments of the created function.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to restrict.","     * @returns {Function} Returns the new restricted function.","     * @example","     *","     * var initialize = _.once(createApplication);","     * initialize();","     * initialize();","     * // `initialize` invokes `createApplication` once","     */","    function once(func) {","      return before(2, func);","    }","","    /**","     * Creates a function that invokes `func` with `partial` arguments prepended","     * to those provided to the new function. This method is like `_.bind` except","     * it does **not** alter the `this` binding.","     *","     * The `_.partial.placeholder` value, which defaults to `_` in monolithic","     * builds, may be used as a placeholder for partially applied arguments.","     *","     * **Note:** This method does not set the \"length\" property of partially","     * applied functions.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to partially apply arguments to.","     * @param {...*} [partials] The arguments to be partially applied.","     * @returns {Function} Returns the new partially applied function.","     * @example","     *","     * var greet = function(greeting, name) {","     *   return greeting + ' ' + name;","     * };","     *","     * var sayHelloTo = _.partial(greet, 'hello');","     * sayHelloTo('fred');","     * // => 'hello fred'","     *","     * // using placeholders","     * var greetFred = _.partial(greet, _, 'fred');","     * greetFred('hi');","     * // => 'hi fred'","     */","    var partial = createPartial(PARTIAL_FLAG);","","    /**","     * This method is like `_.partial` except that partially applied arguments","     * are appended to those provided to the new function.","     *","     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic","     * builds, may be used as a placeholder for partially applied arguments.","     *","     * **Note:** This method does not set the \"length\" property of partially","     * applied functions.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to partially apply arguments to.","     * @param {...*} [partials] The arguments to be partially applied.","     * @returns {Function} Returns the new partially applied function.","     * @example","     *","     * var greet = function(greeting, name) {","     *   return greeting + ' ' + name;","     * };","     *","     * var greetFred = _.partialRight(greet, 'fred');","     * greetFred('hi');","     * // => 'hi fred'","     *","     * // using placeholders","     * var sayHelloTo = _.partialRight(greet, 'hello', _);","     * sayHelloTo('fred');","     * // => 'hello fred'","     */","    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);","","    /**","     * Creates a function that invokes `func` with arguments arranged according","     * to the specified indexes where the argument value at the first index is","     * provided as the first argument, the argument value at the second index is","     * provided as the second argument, and so on.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to rearrange arguments for.","     * @param {...(number|number[])} indexes The arranged argument indexes,","     *  specified as individual indexes or arrays of indexes.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var rearged = _.rearg(function(a, b, c) {","     *   return [a, b, c];","     * }, 2, 0, 1);","     *","     * rearged('b', 'c', 'a')","     * // => ['a', 'b', 'c']","     *","     * var map = _.rearg(_.map, [1, 0]);","     * map(function(n) {","     *   return n * 3;","     * }, [1, 2, 3]);","     * // => [3, 6, 9]","     */","    var rearg = restParam(function(func, indexes) {","      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));","    });","","    /**","     * Creates a function that invokes `func` with the `this` binding of the","     * created function and arguments from `start` and beyond provided as an array.","     *","     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to apply a rest parameter to.","     * @param {number} [start=func.length-1] The start position of the rest parameter.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var say = _.restParam(function(what, names) {","     *   return what + ' ' + _.initial(names).join(', ') +","     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);","     * });","     *","     * say('hello', 'fred', 'barney', 'pebbles');","     * // => 'hello fred, barney, & pebbles'","     */","    function restParam(func, start) {","      if (typeof func != 'function') {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);","      return function() {","        var args = arguments,","            index = -1,","            length = nativeMax(args.length - start, 0),","            rest = Array(length);","","        while (++index < length) {","          rest[index] = args[start + index];","        }","        switch (start) {","          case 0: return func.call(this, rest);","          case 1: return func.call(this, args[0], rest);","          case 2: return func.call(this, args[0], args[1], rest);","        }","        var otherArgs = Array(start + 1);","        index = -1;","        while (++index < start) {","          otherArgs[index] = args[index];","        }","        otherArgs[start] = rest;","        return func.apply(this, otherArgs);","      };","    }","","    /**","     * Creates a function that invokes `func` with the `this` binding of the created","     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).","     *","     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to spread arguments over.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var say = _.spread(function(who, what) {","     *   return who + ' says ' + what;","     * });","     *","     * say(['fred', 'hello']);","     * // => 'fred says hello'","     *","     * // with a Promise","     * var numbers = Promise.all([","     *   Promise.resolve(40),","     *   Promise.resolve(36)","     * ]);","     *","     * numbers.then(_.spread(function(x, y) {","     *   return x + y;","     * }));","     * // => a Promise of 76","     */","    function spread(func) {","      if (typeof func != 'function') {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      return function(array) {","        return func.apply(this, array);","      };","    }","","    /**","     * Creates a throttled function that only invokes `func` at most once per","     * every `wait` milliseconds. The throttled function comes with a `cancel`","     * method to cancel delayed invocations. Provide an options object to indicate","     * that `func` should be invoked on the leading and/or trailing edge of the","     * `wait` timeout. Subsequent calls to the throttled function return the","     * result of the last `func` call.","     *","     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked","     * on the trailing edge of the timeout only if the the throttled function is","     * invoked more than once during the `wait` timeout.","     *","     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)","     * for details over the differences between `_.throttle` and `_.debounce`.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {Function} func The function to throttle.","     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.","     * @param {Object} [options] The options object.","     * @param {boolean} [options.leading=true] Specify invoking on the leading","     *  edge of the timeout.","     * @param {boolean} [options.trailing=true] Specify invoking on the trailing","     *  edge of the timeout.","     * @returns {Function} Returns the new throttled function.","     * @example","     *","     * // avoid excessively updating the position while scrolling","     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));","     *","     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes","     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {","     *   'trailing': false","     * }));","     *","     * // cancel a trailing throttled call","     * jQuery(window).on('popstate', throttled.cancel);","     */","    function throttle(func, wait, options) {","      var leading = true,","          trailing = true;","","      if (typeof func != 'function') {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      if (options === false) {","        leading = false;","      } else if (isObject(options)) {","        leading = 'leading' in options ? !!options.leading : leading;","        trailing = 'trailing' in options ? !!options.trailing : trailing;","      }","      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });","    }","","    /**","     * Creates a function that provides `value` to the wrapper function as its","     * first argument. Any additional arguments provided to the function are","     * appended to those provided to the wrapper function. The wrapper is invoked","     * with the `this` binding of the created function.","     *","     * @static","     * @memberOf _","     * @category Function","     * @param {*} value The value to wrap.","     * @param {Function} wrapper The wrapper function.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var p = _.wrap(_.escape, function(func, text) {","     *   return '<p>' + func(text) + '</p>';","     * });","     *","     * p('fred, barney, & pebbles');","     * // => '<p>fred, barney, &amp; pebbles</p>'","     */","    function wrap(value, wrapper) {","      wrapper = wrapper == null ? identity : wrapper;","      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,","     * otherwise they are assigned by reference. If `customizer` is provided it is","     * invoked to produce the cloned values. If `customizer` returns `undefined`","     * cloning is handled by the method instead. The `customizer` is bound to","     * `thisArg` and invoked with two argument; (value [, index|key, object]).","     *","     * **Note:** This method is loosely based on the","     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).","     * The enumerable properties of `arguments` objects and objects created by","     * constructors other than `Object` are cloned to plain `Object` objects. An","     * empty object is returned for uncloneable values such as functions, DOM nodes,","     * Maps, Sets, and WeakMaps.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to clone.","     * @param {boolean} [isDeep] Specify a deep clone.","     * @param {Function} [customizer] The function to customize cloning values.","     * @param {*} [thisArg] The `this` binding of `customizer`.","     * @returns {*} Returns the cloned value.","     * @example","     *","     * var users = [","     *   { 'user': 'barney' },","     *   { 'user': 'fred' }","     * ];","     *","     * var shallow = _.clone(users);","     * shallow[0] === users[0];","     * // => true","     *","     * var deep = _.clone(users, true);","     * deep[0] === users[0];","     * // => false","     *","     * // using a customizer callback","     * var el = _.clone(document.body, function(value) {","     *   if (_.isElement(value)) {","     *     return value.cloneNode(false);","     *   }","     * });","     *","     * el === document.body","     * // => false","     * el.nodeName","     * // => BODY","     * el.childNodes.length;","     * // => 0","     */","    function clone(value, isDeep, customizer, thisArg) {","      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {","        isDeep = false;","      }","      else if (typeof isDeep == 'function') {","        thisArg = customizer;","        customizer = isDeep;","        isDeep = false;","      }","      return typeof customizer == 'function'","        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))","        : baseClone(value, isDeep);","    }","","    /**","     * Creates a deep clone of `value`. If `customizer` is provided it is invoked","     * to produce the cloned values. If `customizer` returns `undefined` cloning","     * is handled by the method instead. The `customizer` is bound to `thisArg`","     * and invoked with two argument; (value [, index|key, object]).","     *","     * **Note:** This method is loosely based on the","     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).","     * The enumerable properties of `arguments` objects and objects created by","     * constructors other than `Object` are cloned to plain `Object` objects. An","     * empty object is returned for uncloneable values such as functions, DOM nodes,","     * Maps, Sets, and WeakMaps.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to deep clone.","     * @param {Function} [customizer] The function to customize cloning values.","     * @param {*} [thisArg] The `this` binding of `customizer`.","     * @returns {*} Returns the deep cloned value.","     * @example","     *","     * var users = [","     *   { 'user': 'barney' },","     *   { 'user': 'fred' }","     * ];","     *","     * var deep = _.cloneDeep(users);","     * deep[0] === users[0];","     * // => false","     *","     * // using a customizer callback","     * var el = _.cloneDeep(document.body, function(value) {","     *   if (_.isElement(value)) {","     *     return value.cloneNode(true);","     *   }","     * });","     *","     * el === document.body","     * // => false","     * el.nodeName","     * // => BODY","     * el.childNodes.length;","     * // => 20","     */","    function cloneDeep(value, customizer, thisArg) {","      return typeof customizer == 'function'","        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))","        : baseClone(value, true);","    }","","    /**","     * Checks if `value` is greater than `other`.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to compare.","     * @param {*} other The other value to compare.","     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.","     * @example","     *","     * _.gt(3, 1);","     * // => true","     *","     * _.gt(3, 3);","     * // => false","     *","     * _.gt(1, 3);","     * // => false","     */","    function gt(value, other) {","      return value > other;","    }","","    /**","     * Checks if `value` is greater than or equal to `other`.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to compare.","     * @param {*} other The other value to compare.","     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.","     * @example","     *","     * _.gte(3, 1);","     * // => true","     *","     * _.gte(3, 3);","     * // => true","     *","     * _.gte(1, 3);","     * // => false","     */","    function gte(value, other) {","      return value >= other;","    }","","    /**","     * Checks if `value` is classified as an `arguments` object.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","     * @example","     *","     * _.isArguments(function() { return arguments; }());","     * // => true","     *","     * _.isArguments([1, 2, 3]);","     * // => false","     */","    function isArguments(value) {","      return isObjectLike(value) && isArrayLike(value) &&","        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');","    }","","    /**","     * Checks if `value` is classified as an `Array` object.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","     * @example","     *","     * _.isArray([1, 2, 3]);","     * // => true","     *","     * _.isArray(function() { return arguments; }());","     * // => false","     */","    var isArray = nativeIsArray || function(value) {","      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;","    };","","    /**","     * Checks if `value` is classified as a boolean primitive or object.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","     * @example","     *","     * _.isBoolean(false);","     * // => true","     *","     * _.isBoolean(null);","     * // => false","     */","    function isBoolean(value) {","      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);","    }","","    /**","     * Checks if `value` is classified as a `Date` object.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","     * @example","     *","     * _.isDate(new Date);","     * // => true","     *","     * _.isDate('Mon April 23 2012');","     * // => false","     */","    function isDate(value) {","      return isObjectLike(value) && objToString.call(value) == dateTag;","    }","","    /**","     * Checks if `value` is a DOM element.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.","     * @example","     *","     * _.isElement(document.body);","     * // => true","     *","     * _.isElement('<body>');","     * // => false","     */","    function isElement(value) {","      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);","    }","","    /**","     * Checks if `value` is empty. A value is considered empty unless it is an","     * `arguments` object, array, string, or jQuery-like collection with a length","     * greater than `0` or an object with own enumerable properties.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {Array|Object|string} value The value to inspect.","     * @returns {boolean} Returns `true` if `value` is empty, else `false`.","     * @example","     *","     * _.isEmpty(null);","     * // => true","     *","     * _.isEmpty(true);","     * // => true","     *","     * _.isEmpty(1);","     * // => true","     *","     * _.isEmpty([1, 2, 3]);","     * // => false","     *","     * _.isEmpty({ 'a': 1 });","     * // => false","     */","    function isEmpty(value) {","      if (value == null) {","        return true;","      }","      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||","          (isObjectLike(value) && isFunction(value.splice)))) {","        return !value.length;","      }","      return !keys(value).length;","    }","","    /**","     * Performs a deep comparison between two values to determine if they are","     * equivalent. If `customizer` is provided it is invoked to compare values.","     * If `customizer` returns `undefined` comparisons are handled by the method","     * instead. The `customizer` is bound to `thisArg` and invoked with three","     * arguments: (value, other [, index|key]).","     *","     * **Note:** This method supports comparing arrays, booleans, `Date` objects,","     * numbers, `Object` objects, regexes, and strings. Objects are compared by","     * their own, not inherited, enumerable properties. Functions and DOM nodes","     * are **not** supported. Provide a customizer function to extend support","     * for comparing other values.","     *","     * @static","     * @memberOf _","     * @alias eq","     * @category Lang","     * @param {*} value The value to compare.","     * @param {*} other The other value to compare.","     * @param {Function} [customizer] The function to customize value comparisons.","     * @param {*} [thisArg] The `this` binding of `customizer`.","     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.","     * @example","     *","     * var object = { 'user': 'fred' };","     * var other = { 'user': 'fred' };","     *","     * object == other;","     * // => false","     *","     * _.isEqual(object, other);","     * // => true","     *","     * // using a customizer callback","     * var array = ['hello', 'goodbye'];","     * var other = ['hi', 'goodbye'];","     *","     * _.isEqual(array, other, function(value, other) {","     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {","     *     return true;","     *   }","     * });","     * // => true","     */","    function isEqual(value, other, customizer, thisArg) {","      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;","      var result = customizer ? customizer(value, other) : undefined;","      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;","    }","","    /**","     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,","     * `SyntaxError`, `TypeError`, or `URIError` object.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.","     * @example","     *","     * _.isError(new Error);","     * // => true","     *","     * _.isError(Error);","     * // => false","     */","    function isError(value) {","      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;","    }","","    /**","     * Checks if `value` is a finite primitive number.","     *","     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.","     * @example","     *","     * _.isFinite(10);","     * // => true","     *","     * _.isFinite('10');","     * // => false","     *","     * _.isFinite(true);","     * // => false","     *","     * _.isFinite(Object(10));","     * // => false","     *","     * _.isFinite(Infinity);","     * // => false","     */","    function isFinite(value) {","      return typeof value == 'number' && nativeIsFinite(value);","    }","","    /**","     * Checks if `value` is classified as a `Function` object.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","     * @example","     *","     * _.isFunction(_);","     * // => true","     *","     * _.isFunction(/abc/);","     * // => false","     */","    function isFunction(value) {","      // The use of `Object#toString` avoids issues with the `typeof` operator","      // in older versions of Chrome and Safari which return 'function' for regexes","      // and Safari 8 equivalents which return 'object' for typed array constructors.","      return isObject(value) && objToString.call(value) == funcTag;","    }","","    /**","     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.","     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is an object, else `false`.","     * @example","     *","     * _.isObject({});","     * // => true","     *","     * _.isObject([1, 2, 3]);","     * // => true","     *","     * _.isObject(1);","     * // => false","     */","    function isObject(value) {","      // Avoid a V8 JIT bug in Chrome 19-20.","      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.","      var type = typeof value;","      return !!value && (type == 'object' || type == 'function');","    }","","    /**","     * Performs a deep comparison between `object` and `source` to determine if","     * `object` contains equivalent property values. If `customizer` is provided","     * it is invoked to compare values. If `customizer` returns `undefined`","     * comparisons are handled by the method instead. The `customizer` is bound","     * to `thisArg` and invoked with three arguments: (value, other, index|key).","     *","     * **Note:** This method supports comparing properties of arrays, booleans,","     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions","     * and DOM nodes are **not** supported. Provide a customizer function to extend","     * support for comparing other values.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {Object} object The object to inspect.","     * @param {Object} source The object of property values to match.","     * @param {Function} [customizer] The function to customize value comparisons.","     * @param {*} [thisArg] The `this` binding of `customizer`.","     * @returns {boolean} Returns `true` if `object` is a match, else `false`.","     * @example","     *","     * var object = { 'user': 'fred', 'age': 40 };","     *","     * _.isMatch(object, { 'age': 40 });","     * // => true","     *","     * _.isMatch(object, { 'age': 36 });","     * // => false","     *","     * // using a customizer callback","     * var object = { 'greeting': 'hello' };","     * var source = { 'greeting': 'hi' };","     *","     * _.isMatch(object, source, function(value, other) {","     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;","     * });","     * // => true","     */","    function isMatch(object, source, customizer, thisArg) {","      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;","      return baseIsMatch(object, getMatchData(source), customizer);","    }","","    /**","     * Checks if `value` is `NaN`.","     *","     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)","     * which returns `true` for `undefined` and other non-numeric values.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.","     * @example","     *","     * _.isNaN(NaN);","     * // => true","     *","     * _.isNaN(new Number(NaN));","     * // => true","     *","     * isNaN(undefined);","     * // => true","     *","     * _.isNaN(undefined);","     * // => false","     */","    function isNaN(value) {","      // An `NaN` primitive is the only value that is not equal to itself.","      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.","      return isNumber(value) && value != +value;","    }","","    /**","     * Checks if `value` is a native function.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.","     * @example","     *","     * _.isNative(Array.prototype.push);","     * // => true","     *","     * _.isNative(_);","     * // => false","     */","    function isNative(value) {","      if (value == null) {","        return false;","      }","      if (isFunction(value)) {","        return reIsNative.test(fnToString.call(value));","      }","      return isObjectLike(value) && reIsHostCtor.test(value);","    }","","    /**","     * Checks if `value` is `null`.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.","     * @example","     *","     * _.isNull(null);","     * // => true","     *","     * _.isNull(void 0);","     * // => false","     */","    function isNull(value) {","      return value === null;","    }","","    /**","     * Checks if `value` is classified as a `Number` primitive or object.","     *","     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified","     * as numbers, use the `_.isFinite` method.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","     * @example","     *","     * _.isNumber(8.4);","     * // => true","     *","     * _.isNumber(NaN);","     * // => true","     *","     * _.isNumber('8.4');","     * // => false","     */","    function isNumber(value) {","      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);","    }","","    /**","     * Checks if `value` is a plain object, that is, an object created by the","     * `Object` constructor or one with a `[[Prototype]]` of `null`.","     *","     * **Note:** This method assumes objects created by the `Object` constructor","     * have no inherited enumerable properties.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.","     * @example","     *","     * function Foo() {","     *   this.a = 1;","     * }","     *","     * _.isPlainObject(new Foo);","     * // => false","     *","     * _.isPlainObject([1, 2, 3]);","     * // => false","     *","     * _.isPlainObject({ 'x': 0, 'y': 0 });","     * // => true","     *","     * _.isPlainObject(Object.create(null));","     * // => true","     */","    function isPlainObject(value) {","      var Ctor;","","      // Exit early for non `Object` objects.","      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||","          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {","        return false;","      }","      // IE < 9 iterates inherited properties before own properties. If the first","      // iterated property is an object's own property then there are no inherited","      // enumerable properties.","      var result;","      // In most environments an object's own properties are iterated before","      // its inherited properties. If the last iterated property is an object's","      // own property then there are no inherited enumerable properties.","      baseForIn(value, function(subValue, key) {","        result = key;","      });","      return result === undefined || hasOwnProperty.call(value, result);","    }","","    /**","     * Checks if `value` is classified as a `RegExp` object.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","     * @example","     *","     * _.isRegExp(/abc/);","     * // => true","     *","     * _.isRegExp('/abc/');","     * // => false","     */","    function isRegExp(value) {","      return isObject(value) && objToString.call(value) == regexpTag;","    }","","    /**","     * Checks if `value` is classified as a `String` primitive or object.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","     * @example","     *","     * _.isString('abc');","     * // => true","     *","     * _.isString(1);","     * // => false","     */","    function isString(value) {","      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);","    }","","    /**","     * Checks if `value` is classified as a typed array.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.","     * @example","     *","     * _.isTypedArray(new Uint8Array);","     * // => true","     *","     * _.isTypedArray([]);","     * // => false","     */","    function isTypedArray(value) {","      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];","    }","","    /**","     * Checks if `value` is `undefined`.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.","     * @example","     *","     * _.isUndefined(void 0);","     * // => true","     *","     * _.isUndefined(null);","     * // => false","     */","    function isUndefined(value) {","      return value === undefined;","    }","","    /**","     * Checks if `value` is less than `other`.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to compare.","     * @param {*} other The other value to compare.","     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.","     * @example","     *","     * _.lt(1, 3);","     * // => true","     *","     * _.lt(3, 3);","     * // => false","     *","     * _.lt(3, 1);","     * // => false","     */","    function lt(value, other) {","      return value < other;","    }","","    /**","     * Checks if `value` is less than or equal to `other`.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to compare.","     * @param {*} other The other value to compare.","     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.","     * @example","     *","     * _.lte(1, 3);","     * // => true","     *","     * _.lte(3, 3);","     * // => true","     *","     * _.lte(3, 1);","     * // => false","     */","    function lte(value, other) {","      return value <= other;","    }","","    /**","     * Converts `value` to an array.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to convert.","     * @returns {Array} Returns the converted array.","     * @example","     *","     * (function() {","     *   return _.toArray(arguments).slice(1);","     * }(1, 2, 3));","     * // => [2, 3]","     */","    function toArray(value) {","      var length = value ? getLength(value) : 0;","      if (!isLength(length)) {","        return values(value);","      }","      if (!length) {","        return [];","      }","      return arrayCopy(value);","    }","","    /**","     * Converts `value` to a plain object flattening inherited enumerable","     * properties of `value` to own properties of the plain object.","     *","     * @static","     * @memberOf _","     * @category Lang","     * @param {*} value The value to convert.","     * @returns {Object} Returns the converted plain object.","     * @example","     *","     * function Foo() {","     *   this.b = 2;","     * }","     *","     * Foo.prototype.c = 3;","     *","     * _.assign({ 'a': 1 }, new Foo);","     * // => { 'a': 1, 'b': 2 }","     *","     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));","     * // => { 'a': 1, 'b': 2, 'c': 3 }","     */","    function toPlainObject(value) {","      return baseCopy(value, keysIn(value));","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Recursively merges own enumerable properties of the source object(s), that","     * don't resolve to `undefined` into the destination object. Subsequent sources","     * overwrite property assignments of previous sources. If `customizer` is","     * provided it is invoked to produce the merged values of the destination and","     * source properties. If `customizer` returns `undefined` merging is handled","     * by the method instead. The `customizer` is bound to `thisArg` and invoked","     * with five arguments: (objectValue, sourceValue, key, object, source).","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The destination object.","     * @param {...Object} [sources] The source objects.","     * @param {Function} [customizer] The function to customize assigned values.","     * @param {*} [thisArg] The `this` binding of `customizer`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * var users = {","     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]","     * };","     *","     * var ages = {","     *   'data': [{ 'age': 36 }, { 'age': 40 }]","     * };","     *","     * _.merge(users, ages);","     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }","     *","     * // using a customizer callback","     * var object = {","     *   'fruits': ['apple'],","     *   'vegetables': ['beet']","     * };","     *","     * var other = {","     *   'fruits': ['banana'],","     *   'vegetables': ['carrot']","     * };","     *","     * _.merge(object, other, function(a, b) {","     *   if (_.isArray(a)) {","     *     return a.concat(b);","     *   }","     * });","     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }","     */","    var merge = createAssigner(baseMerge);","","    /**","     * Assigns own enumerable properties of source object(s) to the destination","     * object. Subsequent sources overwrite property assignments of previous sources.","     * If `customizer` is provided it is invoked to produce the assigned values.","     * The `customizer` is bound to `thisArg` and invoked with five arguments:","     * (objectValue, sourceValue, key, object, source).","     *","     * **Note:** This method mutates `object` and is based on","     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).","     *","     * @static","     * @memberOf _","     * @alias extend","     * @category Object","     * @param {Object} object The destination object.","     * @param {...Object} [sources] The source objects.","     * @param {Function} [customizer] The function to customize assigned values.","     * @param {*} [thisArg] The `this` binding of `customizer`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });","     * // => { 'user': 'fred', 'age': 40 }","     *","     * // using a customizer callback","     * var defaults = _.partialRight(_.assign, function(value, other) {","     *   return _.isUndefined(value) ? other : value;","     * });","     *","     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });","     * // => { 'user': 'barney', 'age': 36 }","     */","    var assign = createAssigner(function(object, source, customizer) {","      return customizer","        ? assignWith(object, source, customizer)","        : baseAssign(object, source);","    });","","    /**","     * Creates an object that inherits from the given `prototype` object. If a","     * `properties` object is provided its own enumerable properties are assigned","     * to the created object.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} prototype The object to inherit from.","     * @param {Object} [properties] The properties to assign to the object.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Object} Returns the new object.","     * @example","     *","     * function Shape() {","     *   this.x = 0;","     *   this.y = 0;","     * }","     *","     * function Circle() {","     *   Shape.call(this);","     * }","     *","     * Circle.prototype = _.create(Shape.prototype, {","     *   'constructor': Circle","     * });","     *","     * var circle = new Circle;","     * circle instanceof Circle;","     * // => true","     *","     * circle instanceof Shape;","     * // => true","     */","    function create(prototype, properties, guard) {","      var result = baseCreate(prototype);","      if (guard && isIterateeCall(prototype, properties, guard)) {","        properties = undefined;","      }","      return properties ? baseAssign(result, properties) : result;","    }","","    /**","     * Assigns own enumerable properties of source object(s) to the destination","     * object for all destination properties that resolve to `undefined`. Once a","     * property is set, additional values of the same property are ignored.","     *","     * **Note:** This method mutates `object`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The destination object.","     * @param {...Object} [sources] The source objects.","     * @returns {Object} Returns `object`.","     * @example","     *","     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });","     * // => { 'user': 'barney', 'age': 36 }","     */","    var defaults = createDefaults(assign, assignDefaults);","","    /**","     * This method is like `_.defaults` except that it recursively assigns","     * default properties.","     *","     * **Note:** This method mutates `object`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The destination object.","     * @param {...Object} [sources] The source objects.","     * @returns {Object} Returns `object`.","     * @example","     *","     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });","     * // => { 'user': { 'name': 'barney', 'age': 36 } }","     *","     */","    var defaultsDeep = createDefaults(merge, mergeDefaults);","","    /**","     * This method is like `_.find` except that it returns the key of the first","     * element `predicate` returns truthy for instead of the element itself.","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to search.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.","     * @example","     *","     * var users = {","     *   'barney':  { 'age': 36, 'active': true },","     *   'fred':    { 'age': 40, 'active': false },","     *   'pebbles': { 'age': 1,  'active': true }","     * };","     *","     * _.findKey(users, function(chr) {","     *   return chr.age < 40;","     * });","     * // => 'barney' (iteration order is not guaranteed)","     *","     * // using the `_.matches` callback shorthand","     * _.findKey(users, { 'age': 1, 'active': true });","     * // => 'pebbles'","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.findKey(users, 'active', false);","     * // => 'fred'","     *","     * // using the `_.property` callback shorthand","     * _.findKey(users, 'active');","     * // => 'barney'","     */","    var findKey = createFindKey(baseForOwn);","","    /**","     * This method is like `_.findKey` except that it iterates over elements of","     * a collection in the opposite order.","     *","     * If a property name is provided for `predicate` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `predicate` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to search.","     * @param {Function|Object|string} [predicate=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.","     * @example","     *","     * var users = {","     *   'barney':  { 'age': 36, 'active': true },","     *   'fred':    { 'age': 40, 'active': false },","     *   'pebbles': { 'age': 1,  'active': true }","     * };","     *","     * _.findLastKey(users, function(chr) {","     *   return chr.age < 40;","     * });","     * // => returns `pebbles` assuming `_.findKey` returns `barney`","     *","     * // using the `_.matches` callback shorthand","     * _.findLastKey(users, { 'age': 36, 'active': true });","     * // => 'barney'","     *","     * // using the `_.matchesProperty` callback shorthand","     * _.findLastKey(users, 'active', false);","     * // => 'fred'","     *","     * // using the `_.property` callback shorthand","     * _.findLastKey(users, 'active');","     * // => 'pebbles'","     */","    var findLastKey = createFindKey(baseForOwnRight);","","    /**","     * Iterates over own and inherited enumerable properties of an object invoking","     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked","     * with three arguments: (value, key, object). Iteratee functions may exit","     * iteration early by explicitly returning `false`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to iterate over.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * function Foo() {","     *   this.a = 1;","     *   this.b = 2;","     * }","     *","     * Foo.prototype.c = 3;","     *","     * _.forIn(new Foo, function(value, key) {","     *   console.log(key);","     * });","     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)","     */","    var forIn = createForIn(baseFor);","","    /**","     * This method is like `_.forIn` except that it iterates over properties of","     * `object` in the opposite order.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to iterate over.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * function Foo() {","     *   this.a = 1;","     *   this.b = 2;","     * }","     *","     * Foo.prototype.c = 3;","     *","     * _.forInRight(new Foo, function(value, key) {","     *   console.log(key);","     * });","     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'","     */","    var forInRight = createForIn(baseForRight);","","    /**","     * Iterates over own enumerable properties of an object invoking `iteratee`","     * for each property. The `iteratee` is bound to `thisArg` and invoked with","     * three arguments: (value, key, object). Iteratee functions may exit iteration","     * early by explicitly returning `false`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to iterate over.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * function Foo() {","     *   this.a = 1;","     *   this.b = 2;","     * }","     *","     * Foo.prototype.c = 3;","     *","     * _.forOwn(new Foo, function(value, key) {","     *   console.log(key);","     * });","     * // => logs 'a' and 'b' (iteration order is not guaranteed)","     */","    var forOwn = createForOwn(baseForOwn);","","    /**","     * This method is like `_.forOwn` except that it iterates over properties of","     * `object` in the opposite order.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to iterate over.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * function Foo() {","     *   this.a = 1;","     *   this.b = 2;","     * }","     *","     * Foo.prototype.c = 3;","     *","     * _.forOwnRight(new Foo, function(value, key) {","     *   console.log(key);","     * });","     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'","     */","    var forOwnRight = createForOwn(baseForOwnRight);","","    /**","     * Creates an array of function property names from all enumerable properties,","     * own and inherited, of `object`.","     *","     * @static","     * @memberOf _","     * @alias methods","     * @category Object","     * @param {Object} object The object to inspect.","     * @returns {Array} Returns the new array of property names.","     * @example","     *","     * _.functions(_);","     * // => ['after', 'ary', 'assign', ...]","     */","    function functions(object) {","      return baseFunctions(object, keysIn(object));","    }","","    /**","     * Gets the property value at `path` of `object`. If the resolved value is","     * `undefined` the `defaultValue` is used in its place.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to query.","     * @param {Array|string} path The path of the property to get.","     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.","     * @returns {*} Returns the resolved value.","     * @example","     *","     * var object = { 'a': [{ 'b': { 'c': 3 } }] };","     *","     * _.get(object, 'a[0].b.c');","     * // => 3","     *","     * _.get(object, ['a', '0', 'b', 'c']);","     * // => 3","     *","     * _.get(object, 'a.b.c', 'default');","     * // => 'default'","     */","    function get(object, path, defaultValue) {","      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');","      return result === undefined ? defaultValue : result;","    }","","    /**","     * Checks if `path` is a direct property.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to query.","     * @param {Array|string} path The path to check.","     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.","     * @example","     *","     * var object = { 'a': { 'b': { 'c': 3 } } };","     *","     * _.has(object, 'a');","     * // => true","     *","     * _.has(object, 'a.b.c');","     * // => true","     *","     * _.has(object, ['a', 'b', 'c']);","     * // => true","     */","    function has(object, path) {","      if (object == null) {","        return false;","      }","      var result = hasOwnProperty.call(object, path);","      if (!result && !isKey(path)) {","        path = toPath(path);","        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));","        if (object == null) {","          return false;","        }","        path = last(path);","        result = hasOwnProperty.call(object, path);","      }","      return result || (isLength(object.length) && isIndex(path, object.length) &&","        (isArray(object) || isArguments(object)));","    }","","    /**","     * Creates an object composed of the inverted keys and values of `object`.","     * If `object` contains duplicate values, subsequent values overwrite property","     * assignments of previous values unless `multiValue` is `true`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to invert.","     * @param {boolean} [multiValue] Allow multiple values per key.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Object} Returns the new inverted object.","     * @example","     *","     * var object = { 'a': 1, 'b': 2, 'c': 1 };","     *","     * _.invert(object);","     * // => { '1': 'c', '2': 'b' }","     *","     * // with `multiValue`","     * _.invert(object, true);","     * // => { '1': ['a', 'c'], '2': ['b'] }","     */","    function invert(object, multiValue, guard) {","      if (guard && isIterateeCall(object, multiValue, guard)) {","        multiValue = undefined;","      }","      var index = -1,","          props = keys(object),","          length = props.length,","          result = {};","","      while (++index < length) {","        var key = props[index],","            value = object[key];","","        if (multiValue) {","          if (hasOwnProperty.call(result, value)) {","            result[value].push(key);","          } else {","            result[value] = [key];","          }","        }","        else {","          result[value] = key;","        }","      }","      return result;","    }","","    /**","     * Creates an array of the own enumerable property names of `object`.","     *","     * **Note:** Non-object values are coerced to objects. See the","     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)","     * for more details.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to query.","     * @returns {Array} Returns the array of property names.","     * @example","     *","     * function Foo() {","     *   this.a = 1;","     *   this.b = 2;","     * }","     *","     * Foo.prototype.c = 3;","     *","     * _.keys(new Foo);","     * // => ['a', 'b'] (iteration order is not guaranteed)","     *","     * _.keys('hi');","     * // => ['0', '1']","     */","    var keys = !nativeKeys ? shimKeys : function(object) {","      var Ctor = object == null ? undefined : object.constructor;","      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||","          (typeof object != 'function' && isArrayLike(object))) {","        return shimKeys(object);","      }","      return isObject(object) ? nativeKeys(object) : [];","    };","","    /**","     * Creates an array of the own and inherited enumerable property names of `object`.","     *","     * **Note:** Non-object values are coerced to objects.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to query.","     * @returns {Array} Returns the array of property names.","     * @example","     *","     * function Foo() {","     *   this.a = 1;","     *   this.b = 2;","     * }","     *","     * Foo.prototype.c = 3;","     *","     * _.keysIn(new Foo);","     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)","     */","    function keysIn(object) {","      if (object == null) {","        return [];","      }","      if (!isObject(object)) {","        object = Object(object);","      }","      var length = object.length;","      length = (length && isLength(length) &&","        (isArray(object) || isArguments(object)) && length) || 0;","","      var Ctor = object.constructor,","          index = -1,","          isProto = typeof Ctor == 'function' && Ctor.prototype === object,","          result = Array(length),","          skipIndexes = length > 0;","","      while (++index < length) {","        result[index] = (index + '');","      }","      for (var key in object) {","        if (!(skipIndexes && isIndex(key, length)) &&","            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {","          result.push(key);","        }","      }","      return result;","    }","","    /**","     * The opposite of `_.mapValues`; this method creates an object with the","     * same values as `object` and keys generated by running each own enumerable","     * property of `object` through `iteratee`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to iterate over.","     * @param {Function|Object|string} [iteratee=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Object} Returns the new mapped object.","     * @example","     *","     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {","     *   return key + value;","     * });","     * // => { 'a1': 1, 'b2': 2 }","     */","    var mapKeys = createObjectMapper(true);","","    /**","     * Creates an object with the same keys as `object` and values generated by","     * running each own enumerable property of `object` through `iteratee`. The","     * iteratee function is bound to `thisArg` and invoked with three arguments:","     * (value, key, object).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to iterate over.","     * @param {Function|Object|string} [iteratee=_.identity] The function invoked","     *  per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Object} Returns the new mapped object.","     * @example","     *","     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {","     *   return n * 3;","     * });","     * // => { 'a': 3, 'b': 6 }","     *","     * var users = {","     *   'fred':    { 'user': 'fred',    'age': 40 },","     *   'pebbles': { 'user': 'pebbles', 'age': 1 }","     * };","     *","     * // using the `_.property` callback shorthand","     * _.mapValues(users, 'age');","     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)","     */","    var mapValues = createObjectMapper();","","    /**","     * The opposite of `_.pick`; this method creates an object composed of the","     * own and inherited enumerable properties of `object` that are not omitted.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The source object.","     * @param {Function|...(string|string[])} [predicate] The function invoked per","     *  iteration or property names to omit, specified as individual property","     *  names or arrays of property names.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Object} Returns the new object.","     * @example","     *","     * var object = { 'user': 'fred', 'age': 40 };","     *","     * _.omit(object, 'age');","     * // => { 'user': 'fred' }","     *","     * _.omit(object, _.isNumber);","     * // => { 'user': 'fred' }","     */","    var omit = restParam(function(object, props) {","      if (object == null) {","        return {};","      }","      if (typeof props[0] != 'function') {","        var props = arrayMap(baseFlatten(props), String);","        return pickByArray(object, baseDifference(keysIn(object), props));","      }","      var predicate = bindCallback(props[0], props[1], 3);","      return pickByCallback(object, function(value, key, object) {","        return !predicate(value, key, object);","      });","    });","","    /**","     * Creates a two dimensional array of the key-value pairs for `object`,","     * e.g. `[[key1, value1], [key2, value2]]`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to query.","     * @returns {Array} Returns the new array of key-value pairs.","     * @example","     *","     * _.pairs({ 'barney': 36, 'fred': 40 });","     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)","     */","    function pairs(object) {","      object = toObject(object);","","      var index = -1,","          props = keys(object),","          length = props.length,","          result = Array(length);","","      while (++index < length) {","        var key = props[index];","        result[index] = [key, object[key]];","      }","      return result;","    }","","    /**","     * Creates an object composed of the picked `object` properties. Property","     * names may be specified as individual arguments or as arrays of property","     * names. If `predicate` is provided it is invoked for each property of `object`","     * picking the properties `predicate` returns truthy for. The predicate is","     * bound to `thisArg` and invoked with three arguments: (value, key, object).","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The source object.","     * @param {Function|...(string|string[])} [predicate] The function invoked per","     *  iteration or property names to pick, specified as individual property","     *  names or arrays of property names.","     * @param {*} [thisArg] The `this` binding of `predicate`.","     * @returns {Object} Returns the new object.","     * @example","     *","     * var object = { 'user': 'fred', 'age': 40 };","     *","     * _.pick(object, 'user');","     * // => { 'user': 'fred' }","     *","     * _.pick(object, _.isString);","     * // => { 'user': 'fred' }","     */","    var pick = restParam(function(object, props) {","      if (object == null) {","        return {};","      }","      return typeof props[0] == 'function'","        ? pickByCallback(object, bindCallback(props[0], props[1], 3))","        : pickByArray(object, baseFlatten(props));","    });","","    /**","     * This method is like `_.get` except that if the resolved value is a function","     * it is invoked with the `this` binding of its parent object and its result","     * is returned.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to query.","     * @param {Array|string} path The path of the property to resolve.","     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.","     * @returns {*} Returns the resolved value.","     * @example","     *","     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };","     *","     * _.result(object, 'a[0].b.c1');","     * // => 3","     *","     * _.result(object, 'a[0].b.c2');","     * // => 4","     *","     * _.result(object, 'a.b.c', 'default');","     * // => 'default'","     *","     * _.result(object, 'a.b.c', _.constant('default'));","     * // => 'default'","     */","    function result(object, path, defaultValue) {","      var result = object == null ? undefined : object[path];","      if (result === undefined) {","        if (object != null && !isKey(path, object)) {","          path = toPath(path);","          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));","          result = object == null ? undefined : object[last(path)];","        }","        result = result === undefined ? defaultValue : result;","      }","      return isFunction(result) ? result.call(object) : result;","    }","","    /**","     * Sets the property value of `path` on `object`. If a portion of `path`","     * does not exist it is created.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to augment.","     * @param {Array|string} path The path of the property to set.","     * @param {*} value The value to set.","     * @returns {Object} Returns `object`.","     * @example","     *","     * var object = { 'a': [{ 'b': { 'c': 3 } }] };","     *","     * _.set(object, 'a[0].b.c', 4);","     * console.log(object.a[0].b.c);","     * // => 4","     *","     * _.set(object, 'x[0].y.z', 5);","     * console.log(object.x[0].y.z);","     * // => 5","     */","    function set(object, path, value) {","      if (object == null) {","        return object;","      }","      var pathKey = (path + '');","      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);","","      var index = -1,","          length = path.length,","          lastIndex = length - 1,","          nested = object;","","      while (nested != null && ++index < length) {","        var key = path[index];","        if (isObject(nested)) {","          if (index == lastIndex) {","            nested[key] = value;","          } else if (nested[key] == null) {","            nested[key] = isIndex(path[index + 1]) ? [] : {};","          }","        }","        nested = nested[key];","      }","      return object;","    }","","    /**","     * An alternative to `_.reduce`; this method transforms `object` to a new","     * `accumulator` object which is the result of running each of its own enumerable","     * properties through `iteratee`, with each invocation potentially mutating","     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked","     * with four arguments: (accumulator, value, key, object). Iteratee functions","     * may exit iteration early by explicitly returning `false`.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Array|Object} object The object to iterate over.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [accumulator] The custom accumulator value.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {*} Returns the accumulated value.","     * @example","     *","     * _.transform([2, 3, 4], function(result, n) {","     *   result.push(n *= n);","     *   return n % 2 == 0;","     * });","     * // => [4, 9]","     *","     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {","     *   result[key] = n * 3;","     * });","     * // => { 'a': 3, 'b': 6 }","     */","    function transform(object, iteratee, accumulator, thisArg) {","      var isArr = isArray(object) || isTypedArray(object);","      iteratee = getCallback(iteratee, thisArg, 4);","","      if (accumulator == null) {","        if (isArr || isObject(object)) {","          var Ctor = object.constructor;","          if (isArr) {","            accumulator = isArray(object) ? new Ctor : [];","          } else {","            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);","          }","        } else {","          accumulator = {};","        }","      }","      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {","        return iteratee(accumulator, value, index, object);","      });","      return accumulator;","    }","","    /**","     * Creates an array of the own enumerable property values of `object`.","     *","     * **Note:** Non-object values are coerced to objects.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to query.","     * @returns {Array} Returns the array of property values.","     * @example","     *","     * function Foo() {","     *   this.a = 1;","     *   this.b = 2;","     * }","     *","     * Foo.prototype.c = 3;","     *","     * _.values(new Foo);","     * // => [1, 2] (iteration order is not guaranteed)","     *","     * _.values('hi');","     * // => ['h', 'i']","     */","    function values(object) {","      return baseValues(object, keys(object));","    }","","    /**","     * Creates an array of the own and inherited enumerable property values","     * of `object`.","     *","     * **Note:** Non-object values are coerced to objects.","     *","     * @static","     * @memberOf _","     * @category Object","     * @param {Object} object The object to query.","     * @returns {Array} Returns the array of property values.","     * @example","     *","     * function Foo() {","     *   this.a = 1;","     *   this.b = 2;","     * }","     *","     * Foo.prototype.c = 3;","     *","     * _.valuesIn(new Foo);","     * // => [1, 2, 3] (iteration order is not guaranteed)","     */","    function valuesIn(object) {","      return baseValues(object, keysIn(object));","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Checks if `n` is between `start` and up to but not including, `end`. If","     * `end` is not specified it is set to `start` with `start` then set to `0`.","     *","     * @static","     * @memberOf _","     * @category Number","     * @param {number} n The number to check.","     * @param {number} [start=0] The start of the range.","     * @param {number} end The end of the range.","     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.","     * @example","     *","     * _.inRange(3, 2, 4);","     * // => true","     *","     * _.inRange(4, 8);","     * // => true","     *","     * _.inRange(4, 2);","     * // => false","     *","     * _.inRange(2, 2);","     * // => false","     *","     * _.inRange(1.2, 2);","     * // => true","     *","     * _.inRange(5.2, 4);","     * // => false","     */","    function inRange(value, start, end) {","      start = +start || 0;","      if (end === undefined) {","        end = start;","        start = 0;","      } else {","        end = +end || 0;","      }","      return value >= nativeMin(start, end) && value < nativeMax(start, end);","    }","","    /**","     * Produces a random number between `min` and `max` (inclusive). If only one","     * argument is provided a number between `0` and the given number is returned.","     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point","     * number is returned instead of an integer.","     *","     * @static","     * @memberOf _","     * @category Number","     * @param {number} [min=0] The minimum possible value.","     * @param {number} [max=1] The maximum possible value.","     * @param {boolean} [floating] Specify returning a floating-point number.","     * @returns {number} Returns the random number.","     * @example","     *","     * _.random(0, 5);","     * // => an integer between 0 and 5","     *","     * _.random(5);","     * // => also an integer between 0 and 5","     *","     * _.random(5, true);","     * // => a floating-point number between 0 and 5","     *","     * _.random(1.2, 5.2);","     * // => a floating-point number between 1.2 and 5.2","     */","    function random(min, max, floating) {","      if (floating && isIterateeCall(min, max, floating)) {","        max = floating = undefined;","      }","      var noMin = min == null,","          noMax = max == null;","","      if (floating == null) {","        if (noMax && typeof min == 'boolean') {","          floating = min;","          min = 1;","        }","        else if (typeof max == 'boolean') {","          floating = max;","          noMax = true;","        }","      }","      if (noMin && noMax) {","        max = 1;","        noMax = false;","      }","      min = +min || 0;","      if (noMax) {","        max = min;","        min = 0;","      } else {","        max = +max || 0;","      }","      if (floating || min % 1 || max % 1) {","        var rand = nativeRandom();","        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);","      }","      return baseRandom(min, max);","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to convert.","     * @returns {string} Returns the camel cased string.","     * @example","     *","     * _.camelCase('Foo Bar');","     * // => 'fooBar'","     *","     * _.camelCase('--foo-bar');","     * // => 'fooBar'","     *","     * _.camelCase('__foo_bar__');","     * // => 'fooBar'","     */","    var camelCase = createCompounder(function(result, word, index) {","      word = word.toLowerCase();","      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);","    });","","    /**","     * Capitalizes the first character of `string`.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to capitalize.","     * @returns {string} Returns the capitalized string.","     * @example","     *","     * _.capitalize('fred');","     * // => 'Fred'","     */","    function capitalize(string) {","      string = baseToString(string);","      return string && (string.charAt(0).toUpperCase() + string.slice(1));","    }","","    /**","     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)","     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to deburr.","     * @returns {string} Returns the deburred string.","     * @example","     *","     * _.deburr('déjà vu');","     * // => 'deja vu'","     */","    function deburr(string) {","      string = baseToString(string);","      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');","    }","","    /**","     * Checks if `string` ends with the given target string.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to search.","     * @param {string} [target] The string to search for.","     * @param {number} [position=string.length] The position to search from.","     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.","     * @example","     *","     * _.endsWith('abc', 'c');","     * // => true","     *","     * _.endsWith('abc', 'b');","     * // => false","     *","     * _.endsWith('abc', 'b', 2);","     * // => true","     */","    function endsWith(string, target, position) {","      string = baseToString(string);","      target = (target + '');","","      var length = string.length;","      position = position === undefined","        ? length","        : nativeMin(position < 0 ? 0 : (+position || 0), length);","","      position -= target.length;","      return position >= 0 && string.indexOf(target, position) == position;","    }","","    /**","     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to","     * their corresponding HTML entities.","     *","     * **Note:** No other characters are escaped. To escape additional characters","     * use a third-party library like [_he_](https://mths.be/he).","     *","     * Though the \">\" character is escaped for symmetry, characters like","     * \">\" and \"/\" don't need escaping in HTML and have no special meaning","     * unless they're part of a tag or unquoted attribute value.","     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)","     * (under \"semi-related fun fact\") for more details.","     *","     * Backticks are escaped because in Internet Explorer < 9, they can break out","     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),","     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and","     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)","     * for more details.","     *","     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)","     * to reduce XSS vectors.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to escape.","     * @returns {string} Returns the escaped string.","     * @example","     *","     * _.escape('fred, barney, & pebbles');","     * // => 'fred, barney, &amp; pebbles'","     */","    function escape(string) {","      // Reset `lastIndex` because in IE < 9 `String#replace` does not.","      string = baseToString(string);","      return (string && reHasUnescapedHtml.test(string))","        ? string.replace(reUnescapedHtml, escapeHtmlChar)","        : string;","    }","","    /**","     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",","     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to escape.","     * @returns {string} Returns the escaped string.","     * @example","     *","     * _.escapeRegExp('[lodash](https://lodash.com/)');","     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'","     */","    function escapeRegExp(string) {","      string = baseToString(string);","      return (string && reHasRegExpChars.test(string))","        ? string.replace(reRegExpChars, escapeRegExpChar)","        : (string || '(?:)');","    }","","    /**","     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to convert.","     * @returns {string} Returns the kebab cased string.","     * @example","     *","     * _.kebabCase('Foo Bar');","     * // => 'foo-bar'","     *","     * _.kebabCase('fooBar');","     * // => 'foo-bar'","     *","     * _.kebabCase('__foo_bar__');","     * // => 'foo-bar'","     */","    var kebabCase = createCompounder(function(result, word, index) {","      return result + (index ? '-' : '') + word.toLowerCase();","    });","","    /**","     * Pads `string` on the left and right sides if it's shorter than `length`.","     * Padding characters are truncated if they can't be evenly divided by `length`.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to pad.","     * @param {number} [length=0] The padding length.","     * @param {string} [chars=' '] The string used as padding.","     * @returns {string} Returns the padded string.","     * @example","     *","     * _.pad('abc', 8);","     * // => '  abc   '","     *","     * _.pad('abc', 8, '_-');","     * // => '_-abc_-_'","     *","     * _.pad('abc', 3);","     * // => 'abc'","     */","    function pad(string, length, chars) {","      string = baseToString(string);","      length = +length;","","      var strLength = string.length;","      if (strLength >= length || !nativeIsFinite(length)) {","        return string;","      }","      var mid = (length - strLength) / 2,","          leftLength = nativeFloor(mid),","          rightLength = nativeCeil(mid);","","      chars = createPadding('', rightLength, chars);","      return chars.slice(0, leftLength) + string + chars;","    }","","    /**","     * Pads `string` on the left side if it's shorter than `length`. Padding","     * characters are truncated if they exceed `length`.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to pad.","     * @param {number} [length=0] The padding length.","     * @param {string} [chars=' '] The string used as padding.","     * @returns {string} Returns the padded string.","     * @example","     *","     * _.padLeft('abc', 6);","     * // => '   abc'","     *","     * _.padLeft('abc', 6, '_-');","     * // => '_-_abc'","     *","     * _.padLeft('abc', 3);","     * // => 'abc'","     */","    var padLeft = createPadDir();","","    /**","     * Pads `string` on the right side if it's shorter than `length`. Padding","     * characters are truncated if they exceed `length`.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to pad.","     * @param {number} [length=0] The padding length.","     * @param {string} [chars=' '] The string used as padding.","     * @returns {string} Returns the padded string.","     * @example","     *","     * _.padRight('abc', 6);","     * // => 'abc   '","     *","     * _.padRight('abc', 6, '_-');","     * // => 'abc_-_'","     *","     * _.padRight('abc', 3);","     * // => 'abc'","     */","    var padRight = createPadDir(true);","","    /**","     * Converts `string` to an integer of the specified radix. If `radix` is","     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,","     * in which case a `radix` of `16` is used.","     *","     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)","     * of `parseInt`.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} string The string to convert.","     * @param {number} [radix] The radix to interpret `value` by.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {number} Returns the converted integer.","     * @example","     *","     * _.parseInt('08');","     * // => 8","     *","     * _.map(['6', '08', '10'], _.parseInt);","     * // => [6, 8, 10]","     */","    function parseInt(string, radix, guard) {","      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.","      // Chrome fails to trim leading <BOM> whitespace characters.","      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.","      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {","        radix = 0;","      } else if (radix) {","        radix = +radix;","      }","      string = trim(string);","      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));","    }","","    /**","     * Repeats the given string `n` times.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to repeat.","     * @param {number} [n=0] The number of times to repeat the string.","     * @returns {string} Returns the repeated string.","     * @example","     *","     * _.repeat('*', 3);","     * // => '***'","     *","     * _.repeat('abc', 2);","     * // => 'abcabc'","     *","     * _.repeat('abc', 0);","     * // => ''","     */","    function repeat(string, n) {","      var result = '';","      string = baseToString(string);","      n = +n;","      if (n < 1 || !string || !nativeIsFinite(n)) {","        return result;","      }","      // Leverage the exponentiation by squaring algorithm for a faster repeat.","      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.","      do {","        if (n % 2) {","          result += string;","        }","        n = nativeFloor(n / 2);","        string += string;","      } while (n);","","      return result;","    }","","    /**","     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to convert.","     * @returns {string} Returns the snake cased string.","     * @example","     *","     * _.snakeCase('Foo Bar');","     * // => 'foo_bar'","     *","     * _.snakeCase('fooBar');","     * // => 'foo_bar'","     *","     * _.snakeCase('--foo-bar');","     * // => 'foo_bar'","     */","    var snakeCase = createCompounder(function(result, word, index) {","      return result + (index ? '_' : '') + word.toLowerCase();","    });","","    /**","     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to convert.","     * @returns {string} Returns the start cased string.","     * @example","     *","     * _.startCase('--foo-bar');","     * // => 'Foo Bar'","     *","     * _.startCase('fooBar');","     * // => 'Foo Bar'","     *","     * _.startCase('__foo_bar__');","     * // => 'Foo Bar'","     */","    var startCase = createCompounder(function(result, word, index) {","      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));","    });","","    /**","     * Checks if `string` starts with the given target string.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to search.","     * @param {string} [target] The string to search for.","     * @param {number} [position=0] The position to search from.","     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.","     * @example","     *","     * _.startsWith('abc', 'a');","     * // => true","     *","     * _.startsWith('abc', 'b');","     * // => false","     *","     * _.startsWith('abc', 'b', 1);","     * // => true","     */","    function startsWith(string, target, position) {","      string = baseToString(string);","      position = position == null","        ? 0","        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);","","      return string.lastIndexOf(target, position) == position;","    }","","    /**","     * Creates a compiled template function that can interpolate data properties","     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in","     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data","     * properties may be accessed as free variables in the template. If a setting","     * object is provided it takes precedence over `_.templateSettings` values.","     *","     * **Note:** In the development build `_.template` utilizes","     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)","     * for easier debugging.","     *","     * For more information on precompiling templates see","     * [lodash's custom builds documentation](https://lodash.com/custom-builds).","     *","     * For more information on Chrome extension sandboxes see","     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The template string.","     * @param {Object} [options] The options object.","     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.","     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.","     * @param {Object} [options.imports] An object to import into the template as free variables.","     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.","     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.","     * @param {string} [options.variable] The data object variable name.","     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.","     * @returns {Function} Returns the compiled template function.","     * @example","     *","     * // using the \"interpolate\" delimiter to create a compiled template","     * var compiled = _.template('hello <%= user %>!');","     * compiled({ 'user': 'fred' });","     * // => 'hello fred!'","     *","     * // using the HTML \"escape\" delimiter to escape data property values","     * var compiled = _.template('<b><%- value %></b>');","     * compiled({ 'value': '<script>' });","     * // => '<b>&lt;script&gt;</b>'","     *","     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML","     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');","     * compiled({ 'users': ['fred', 'barney'] });","     * // => '<li>fred</li><li>barney</li>'","     *","     * // using the internal `print` function in \"evaluate\" delimiters","     * var compiled = _.template('<% print(\"hello \" + user); %>!');","     * compiled({ 'user': 'barney' });","     * // => 'hello barney!'","     *","     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter","     * var compiled = _.template('hello ${ user }!');","     * compiled({ 'user': 'pebbles' });","     * // => 'hello pebbles!'","     *","     * // using custom template delimiters","     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;","     * var compiled = _.template('hello {{ user }}!');","     * compiled({ 'user': 'mustache' });","     * // => 'hello mustache!'","     *","     * // using backslashes to treat delimiters as plain text","     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');","     * compiled({ 'value': 'ignored' });","     * // => '<%- value %>'","     *","     * // using the `imports` option to import `jQuery` as `jq`","     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';","     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });","     * compiled({ 'users': ['fred', 'barney'] });","     * // => '<li>fred</li><li>barney</li>'","     *","     * // using the `sourceURL` option to specify a custom sourceURL for the template","     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });","     * compiled(data);","     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector","     *","     * // using the `variable` option to ensure a with-statement isn't used in the compiled template","     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });","     * compiled.source;","     * // => function(data) {","     * //   var __t, __p = '';","     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';","     * //   return __p;","     * // }","     *","     * // using the `source` property to inline compiled templates for meaningful","     * // line numbers in error messages and a stack trace","     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\","     *   var JST = {\\","     *     \"main\": ' + _.template(mainText).source + '\\","     *   };\\","     * ');","     */","    function template(string, options, otherOptions) {","      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)","      // and Laura Doktorova's doT.js (https://github.com/olado/doT).","      var settings = lodash.templateSettings;","","      if (otherOptions && isIterateeCall(string, options, otherOptions)) {","        options = otherOptions = undefined;","      }","      string = baseToString(string);","      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);","","      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),","          importsKeys = keys(imports),","          importsValues = baseValues(imports, importsKeys);","","      var isEscaping,","          isEvaluating,","          index = 0,","          interpolate = options.interpolate || reNoMatch,","          source = \"__p += '\";","","      // Compile the regexp to match each delimiter.","      var reDelimiters = RegExp(","        (options.escape || reNoMatch).source + '|' +","        interpolate.source + '|' +","        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +","        (options.evaluate || reNoMatch).source + '|$'","      , 'g');","","      // Use a sourceURL for easier debugging.","      var sourceURL = '//# sourceURL=' +","        ('sourceURL' in options","          ? options.sourceURL","          : ('lodash.templateSources[' + (++templateCounter) + ']')","        ) + '\\n';","","      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {","        interpolateValue || (interpolateValue = esTemplateValue);","","        // Escape characters that can't be included in string literals.","        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);","","        // Replace delimiters with snippets.","        if (escapeValue) {","          isEscaping = true;","          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";","        }","        if (evaluateValue) {","          isEvaluating = true;","          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";","        }","        if (interpolateValue) {","          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";","        }","        index = offset + match.length;","","        // The JS engine embedded in Adobe products requires returning the `match`","        // string in order to produce the correct `offset` value.","        return match;","      });","","      source += \"';\\n\";","","      // If `variable` is not specified wrap a with-statement around the generated","      // code to add the data object to the top of the scope chain.","      var variable = options.variable;","      if (!variable) {","        source = 'with (obj) {\\n' + source + '\\n}\\n';","      }","      // Cleanup code by stripping empty strings.","      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)","        .replace(reEmptyStringMiddle, '$1')","        .replace(reEmptyStringTrailing, '$1;');","","      // Frame code as the function body.","      source = 'function(' + (variable || 'obj') + ') {\\n' +","        (variable","          ? ''","          : 'obj || (obj = {});\\n'","        ) +","        \"var __t, __p = ''\" +","        (isEscaping","           ? ', __e = _.escape'","           : ''","        ) +","        (isEvaluating","          ? ', __j = Array.prototype.join;\\n' +","            \"function print() { __p += __j.call(arguments, '') }\\n\"","          : ';\\n'","        ) +","        source +","        'return __p\\n}';","","      var result = attempt(function() {","        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);","      });","","      // Provide the compiled function's source by its `toString` method or","      // the `source` property as a convenience for inlining compiled templates.","      result.source = source;","      if (isError(result)) {","        throw result;","      }","      return result;","    }","","    /**","     * Removes leading and trailing whitespace or specified characters from `string`.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to trim.","     * @param {string} [chars=whitespace] The characters to trim.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {string} Returns the trimmed string.","     * @example","     *","     * _.trim('  abc  ');","     * // => 'abc'","     *","     * _.trim('-_-abc-_-', '_-');","     * // => 'abc'","     *","     * _.map(['  foo  ', '  bar  '], _.trim);","     * // => ['foo', 'bar']","     */","    function trim(string, chars, guard) {","      var value = string;","      string = baseToString(string);","      if (!string) {","        return string;","      }","      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {","        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);","      }","      chars = (chars + '');","      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);","    }","","    /**","     * Removes leading whitespace or specified characters from `string`.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to trim.","     * @param {string} [chars=whitespace] The characters to trim.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {string} Returns the trimmed string.","     * @example","     *","     * _.trimLeft('  abc  ');","     * // => 'abc  '","     *","     * _.trimLeft('-_-abc-_-', '_-');","     * // => 'abc-_-'","     */","    function trimLeft(string, chars, guard) {","      var value = string;","      string = baseToString(string);","      if (!string) {","        return string;","      }","      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {","        return string.slice(trimmedLeftIndex(string));","      }","      return string.slice(charsLeftIndex(string, (chars + '')));","    }","","    /**","     * Removes trailing whitespace or specified characters from `string`.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to trim.","     * @param {string} [chars=whitespace] The characters to trim.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {string} Returns the trimmed string.","     * @example","     *","     * _.trimRight('  abc  ');","     * // => '  abc'","     *","     * _.trimRight('-_-abc-_-', '_-');","     * // => '-_-abc'","     */","    function trimRight(string, chars, guard) {","      var value = string;","      string = baseToString(string);","      if (!string) {","        return string;","      }","      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {","        return string.slice(0, trimmedRightIndex(string) + 1);","      }","      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);","    }","","    /**","     * Truncates `string` if it's longer than the given maximum string length.","     * The last characters of the truncated string are replaced with the omission","     * string which defaults to \"...\".","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to truncate.","     * @param {Object|number} [options] The options object or maximum string length.","     * @param {number} [options.length=30] The maximum string length.","     * @param {string} [options.omission='...'] The string to indicate text is omitted.","     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {string} Returns the truncated string.","     * @example","     *","     * _.trunc('hi-diddly-ho there, neighborino');","     * // => 'hi-diddly-ho there, neighbo...'","     *","     * _.trunc('hi-diddly-ho there, neighborino', 24);","     * // => 'hi-diddly-ho there, n...'","     *","     * _.trunc('hi-diddly-ho there, neighborino', {","     *   'length': 24,","     *   'separator': ' '","     * });","     * // => 'hi-diddly-ho there,...'","     *","     * _.trunc('hi-diddly-ho there, neighborino', {","     *   'length': 24,","     *   'separator': /,? +/","     * });","     * // => 'hi-diddly-ho there...'","     *","     * _.trunc('hi-diddly-ho there, neighborino', {","     *   'omission': ' [...]'","     * });","     * // => 'hi-diddly-ho there, neig [...]'","     */","    function trunc(string, options, guard) {","      if (guard && isIterateeCall(string, options, guard)) {","        options = undefined;","      }","      var length = DEFAULT_TRUNC_LENGTH,","          omission = DEFAULT_TRUNC_OMISSION;","","      if (options != null) {","        if (isObject(options)) {","          var separator = 'separator' in options ? options.separator : separator;","          length = 'length' in options ? (+options.length || 0) : length;","          omission = 'omission' in options ? baseToString(options.omission) : omission;","        } else {","          length = +options || 0;","        }","      }","      string = baseToString(string);","      if (length >= string.length) {","        return string;","      }","      var end = length - omission.length;","      if (end < 1) {","        return omission;","      }","      var result = string.slice(0, end);","      if (separator == null) {","        return result + omission;","      }","      if (isRegExp(separator)) {","        if (string.slice(end).search(separator)) {","          var match,","              newEnd,","              substring = string.slice(0, end);","","          if (!separator.global) {","            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');","          }","          separator.lastIndex = 0;","          while ((match = separator.exec(substring))) {","            newEnd = match.index;","          }","          result = result.slice(0, newEnd == null ? end : newEnd);","        }","      } else if (string.indexOf(separator, end) != end) {","        var index = result.lastIndexOf(separator);","        if (index > -1) {","          result = result.slice(0, index);","        }","      }","      return result + omission;","    }","","    /**","     * The inverse of `_.escape`; this method converts the HTML entities","     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their","     * corresponding characters.","     *","     * **Note:** No other HTML entities are unescaped. To unescape additional HTML","     * entities use a third-party library like [_he_](https://mths.be/he).","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to unescape.","     * @returns {string} Returns the unescaped string.","     * @example","     *","     * _.unescape('fred, barney, &amp; pebbles');","     * // => 'fred, barney, & pebbles'","     */","    function unescape(string) {","      string = baseToString(string);","      return (string && reHasEscapedHtml.test(string))","        ? string.replace(reEscapedHtml, unescapeHtmlChar)","        : string;","    }","","    /**","     * Splits `string` into an array of its words.","     *","     * @static","     * @memberOf _","     * @category String","     * @param {string} [string=''] The string to inspect.","     * @param {RegExp|string} [pattern] The pattern to match words.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Array} Returns the words of `string`.","     * @example","     *","     * _.words('fred, barney, & pebbles');","     * // => ['fred', 'barney', 'pebbles']","     *","     * _.words('fred, barney, & pebbles', /[^, ]+/g);","     * // => ['fred', 'barney', '&', 'pebbles']","     */","    function words(string, pattern, guard) {","      if (guard && isIterateeCall(string, pattern, guard)) {","        pattern = undefined;","      }","      string = baseToString(string);","      return string.match(pattern || reWords) || [];","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Attempts to invoke `func`, returning either the result or the caught error","     * object. Any additional arguments are provided to `func` when it is invoked.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {Function} func The function to attempt.","     * @returns {*} Returns the `func` result or error object.","     * @example","     *","     * // avoid throwing errors for invalid selectors","     * var elements = _.attempt(function(selector) {","     *   return document.querySelectorAll(selector);","     * }, '>_>');","     *","     * if (_.isError(elements)) {","     *   elements = [];","     * }","     */","    var attempt = restParam(function(func, args) {","      try {","        return func.apply(undefined, args);","      } catch(e) {","        return isError(e) ? e : new Error(e);","      }","    });","","    /**","     * Creates a function that invokes `func` with the `this` binding of `thisArg`","     * and arguments of the created function. If `func` is a property name the","     * created callback returns the property value for a given element. If `func`","     * is an object the created callback returns `true` for elements that contain","     * the equivalent object properties, otherwise it returns `false`.","     *","     * @static","     * @memberOf _","     * @alias iteratee","     * @category Utility","     * @param {*} [func=_.identity] The value to convert to a callback.","     * @param {*} [thisArg] The `this` binding of `func`.","     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.","     * @returns {Function} Returns the callback.","     * @example","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36 },","     *   { 'user': 'fred',   'age': 40 }","     * ];","     *","     * // wrap to create custom callback shorthands","     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {","     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);","     *   if (!match) {","     *     return callback(func, thisArg);","     *   }","     *   return function(object) {","     *     return match[2] == 'gt'","     *       ? object[match[1]] > match[3]","     *       : object[match[1]] < match[3];","     *   };","     * });","     *","     * _.filter(users, 'age__gt36');","     * // => [{ 'user': 'fred', 'age': 40 }]","     */","    function callback(func, thisArg, guard) {","      if (guard && isIterateeCall(func, thisArg, guard)) {","        thisArg = undefined;","      }","      return isObjectLike(func)","        ? matches(func)","        : baseCallback(func, thisArg);","    }","","    /**","     * Creates a function that returns `value`.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {*} value The value to return from the new function.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var object = { 'user': 'fred' };","     * var getter = _.constant(object);","     *","     * getter() === object;","     * // => true","     */","    function constant(value) {","      return function() {","        return value;","      };","    }","","    /**","     * This method returns the first argument provided to it.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {*} value Any value.","     * @returns {*} Returns `value`.","     * @example","     *","     * var object = { 'user': 'fred' };","     *","     * _.identity(object) === object;","     * // => true","     */","    function identity(value) {","      return value;","    }","","    /**","     * Creates a function that performs a deep comparison between a given object","     * and `source`, returning `true` if the given object has equivalent property","     * values, else `false`.","     *","     * **Note:** This method supports comparing arrays, booleans, `Date` objects,","     * numbers, `Object` objects, regexes, and strings. Objects are compared by","     * their own, not inherited, enumerable properties. For comparing a single","     * own or inherited property value see `_.matchesProperty`.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {Object} source The object of property values to match.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36, 'active': true },","     *   { 'user': 'fred',   'age': 40, 'active': false }","     * ];","     *","     * _.filter(users, _.matches({ 'age': 40, 'active': false }));","     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]","     */","    function matches(source) {","      return baseMatches(baseClone(source, true));","    }","","    /**","     * Creates a function that compares the property value of `path` on a given","     * object to `value`.","     *","     * **Note:** This method supports comparing arrays, booleans, `Date` objects,","     * numbers, `Object` objects, regexes, and strings. Objects are compared by","     * their own, not inherited, enumerable properties.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {Array|string} path The path of the property to get.","     * @param {*} srcValue The value to match.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var users = [","     *   { 'user': 'barney' },","     *   { 'user': 'fred' }","     * ];","     *","     * _.find(users, _.matchesProperty('user', 'fred'));","     * // => { 'user': 'fred' }","     */","    function matchesProperty(path, srcValue) {","      return baseMatchesProperty(path, baseClone(srcValue, true));","    }","","    /**","     * Creates a function that invokes the method at `path` on a given object.","     * Any additional arguments are provided to the invoked method.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {Array|string} path The path of the method to invoke.","     * @param {...*} [args] The arguments to invoke the method with.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var objects = [","     *   { 'a': { 'b': { 'c': _.constant(2) } } },","     *   { 'a': { 'b': { 'c': _.constant(1) } } }","     * ];","     *","     * _.map(objects, _.method('a.b.c'));","     * // => [2, 1]","     *","     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');","     * // => [1, 2]","     */","    var method = restParam(function(path, args) {","      return function(object) {","        return invokePath(object, path, args);","      };","    });","","    /**","     * The opposite of `_.method`; this method creates a function that invokes","     * the method at a given path on `object`. Any additional arguments are","     * provided to the invoked method.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {Object} object The object to query.","     * @param {...*} [args] The arguments to invoke the method with.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var array = _.times(3, _.constant),","     *     object = { 'a': array, 'b': array, 'c': array };","     *","     * _.map(['a[2]', 'c[0]'], _.methodOf(object));","     * // => [2, 0]","     *","     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));","     * // => [2, 0]","     */","    var methodOf = restParam(function(object, args) {","      return function(path) {","        return invokePath(object, path, args);","      };","    });","","    /**","     * Adds all own enumerable function properties of a source object to the","     * destination object. If `object` is a function then methods are added to","     * its prototype as well.","     *","     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to","     * avoid conflicts caused by modifying the original.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {Function|Object} [object=lodash] The destination object.","     * @param {Object} source The object of functions to add.","     * @param {Object} [options] The options object.","     * @param {boolean} [options.chain=true] Specify whether the functions added","     *  are chainable.","     * @returns {Function|Object} Returns `object`.","     * @example","     *","     * function vowels(string) {","     *   return _.filter(string, function(v) {","     *     return /[aeiou]/i.test(v);","     *   });","     * }","     *","     * _.mixin({ 'vowels': vowels });","     * _.vowels('fred');","     * // => ['e']","     *","     * _('fred').vowels().value();","     * // => ['e']","     *","     * _.mixin({ 'vowels': vowels }, { 'chain': false });","     * _('fred').vowels();","     * // => ['e']","     */","    function mixin(object, source, options) {","      if (options == null) {","        var isObj = isObject(source),","            props = isObj ? keys(source) : undefined,","            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;","","        if (!(methodNames ? methodNames.length : isObj)) {","          methodNames = false;","          options = source;","          source = object;","          object = this;","        }","      }","      if (!methodNames) {","        methodNames = baseFunctions(source, keys(source));","      }","      var chain = true,","          index = -1,","          isFunc = isFunction(object),","          length = methodNames.length;","","      if (options === false) {","        chain = false;","      } else if (isObject(options) && 'chain' in options) {","        chain = options.chain;","      }","      while (++index < length) {","        var methodName = methodNames[index],","            func = source[methodName];","","        object[methodName] = func;","        if (isFunc) {","          object.prototype[methodName] = (function(func) {","            return function() {","              var chainAll = this.__chain__;","              if (chain || chainAll) {","                var result = object(this.__wrapped__),","                    actions = result.__actions__ = arrayCopy(this.__actions__);","","                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });","                result.__chain__ = chainAll;","                return result;","              }","              return func.apply(object, arrayPush([this.value()], arguments));","            };","          }(func));","        }","      }","      return object;","    }","","    /**","     * Reverts the `_` variable to its previous value and returns a reference to","     * the `lodash` function.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @returns {Function} Returns the `lodash` function.","     * @example","     *","     * var lodash = _.noConflict();","     */","    function noConflict() {","      root._ = oldDash;","      return this;","    }","","    /**","     * A no-operation function that returns `undefined` regardless of the","     * arguments it receives.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @example","     *","     * var object = { 'user': 'fred' };","     *","     * _.noop(object) === undefined;","     * // => true","     */","    function noop() {","      // No operation performed.","    }","","    /**","     * Creates a function that returns the property value at `path` on a","     * given object.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {Array|string} path The path of the property to get.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var objects = [","     *   { 'a': { 'b': { 'c': 2 } } },","     *   { 'a': { 'b': { 'c': 1 } } }","     * ];","     *","     * _.map(objects, _.property('a.b.c'));","     * // => [2, 1]","     *","     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');","     * // => [1, 2]","     */","    function property(path) {","      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);","    }","","    /**","     * The opposite of `_.property`; this method creates a function that returns","     * the property value at a given path on `object`.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {Object} object The object to query.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var array = [0, 1, 2],","     *     object = { 'a': array, 'b': array, 'c': array };","     *","     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));","     * // => [2, 0]","     *","     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));","     * // => [2, 0]","     */","    function propertyOf(object) {","      return function(path) {","        return baseGet(object, toPath(path), path + '');","      };","    }","","    /**","     * Creates an array of numbers (positive and/or negative) progressing from","     * `start` up to, but not including, `end`. If `end` is not specified it is","     * set to `start` with `start` then set to `0`. If `end` is less than `start`","     * a zero-length range is created unless a negative `step` is specified.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {number} [start=0] The start of the range.","     * @param {number} end The end of the range.","     * @param {number} [step=1] The value to increment or decrement by.","     * @returns {Array} Returns the new array of numbers.","     * @example","     *","     * _.range(4);","     * // => [0, 1, 2, 3]","     *","     * _.range(1, 5);","     * // => [1, 2, 3, 4]","     *","     * _.range(0, 20, 5);","     * // => [0, 5, 10, 15]","     *","     * _.range(0, -4, -1);","     * // => [0, -1, -2, -3]","     *","     * _.range(1, 4, 0);","     * // => [1, 1, 1]","     *","     * _.range(0);","     * // => []","     */","    function range(start, end, step) {","      if (step && isIterateeCall(start, end, step)) {","        end = step = undefined;","      }","      start = +start || 0;","      step = step == null ? 1 : (+step || 0);","","      if (end == null) {","        end = start;","        start = 0;","      } else {","        end = +end || 0;","      }","      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.","      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.","      var index = -1,","          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),","          result = Array(length);","","      while (++index < length) {","        result[index] = start;","        start += step;","      }","      return result;","    }","","    /**","     * Invokes the iteratee function `n` times, returning an array of the results","     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with","     * one argument; (index).","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {number} n The number of times to invoke `iteratee`.","     * @param {Function} [iteratee=_.identity] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {Array} Returns the array of results.","     * @example","     *","     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));","     * // => [3, 6, 4]","     *","     * _.times(3, function(n) {","     *   mage.castSpell(n);","     * });","     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`","     *","     * _.times(3, function(n) {","     *   this.cast(n);","     * }, mage);","     * // => also invokes `mage.castSpell(n)` three times","     */","    function times(n, iteratee, thisArg) {","      n = nativeFloor(n);","","      // Exit early to avoid a JSC JIT bug in Safari 8","      // where `Array(0)` is treated as `Array(1)`.","      if (n < 1 || !nativeIsFinite(n)) {","        return [];","      }","      var index = -1,","          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));","","      iteratee = bindCallback(iteratee, thisArg, 1);","      while (++index < n) {","        if (index < MAX_ARRAY_LENGTH) {","          result[index] = iteratee(index);","        } else {","          iteratee(index);","        }","      }","      return result;","    }","","    /**","     * Generates a unique ID. If `prefix` is provided the ID is appended to it.","     *","     * @static","     * @memberOf _","     * @category Utility","     * @param {string} [prefix] The value to prefix the ID with.","     * @returns {string} Returns the unique ID.","     * @example","     *","     * _.uniqueId('contact_');","     * // => 'contact_104'","     *","     * _.uniqueId();","     * // => '105'","     */","    function uniqueId(prefix) {","      var id = ++idCounter;","      return baseToString(prefix) + id;","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Adds two numbers.","     *","     * @static","     * @memberOf _","     * @category Math","     * @param {number} augend The first number to add.","     * @param {number} addend The second number to add.","     * @returns {number} Returns the sum.","     * @example","     *","     * _.add(6, 4);","     * // => 10","     */","    function add(augend, addend) {","      return (+augend || 0) + (+addend || 0);","    }","","    /**","     * Calculates `n` rounded up to `precision`.","     *","     * @static","     * @memberOf _","     * @category Math","     * @param {number} n The number to round up.","     * @param {number} [precision=0] The precision to round up to.","     * @returns {number} Returns the rounded up number.","     * @example","     *","     * _.ceil(4.006);","     * // => 5","     *","     * _.ceil(6.004, 2);","     * // => 6.01","     *","     * _.ceil(6040, -2);","     * // => 6100","     */","    var ceil = createRound('ceil');","","    /**","     * Calculates `n` rounded down to `precision`.","     *","     * @static","     * @memberOf _","     * @category Math","     * @param {number} n The number to round down.","     * @param {number} [precision=0] The precision to round down to.","     * @returns {number} Returns the rounded down number.","     * @example","     *","     * _.floor(4.006);","     * // => 4","     *","     * _.floor(0.046, 2);","     * // => 0.04","     *","     * _.floor(4060, -2);","     * // => 4000","     */","    var floor = createRound('floor');","","    /**","     * Gets the maximum value of `collection`. If `collection` is empty or falsey","     * `-Infinity` is returned. If an iteratee function is provided it is invoked","     * for each value in `collection` to generate the criterion by which the value","     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three","     * arguments: (value, index, collection).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Math","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [iteratee] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {*} Returns the maximum value.","     * @example","     *","     * _.max([4, 2, 8, 6]);","     * // => 8","     *","     * _.max([]);","     * // => -Infinity","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36 },","     *   { 'user': 'fred',   'age': 40 }","     * ];","     *","     * _.max(users, function(chr) {","     *   return chr.age;","     * });","     * // => { 'user': 'fred', 'age': 40 }","     *","     * // using the `_.property` callback shorthand","     * _.max(users, 'age');","     * // => { 'user': 'fred', 'age': 40 }","     */","    var max = createExtremum(gt, NEGATIVE_INFINITY);","","    /**","     * Gets the minimum value of `collection`. If `collection` is empty or falsey","     * `Infinity` is returned. If an iteratee function is provided it is invoked","     * for each value in `collection` to generate the criterion by which the value","     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three","     * arguments: (value, index, collection).","     *","     * If a property name is provided for `iteratee` the created `_.property`","     * style callback returns the property value of the given element.","     *","     * If a value is also provided for `thisArg` the created `_.matchesProperty`","     * style callback returns `true` for elements that have a matching property","     * value, else `false`.","     *","     * If an object is provided for `iteratee` the created `_.matches` style","     * callback returns `true` for elements that have the properties of the given","     * object, else `false`.","     *","     * @static","     * @memberOf _","     * @category Math","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [iteratee] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {*} Returns the minimum value.","     * @example","     *","     * _.min([4, 2, 8, 6]);","     * // => 2","     *","     * _.min([]);","     * // => Infinity","     *","     * var users = [","     *   { 'user': 'barney', 'age': 36 },","     *   { 'user': 'fred',   'age': 40 }","     * ];","     *","     * _.min(users, function(chr) {","     *   return chr.age;","     * });","     * // => { 'user': 'barney', 'age': 36 }","     *","     * // using the `_.property` callback shorthand","     * _.min(users, 'age');","     * // => { 'user': 'barney', 'age': 36 }","     */","    var min = createExtremum(lt, POSITIVE_INFINITY);","","    /**","     * Calculates `n` rounded to `precision`.","     *","     * @static","     * @memberOf _","     * @category Math","     * @param {number} n The number to round.","     * @param {number} [precision=0] The precision to round to.","     * @returns {number} Returns the rounded number.","     * @example","     *","     * _.round(4.006);","     * // => 4","     *","     * _.round(4.006, 2);","     * // => 4.01","     *","     * _.round(4060, -2);","     * // => 4100","     */","    var round = createRound('round');","","    /**","     * Gets the sum of the values in `collection`.","     *","     * @static","     * @memberOf _","     * @category Math","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [iteratee] The function invoked per iteration.","     * @param {*} [thisArg] The `this` binding of `iteratee`.","     * @returns {number} Returns the sum.","     * @example","     *","     * _.sum([4, 6]);","     * // => 10","     *","     * _.sum({ 'a': 4, 'b': 6 });","     * // => 10","     *","     * var objects = [","     *   { 'n': 4 },","     *   { 'n': 6 }","     * ];","     *","     * _.sum(objects, function(object) {","     *   return object.n;","     * });","     * // => 10","     *","     * // using the `_.property` callback shorthand","     * _.sum(objects, 'n');","     * // => 10","     */","    function sum(collection, iteratee, thisArg) {","      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {","        iteratee = undefined;","      }","      iteratee = getCallback(iteratee, thisArg, 3);","      return iteratee.length == 1","        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)","        : baseSum(collection, iteratee);","    }","","    /*------------------------------------------------------------------------*/","","    // Ensure wrappers are instances of `baseLodash`.","    lodash.prototype = baseLodash.prototype;","","    LodashWrapper.prototype = baseCreate(baseLodash.prototype);","    LodashWrapper.prototype.constructor = LodashWrapper;","","    LazyWrapper.prototype = baseCreate(baseLodash.prototype);","    LazyWrapper.prototype.constructor = LazyWrapper;","","    // Add functions to the `Map` cache.","    MapCache.prototype['delete'] = mapDelete;","    MapCache.prototype.get = mapGet;","    MapCache.prototype.has = mapHas;","    MapCache.prototype.set = mapSet;","","    // Add functions to the `Set` cache.","    SetCache.prototype.push = cachePush;","","    // Assign cache to `_.memoize`.","    memoize.Cache = MapCache;","","    // Add functions that return wrapped values when chaining.","    lodash.after = after;","    lodash.ary = ary;","    lodash.assign = assign;","    lodash.at = at;","    lodash.before = before;","    lodash.bind = bind;","    lodash.bindAll = bindAll;","    lodash.bindKey = bindKey;","    lodash.callback = callback;","    lodash.chain = chain;","    lodash.chunk = chunk;","    lodash.compact = compact;","    lodash.constant = constant;","    lodash.countBy = countBy;","    lodash.create = create;","    lodash.curry = curry;","    lodash.curryRight = curryRight;","    lodash.debounce = debounce;","    lodash.defaults = defaults;","    lodash.defaultsDeep = defaultsDeep;","    lodash.defer = defer;","    lodash.delay = delay;","    lodash.difference = difference;","    lodash.drop = drop;","    lodash.dropRight = dropRight;","    lodash.dropRightWhile = dropRightWhile;","    lodash.dropWhile = dropWhile;","    lodash.fill = fill;","    lodash.filter = filter;","    lodash.flatten = flatten;","    lodash.flattenDeep = flattenDeep;","    lodash.flow = flow;","    lodash.flowRight = flowRight;","    lodash.forEach = forEach;","    lodash.forEachRight = forEachRight;","    lodash.forIn = forIn;","    lodash.forInRight = forInRight;","    lodash.forOwn = forOwn;","    lodash.forOwnRight = forOwnRight;","    lodash.functions = functions;","    lodash.groupBy = groupBy;","    lodash.indexBy = indexBy;","    lodash.initial = initial;","    lodash.intersection = intersection;","    lodash.invert = invert;","    lodash.invoke = invoke;","    lodash.keys = keys;","    lodash.keysIn = keysIn;","    lodash.map = map;","    lodash.mapKeys = mapKeys;","    lodash.mapValues = mapValues;","    lodash.matches = matches;","    lodash.matchesProperty = matchesProperty;","    lodash.memoize = memoize;","    lodash.merge = merge;","    lodash.method = method;","    lodash.methodOf = methodOf;","    lodash.mixin = mixin;","    lodash.modArgs = modArgs;","    lodash.negate = negate;","    lodash.omit = omit;","    lodash.once = once;","    lodash.pairs = pairs;","    lodash.partial = partial;","    lodash.partialRight = partialRight;","    lodash.partition = partition;","    lodash.pick = pick;","    lodash.pluck = pluck;","    lodash.property = property;","    lodash.propertyOf = propertyOf;","    lodash.pull = pull;","    lodash.pullAt = pullAt;","    lodash.range = range;","    lodash.rearg = rearg;","    lodash.reject = reject;","    lodash.remove = remove;","    lodash.rest = rest;","    lodash.restParam = restParam;","    lodash.set = set;","    lodash.shuffle = shuffle;","    lodash.slice = slice;","    lodash.sortBy = sortBy;","    lodash.sortByAll = sortByAll;","    lodash.sortByOrder = sortByOrder;","    lodash.spread = spread;","    lodash.take = take;","    lodash.takeRight = takeRight;","    lodash.takeRightWhile = takeRightWhile;","    lodash.takeWhile = takeWhile;","    lodash.tap = tap;","    lodash.throttle = throttle;","    lodash.thru = thru;","    lodash.times = times;","    lodash.toArray = toArray;","    lodash.toPlainObject = toPlainObject;","    lodash.transform = transform;","    lodash.union = union;","    lodash.uniq = uniq;","    lodash.unzip = unzip;","    lodash.unzipWith = unzipWith;","    lodash.values = values;","    lodash.valuesIn = valuesIn;","    lodash.where = where;","    lodash.without = without;","    lodash.wrap = wrap;","    lodash.xor = xor;","    lodash.zip = zip;","    lodash.zipObject = zipObject;","    lodash.zipWith = zipWith;","","    // Add aliases.","    lodash.backflow = flowRight;","    lodash.collect = map;","    lodash.compose = flowRight;","    lodash.each = forEach;","    lodash.eachRight = forEachRight;","    lodash.extend = assign;","    lodash.iteratee = callback;","    lodash.methods = functions;","    lodash.object = zipObject;","    lodash.select = filter;","    lodash.tail = rest;","    lodash.unique = uniq;","","    // Add functions to `lodash.prototype`.","    mixin(lodash, lodash);","","    /*------------------------------------------------------------------------*/","","    // Add functions that return unwrapped values when chaining.","    lodash.add = add;","    lodash.attempt = attempt;","    lodash.camelCase = camelCase;","    lodash.capitalize = capitalize;","    lodash.ceil = ceil;","    lodash.clone = clone;","    lodash.cloneDeep = cloneDeep;","    lodash.deburr = deburr;","    lodash.endsWith = endsWith;","    lodash.escape = escape;","    lodash.escapeRegExp = escapeRegExp;","    lodash.every = every;","    lodash.find = find;","    lodash.findIndex = findIndex;","    lodash.findKey = findKey;","    lodash.findLast = findLast;","    lodash.findLastIndex = findLastIndex;","    lodash.findLastKey = findLastKey;","    lodash.findWhere = findWhere;","    lodash.first = first;","    lodash.floor = floor;","    lodash.get = get;","    lodash.gt = gt;","    lodash.gte = gte;","    lodash.has = has;","    lodash.identity = identity;","    lodash.includes = includes;","    lodash.indexOf = indexOf;","    lodash.inRange = inRange;","    lodash.isArguments = isArguments;","    lodash.isArray = isArray;","    lodash.isBoolean = isBoolean;","    lodash.isDate = isDate;","    lodash.isElement = isElement;","    lodash.isEmpty = isEmpty;","    lodash.isEqual = isEqual;","    lodash.isError = isError;","    lodash.isFinite = isFinite;","    lodash.isFunction = isFunction;","    lodash.isMatch = isMatch;","    lodash.isNaN = isNaN;","    lodash.isNative = isNative;","    lodash.isNull = isNull;","    lodash.isNumber = isNumber;","    lodash.isObject = isObject;","    lodash.isPlainObject = isPlainObject;","    lodash.isRegExp = isRegExp;","    lodash.isString = isString;","    lodash.isTypedArray = isTypedArray;","    lodash.isUndefined = isUndefined;","    lodash.kebabCase = kebabCase;","    lodash.last = last;","    lodash.lastIndexOf = lastIndexOf;","    lodash.lt = lt;","    lodash.lte = lte;","    lodash.max = max;","    lodash.min = min;","    lodash.noConflict = noConflict;","    lodash.noop = noop;","    lodash.now = now;","    lodash.pad = pad;","    lodash.padLeft = padLeft;","    lodash.padRight = padRight;","    lodash.parseInt = parseInt;","    lodash.random = random;","    lodash.reduce = reduce;","    lodash.reduceRight = reduceRight;","    lodash.repeat = repeat;","    lodash.result = result;","    lodash.round = round;","    lodash.runInContext = runInContext;","    lodash.size = size;","    lodash.snakeCase = snakeCase;","    lodash.some = some;","    lodash.sortedIndex = sortedIndex;","    lodash.sortedLastIndex = sortedLastIndex;","    lodash.startCase = startCase;","    lodash.startsWith = startsWith;","    lodash.sum = sum;","    lodash.template = template;","    lodash.trim = trim;","    lodash.trimLeft = trimLeft;","    lodash.trimRight = trimRight;","    lodash.trunc = trunc;","    lodash.unescape = unescape;","    lodash.uniqueId = uniqueId;","    lodash.words = words;","","    // Add aliases.","    lodash.all = every;","    lodash.any = some;","    lodash.contains = includes;","    lodash.eq = isEqual;","    lodash.detect = find;","    lodash.foldl = reduce;","    lodash.foldr = reduceRight;","    lodash.head = first;","    lodash.include = includes;","    lodash.inject = reduce;","","    mixin(lodash, (function() {","      var source = {};","      baseForOwn(lodash, function(func, methodName) {","        if (!lodash.prototype[methodName]) {","          source[methodName] = func;","        }","      });","      return source;","    }()), false);","","    /*------------------------------------------------------------------------*/","","    // Add functions capable of returning wrapped and unwrapped values when chaining.","    lodash.sample = sample;","","    lodash.prototype.sample = function(n) {","      if (!this.__chain__ && n == null) {","        return sample(this.value());","      }","      return this.thru(function(value) {","        return sample(value, n);","      });","    };","","    /*------------------------------------------------------------------------*/","","    /**","     * The semantic version number.","     *","     * @static","     * @memberOf _","     * @type string","     */","    lodash.VERSION = VERSION;","","    // Assign default placeholders.","    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {","      lodash[methodName].placeholder = lodash;","    });","","    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.","    arrayEach(['drop', 'take'], function(methodName, index) {","      LazyWrapper.prototype[methodName] = function(n) {","        var filtered = this.__filtered__;","        if (filtered && !index) {","          return new LazyWrapper(this);","        }","        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);","","        var result = this.clone();","        if (filtered) {","          result.__takeCount__ = nativeMin(result.__takeCount__, n);","        } else {","          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });","        }","        return result;","      };","","      LazyWrapper.prototype[methodName + 'Right'] = function(n) {","        return this.reverse()[methodName](n).reverse();","      };","    });","","    // Add `LazyWrapper` methods that accept an `iteratee` value.","    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {","      var type = index + 1,","          isFilter = type != LAZY_MAP_FLAG;","","      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {","        var result = this.clone();","        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });","        result.__filtered__ = result.__filtered__ || isFilter;","        return result;","      };","    });","","    // Add `LazyWrapper` methods for `_.first` and `_.last`.","    arrayEach(['first', 'last'], function(methodName, index) {","      var takeName = 'take' + (index ? 'Right' : '');","","      LazyWrapper.prototype[methodName] = function() {","        return this[takeName](1).value()[0];","      };","    });","","    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.","    arrayEach(['initial', 'rest'], function(methodName, index) {","      var dropName = 'drop' + (index ? '' : 'Right');","","      LazyWrapper.prototype[methodName] = function() {","        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);","      };","    });","","    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.","    arrayEach(['pluck', 'where'], function(methodName, index) {","      var operationName = index ? 'filter' : 'map',","          createCallback = index ? baseMatches : property;","","      LazyWrapper.prototype[methodName] = function(value) {","        return this[operationName](createCallback(value));","      };","    });","","    LazyWrapper.prototype.compact = function() {","      return this.filter(identity);","    };","","    LazyWrapper.prototype.reject = function(predicate, thisArg) {","      predicate = getCallback(predicate, thisArg, 1);","      return this.filter(function(value) {","        return !predicate(value);","      });","    };","","    LazyWrapper.prototype.slice = function(start, end) {","      start = start == null ? 0 : (+start || 0);","","      var result = this;","      if (result.__filtered__ && (start > 0 || end < 0)) {","        return new LazyWrapper(result);","      }","      if (start < 0) {","        result = result.takeRight(-start);","      } else if (start) {","        result = result.drop(start);","      }","      if (end !== undefined) {","        end = (+end || 0);","        result = end < 0 ? result.dropRight(-end) : result.take(end - start);","      }","      return result;","    };","","    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {","      return this.reverse().takeWhile(predicate, thisArg).reverse();","    };","","    LazyWrapper.prototype.toArray = function() {","      return this.take(POSITIVE_INFINITY);","    };","","    // Add `LazyWrapper` methods to `lodash.prototype`.","    baseForOwn(LazyWrapper.prototype, function(func, methodName) {","      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),","          retUnwrapped = /^(?:first|last)$/.test(methodName),","          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];","","      if (!lodashFunc) {","        return;","      }","      lodash.prototype[methodName] = function() {","        var args = retUnwrapped ? [1] : arguments,","            chainAll = this.__chain__,","            value = this.__wrapped__,","            isHybrid = !!this.__actions__.length,","            isLazy = value instanceof LazyWrapper,","            iteratee = args[0],","            useLazy = isLazy || isArray(value);","","        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {","          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.","          isLazy = useLazy = false;","        }","        var interceptor = function(value) {","          return (retUnwrapped && chainAll)","            ? lodashFunc(value, 1)[0]","            : lodashFunc.apply(undefined, arrayPush([value], args));","        };","","        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },","            onlyLazy = isLazy && !isHybrid;","","        if (retUnwrapped && !chainAll) {","          if (onlyLazy) {","            value = value.clone();","            value.__actions__.push(action);","            return func.call(value);","          }","          return lodashFunc.call(undefined, this.value())[0];","        }","        if (!retUnwrapped && useLazy) {","          value = onlyLazy ? value : new LazyWrapper(this);","          var result = func.apply(value, args);","          result.__actions__.push(action);","          return new LodashWrapper(result, chainAll);","        }","        return this.thru(interceptor);","      };","    });","","    // Add `Array` and `String` methods to `lodash.prototype`.","    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {","      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],","          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',","          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);","","      lodash.prototype[methodName] = function() {","        var args = arguments;","        if (retUnwrapped && !this.__chain__) {","          return func.apply(this.value(), args);","        }","        return this[chainName](function(value) {","          return func.apply(value, args);","        });","      };","    });","","    // Map minified function names to their real names.","    baseForOwn(LazyWrapper.prototype, function(func, methodName) {","      var lodashFunc = lodash[methodName];","      if (lodashFunc) {","        var key = lodashFunc.name,","            names = realNames[key] || (realNames[key] = []);","","        names.push({ 'name': methodName, 'func': lodashFunc });","      }","    });","","    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];","","    // Add functions to the lazy wrapper.","    LazyWrapper.prototype.clone = lazyClone;","    LazyWrapper.prototype.reverse = lazyReverse;","    LazyWrapper.prototype.value = lazyValue;","","    // Add chaining functions to the `lodash` wrapper.","    lodash.prototype.chain = wrapperChain;","    lodash.prototype.commit = wrapperCommit;","    lodash.prototype.concat = wrapperConcat;","    lodash.prototype.plant = wrapperPlant;","    lodash.prototype.reverse = wrapperReverse;","    lodash.prototype.toString = wrapperToString;","    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;","","    // Add function aliases to the `lodash` wrapper.","    lodash.prototype.collect = lodash.prototype.map;","    lodash.prototype.head = lodash.prototype.first;","    lodash.prototype.select = lodash.prototype.filter;","    lodash.prototype.tail = lodash.prototype.rest;","","    return lodash;","  }","","  /*--------------------------------------------------------------------------*/","","  // Export lodash.","  var _ = runInContext();","","  // Some AMD build optimizers like r.js check for condition patterns like the following:","  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {","    // Expose lodash to the global object when an AMD loader is present to avoid","    // errors in cases where lodash is loaded by a script tag and not intended","    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for","    // more details.","    root._ = _;","","    // Define as an anonymous module so, through path mapping, it can be","    // referenced as the \"underscore\" module.","    define(function() {","      return _;","    });","  }","  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.","  else if (freeExports && freeModule) {","    // Export for Node.js or RingoJS.","    if (moduleExports) {","      (freeModule.exports = _)._ = _;","    }","    // Export for Rhino with CommonJS support.","    else {","      freeExports._ = _;","    }","  }","  else {","    // Export for a browser or Rhino.","    root._ = _;","  }","}.call(this));",""],"l":{"10":1,"13":1,"16":1,"19":1,"30":1,"34":1,"38":1,"41":1,"45":1,"48":1,"51":1,"65":1,"77":1,"82":1,"88":1,"93":1,"101":1,"105":1,"108":1,"111":1,"114":1,"117":1,"120":1,"123":1,"126":1,"129":1,"132":1,"135":1,"136":1,"139":1,"143":1,"152":1,"155":1,"156":1,"161":1,"170":1,"171":1,"180":1,"185":1,"206":1,"216":1,"226":1,"232":1,"241":1,"251":1,"254":1,"257":1,"260":1,"263":1,"266":1,"274":1,"287":1,"288":0,"289":0,"293":0,"297":0,"300":0,"302":0,"305":0,"308":0,"321":1,"322":0,"325":0,"326":0,"327":0,"330":0,"342":1,"343":0,"344":0,"346":0,"349":0,"350":0,"351":0,"354":0,"365":1,"368":0,"379":1,"380":0,"392":1,"393":0,"396":0,"397":0,"409":1,"410":0,"412":0,"413":0,"425":1,"426":0,"443":1,"444":0,"450":0,"451":0,"452":0,"453":0,"454":0,"456":0,"457":0,"467":0,"477":1,"478":0,"488":1,"489":0,"501":1,"502":0,"503":0,"504":0,"505":0,"507":0,"517":1,"518":0,"530":1,"531":0,"534":0,"535":0,"536":0,"537":0,"540":0,"550":1,"551":0,"562":1,"563":0,"576":1,"577":0,"582":0,"583":0,"584":0,"585":0,"588":0,"600":1,"601":0,"607":0,"608":0,"611":0,"612":0,"613":0,"616":0,"627":1,"628":0,"631":0,"632":0,"643":1,"644":0,"646":0,"647":0,"657":1,"658":0,"698":1,"703":1,"706":1,"718":1,"723":1,"726":1,"729":1,"735":1,"738":1,"741":1,"747":1,"759":1,"772":1,"776":1,"784":1,"787":1,"790":1,"890":1,"891":0,"892":0,"893":0,"895":0,"896":0,"899":0,"907":1,"919":1,"920":0,"921":0,"922":0,"932":1,"943":1,"1003":1,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1021":1,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1040":1,"1041":0,"1042":0,"1043":0,"1044":0,"1046":0,"1047":0,"1049":0,"1060":1,"1061":0,"1076":0,"1077":0,"1079":0,"1081":0,"1082":0,"1083":0,"1085":0,"1088":0,"1089":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1100":0,"1104":0,"1106":0,"1119":1,"1120":0,"1132":1,"1133":0,"1145":1,"1146":0,"1158":1,"1159":0,"1172":1,"1173":0,"1174":0,"1176":0,"1188":1,"1189":0,"1191":0,"1192":0,"1193":0,"1206":1,"1207":0,"1210":0,"1221":1,"1222":0,"1223":0,"1224":0,"1226":0,"1240":1,"1241":0,"1247":0,"1248":0,"1250":0,"1251":0,"1253":0,"1264":1,"1265":0,"1268":0,"1269":0,"1270":0,"1272":0,"1284":1,"1285":16,"1288":16,"1289":79,"1290":0,"1293":16,"1305":1,"1306":0,"1308":0,"1309":0,"1310":0,"1313":0,"1326":1,"1327":0,"1330":0,"1331":0,"1332":0,"1335":0,"1349":1,"1350":0,"1355":0,"1356":0,"1359":0,"1360":0,"1361":0,"1364":0,"1376":1,"1377":0,"1382":0,"1383":0,"1384":0,"1385":0,"1388":0,"1400":1,"1401":0,"1405":0,"1406":0,"1408":0,"1419":1,"1420":0,"1424":0,"1425":0,"1427":0,"1442":1,"1443":0,"1446":0,"1447":0,"1449":0,"1450":0,"1452":0,"1467":1,"1468":0,"1469":0,"1470":0,"1472":0,"1473":0,"1475":0,"1488":1,"1489":0,"1492":0,"1493":0,"1494":0,"1497":0,"1509":1,"1510":0,"1513":0,"1514":0,"1516":0,"1527":1,"1528":0,"1544":1,"1545":0,"1561":1,"1562":0,"1566":0,"1567":0,"1571":0,"1573":0,"1576":0,"1588":1,"1589":1,"1603":1,"1604":0,"1611":0,"1612":0,"1613":0,"1614":0,"1616":0,"1619":0,"1631":1,"1632":1,"1634":1,"1637":1,"1638":117,"1639":117,"1641":1,"1654":1,"1655":0,"1656":0,"1657":0,"1661":0,"1662":0,"1664":0,"1665":0,"1667":0,"1686":1,"1687":0,"1688":0,"1689":0,"1691":0,"1692":0,"1694":0,"1695":0,"1697":0,"1698":0,"1699":0,"1700":0,"1701":0,"1704":0,"1707":0,"1708":0,"1709":0,"1710":0,"1713":0,"1719":0,"1720":0,"1722":0,"1723":0,"1724":0,"1725":0,"1729":0,"1730":0,"1733":0,"1734":0,"1736":0,"1747":1,"1748":1,"1749":1,"1750":2,"1751":2,"1752":2,"1753":2,"1755":2,"1769":1,"1770":0,"1771":0,"1773":0,"1785":1,"1786":0,"1789":0,"1790":0,"1792":0,"1798":0,"1799":0,"1800":0,"1801":0,"1803":0,"1804":0,"1805":0,"1807":0,"1808":0,"1809":0,"1810":0,"1811":0,"1814":0,"1816":0,"1817":0,"1820":0,"1832":1,"1843":1,"1855":1,"1856":0,"1857":0,"1858":0,"1859":0,"1861":0,"1876":1,"1877":0,"1880":0,"1881":0,"1882":0,"1883":0,"1884":0,"1887":0,"1900":1,"1901":0,"1903":0,"1904":0,"1905":0,"1907":0,"1908":0,"1909":0,"1911":0,"1912":0,"1914":0,"1915":0,"1917":0,"1929":1,"1930":0,"1931":0,"1932":0,"1933":0,"1936":0,"1952":1,"1953":0,"1954":0,"1955":0,"1956":0,"1957":0,"1960":0,"1974":1,"1975":0,"1977":0,"1980":0,"1981":0,"1982":0,"1984":0,"1986":0,"1988":0,"1990":0,"1991":0,"1994":0,"2009":1,"2021":1,"2032":1,"2033":0,"2045":1,"2046":5,"2058":1,"2059":0,"2071":1,"2072":2,"2077":2,"2078":222,"2079":222,"2080":218,"2083":2,"2096":1,"2097":0,"2098":0,"2100":0,"2101":0,"2103":0,"2106":0,"2107":0,"2109":0,"2125":1,"2126":0,"2127":0,"2129":0,"2130":0,"2132":0,"2150":1,"2151":0,"2156":0,"2157":0,"2158":0,"2159":0,"2160":0,"2161":0,"2164":0,"2165":0,"2166":0,"2167":0,"2168":0,"2169":0,"2172":0,"2176":0,"2177":0,"2179":0,"2180":0,"2183":0,"2184":0,"2187":0,"2188":0,"2192":0,"2193":0,"2195":0,"2196":0,"2197":0,"2198":0,"2202":0,"2203":0,"2205":0,"2207":0,"2208":0,"2210":0,"2223":1,"2224":0,"2228":0,"2229":0,"2231":0,"2232":0,"2233":0,"2234":0,"2238":0,"2241":0,"2242":0,"2243":0,"2247":0,"2248":0,"2249":0,"2252":0,"2253":0,"2254":0,"2258":0,"2270":1,"2271":0,"2274":0,"2275":0,"2277":0,"2287":1,"2288":0,"2289":0,"2290":0,"2293":0,"2294":0,"2295":0,"2297":0,"2300":0,"2301":0,"2313":1,"2314":0,"2318":0,"2319":0,"2320":0,"2321":0,"2323":0,"2324":0,"2325":0,"2326":0,"2327":0,"2328":0,"2330":0,"2331":0,"2333":0,"2351":1,"2352":0,"2353":0,"2355":0,"2358":0,"2359":0,"2360":0,"2361":0,"2363":0,"2364":0,"2365":0,"2366":0,"2369":0,"2373":0,"2374":0,"2376":0,"2378":0,"2382":0,"2400":1,"2401":0,"2404":0,"2405":0,"2406":0,"2407":0,"2410":0,"2414":0,"2415":0,"2416":0,"2417":0,"2421":0,"2422":0,"2427":0,"2432":0,"2433":0,"2435":0,"2437":0,"2438":0,"2439":0,"2450":1,"2451":1,"2452":6,"2463":1,"2464":0,"2465":0,"2466":0,"2467":0,"2480":1,"2481":0,"2482":0,"2483":0,"2484":0,"2485":0,"2486":0,"2489":0,"2501":1,"2502":0,"2519":1,"2520":0,"2521":0,"2525":0,"2536":1,"2537":0,"2538":0,"2550":1,"2551":0,"2554":0,"2555":0,"2556":0,"2558":0,"2559":0,"2560":0,"2562":0,"2563":0,"2565":0,"2566":0,"2567":0,"2569":0,"2582":1,"2583":0,"2585":0,"2586":0,"2587":0,"2589":0,"2602":1,"2603":0,"2605":0,"2606":0,"2607":0,"2609":0,"2621":1,"2622":0,"2625":0,"2627":0,"2628":0,"2629":0,"2632":0,"2633":0,"2646":1,"2647":0,"2648":0,"2649":0,"2651":0,"2663":1,"2664":0,"2672":0,"2673":0,"2674":0,"2676":0,"2677":0,"2679":0,"2680":0,"2681":0,"2684":0,"2685":0,"2686":0,"2687":0,"2688":0,"2691":0,"2692":0,"2694":0,"2696":0,"2697":0,"2698":0,"2700":0,"2703":0,"2716":1,"2717":0,"2721":0,"2722":0,"2724":0,"2738":1,"2739":0,"2742":0,"2743":0,"2758":1,"2759":0,"2760":0,"2761":0,"2763":0,"2766":0,"2767":0,"2768":0,"2770":0,"2784":1,"2785":0,"2788":0,"2789":0,"2790":0,"2793":0,"2794":0,"2796":0,"2799":0,"2801":0,"2817":1,"2818":0,"2820":0,"2826":0,"2827":0,"2832":0,"2833":0,"2834":0,"2835":0,"2836":0,"2837":0,"2838":0,"2839":0,"2841":0,"2843":0,"2844":0,"2846":0,"2849":0,"2862":1,"2863":4,"2864":0,"2866":4,"2867":4,"2869":0,"2870":0,"2871":0,"2873":0,"2874":0,"2876":0,"2877":0,"2879":0,"2880":0,"2883":0,"2884":0,"2895":1,"2896":0,"2899":0,"2900":0,"2913":1,"2914":0,"2921":0,"2922":0,"2924":0,"2925":0,"2927":0,"2928":0,"2930":0,"2943":1,"2944":0,"2952":0,"2953":0,"2955":0,"2956":0,"2957":0,"2959":0,"2960":0,"2962":0,"2973":1,"2974":4,"2975":0,"2976":0,"2978":0,"2979":0,"2982":0,"2983":0,"2984":0,"2987":0,"2988":0,"2991":0,"3002":1,"3003":2,"3004":1,"3010":1,"3011":0,"3012":0,"3014":1,"3015":1,"3017":1,"3018":0,"3019":0,"3021":1,"3022":1,"3023":1,"3024":1,"3027":1,"3039":1,"3040":2,"3041":4,"3042":4,"3043":2,"3045":2,"3048":2,"3049":0,"3050":0,"3053":2,"3064":1,"3065":2,"3066":5,"3071":5,"3072":273,"3073":273,"3074":0,"3077":5,"3090":1,"3091":0,"3093":1,"3094":0,"3095":0,"3097":0,"3107":1,"3108":0,"3119":1,"3120":4,"3121":0,"3126":0,"3127":0,"3129":0,"3141":1,"3142":0,"3146":0,"3147":0,"3148":0,"3149":0,"3150":0,"3151":0,"3152":0,"3153":0,"3154":0,"3155":0,"3157":0,"3162":0,"3173":1,"3174":1,"3175":0,"3176":0,"3178":0,"3179":0,"3180":0,"3182":2,"3193":1,"3194":2,"3195":0,"3196":0,"3197":0,"3199":0,"3200":0,"3212":1,"3213":2,"3214":0,"3215":0,"3217":0,"3218":0,"3219":0,"3220":0,"3221":0,"3222":0,"3225":0,"3237":1,"3238":2,"3239":0,"3240":0,"3241":0,"3242":0,"3244":0,"3255":1,"3256":2,"3257":0,"3258":0,"3260":0,"3261":0,"3272":1,"3273":2,"3274":0,"3275":0,"3286":1,"3287":2,"3288":0,"3294":0,"3295":0,"3296":0,"3297":0,"3299":0,"3300":0,"3303":0,"3304":0,"3305":0,"3307":0,"3310":0,"3311":0,"3313":0,"3316":0,"3317":0,"3320":0,"3321":0,"3323":0,"3326":0,"3327":0,"3329":0,"3342":1,"3343":2,"3344":13,"3357":1,"3358":2,"3359":0,"3360":0,"3362":0,"3373":1,"3374":2,"3375":0,"3376":0,"3378":0,"3389":1,"3390":2,"3391":0,"3392":0,"3394":0,"3395":0,"3396":0,"3397":0,"3398":0,"3400":0,"3411":1,"3412":2,"3413":0,"3414":0,"3425":1,"3426":2,"3427":0,"3428":0,"3430":2,"3441":1,"3442":2,"3443":0,"3444":0,"3467":1,"3468":1,"3476":1,"3479":0,"3483":0,"3484":0,"3486":0,"3487":0,"3489":0,"3490":0,"3492":0,"3493":0,"3496":0,"3497":0,"3498":0,"3505":0,"3506":0,"3508":0,"3509":0,"3511":0,"3514":0,"3515":0,"3517":0,"3518":0,"3521":0,"3524":0,"3525":0,"3527":0,"3528":0,"3530":0,"3531":0,"3533":0,"3535":1,"3548":1,"3549":0,"3550":0,"3552":0,"3553":0,"3555":0,"3556":0,"3557":0,"3572":1,"3573":0,"3576":1,"3579":0,"3585":0,"3586":0,"3588":0,"3589":0,"3591":0,"3592":0,"3594":0,"3604":1,"3605":3,"3606":3,"3607":0,"3608":0,"3609":0,"3610":0,"3612":0,"3623":1,"3624":2,"3625":0,"3626":0,"3657":1,"3658":0,"3659":0,"3660":0,"3662":0,"3663":0,"3664":0,"3665":0,"3667":0,"3668":0,"3669":0,"3672":0,"3674":0,"3677":0,"3678":0,"3679":0,"3680":0,"3682":0,"3686":0,"3687":0,"3688":0,"3689":0,"3691":0,"3693":0,"3694":0,"3711":1,"3712":0,"3716":0,"3717":0,"3720":0,"3721":0,"3725":0,"3726":0,"3727":0,"3729":0,"3732":0,"3733":0,"3734":0,"3736":0,"3738":0,"3739":0,"3742":0,"3758":1,"3759":0,"3764":0,"3767":0,"3771":0,"3779":0,"3781":0,"3798":1,"3799":0,"3804":0,"3805":0,"3807":0,"3808":0,"3809":0,"3810":0,"3811":0,"3814":0,"3815":0,"3816":0,"3817":0,"3822":0,"3823":0,"3825":0,"3827":0,"3828":0,"3832":0,"3836":0,"3839":0,"3851":1,"3852":0,"3853":0,"3854":0,"3864":1,"3865":0,"3875":1,"3876":0,"3880":0,"3881":0,"3883":0,"3884":0,"3887":0,"3899":1,"3900":0,"3901":0,"3902":0,"3915":1,"3924":1,"3925":0,"3928":0,"3929":0,"3931":0,"3942":1,"3943":6,"3944":6,"3957":1,"3958":0,"3961":0,"3962":0,"3965":0,"3966":0,"3967":0,"3968":0,"3969":0,"3972":0,"3982":1,"3983":0,"3987":0,"3988":0,"3989":0,"3991":0,"4001":1,"4002":0,"4003":0,"4004":0,"4006":0,"4021":1,"4022":0,"4023":0,"4025":0,"4029":0,"4034":0,"4035":0,"4039":0,"4042":0,"4043":0,"4045":0,"4057":1,"4058":0,"4059":0,"4060":0,"4061":0,"4063":0,"4064":0,"4074":1,"4075":4,"4086":1,"4087":0,"4088":0,"4089":0,"4101":1,"4102":0,"4103":0,"4105":0,"4106":0,"4109":0,"4110":0,"4112":0,"4123":1,"4124":0,"4125":0,"4126":0,"4128":0,"4129":0,"4131":0,"4132":0,"4142":1,"4143":0,"4144":0,"4145":0,"4147":0,"4148":0,"4149":0,"4151":0,"4152":0,"4164":1,"4165":8,"4176":1,"4177":0,"4195":1,"4196":0,"4201":0,"4207":0,"4208":0,"4211":0,"4212":0,"4214":0,"4217":0,"4218":0,"4219":0,"4220":0,"4221":0,"4224":0,"4225":0,"4226":0,"4227":0,"4228":0,"4231":0,"4232":0,"4233":0,"4236":0,"4237":0,"4240":0,"4241":0,"4244":0,"4245":0,"4247":0,"4258":1,"4259":0,"4271":1,"4272":0,"4274":0,"4278":0,"4279":0,"4280":0,"4281":0,"4284":0,"4296":1,"4297":0,"4298":0,"4299":0,"4300":0,"4303":0,"4316":1,"4317":0,"4321":0,"4322":0,"4323":0,"4325":0,"4341":1,"4342":1,"4345":1,"4346":0,"4349":0,"4350":0,"4351":0,"4352":0,"4355":0,"4357":0,"4369":1,"4370":2,"4374":2,"4377":2,"4380":2,"4381":447,"4382":447,"4383":36,"4386":2,"4396":1,"4397":0,"4398":0,"4400":0,"4401":0,"4403":0,"4413":1,"4414":7,"4424":1,"4425":0,"4426":0,"4428":0,"4429":0,"4430":0,"4432":0,"4442":1,"4443":0,"4470":1,"4471":0,"4472":0,"4474":0,"4476":0,"4481":0,"4482":0,"4484":0,"4501":1,"4502":0,"4507":0,"4508":0,"4509":0,"4510":0,"4513":0,"4532":1,"4533":0,"4562":1,"4563":0,"4564":0,"4565":0,"4567":0,"4568":0,"4570":0,"4597":1,"4598":0,"4599":0,"4600":0,"4602":0,"4603":0,"4605":0,"4606":0,"4658":1,"4659":0,"4713":1,"4714":0,"4747":1,"4748":0,"4749":0,"4750":0,"4752":0,"4753":0,"4754":0,"4756":0,"4807":1,"4857":1,"4876":1,"4877":0,"4900":1,"4901":0,"4902":0,"4903":0,"4905":0,"4921":1,"4922":0,"4923":0,"4954":1,"4955":0,"4956":0,"4957":0,"4959":0,"4960":0,"4961":0,"4962":0,"4963":0,"4965":0,"4967":0,"4969":0,"4985":1,"4986":0,"5003":1,"5004":0,"5011":0,"5012":0,"5013":0,"5015":0,"5020":0,"5021":0,"5022":0,"5023":0,"5024":0,"5025":0,"5026":0,"5027":0,"5028":0,"5031":0,"5032":0,"5034":0,"5037":0,"5053":1,"5054":0,"5055":0,"5083":1,"5084":0,"5085":0,"5086":0,"5088":0,"5089":0,"5090":0,"5091":0,"5092":0,"5093":0,"5094":0,"5095":0,"5097":0,"5099":0,"5100":0,"5102":0,"5103":0,"5104":0,"5107":0,"5131":1,"5132":0,"5135":0,"5136":0,"5138":0,"5142":0,"5143":0,"5146":0,"5147":0,"5150":0,"5178":1,"5179":0,"5181":0,"5182":0,"5183":0,"5225":1,"5226":0,"5227":0,"5228":0,"5230":0,"5234":0,"5235":0,"5236":0,"5237":0,"5238":0,"5239":0,"5242":0,"5243":0,"5260":1,"5261":0,"5278":1,"5279":0,"5280":0,"5281":0,"5283":0,"5284":0,"5285":0,"5287":0,"5338":1,"5360":1,"5386":1,"5387":0,"5388":0,"5389":0,"5391":0,"5392":0,"5394":0,"5421":1,"5422":0,"5423":0,"5424":0,"5426":0,"5427":0,"5429":0,"5430":0,"5482":1,"5483":0,"5537":1,"5538":0,"5558":1,"5559":0,"5611":1,"5612":0,"5613":0,"5614":0,"5616":0,"5617":0,"5618":0,"5619":0,"5621":0,"5622":0,"5623":0,"5625":0,"5648":1,"5649":0,"5650":0,"5652":0,"5655":0,"5656":0,"5657":0,"5658":0,"5661":0,"5662":0,"5663":0,"5665":0,"5688":1,"5689":0,"5690":0,"5691":0,"5693":0,"5694":0,"5695":0,"5697":0,"5698":0,"5699":0,"5719":1,"5720":0,"5739":1,"5740":0,"5743":0,"5744":0,"5745":0,"5746":0,"5751":0,"5769":1,"5792":1,"5793":0,"5797":0,"5798":0,"5800":0,"5801":0,"5802":0,"5803":0,"5804":0,"5805":0,"5808":0,"5828":1,"5829":0,"5833":0,"5834":0,"5836":0,"5837":0,"5839":0,"5840":0,"5871":1,"5872":0,"5873":0,"5874":0,"5900":1,"5901":0,"5902":0,"5926":1,"5927":0,"5955":1,"5956":0,"5984":1,"5985":0,"6008":1,"6009":0,"6010":0,"6011":0,"6038":1,"6039":0,"6042":0,"6043":0,"6044":0,"6045":0,"6047":0,"6049":0,"6050":0,"6052":0,"6053":0,"6076":1,"6077":0,"6079":0,"6080":0,"6082":0,"6083":0,"6084":0,"6085":0,"6087":0,"6088":0,"6089":0,"6091":0,"6106":1,"6107":0,"6123":1,"6124":0,"6149":1,"6150":0,"6194":1,"6195":0,"6246":1,"6247":0,"6248":0,"6249":0,"6251":0,"6252":0,"6254":0,"6306":1,"6307":0,"6308":0,"6309":0,"6362":1,"6383":1,"6414":1,"6415":0,"6448":1,"6469":1,"6513":1,"6514":0,"6515":0,"6517":0,"6550":1,"6551":0,"6552":0,"6553":0,"6554":0,"6556":0,"6557":0,"6559":0,"6561":0,"6612":1,"6613":0,"6638":1,"6639":0,"6644":0,"6645":0,"6646":0,"6648":0,"6707":1,"6708":0,"6709":0,"6710":0,"6772":1,"6773":0,"6774":0,"6799":1,"6800":0,"6840":1,"6864":1,"6902":1,"6903":0,"6904":0,"6905":0,"6906":0,"6928":1,"6929":0,"6930":0,"6931":0,"6932":0,"6934":0,"6939":0,"6940":0,"6941":0,"6944":0,"6945":0,"6947":0,"6948":0,"6965":1,"6966":0,"6989":1,"6990":0,"6991":0,"7043":1,"7044":0,"7045":0,"7046":0,"7048":0,"7049":0,"7051":0,"7102":1,"7103":0,"7104":0,"7106":0,"7107":0,"7109":0,"7110":0,"7112":0,"7113":0,"7115":0,"7153":1,"7154":0,"7155":0,"7157":0,"7158":0,"7159":0,"7161":0,"7198":1,"7199":0,"7200":0,"7202":0,"7203":0,"7205":0,"7206":0,"7208":0,"7209":0,"7211":0,"7243":1,"7244":0,"7263":1,"7264":0,"7292":1,"7293":0,"7294":0,"7295":0,"7296":0,"7297":0,"7299":0,"7302":0,"7303":0,"7304":0,"7305":0,"7326":1,"7327":0,"7328":0,"7330":0,"7331":0,"7350":1,"7351":0,"7352":0,"7353":0,"7354":0,"7355":0,"7356":0,"7358":0,"7361":0,"7362":0,"7363":0,"7365":0,"7366":0,"7368":0,"7407":1,"7408":0,"7409":0,"7410":0,"7411":0,"7413":0,"7444":1,"7445":0,"7447":0,"7450":0,"7451":0,"7452":0,"7454":0,"7501":1,"7502":0,"7503":0,"7504":0,"7505":0,"7507":0,"7550":1,"7589":1,"7654":1,"7655":0,"7666":0,"7667":0,"7669":0,"7670":0,"7671":0,"7672":0,"7673":0,"7674":0,"7675":0,"7676":0,"7679":1,"7680":0,"7681":0,"7683":0,"7684":0,"7686":0,"7687":0,"7690":1,"7691":0,"7692":0,"7694":0,"7695":0,"7696":0,"7697":0,"7698":0,"7699":0,"7704":1,"7705":0,"7706":0,"7707":0,"7709":0,"7713":1,"7714":0,"7717":1,"7718":0,"7719":0,"7720":0,"7721":0,"7723":0,"7724":0,"7726":0,"7727":0,"7729":0,"7732":0,"7733":0,"7734":0,"7736":0,"7737":0,"7739":0,"7740":0,"7743":0,"7744":0,"7746":0,"7747":0,"7749":0,"7750":0,"7751":0,"7753":0,"7754":0,"7756":0,"7758":0,"7759":0,"7779":1,"7780":0,"7801":1,"7802":0,"7825":1,"7847":1,"7900":1,"7901":0,"7902":0,"7904":0,"7905":0,"7909":0,"7910":0,"7912":0,"7913":0,"7914":0,"7916":0,"7917":0,"7951":1,"7952":0,"7953":0,"7954":0,"7956":0,"7957":0,"7958":0,"7959":0,"7960":0,"7962":0,"7985":1,"7986":0,"7987":0,"7989":0,"7990":0,"8011":1,"8012":0,"8047":1,"8080":1,"8110":1,"8111":0,"8136":1,"8137":29,"8138":0,"8140":29,"8141":29,"8142":1,"8147":1,"8148":1,"8150":1,"8151":0,"8152":1,"8153":0,"8155":0,"8156":0,"8157":0,"8158":0,"8160":0,"8161":0,"8196":1,"8197":0,"8198":0,"8200":0,"8201":0,"8244":1,"8245":0,"8248":0,"8249":0,"8251":0,"8252":0,"8253":0,"8254":0,"8255":0,"8257":0,"8281":1,"8282":0,"8283":0,"8339":1,"8340":0,"8341":0,"8343":0,"8344":0,"8345":0,"8346":0,"8348":0,"8398":1,"8399":0,"8424":1,"8425":0,"8448":1,"8449":0,"8468":1,"8469":0,"8489":1,"8490":0,"8509":1,"8510":0,"8529":1,"8530":0,"8549":1,"8550":0,"8580":1,"8581":0,"8582":0,"8584":0,"8586":0,"8588":0,"8635":1,"8636":0,"8637":0,"8638":0,"8658":1,"8659":0,"8689":1,"8690":0,"8709":1,"8713":230,"8736":1,"8739":272,"8740":272,"8782":1,"8783":0,"8784":0,"8812":1,"8815":0,"8834":1,"8835":6,"8836":0,"8838":6,"8839":6,"8841":0,"8860":1,"8861":0,"8886":1,"8887":0,"8920":1,"8921":0,"8924":0,"8926":0,"8931":0,"8935":0,"8936":0,"8938":0,"8957":1,"8958":0,"8977":1,"8978":5,"8997":1,"8998":0,"9017":1,"9018":41,"9041":1,"9042":0,"9065":1,"9066":0,"9084":1,"9085":0,"9086":0,"9087":0,"9089":0,"9090":0,"9092":0,"9118":1,"9119":0,"9172":1,"9206":1,"9207":1,"9246":1,"9247":0,"9248":0,"9249":0,"9251":0,"9272":1,"9292":1,"9342":1,"9392":1,"9421":1,"9448":1,"9477":1,"9504":1,"9521":1,"9522":0,"9549":1,"9550":0,"9551":0,"9576":1,"9577":0,"9578":0,"9580":0,"9581":0,"9582":0,"9583":0,"9584":0,"9585":0,"9587":0,"9588":0,"9590":0,"9617":1,"9618":0,"9619":0,"9621":0,"9626":0,"9627":0,"9630":0,"9631":0,"9632":0,"9634":0,"9638":0,"9641":0,"9671":1,"9672":8,"9673":8,"9675":2,"9677":6,"9702":1,"9703":2,"9704":0,"9706":2,"9707":0,"9709":2,"9710":2,"9713":2,"9719":2,"9720":0,"9722":2,"9723":449,"9725":447,"9728":2,"9751":1,"9794":1,"9819":1,"9820":0,"9821":0,"9823":0,"9824":0,"9825":0,"9827":0,"9828":0,"9829":0,"9847":1,"9848":0,"9850":0,"9855":0,"9856":0,"9857":0,"9859":0,"9888":1,"9889":0,"9890":0,"9892":0,"9925":1,"9926":0,"9927":0,"9928":0,"9929":0,"9930":0,"9931":0,"9933":0,"9935":0,"9961":1,"9962":0,"9963":0,"9965":0,"9966":0,"9968":0,"9973":0,"9974":0,"9975":0,"9976":0,"9977":0,"9978":0,"9979":0,"9982":0,"9984":0,"10016":1,"10017":0,"10018":0,"10020":0,"10021":0,"10022":0,"10023":0,"10024":0,"10026":0,"10029":0,"10032":0,"10033":0,"10035":0,"10063":1,"10064":0,"10090":1,"10091":0,"10127":1,"10128":0,"10129":0,"10130":0,"10131":0,"10133":0,"10135":0,"10165":1,"10166":0,"10167":0,"10169":0,"10172":0,"10173":0,"10174":0,"10175":0,"10177":0,"10178":0,"10179":0,"10182":0,"10183":0,"10184":0,"10186":0,"10187":0,"10188":0,"10189":0,"10191":0,"10193":0,"10194":0,"10195":0,"10197":0,"10221":1,"10222":0,"10223":0,"10239":1,"10240":0,"10241":0,"10258":1,"10259":0,"10260":0,"10284":1,"10285":0,"10286":0,"10288":0,"10289":0,"10293":0,"10294":0,"10329":1,"10331":0,"10332":0,"10351":1,"10352":0,"10353":0,"10377":1,"10378":0,"10403":1,"10404":0,"10405":0,"10407":0,"10408":0,"10409":0,"10411":0,"10415":0,"10416":0,"10441":1,"10465":1,"10490":1,"10494":0,"10495":0,"10496":0,"10497":0,"10499":0,"10500":0,"10523":1,"10524":0,"10525":0,"10526":0,"10527":0,"10528":0,"10532":0,"10533":0,"10534":0,"10536":0,"10537":0,"10540":0,"10562":1,"10563":0,"10585":1,"10586":0,"10610":1,"10611":0,"10612":0,"10616":0,"10715":1,"10718":0,"10720":0,"10721":0,"10723":0,"10724":0,"10726":0,"10730":0,"10737":0,"10745":0,"10751":0,"10752":0,"10755":0,"10758":0,"10759":0,"10760":0,"10762":0,"10763":0,"10764":0,"10766":0,"10767":0,"10769":0,"10773":0,"10776":0,"10780":0,"10781":0,"10782":0,"10785":0,"10790":0,"10808":0,"10809":0,"10814":0,"10815":0,"10816":0,"10818":0,"10842":1,"10843":0,"10844":0,"10845":0,"10846":0,"10848":0,"10849":0,"10851":0,"10852":0,"10873":1,"10874":0,"10875":0,"10876":0,"10877":0,"10879":0,"10880":0,"10882":0,"10903":1,"10904":0,"10905":0,"10906":0,"10907":0,"10909":0,"10910":0,"10912":0,"10955":1,"10956":0,"10957":0,"10959":0,"10962":0,"10963":0,"10964":0,"10965":0,"10966":0,"10968":0,"10971":0,"10972":0,"10973":0,"10975":0,"10976":0,"10977":0,"10979":0,"10980":0,"10981":0,"10983":0,"10984":0,"10985":0,"10989":0,"10990":0,"10992":0,"10993":0,"10994":0,"10996":0,"10998":0,"10999":0,"11000":0,"11001":0,"11004":0,"11025":1,"11026":0,"11027":0,"11050":1,"11051":0,"11052":0,"11054":0,"11055":0,"11080":1,"11081":0,"11082":0,"11084":0,"11126":1,"11127":0,"11128":0,"11130":0,"11151":1,"11152":0,"11153":0,"11172":1,"11173":0,"11201":1,"11202":0,"11229":1,"11230":0,"11256":1,"11257":0,"11258":0,"11284":1,"11285":0,"11286":0,"11326":1,"11327":2,"11328":1,"11332":1,"11333":0,"11334":0,"11335":0,"11336":0,"11339":2,"11340":1,"11342":2,"11347":2,"11348":1,"11349":1,"11350":0,"11352":2,"11353":218,"11356":218,"11357":218,"11358":218,"11359":218,"11360":0,"11361":0,"11362":0,"11365":0,"11366":0,"11367":0,"11369":0,"11374":2,"11389":1,"11390":0,"11391":0,"11408":1,"11434":1,"11435":0,"11458":1,"11459":0,"11460":0,"11497":1,"11498":0,"11499":0,"11501":0,"11502":0,"11504":0,"11505":0,"11506":0,"11508":0,"11512":0,"11516":0,"11517":0,"11518":0,"11520":0,"11550":1,"11551":0,"11555":0,"11556":0,"11558":0,"11561":0,"11562":0,"11563":0,"11564":0,"11566":0,"11569":0,"11588":1,"11589":0,"11590":0,"11609":1,"11610":0,"11633":1,"11655":1,"11704":1,"11753":1,"11775":1,"11809":1,"11810":0,"11811":0,"11813":0,"11814":0,"11822":1,"11824":1,"11825":1,"11827":1,"11828":1,"11831":1,"11832":1,"11833":1,"11834":1,"11837":1,"11840":1,"11843":1,"11844":1,"11845":1,"11846":1,"11847":1,"11848":1,"11849":1,"11850":1,"11851":1,"11852":1,"11853":1,"11854":1,"11855":1,"11856":1,"11857":1,"11858":1,"11859":1,"11860":1,"11861":1,"11862":1,"11863":1,"11864":1,"11865":1,"11866":1,"11867":1,"11868":1,"11869":1,"11870":1,"11871":1,"11872":1,"11873":1,"11874":1,"11875":1,"11876":1,"11877":1,"11878":1,"11879":1,"11880":1,"11881":1,"11882":1,"11883":1,"11884":1,"11885":1,"11886":1,"11887":1,"11888":1,"11889":1,"11890":1,"11891":1,"11892":1,"11893":1,"11894":1,"11895":1,"11896":1,"11897":1,"11898":1,"11899":1,"11900":1,"11901":1,"11902":1,"11903":1,"11904":1,"11905":1,"11906":1,"11907":1,"11908":1,"11909":1,"11910":1,"11911":1,"11912":1,"11913":1,"11914":1,"11915":1,"11916":1,"11917":1,"11918":1,"11919":1,"11920":1,"11921":1,"11922":1,"11923":1,"11924":1,"11925":1,"11926":1,"11927":1,"11928":1,"11929":1,"11930":1,"11931":1,"11932":1,"11933":1,"11934":1,"11935":1,"11936":1,"11937":1,"11938":1,"11939":1,"11940":1,"11941":1,"11942":1,"11943":1,"11944":1,"11945":1,"11946":1,"11947":1,"11948":1,"11949":1,"11950":1,"11951":1,"11954":1,"11955":1,"11956":1,"11957":1,"11958":1,"11959":1,"11960":1,"11961":1,"11962":1,"11963":1,"11964":1,"11965":1,"11968":1,"11973":1,"11974":1,"11975":1,"11976":1,"11977":1,"11978":1,"11979":1,"11980":1,"11981":1,"11982":1,"11983":1,"11984":1,"11985":1,"11986":1,"11987":1,"11988":1,"11989":1,"11990":1,"11991":1,"11992":1,"11993":1,"11994":1,"11995":1,"11996":1,"11997":1,"11998":1,"11999":1,"12000":1,"12001":1,"12002":1,"12003":1,"12004":1,"12005":1,"12006":1,"12007":1,"12008":1,"12009":1,"12010":1,"12011":1,"12012":1,"12013":1,"12014":1,"12015":1,"12016":1,"12017":1,"12018":1,"12019":1,"12020":1,"12021":1,"12022":1,"12023":1,"12024":1,"12025":1,"12026":1,"12027":1,"12028":1,"12029":1,"12030":1,"12031":1,"12032":1,"12033":1,"12034":1,"12035":1,"12036":1,"12037":1,"12038":1,"12039":1,"12040":1,"12041":1,"12042":1,"12043":1,"12044":1,"12045":1,"12046":1,"12047":1,"12048":1,"12049":1,"12050":1,"12051":1,"12052":1,"12053":1,"12054":1,"12055":1,"12056":1,"12057":1,"12058":1,"12059":1,"12062":1,"12063":1,"12064":1,"12065":1,"12066":1,"12067":1,"12068":1,"12069":1,"12070":1,"12071":1,"12073":1,"12074":1,"12075":1,"12076":220,"12077":99,"12080":1,"12086":1,"12088":1,"12089":0,"12090":0,"12092":0,"12093":0,"12106":1,"12109":1,"12110":6,"12114":1,"12115":2,"12116":0,"12117":0,"12118":0,"12120":0,"12122":0,"12123":0,"12124":0,"12126":0,"12128":0,"12131":2,"12132":0,"12137":1,"12138":3,"12141":3,"12142":0,"12143":0,"12144":0,"12145":0,"12150":1,"12151":2,"12153":2,"12154":0,"12159":1,"12160":2,"12162":2,"12163":0,"12168":1,"12169":2,"12172":2,"12173":0,"12177":1,"12178":0,"12181":1,"12182":0,"12183":0,"12184":0,"12188":1,"12189":0,"12191":0,"12192":0,"12193":0,"12195":0,"12196":0,"12197":0,"12198":0,"12200":0,"12201":0,"12202":0,"12204":0,"12207":1,"12208":0,"12211":1,"12212":0,"12216":1,"12217":18,"12221":18,"12222":0,"12224":18,"12225":0,"12233":0,"12235":0,"12237":0,"12238":0,"12243":0,"12246":0,"12247":0,"12248":0,"12249":0,"12250":0,"12252":0,"12254":0,"12255":0,"12256":0,"12257":0,"12258":0,"12260":0,"12265":1,"12266":9,"12270":9,"12271":0,"12272":0,"12273":0,"12275":0,"12276":0,"12282":1,"12283":18,"12284":18,"12285":18,"12288":18,"12292":1,"12295":1,"12296":1,"12297":1,"12300":1,"12301":1,"12302":1,"12303":1,"12304":1,"12305":1,"12306":1,"12309":1,"12310":1,"12311":1,"12312":1,"12314":1,"12320":1,"12323":1,"12328":0,"12332":0,"12333":0,"12337":1,"12339":1,"12340":1,"12344":0,"12349":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/errors/spec.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/errors/spec.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":22}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":5,"column":0},"end":{"line":177,"column":3}},"3":{"start":{"line":26,"column":4},"end":{"line":27,"column":74}},"4":{"start":{"line":35,"column":4},"end":{"line":35,"column":117}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":49},"end":{"line":26,"column":68}},{"start":{"line":26,"column":72},"end":{"line":26,"column":74}}]},"2":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":23},"end":{"line":27,"column":66}},{"start":{"line":27,"column":70},"end":{"line":27,"column":72}}]}},"code":["'use strict';","","var docsURL = 'http://bitcore.io/';","","module.exports = [{","  name: 'InvalidB58Char',","  message: 'Invalid Base58 character: {0} in {1}'","}, {","  name: 'InvalidB58Checksum',","  message: 'Invalid Base58 checksum for {0}'","}, {","  name: 'InvalidNetwork',","  message: 'Invalid version for network: got {0}'","}, {","  name: 'InvalidState',","  message: 'Invalid state: {0}'","}, {","  name: 'NotImplemented',","  message: 'Function {0} was not implemented yet'","}, {","  name: 'InvalidNetworkArgument',","  message: 'Invalid network: must be \"livenet\" or \"testnet\", got {0}'","}, {","  name: 'InvalidArgument',","  message: function() {","    return 'Invalid Argument' + (arguments[0] ? (': ' + arguments[0]) : '') +","      (arguments[1] ? (' Documentation: ' + docsURL + arguments[1]) : '');","  }","}, {","  name: 'AbstractMethodInvoked',","  message: 'Abstract Method Invocation: {0}'","}, {","  name: 'InvalidArgumentType',","  message: function() {","    return 'Invalid Argument for ' + arguments[2] + ', expected ' + arguments[1] + ' but got ' + typeof arguments[0];","  }","}, {","  name: 'Unit',","  message: 'Internal Error on Unit {0}',","  errors: [{","    'name': 'UnknownCode',","    'message': 'Unrecognized unit code: {0}'","  }, {","    'name': 'InvalidRate',","    'message': 'Invalid exchange rate: {0}'","  }]","}, {","  name: 'Transaction',","  message: 'Internal Error on Transaction {0}',","  errors: [{","    name: 'Input',","    message: 'Internal Error on Input {0}',","    errors: [{","      name: 'MissingScript',","      message: 'Need a script to create an input'","    }, {","      name: 'UnsupportedScript',","      message: 'Unsupported input script type: {0}'","    }, {","      name: 'MissingPreviousOutput',","      message: 'No previous output information.'","    }]","  }, {","    name: 'NeedMoreInfo',","    message: '{0}'","  }, {","    name: 'InvalidSorting',","    message: 'The sorting function provided did not return the change output as one of the array elements'","  }, {","    name: 'InvalidOutputAmountSum',","    message: '{0}'","  }, {","    name: 'MissingSignatures',","    message: 'Some inputs have not been fully signed'","  }, {","    name: 'InvalidIndex',","    message: 'Invalid index: {0} is not between 0, {1}'","  }, {","    name: 'UnableToVerifySignature',","    message: 'Unable to verify signature: {0}'","  }, {","    name: 'DustOutputs',","    message: 'Dust amount detected in one output'","  }, {","    name: 'InvalidSatoshis',","    message: 'Output satoshis are invalid',","  }, {","    name: 'FeeError',","    message: 'Internal Error on Fee {0}',","    errors: [{","      name: 'TooSmall',","      message: 'Fee is too small: {0}',","    }, {","      name: 'TooLarge',","      message: 'Fee is too large: {0}',","    }, {","      name: 'Different',","      message: 'Unspent value is different from specified fee: {0}',","    }]","  }, {","    name: 'ChangeAddressMissing',","    message: 'Change address is missing'","  }, {","    name: 'BlockHeightTooHigh',","    message: 'Block Height can be at most 2^32 -1'","  }, {","    name: 'NLockTimeOutOfRange',","    message: 'Block Height can only be between 0 and 499 999 999'","  }, {","    name: 'LockTimeTooEarly',","    message: 'Lock Time can\\'t be earlier than UNIX date 500 000 000'","  }]","}, {","  name: 'Script',","  message: 'Internal Error on Script {0}',","  errors: [{","    name: 'UnrecognizedAddress',","    message: 'Expected argument {0} to be an address'","  }, {","    name: 'CantDeriveAddress',","    message: 'Can\\'t derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out.'","  }, {","    name: 'InvalidBuffer',","    message: 'Invalid script buffer: can\\'t parse valid script from given buffer {0}'","  }]","}, {","  name: 'HDPrivateKey',","  message: 'Internal Error on HDPrivateKey {0}',","  errors: [{","    name: 'InvalidDerivationArgument',","    message: 'Invalid derivation argument {0}, expected string, or number and boolean'","  }, {","    name: 'InvalidEntropyArgument',","    message: 'Invalid entropy: must be an hexa string or binary buffer, got {0}',","    errors: [{","      name: 'TooMuchEntropy',","      message: 'Invalid entropy: more than 512 bits is non standard, got \"{0}\"'","    }, {","      name: 'NotEnoughEntropy',","      message: 'Invalid entropy: at least 128 bits needed, got \"{0}\"'","    }]","  }, {","    name: 'InvalidLength',","    message: 'Invalid length for xprivkey string in {0}'","  }, {","    name: 'InvalidPath',","    message: 'Invalid derivation path: {0}'","  }, {","    name: 'UnrecognizedArgument',","    message: 'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got \"{0}\"'","  }]","}, {","  name: 'HDPublicKey',","  message: 'Internal Error on HDPublicKey {0}',","  errors: [{","    name: 'ArgumentIsPrivateExtended',","    message: 'Argument is an extended private key: {0}'","  }, {","    name: 'InvalidDerivationArgument',","    message: 'Invalid derivation argument: got {0}'","  }, {","    name: 'InvalidLength',","    message: 'Invalid length for xpubkey: got \"{0}\"'","  }, {","    name: 'InvalidPath',","    message: 'Invalid derivation path, it should look like: \"m/1/100\", got \"{0}\"'","  }, {","    name: 'InvalidIndexCantDeriveHardened',","    message: 'Invalid argument: creating a hardened path requires an HDPrivateKey'","  }, {","    name: 'MustSupplyArgument',","    message: 'Must supply an argument to create a HDPublicKey'","  }, {","    name: 'UnrecognizedArgument',","    message: 'Invalid argument for creation, must be string, json, buffer, or object'","  }]","}];",""],"l":{"3":1,"5":1,"26":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/ecdsa.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/ecdsa.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":1,"162":0,"163":1,"164":0,"165":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"ECDSA","line":13,"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":32}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":22},"end":{"line":23,"column":36}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":33},"end":{"line":34,"column":44}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":24},"end":{"line":38,"column":35}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":19},"end":{"line":59,"column":33}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":26},"end":{"line":64,"column":37}}},"7":{"name":"(anonymous_7)","line":76,"loc":{"start":{"line":76,"column":33},"end":{"line":76,"column":49}}},"8":{"name":"(anonymous_8)","line":115,"loc":{"start":{"line":115,"column":30},"end":{"line":115,"column":41}}},"9":{"name":"(anonymous_9)","line":160,"loc":{"start":{"line":160,"column":27},"end":{"line":160,"column":38}}},"10":{"name":"(anonymous_10)","line":192,"loc":{"start":{"line":192,"column":15},"end":{"line":192,"column":27}}},"11":{"name":"(anonymous_11)","line":201,"loc":{"start":{"line":201,"column":33},"end":{"line":201,"column":48}}},"12":{"name":"(anonymous_12)","line":226,"loc":{"start":{"line":226,"column":23},"end":{"line":226,"column":34}}},"13":{"name":"(anonymous_13)","line":245,"loc":{"start":{"line":245,"column":30},"end":{"line":245,"column":41}}},"14":{"name":"(anonymous_14)","line":250,"loc":{"start":{"line":250,"column":27},"end":{"line":250,"column":38}}},"15":{"name":"(anonymous_15)","line":270,"loc":{"start":{"line":270,"column":25},"end":{"line":270,"column":36}}},"16":{"name":"(anonymous_16)","line":279,"loc":{"start":{"line":279,"column":13},"end":{"line":279,"column":48}}},"17":{"name":"(anonymous_17)","line":287,"loc":{"start":{"line":287,"column":15},"end":{"line":287,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"10":{"start":{"line":13,"column":0},"end":{"line":20,"column":2}},"11":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":26}},"13":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"15":{"start":{"line":23,"column":0},"end":{"line":32,"column":2}},"16":{"start":{"line":24,"column":2},"end":{"line":24,"column":45}},"17":{"start":{"line":25,"column":2},"end":{"line":25,"column":42}},"18":{"start":{"line":26,"column":2},"end":{"line":26,"column":45}},"19":{"start":{"line":27,"column":2},"end":{"line":27,"column":84}},"20":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}},"21":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}},"22":{"start":{"line":30,"column":2},"end":{"line":30,"column":48}},"23":{"start":{"line":31,"column":2},"end":{"line":31,"column":14}},"24":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"25":{"start":{"line":35,"column":2},"end":{"line":35,"column":43}},"26":{"start":{"line":38,"column":0},"end":{"line":57,"column":2}},"27":{"start":{"line":39,"column":2},"end":{"line":53,"column":3}},"28":{"start":{"line":40,"column":4},"end":{"line":40,"column":19}},"29":{"start":{"line":41,"column":4},"end":{"line":41,"column":15}},"30":{"start":{"line":42,"column":4},"end":{"line":47,"column":5}},"31":{"start":{"line":43,"column":6},"end":{"line":43,"column":34}},"32":{"start":{"line":45,"column":6},"end":{"line":45,"column":23}},"33":{"start":{"line":46,"column":6},"end":{"line":46,"column":15}},"34":{"start":{"line":49,"column":4},"end":{"line":52,"column":5}},"35":{"start":{"line":50,"column":6},"end":{"line":50,"column":51}},"36":{"start":{"line":51,"column":6},"end":{"line":51,"column":18}},"37":{"start":{"line":55,"column":2},"end":{"line":55,"column":25}},"38":{"start":{"line":56,"column":2},"end":{"line":56,"column":58}},"39":{"start":{"line":59,"column":0},"end":{"line":62,"column":2}},"40":{"start":{"line":60,"column":2},"end":{"line":60,"column":28}},"41":{"start":{"line":61,"column":2},"end":{"line":61,"column":24}},"42":{"start":{"line":64,"column":0},"end":{"line":72,"column":2}},"43":{"start":{"line":65,"column":2},"end":{"line":65,"column":23}},"44":{"start":{"line":66,"column":2},"end":{"line":66,"column":8}},"45":{"start":{"line":67,"column":2},"end":{"line":69,"column":40}},"46":{"start":{"line":68,"column":4},"end":{"line":68,"column":50}},"47":{"start":{"line":70,"column":2},"end":{"line":70,"column":13}},"48":{"start":{"line":71,"column":2},"end":{"line":71,"column":14}},"49":{"start":{"line":76,"column":0},"end":{"line":110,"column":2}},"50":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"51":{"start":{"line":82,"column":4},"end":{"line":82,"column":14}},"52":{"start":{"line":84,"column":2},"end":{"line":84,"column":25}},"53":{"start":{"line":85,"column":2},"end":{"line":85,"column":15}},"54":{"start":{"line":86,"column":2},"end":{"line":86,"column":25}},"55":{"start":{"line":87,"column":2},"end":{"line":87,"column":15}},"56":{"start":{"line":88,"column":2},"end":{"line":90,"column":5}},"57":{"start":{"line":91,"column":2},"end":{"line":91,"column":90}},"58":{"start":{"line":92,"column":2},"end":{"line":92,"column":77}},"59":{"start":{"line":93,"column":2},"end":{"line":93,"column":28}},"60":{"start":{"line":94,"column":2},"end":{"line":94,"column":77}},"61":{"start":{"line":95,"column":2},"end":{"line":95,"column":28}},"62":{"start":{"line":96,"column":2},"end":{"line":96,"column":28}},"63":{"start":{"line":97,"column":2},"end":{"line":97,"column":27}},"64":{"start":{"line":98,"column":2},"end":{"line":98,"column":23}},"65":{"start":{"line":101,"column":2},"end":{"line":106,"column":3}},"66":{"start":{"line":102,"column":4},"end":{"line":102,"column":67}},"67":{"start":{"line":103,"column":4},"end":{"line":103,"column":30}},"68":{"start":{"line":104,"column":4},"end":{"line":104,"column":30}},"69":{"start":{"line":105,"column":4},"end":{"line":105,"column":25}},"70":{"start":{"line":108,"column":2},"end":{"line":108,"column":13}},"71":{"start":{"line":109,"column":2},"end":{"line":109,"column":14}},"72":{"start":{"line":115,"column":0},"end":{"line":158,"column":2}},"73":{"start":{"line":117,"column":2},"end":{"line":117,"column":21}},"74":{"start":{"line":118,"column":2},"end":{"line":118,"column":107}},"75":{"start":{"line":120,"column":2},"end":{"line":120,"column":38}},"76":{"start":{"line":121,"column":2},"end":{"line":121,"column":21}},"77":{"start":{"line":122,"column":2},"end":{"line":122,"column":21}},"78":{"start":{"line":125,"column":2},"end":{"line":125,"column":21}},"79":{"start":{"line":129,"column":2},"end":{"line":129,"column":27}},"80":{"start":{"line":131,"column":2},"end":{"line":131,"column":23}},"81":{"start":{"line":132,"column":2},"end":{"line":132,"column":23}},"82":{"start":{"line":135,"column":2},"end":{"line":135,"column":37}},"83":{"start":{"line":136,"column":2},"end":{"line":136,"column":33}},"84":{"start":{"line":139,"column":2},"end":{"line":139,"column":20}},"85":{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},"86":{"start":{"line":142,"column":4},"end":{"line":142,"column":53}},"87":{"start":{"line":146,"column":2},"end":{"line":146,"column":28}},"88":{"start":{"line":150,"column":2},"end":{"line":150,"column":23}},"89":{"start":{"line":153,"column":2},"end":{"line":153,"column":46}},"90":{"start":{"line":155,"column":2},"end":{"line":155,"column":59}},"91":{"start":{"line":157,"column":2},"end":{"line":157,"column":16}},"92":{"start":{"line":160,"column":0},"end":{"line":190,"column":2}},"93":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"94":{"start":{"line":163,"column":4},"end":{"line":163,"column":46}},"95":{"start":{"line":166,"column":2},"end":{"line":166,"column":21}},"96":{"start":{"line":167,"column":2},"end":{"line":167,"column":21}},"97":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"98":{"start":{"line":169,"column":4},"end":{"line":169,"column":34}},"99":{"start":{"line":172,"column":2},"end":{"line":174,"column":17}},"100":{"start":{"line":175,"column":2},"end":{"line":175,"column":23}},"101":{"start":{"line":176,"column":2},"end":{"line":176,"column":23}},"102":{"start":{"line":177,"column":2},"end":{"line":177,"column":30}},"103":{"start":{"line":178,"column":2},"end":{"line":178,"column":30}},"104":{"start":{"line":180,"column":2},"end":{"line":180,"column":57}},"105":{"start":{"line":181,"column":2},"end":{"line":183,"column":3}},"106":{"start":{"line":182,"column":4},"end":{"line":182,"column":27}},"107":{"start":{"line":185,"column":2},"end":{"line":189,"column":3}},"108":{"start":{"line":186,"column":4},"end":{"line":186,"column":31}},"109":{"start":{"line":188,"column":4},"end":{"line":188,"column":17}},"110":{"start":{"line":192,"column":0},"end":{"line":199,"column":2}},"111":{"start":{"line":195,"column":2},"end":{"line":197,"column":3}},"112":{"start":{"line":196,"column":4},"end":{"line":196,"column":28}},"113":{"start":{"line":198,"column":2},"end":{"line":198,"column":11}},"114":{"start":{"line":201,"column":0},"end":{"line":224,"column":2}},"115":{"start":{"line":202,"column":2},"end":{"line":202,"column":23}},"116":{"start":{"line":203,"column":2},"end":{"line":203,"column":23}},"117":{"start":{"line":205,"column":2},"end":{"line":205,"column":16}},"118":{"start":{"line":206,"column":2},"end":{"line":206,"column":17}},"119":{"start":{"line":207,"column":2},"end":{"line":216,"column":55}},"120":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"121":{"start":{"line":209,"column":6},"end":{"line":209,"column":33}},"122":{"start":{"line":211,"column":4},"end":{"line":211,"column":12}},"123":{"start":{"line":212,"column":4},"end":{"line":212,"column":15}},"124":{"start":{"line":213,"column":4},"end":{"line":213,"column":17}},"125":{"start":{"line":214,"column":4},"end":{"line":214,"column":19}},"126":{"start":{"line":215,"column":4},"end":{"line":215,"column":46}},"127":{"start":{"line":218,"column":2},"end":{"line":218,"column":22}},"128":{"start":{"line":219,"column":2},"end":{"line":222,"column":4}},"129":{"start":{"line":226,"column":0},"end":{"line":243,"column":2}},"130":{"start":{"line":227,"column":2},"end":{"line":227,"column":29}},"131":{"start":{"line":228,"column":2},"end":{"line":228,"column":29}},"132":{"start":{"line":229,"column":2},"end":{"line":229,"column":21}},"133":{"start":{"line":231,"column":2},"end":{"line":231,"column":73}},"134":{"start":{"line":232,"column":2},"end":{"line":232,"column":117}},"135":{"start":{"line":234,"column":2},"end":{"line":236,"column":17}},"136":{"start":{"line":238,"column":2},"end":{"line":238,"column":38}},"137":{"start":{"line":239,"column":2},"end":{"line":239,"column":42}},"138":{"start":{"line":241,"column":2},"end":{"line":241,"column":32}},"139":{"start":{"line":242,"column":2},"end":{"line":242,"column":14}},"140":{"start":{"line":245,"column":0},"end":{"line":248,"column":2}},"141":{"start":{"line":246,"column":2},"end":{"line":246,"column":17}},"142":{"start":{"line":247,"column":2},"end":{"line":247,"column":21}},"143":{"start":{"line":250,"column":0},"end":{"line":268,"column":2}},"144":{"start":{"line":251,"column":2},"end":{"line":251,"column":15}},"145":{"start":{"line":252,"column":2},"end":{"line":254,"column":3}},"146":{"start":{"line":253,"column":4},"end":{"line":253,"column":47}},"147":{"start":{"line":255,"column":2},"end":{"line":257,"column":3}},"148":{"start":{"line":256,"column":4},"end":{"line":256,"column":42}},"149":{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},"150":{"start":{"line":259,"column":4},"end":{"line":259,"column":40}},"151":{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},"152":{"start":{"line":262,"column":4},"end":{"line":262,"column":34}},"153":{"start":{"line":264,"column":2},"end":{"line":266,"column":3}},"154":{"start":{"line":265,"column":4},"end":{"line":265,"column":30}},"155":{"start":{"line":267,"column":2},"end":{"line":267,"column":29}},"156":{"start":{"line":270,"column":0},"end":{"line":277,"column":2}},"157":{"start":{"line":271,"column":2},"end":{"line":275,"column":3}},"158":{"start":{"line":272,"column":4},"end":{"line":272,"column":25}},"159":{"start":{"line":274,"column":4},"end":{"line":274,"column":26}},"160":{"start":{"line":276,"column":2},"end":{"line":276,"column":14}},"161":{"start":{"line":279,"column":0},"end":{"line":285,"column":2}},"162":{"start":{"line":280,"column":2},"end":{"line":284,"column":16}},"163":{"start":{"line":287,"column":0},"end":{"line":294,"column":2}},"164":{"start":{"line":288,"column":2},"end":{"line":293,"column":23}},"165":{"start":{"line":296,"column":0},"end":{"line":296,"column":23}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":17},"end":{"line":24,"column":28}},{"start":{"line":24,"column":32},"end":{"line":24,"column":44}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":26}},{"start":{"line":25,"column":30},"end":{"line":25,"column":41}}]},"5":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":17},"end":{"line":26,"column":28}},{"start":{"line":26,"column":32},"end":{"line":26,"column":44}}]},"6":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":26}},{"start":{"line":27,"column":31},"end":{"line":27,"column":82}}]},"7":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":46},"end":{"line":27,"column":68}},{"start":{"line":27,"column":71},"end":{"line":27,"column":82}}]},"8":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":13},"end":{"line":28,"column":20}},{"start":{"line":28,"column":24},"end":{"line":28,"column":32}}]},"9":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":16}},{"start":{"line":29,"column":20},"end":{"line":29,"column":26}}]},"10":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":18},"end":{"line":30,"column":30}},{"start":{"line":30,"column":34},"end":{"line":30,"column":47}}]},"11":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"12":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":13},"end":{"line":69,"column":20}},{"start":{"line":69,"column":24},"end":{"line":69,"column":37}}]},"13":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"14":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":43},"end":{"line":91,"column":75}},{"start":{"line":91,"column":78},"end":{"line":91,"column":90}}]},"15":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":18},"end":{"line":101,"column":27}},{"start":{"line":101,"column":31},"end":{"line":101,"column":58}}]},"16":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":33},"end":{"line":101,"column":40}},{"start":{"line":101,"column":44},"end":{"line":101,"column":57}}]},"17":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":18},"end":{"line":118,"column":25}},{"start":{"line":118,"column":29},"end":{"line":118,"column":36}},{"start":{"line":118,"column":40},"end":{"line":118,"column":47}},{"start":{"line":118,"column":51},"end":{"line":118,"column":58}}]},"18":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":24},"end":{"line":135,"column":32}},{"start":{"line":135,"column":35},"end":{"line":135,"column":36}}]},"19":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"20":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"21":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":40}},{"start":{"line":162,"column":44},"end":{"line":162,"column":70}}]},"22":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"23":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":6},"end":{"line":168,"column":44}},{"start":{"line":168,"column":48},"end":{"line":168,"column":86}}]},"24":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":8},"end":{"line":168,"column":21}},{"start":{"line":168,"column":25},"end":{"line":168,"column":43}}]},"25":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":50},"end":{"line":168,"column":63}},{"start":{"line":168,"column":67},"end":{"line":168,"column":85}}]},"26":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":52},"end":{"line":174,"column":3}},{"start":{"line":174,"column":6},"end":{"line":174,"column":15}}]},"27":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"28":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"29":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"30":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"31":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":8},"end":{"line":208,"column":15}},{"start":{"line":208,"column":19},"end":{"line":208,"column":28}}]},"32":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":11},"end":{"line":216,"column":30}},{"start":{"line":216,"column":34},"end":{"line":216,"column":53}}]},"33":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":15},"end":{"line":231,"column":22}},{"start":{"line":231,"column":26},"end":{"line":231,"column":33}},{"start":{"line":231,"column":37},"end":{"line":231,"column":38}}]},"34":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":15},"end":{"line":232,"column":43}},{"start":{"line":232,"column":47},"end":{"line":232,"column":68}}]},"35":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":47},"end":{"line":236,"column":3}},{"start":{"line":236,"column":6},"end":{"line":236,"column":15}}]},"36":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":252,"column":2}},{"start":{"line":252,"column":2},"end":{"line":252,"column":2}}]},"37":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"38":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"39":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":261,"column":2}},{"start":{"line":261,"column":2},"end":{"line":261,"column":2}}]},"40":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"41":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":2},"end":{"line":271,"column":2}},{"start":{"line":271,"column":2},"end":{"line":271,"column":2}}]}},"code":["'use strict';","","var BN = require('./bn');","var Point = require('./point');","var Signature = require('./signature');","var PublicKey = require('../publickey');","var Random = require('./random');","var Hash = require('./hash');","var BufferUtil = require('../util/buffer');","var _ = require('lodash');","var $ = require('../util/preconditions');","","var ECDSA = function ECDSA(obj) {","  if (!(this instanceof ECDSA)) {","    return new ECDSA(obj);","  }","  if (obj) {","    this.set(obj);","  }","};","","/* jshint maxcomplexity: 9 */","ECDSA.prototype.set = function(obj) {","  this.hashbuf = obj.hashbuf || this.hashbuf;","  this.endian = obj.endian || this.endian; //the endianness of hashbuf","  this.privkey = obj.privkey || this.privkey;","  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);","  this.sig = obj.sig || this.sig;","  this.k = obj.k || this.k;","  this.verified = obj.verified || this.verified;","  return this;","};","","ECDSA.prototype.privkey2pubkey = function() {","  this.pubkey = this.privkey.toPublicKey();","};","","ECDSA.prototype.calci = function() {","  for (var i = 0; i < 4; i++) {","    this.sig.i = i;","    var Qprime;","    try {","      Qprime = this.toPublicKey();","    } catch (e) {","      console.error(e);","      continue;","    }","","    if (Qprime.point.eq(this.pubkey.point)) {","      this.sig.compressed = this.pubkey.compressed;","      return this;","    }","  }","","  this.sig.i = undefined;","  throw new Error('Unable to find valid recovery factor');","};","","ECDSA.fromString = function(str) {","  var obj = JSON.parse(str);","  return new ECDSA(obj);","};","","ECDSA.prototype.randomK = function() {","  var N = Point.getN();","  var k;","  do {","    k = BN.fromBuffer(Random.getRandomBuffer(32));","  } while (!(k.lt(N) && k.gt(BN.Zero)));","  this.k = k;","  return this;","};","","","// https://tools.ietf.org/html/rfc6979#section-3.2","ECDSA.prototype.deterministicK = function(badrs) {","  /* jshint maxstatements: 25 */","  // if r or s were invalid when this function was used in signing,","  // we do not want to actually compute r, s here for efficiency, so,","  // we can increment badrs. explained at end of RFC 6979 section 3.2","  if (_.isUndefined(badrs)) {","    badrs = 0;","  }","  var v = new Buffer(32);","  v.fill(0x01);","  var k = new Buffer(32);","  k.fill(0x00);","  var x = this.privkey.bn.toBuffer({","    size: 32","  });","  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf","  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00]), x, hashbuf]), k);","  v = Hash.sha256hmac(v, k);","  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x01]), x, hashbuf]), k);","  v = Hash.sha256hmac(v, k);","  v = Hash.sha256hmac(v, k);","  var T = BN.fromBuffer(v);","  var N = Point.getN();","","  // also explained in 3.2, we must ensure T is in the proper range (0, N)","  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {","    k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00])]), k);","    v = Hash.sha256hmac(v, k);","    v = Hash.sha256hmac(v, k);","    T = BN.fromBuffer(v);","  }","","  this.k = T;","  return this;","};","","// Information about public key recovery:","// https://bitcointalk.org/index.php?topic=6430.0","// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k","ECDSA.prototype.toPublicKey = function() {","  /* jshint maxstatements: 25 */","  var i = this.sig.i;","  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));","","  var e = BN.fromBuffer(this.hashbuf);","  var r = this.sig.r;","  var s = this.sig.s;","","  // A set LSB signifies that the y-coordinate is odd","  var isYOdd = i & 1;","","  // The more significant bit specifies whether we should use the","  // first or second candidate key.","  var isSecondKey = i >> 1;","","  var n = Point.getN();","  var G = Point.getG();","","  // 1.1 Let x = r + jn","  var x = isSecondKey ? r.add(n) : r;","  var R = Point.fromX(isYOdd, x);","","  // 1.4 Check that nR is at infinity","  var nR = R.mul(n);","","  if (!nR.isInfinity()) {","    throw new Error('nR is not a valid curve point');","  }","","  // Compute -e from e","  var eNeg = e.neg().mod(n);","","  // 1.6.1 Compute Q = r^-1 (sR - eG)","  // Q = r^-1 (sR + -eG)","  var rInv = r.invm(n);","","  //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);","  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);","","  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);","","  return pubkey;","};","","ECDSA.prototype.sigError = function() {","  /* jshint maxstatements: 25 */","  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {","    return 'hashbuf must be a 32 byte buffer';","  }","","  var r = this.sig.r;","  var s = this.sig.s;","  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {","    return 'r and s not in range';","  }","","  var e = BN.fromBuffer(this.hashbuf, this.endian ? {","    endian: this.endian","  } : undefined);","  var n = Point.getN();","  var sinv = s.invm(n);","  var u1 = sinv.mul(e).mod(n);","  var u2 = sinv.mul(r).mod(n);","","  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);","  if (p.isInfinity()) {","    return 'p is infinity';","  }","","  if (p.getX().mod(n).cmp(r) !== 0) {","    return 'Invalid signature';","  } else {","    return false;","  }","};","","ECDSA.toLowS = function(s) {","  //enforce low s","  //see BIP 62, \"low S values in signatures\"","  if (s.gt(BN.fromBuffer(new Buffer('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {","    s = Point.getN().sub(s);","  }","  return s;","};","","ECDSA.prototype._findSignature = function(d, e) {","  var N = Point.getN();","  var G = Point.getG();","  // try different values of k until r, s are valid","  var badrs = 0;","  var k, Q, r, s;","  do {","    if (!this.k || badrs > 0) {","      this.deterministicK(badrs);","    }","    badrs++;","    k = this.k;","    Q = G.mul(k);","    r = Q.x.mod(N);","    s = k.invm(N).mul(e.add(d.mul(r))).mod(N);","  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);","","  s = ECDSA.toLowS(s);","  return {","    s: s,","    r: r","  };","","};","","ECDSA.prototype.sign = function() {","  var hashbuf = this.hashbuf;","  var privkey = this.privkey;","  var d = privkey.bn;","","  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));","  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));","","  var e = BN.fromBuffer(hashbuf, this.endian ? {","    endian: this.endian","  } : undefined);","","  var obj = this._findSignature(d, e);","  obj.compressed = this.pubkey.compressed;","","  this.sig = new Signature(obj);","  return this;","};","","ECDSA.prototype.signRandomK = function() {","  this.randomK();","  return this.sign();","};","","ECDSA.prototype.toString = function() {","  var obj = {};","  if (this.hashbuf) {","    obj.hashbuf = this.hashbuf.toString('hex');","  }","  if (this.privkey) {","    obj.privkey = this.privkey.toString();","  }","  if (this.pubkey) {","    obj.pubkey = this.pubkey.toString();","  }","  if (this.sig) {","    obj.sig = this.sig.toString();","  }","  if (this.k) {","    obj.k = this.k.toString();","  }","  return JSON.stringify(obj);","};","","ECDSA.prototype.verify = function() {","  if (!this.sigError()) {","    this.verified = true;","  } else {","    this.verified = false;","  }","  return this;","};","","ECDSA.sign = function(hashbuf, privkey, endian) {","  return ECDSA().set({","    hashbuf: hashbuf,","    endian: endian,","    privkey: privkey","  }).sign().sig;","};","","ECDSA.verify = function(hashbuf, sig, pubkey, endian) {","  return ECDSA().set({","    hashbuf: hashbuf,","    endian: endian,","    sig: sig,","    pubkey: pubkey","  }).verify().verified;","};","","module.exports = ECDSA;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"14":0,"15":0,"17":0,"18":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"34":1,"35":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"46":0,"49":0,"50":0,"51":0,"55":0,"56":0,"59":1,"60":0,"61":0,"64":1,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"76":1,"81":0,"82":0,"84":0,"85":0,"86":0,"87":0,"88":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"101":0,"102":0,"103":0,"104":0,"105":0,"108":0,"109":0,"115":1,"117":0,"118":0,"120":0,"121":0,"122":0,"125":0,"129":0,"131":0,"132":0,"135":0,"136":0,"139":0,"141":0,"142":0,"146":0,"150":0,"153":0,"155":0,"157":0,"160":1,"162":0,"163":0,"166":0,"167":0,"168":0,"169":0,"172":0,"175":0,"176":0,"177":0,"178":0,"180":0,"181":0,"182":0,"185":0,"186":0,"188":0,"192":1,"195":0,"196":0,"198":0,"201":1,"202":0,"203":0,"205":0,"206":0,"207":0,"208":0,"209":0,"211":0,"212":0,"213":0,"214":0,"215":0,"218":0,"219":0,"226":1,"227":0,"228":0,"229":0,"231":0,"232":0,"234":0,"238":0,"239":0,"241":0,"242":0,"245":1,"246":0,"247":0,"250":1,"251":0,"252":0,"253":0,"255":0,"256":0,"258":0,"259":0,"261":0,"262":0,"264":0,"265":0,"267":0,"270":1,"271":0,"272":0,"274":0,"276":0,"279":1,"280":0,"287":1,"288":0,"296":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/point.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/point.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":1,"21":0,"22":1,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"Point","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":40}}},"2":{"name":"fromX","line":38,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":36}}},"3":{"name":"getG","line":51,"loc":{"start":{"line":51,"column":13},"end":{"line":51,"column":29}}},"4":{"name":"getN","line":62,"loc":{"start":{"line":62,"column":13},"end":{"line":62,"column":29}}},"5":{"name":"getX","line":74,"loc":{"start":{"line":74,"column":23},"end":{"line":74,"column":39}}},"6":{"name":"getY","line":86,"loc":{"start":{"line":86,"column":23},"end":{"line":86,"column":39}}},"7":{"name":"validate","line":99,"loc":{"start":{"line":99,"column":27},"end":{"line":99,"column":47}}},"8":{"name":"pointToCompressed","line":131,"loc":{"start":{"line":131,"column":26},"end":{"line":131,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":54}},"6":{"start":{"line":21,"column":0},"end":{"line":25,"column":2}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":35}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":19}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":58}},"11":{"start":{"line":38,"column":0},"end":{"line":42,"column":2}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":35}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":19}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":15}},"15":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}},"16":{"start":{"line":52,"column":2},"end":{"line":52,"column":20}},"17":{"start":{"line":62,"column":0},"end":{"line":64,"column":2}},"18":{"start":{"line":63,"column":2},"end":{"line":63,"column":38}},"19":{"start":{"line":66,"column":0},"end":{"line":66,"column":45}},"20":{"start":{"line":74,"column":0},"end":{"line":76,"column":2}},"21":{"start":{"line":75,"column":2},"end":{"line":75,"column":40}},"22":{"start":{"line":78,"column":0},"end":{"line":78,"column":45}},"23":{"start":{"line":86,"column":0},"end":{"line":88,"column":2}},"24":{"start":{"line":87,"column":2},"end":{"line":87,"column":40}},"25":{"start":{"line":99,"column":0},"end":{"line":129,"column":2}},"26":{"start":{"line":101,"column":2},"end":{"line":103,"column":3}},"27":{"start":{"line":102,"column":4},"end":{"line":102,"column":57}},"28":{"start":{"line":105,"column":2},"end":{"line":107,"column":3}},"29":{"start":{"line":106,"column":4},"end":{"line":106,"column":68}},"30":{"start":{"line":109,"column":2},"end":{"line":109,"column":58}},"31":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"32":{"start":{"line":112,"column":4},"end":{"line":112,"column":50}},"33":{"start":{"line":115,"column":2},"end":{"line":115,"column":80}},"34":{"start":{"line":116,"column":2},"end":{"line":116,"column":80}},"35":{"start":{"line":118,"column":2},"end":{"line":120,"column":3}},"36":{"start":{"line":119,"column":4},"end":{"line":119,"column":55}},"37":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"38":{"start":{"line":124,"column":4},"end":{"line":124,"column":54}},"39":{"start":{"line":127,"column":2},"end":{"line":127,"column":14}},"40":{"start":{"line":131,"column":0},"end":{"line":143,"column":2}},"41":{"start":{"line":132,"column":2},"end":{"line":132,"column":47}},"42":{"start":{"line":133,"column":2},"end":{"line":133,"column":47}},"43":{"start":{"line":135,"column":2},"end":{"line":135,"column":13}},"44":{"start":{"line":136,"column":2},"end":{"line":136,"column":38}},"45":{"start":{"line":137,"column":2},"end":{"line":141,"column":3}},"46":{"start":{"line":138,"column":4},"end":{"line":138,"column":32}},"47":{"start":{"line":140,"column":4},"end":{"line":140,"column":32}},"48":{"start":{"line":142,"column":2},"end":{"line":142,"column":43}},"49":{"start":{"line":145,"column":0},"end":{"line":145,"column":23}}},"branchMap":{"1":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"2":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"3":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":36}},{"start":{"line":105,"column":40},"end":{"line":105,"column":70}}]},"4":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"5":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":21},"end":{"line":115,"column":46}},{"start":{"line":115,"column":50},"end":{"line":115,"column":78}}]},"6":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":21},"end":{"line":116,"column":46}},{"start":{"line":116,"column":50},"end":{"line":116,"column":78}}]},"7":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"8":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":7},"end":{"line":118,"column":19}},{"start":{"line":118,"column":23},"end":{"line":118,"column":35}}]},"9":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"10":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]}},"code":["'use strict';","","var BN = require('./bn');","var BufferUtil = require('../util/buffer');","var ec = require('elliptic').curves.secp256k1;","var ecPoint = ec.curve.point.bind(ec.curve);","var ecPointFromX = ec.curve.pointFromX.bind(ec.curve);","","/**"," *"," * Instantiate a valid secp256k1 Point from the X and Y coordinates."," *"," * @param {BN|String} x - The X coordinate"," * @param {BN|String} y - The Y coordinate"," * @link https://github.com/indutny/elliptic"," * @augments elliptic.curve.point"," * @throws {Error} A validation error if exists"," * @returns {Point} An instance of Point"," * @constructor"," */","var Point = function Point(x, y, isRed) {","  var point = ecPoint(x, y, isRed);","  point.validate();","  return point;","};","","Point.prototype = Object.getPrototypeOf(ec.curve.point());","","/**"," *"," * Instantiate a valid secp256k1 Point from only the X coordinate"," *"," * @param {boolean} odd - If the Y coordinate is odd"," * @param {BN|String} x - The X coordinate"," * @throws {Error} A validation error if exists"," * @returns {Point} An instance of Point"," */","Point.fromX = function fromX(odd, x){","  var point = ecPointFromX(odd, x);","  point.validate();","  return point;","};","","/**"," *"," * Will return a secp256k1 ECDSA base point."," *"," * @link https://en.bitcoin.it/wiki/Secp256k1"," * @returns {Point} An instance of the base point."," */","Point.getG = function getG() {","  return ec.curve.g;","};","","/**"," *"," * Will return the max of range of valid private keys as governed by the secp256k1 ECDSA standard."," *"," * @link https://en.bitcoin.it/wiki/Private_key#Range_of_valid_ECDSA_private_keys"," * @returns {BN} A BN instance of the number of points on the curve"," */","Point.getN = function getN() {","  return new BN(ec.curve.n.toArray());","};","","Point.prototype._getX = Point.prototype.getX;","","/**"," *"," * Will return the X coordinate of the Point"," *"," * @returns {BN} A BN instance of the X coordinate"," */","Point.prototype.getX = function getX() {","  return new BN(this._getX().toArray());","};","","Point.prototype._getY = Point.prototype.getY;","","/**"," *"," * Will return the Y coordinate of the Point"," *"," * @returns {BN} A BN instance of the Y coordinate"," */","Point.prototype.getY = function getY() {","  return new BN(this._getY().toArray());","};","","/**"," *"," * Will determine if the point is valid"," *"," * @link https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf"," * @param {Point} An instance of Point"," * @throws {Error} A validation error if exists"," * @returns {Point} An instance of the same Point"," */","Point.prototype.validate = function validate() {","","  if (this.isInfinity()){","    throw new Error('Point cannot be equal to Infinity');","  }","","  if (this.getX().cmp(BN.Zero) === 0 || this.getY().cmp(BN.Zero) === 0){","    throw new Error('Invalid x,y value for curve, cannot equal 0.');","  }","","  var p2 = ecPointFromX(this.getY().isOdd(), this.getX());","","  if (p2.y.cmp(this.y) !== 0) {","    throw new Error('Invalid y value for curve.');","  }","","  var xValidRange = (this.getX().gt(BN.Minus1) && this.getX().lt(Point.getN()));","  var yValidRange = (this.getY().gt(BN.Minus1) && this.getY().lt(Point.getN()));","","  if ( !xValidRange || !yValidRange ) {","    throw new Error('Point does not lie on the curve');","  }","","  //todo: needs test case","  if (!(this.mul(Point.getN()).isInfinity())) {","    throw new Error('Point times N must be infinity');","  }","","  return this;","","};","","Point.pointToCompressed = function pointToCompressed(point) {","  var xbuf = point.getX().toBuffer({size: 32});","  var ybuf = point.getY().toBuffer({size: 32});","","  var prefix;","  var odd = ybuf[ybuf.length - 1] % 2;","  if (odd) {","    prefix = new Buffer([0x03]);","  } else {","    prefix = new Buffer([0x02]);","  }","  return BufferUtil.concat([prefix, xbuf]);","};","","module.exports = Point;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"21":1,"22":0,"23":0,"24":0,"27":1,"38":1,"39":0,"40":0,"41":0,"51":1,"52":0,"62":1,"63":0,"66":1,"74":1,"75":0,"78":1,"86":1,"87":0,"99":1,"101":0,"102":0,"105":0,"106":0,"109":0,"111":0,"112":0,"115":0,"116":0,"118":0,"119":0,"123":0,"124":0,"127":0,"131":1,"132":0,"133":0,"135":0,"136":0,"137":0,"138":0,"140":0,"142":0,"145":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/util/buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/util/buffer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":32,"19":1,"20":0,"21":0,"22":0,"23":49,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":3,"32":3,"33":3,"34":3,"35":3,"36":3,"37":3,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1},"b":{"1":[0,0],"2":[0,0],"3":[49,20]},"f":{"1":0,"2":1,"3":0,"4":49,"5":0,"6":0,"7":3,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"equals","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":22}}},"2":{"name":"fill","line":30,"loc":{"start":{"line":30,"column":8},"end":{"line":30,"column":37}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":8},"end":{"line":46,"column":27}}},"4":{"name":"isBuffer","line":59,"loc":{"start":{"line":59,"column":12},"end":{"line":59,"column":35}}},"5":{"name":"emptyBuffer","line":69,"loc":{"start":{"line":69,"column":15},"end":{"line":69,"column":43}}},"6":{"name":"integerAsSingleByteBuffer","line":94,"loc":{"start":{"line":94,"column":29},"end":{"line":94,"column":73}}},"7":{"name":"integerAsBuffer","line":105,"loc":{"start":{"line":105,"column":19},"end":{"line":105,"column":53}}},"8":{"name":"integerFromBuffer","line":121,"loc":{"start":{"line":121,"column":21},"end":{"line":121,"column":56}}},"9":{"name":"integerFromBuffer","line":131,"loc":{"start":{"line":131,"column":31},"end":{"line":131,"column":66}}},"10":{"name":"bufferToHex","line":144,"loc":{"start":{"line":144,"column":15},"end":{"line":144,"column":44}}},"11":{"name":"reverse","line":154,"loc":{"start":{"line":154,"column":11},"end":{"line":154,"column":35}}},"12":{"name":"hexToBuffer","line":170,"loc":{"start":{"line":170,"column":15},"end":{"line":170,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"5":{"start":{"line":9,"column":0},"end":{"line":20,"column":1}},"6":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":24}},"9":{"start":{"line":14,"column":2},"end":{"line":18,"column":3}},"10":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"11":{"start":{"line":16,"column":6},"end":{"line":16,"column":19}},"12":{"start":{"line":19,"column":2},"end":{"line":19,"column":14}},"13":{"start":{"line":22,"column":0},"end":{"line":174,"column":2}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":52}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":50}},"16":{"start":{"line":33,"column":4},"end":{"line":33,"column":31}},"17":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"18":{"start":{"line":35,"column":6},"end":{"line":35,"column":24}},"19":{"start":{"line":37,"column":4},"end":{"line":37,"column":18}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":45}},"21":{"start":{"line":48,"column":4},"end":{"line":48,"column":26}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":18}},"23":{"start":{"line":60,"column":4},"end":{"line":60,"column":68}},"24":{"start":{"line":70,"column":4},"end":{"line":70,"column":50}},"25":{"start":{"line":71,"column":4},"end":{"line":71,"column":42}},"26":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"27":{"start":{"line":73,"column":6},"end":{"line":73,"column":28}},"28":{"start":{"line":75,"column":4},"end":{"line":75,"column":18}},"29":{"start":{"line":95,"column":4},"end":{"line":95,"column":54}},"30":{"start":{"line":96,"column":4},"end":{"line":96,"column":47}},"31":{"start":{"line":106,"column":4},"end":{"line":106,"column":54}},"32":{"start":{"line":107,"column":4},"end":{"line":107,"column":19}},"33":{"start":{"line":108,"column":4},"end":{"line":108,"column":39}},"34":{"start":{"line":109,"column":4},"end":{"line":109,"column":39}},"35":{"start":{"line":110,"column":4},"end":{"line":110,"column":38}},"36":{"start":{"line":111,"column":4},"end":{"line":111,"column":31}},"37":{"start":{"line":112,"column":4},"end":{"line":112,"column":29}},"38":{"start":{"line":122,"column":4},"end":{"line":122,"column":52}},"39":{"start":{"line":123,"column":4},"end":{"line":123,"column":74}},"40":{"start":{"line":132,"column":4},"end":{"line":132,"column":52}},"41":{"start":{"line":133,"column":4},"end":{"line":133,"column":21}},"42":{"start":{"line":145,"column":4},"end":{"line":145,"column":52}},"43":{"start":{"line":146,"column":4},"end":{"line":146,"column":34}},"44":{"start":{"line":155,"column":4},"end":{"line":155,"column":46}},"45":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"46":{"start":{"line":157,"column":6},"end":{"line":157,"column":43}},"47":{"start":{"line":159,"column":4},"end":{"line":159,"column":15}},"48":{"start":{"line":171,"column":4},"end":{"line":171,"column":30}},"49":{"start":{"line":172,"column":4},"end":{"line":172,"column":44}},"50":{"start":{"line":176,"column":0},"end":{"line":176,"column":66}},"51":{"start":{"line":177,"column":0},"end":{"line":177,"column":44}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"3":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":11},"end":{"line":60,"column":38}},{"start":{"line":60,"column":42},"end":{"line":60,"column":67}}]}},"code":["'use strict';","","var buffer = require('buffer');","var assert = require('assert');","","var js = require('./js');","var $ = require('./preconditions');","","function equals(a, b) {","  if (a.length !== b.length) {","    return false;","  }","  var length = a.length;","  for (var i = 0; i < length; i++) {","    if (a[i] !== b[i]) {","      return false;","    }","  }","  return true;","}","","module.exports = {","  /**","   * Fill a buffer with a value.","   *","   * @param {Buffer} buffer","   * @param {number} value","   * @return {Buffer}","   */","  fill: function fill(buffer, value) {","    $.checkArgumentType(buffer, 'Buffer', 'buffer');","    $.checkArgumentType(value, 'number', 'value');","    var length = buffer.length;","    for (var i = 0; i < length; i++) {","      buffer[i] = value;","    }","    return buffer;","  },","","  /**","   * Return a copy of a buffer","   *","   * @param {Buffer} original","   * @return {Buffer}","   */","  copy: function(original) {","    var buffer = new Buffer(original.length);","    original.copy(buffer);","    return buffer;","  },","","  /**","   * Returns true if the given argument is an instance of a buffer. Tests for","   * both node's Buffer and Uint8Array","   *","   * @param {*} arg","   * @return {boolean}","   */","  isBuffer: function isBuffer(arg) {","    return buffer.Buffer.isBuffer(arg) || arg instanceof Uint8Array;","  },","","  /**","   * Returns a zero-filled byte array","   *","   * @param {number} bytes","   * @return {Buffer}","   */","  emptyBuffer: function emptyBuffer(bytes) {","    $.checkArgumentType(bytes, 'number', 'bytes');","    var result = new buffer.Buffer(bytes);","    for (var i = 0; i < bytes; i++) {","      result.write('\\0', i);","    }","    return result;","  },","","  /**","   * Concatenates a buffer","   *","   * Shortcut for <tt>buffer.Buffer.concat</tt>","   */","  concat: buffer.Buffer.concat,","","  equals: equals,","  equal: equals,","","  /**","   * Transforms a number from 0 to 255 into a Buffer of size 1 with that value","   *","   * @param {number} integer","   * @return {Buffer}","   */","  integerAsSingleByteBuffer: function integerAsSingleByteBuffer(integer) {","    $.checkArgumentType(integer, 'number', 'integer');","    return new buffer.Buffer([integer & 0xff]);","  },","","  /**","   * Transform a 4-byte integer into a Buffer of length 4.","   *","   * @param {number} integer","   * @return {Buffer}","   */","  integerAsBuffer: function integerAsBuffer(integer) {","    $.checkArgumentType(integer, 'number', 'integer');","    var bytes = [];","    bytes.push((integer >> 24) & 0xff);","    bytes.push((integer >> 16) & 0xff);","    bytes.push((integer >> 8) & 0xff);","    bytes.push(integer & 0xff);","    return new Buffer(bytes);","  },","","  /**","   * Transform the first 4 values of a Buffer into a number, in little endian encoding","   *","   * @param {Buffer} buffer","   * @return {number}","   */","  integerFromBuffer: function integerFromBuffer(buffer) {","    $.checkArgumentType(buffer, 'Buffer', 'buffer');","    return buffer[0] << 24 | buffer[1] << 16 | buffer[2] << 8 | buffer[3];","  },","","  /**","   * Transforms the first byte of an array into a number ranging from -128 to 127","   * @param {Buffer} buffer","   * @return {number}","   */","  integerFromSingleByteBuffer: function integerFromBuffer(buffer) {","    $.checkArgumentType(buffer, 'Buffer', 'buffer');","    return buffer[0];","  },","","  /**","   * Transforms a buffer into a string with a number in hexa representation","   *","   * Shorthand for <tt>buffer.toString('hex')</tt>","   *","   * @param {Buffer} buffer","   * @return {string}","   */","  bufferToHex: function bufferToHex(buffer) {","    $.checkArgumentType(buffer, 'Buffer', 'buffer');","    return buffer.toString('hex');","  },","","  /**","   * Reverse a buffer","   * @param {Buffer} param","   * @return {Buffer}","   */","  reverse: function reverse(param) {","    var ret = new buffer.Buffer(param.length);","    for (var i = 0; i < param.length; i++) {","      ret[i] = param[param.length - i - 1];","    }","    return ret;","  },","","  /**","   * Transforms an hexa encoded string into a Buffer with binary values","   *","   * Shorthand for <tt>Buffer(string, 'hex')</tt>","   *","   * @param {string} string","   * @return {Buffer}","   */","  hexToBuffer: function hexToBuffer(string) {","    assert(js.isHexa(string));","    return new buffer.Buffer(string, 'hex');","  }","};","","module.exports.NULL_HASH = module.exports.fill(new Buffer(32), 0);","module.exports.EMPTY_BUFFER = new Buffer(0);",""],"l":{"3":1,"4":1,"6":1,"7":1,"9":1,"10":0,"11":0,"13":0,"14":0,"15":0,"16":0,"19":0,"22":1,"31":1,"32":1,"33":1,"34":1,"35":32,"37":1,"47":0,"48":0,"49":0,"60":49,"70":0,"71":0,"72":0,"73":0,"75":0,"95":0,"96":0,"106":3,"107":3,"108":3,"109":3,"110":3,"111":3,"112":3,"122":0,"123":0,"132":0,"133":0,"145":0,"146":0,"155":0,"156":0,"157":0,"159":0,"171":0,"172":0,"176":1,"177":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/util/js.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/util/js.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":5,"18":17,"19":5,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":5,"5":17,"6":0},"fnMap":{"1":{"name":"isHexa","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":36}}},"2":{"name":"isValidJSON","line":30,"loc":{"start":{"line":30,"column":15},"end":{"line":30,"column":41}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":14},"end":{"line":51,"column":30}}},"4":{"name":"defineImmutable","line":62,"loc":{"start":{"line":62,"column":19},"end":{"line":62,"column":60}}},"5":{"name":"(anonymous_5)","line":63,"loc":{"start":{"line":63,"column":32},"end":{"line":63,"column":45}}},"6":{"name":"isNaturalNumber","line":78,"loc":{"start":{"line":78,"column":19},"end":{"line":78,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":12,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":17}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":38}},"6":{"start":{"line":22,"column":0},"end":{"line":84,"column":2}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":15}},"8":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"9":{"start":{"line":33,"column":6},"end":{"line":33,"column":19}},"10":{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},"11":{"start":{"line":36,"column":6},"end":{"line":36,"column":31}},"12":{"start":{"line":38,"column":6},"end":{"line":38,"column":19}},"13":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"14":{"start":{"line":41,"column":6},"end":{"line":41,"column":18}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":17}},"16":{"start":{"line":52,"column":4},"end":{"line":52,"column":28}},"17":{"start":{"line":63,"column":4},"end":{"line":69,"column":7}},"18":{"start":{"line":64,"column":6},"end":{"line":68,"column":9}},"19":{"start":{"line":70,"column":4},"end":{"line":70,"column":18}},"20":{"start":{"line":79,"column":4},"end":{"line":82,"column":17}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"4":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":11},"end":{"line":79,"column":36}},{"start":{"line":80,"column":6},"end":{"line":80,"column":21}},{"start":{"line":81,"column":6},"end":{"line":81,"column":33}},{"start":{"line":82,"column":6},"end":{"line":82,"column":16}}]}},"code":["'use strict';","","var _ = require('lodash');","","/**"," * Determines whether a string contains only hexadecimal values"," *"," * @name JSUtil.isHexa"," * @param {string} value"," * @return {boolean} true if the string is the hexa representation of a number"," */","var isHexa = function isHexa(value) {","  if (!_.isString(value)) {","    return false;","  }","  return /^[0-9a-fA-F]+$/.test(value);","};","","/**"," * @namespace JSUtil"," */","module.exports = {","  /**","   * Test if an argument is a valid JSON object. If it is, returns a truthy","   * value (the json object decoded), so no double JSON.parse call is necessary","   *","   * @param {string} arg","   * @return {Object|boolean} false if the argument is not a JSON string.","   */","  isValidJSON: function isValidJSON(arg) {","    var parsed;","    if (!_.isString(arg)) {","      return false;","    }","    try {","      parsed = JSON.parse(arg);","    } catch (e) {","      return false;","    }","    if (typeof(parsed) === 'object') {","      return true;","    }","    return false;","  },","  isHexa: isHexa,","  isHexaString: isHexa,","","  /**","   * Clone an array","   */","  cloneArray: function(array) {","    return [].concat(array);","  },","","  /**","   * Define immutable properties on a target object","   *","   * @param {Object} target - An object to be extended","   * @param {Object} values - An object of properties","   * @return {Object} The target object","   */","  defineImmutable: function defineImmutable(target, values) {","    Object.keys(values).forEach(function(key){","      Object.defineProperty(target, key, {","        configurable: false,","        enumerable: true,","        value: values[key]","      });","    });","    return target;","  },","  /**","   * Checks that a value is a natural number, a positive integer or zero.","   *","   * @param {*} value","   * @return {Boolean}","   */","  isNaturalNumber: function isNaturalNumber(value) {","    return typeof value === 'number' &&","      isFinite(value) &&","      Math.floor(value) === value &&","      value >= 0;","  }","};",""],"l":{"3":1,"12":1,"13":0,"14":0,"16":0,"22":1,"31":0,"32":0,"33":0,"35":0,"36":0,"38":0,"40":0,"41":0,"43":0,"52":0,"63":5,"64":17,"70":5,"79":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":54}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":45}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":45}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":39}}},"branchMap":{},"code":["'use strict';","","var elliptic = exports;","","elliptic.version = require('../package.json').version;","elliptic.utils = require('./elliptic/utils');","elliptic.rand = require('brorand');","elliptic.hmacDRBG = require('./elliptic/hmac-drbg');","elliptic.curve = require('./elliptic/curve');","elliptic.curves = require('./elliptic/curves');","","// Protocols","elliptic.ec = require('./elliptic/ec');",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"13":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/utils.js","s":{"1":1,"2":1,"3":2,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":0,"44":0,"45":0,"46":1,"47":1,"48":1,"49":1,"50":1,"51":134,"52":134,"53":43,"54":43,"55":23,"56":20,"57":43,"58":91,"59":134,"60":134,"61":134,"62":123,"63":134,"64":1,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1},"b":{"1":[0,2],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[43,91],"13":[23,20],"14":[123,11],"15":[134,133],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0},"fnMap":{"1":{"name":"assert","line":5,"loc":{"start":{"line":5,"column":15},"end":{"line":5,"column":41}}},"2":{"name":"toArray","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}}},"3":{"name":"zero2","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":21}}},"4":{"name":"toHex","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":20}}},"5":{"name":"encode","line":58,"loc":{"start":{"line":58,"column":15},"end":{"line":58,"column":41}}},"6":{"name":"getNAF","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":24}}},"7":{"name":"getJSF","line":96,"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":20}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":6,"column":2},"end":{"line":7,"column":47}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":47}},"5":{"start":{"line":10,"column":0},"end":{"line":39,"column":1}},"6":{"start":{"line":11,"column":2},"end":{"line":12,"column":23}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":23}},"8":{"start":{"line":13,"column":2},"end":{"line":14,"column":14}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"10":{"start":{"line":15,"column":2},"end":{"line":15,"column":15}},"11":{"start":{"line":16,"column":2},"end":{"line":20,"column":3}},"12":{"start":{"line":17,"column":4},"end":{"line":18,"column":26}},"13":{"start":{"line":18,"column":6},"end":{"line":18,"column":26}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":15}},"15":{"start":{"line":21,"column":2},"end":{"line":37,"column":3}},"16":{"start":{"line":22,"column":4},"end":{"line":30,"column":5}},"17":{"start":{"line":23,"column":6},"end":{"line":23,"column":32}},"18":{"start":{"line":24,"column":6},"end":{"line":24,"column":22}},"19":{"start":{"line":25,"column":6},"end":{"line":25,"column":24}},"20":{"start":{"line":26,"column":6},"end":{"line":29,"column":21}},"21":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"22":{"start":{"line":29,"column":8},"end":{"line":29,"column":21}},"23":{"start":{"line":31,"column":9},"end":{"line":37,"column":3}},"24":{"start":{"line":32,"column":4},"end":{"line":32,"column":42}},"25":{"start":{"line":33,"column":4},"end":{"line":34,"column":22}},"26":{"start":{"line":34,"column":6},"end":{"line":34,"column":22}},"27":{"start":{"line":35,"column":4},"end":{"line":36,"column":50}},"28":{"start":{"line":36,"column":6},"end":{"line":36,"column":50}},"29":{"start":{"line":38,"column":2},"end":{"line":38,"column":13}},"30":{"start":{"line":40,"column":0},"end":{"line":40,"column":24}},"31":{"start":{"line":42,"column":0},"end":{"line":47,"column":1}},"32":{"start":{"line":43,"column":2},"end":{"line":46,"column":16}},"33":{"start":{"line":44,"column":4},"end":{"line":44,"column":22}},"34":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}},"35":{"start":{"line":48,"column":0},"end":{"line":48,"column":20}},"36":{"start":{"line":50,"column":0},"end":{"line":55,"column":1}},"37":{"start":{"line":51,"column":2},"end":{"line":51,"column":15}},"38":{"start":{"line":52,"column":2},"end":{"line":53,"column":38}},"39":{"start":{"line":53,"column":4},"end":{"line":53,"column":38}},"40":{"start":{"line":54,"column":2},"end":{"line":54,"column":13}},"41":{"start":{"line":56,"column":0},"end":{"line":56,"column":20}},"42":{"start":{"line":58,"column":0},"end":{"line":63,"column":2}},"43":{"start":{"line":59,"column":2},"end":{"line":62,"column":15}},"44":{"start":{"line":60,"column":4},"end":{"line":60,"column":22}},"45":{"start":{"line":62,"column":4},"end":{"line":62,"column":15}},"46":{"start":{"line":66,"column":0},"end":{"line":92,"column":1}},"47":{"start":{"line":67,"column":2},"end":{"line":67,"column":15}},"48":{"start":{"line":68,"column":2},"end":{"line":68,"column":24}},"49":{"start":{"line":69,"column":2},"end":{"line":69,"column":22}},"50":{"start":{"line":70,"column":2},"end":{"line":89,"column":3}},"51":{"start":{"line":71,"column":4},"end":{"line":71,"column":10}},"52":{"start":{"line":72,"column":4},"end":{"line":81,"column":5}},"53":{"start":{"line":73,"column":6},"end":{"line":73,"column":32}},"54":{"start":{"line":74,"column":6},"end":{"line":77,"column":16}},"55":{"start":{"line":75,"column":8},"end":{"line":75,"column":28}},"56":{"start":{"line":77,"column":8},"end":{"line":77,"column":16}},"57":{"start":{"line":78,"column":6},"end":{"line":78,"column":17}},"58":{"start":{"line":80,"column":6},"end":{"line":80,"column":12}},"59":{"start":{"line":82,"column":4},"end":{"line":82,"column":16}},"60":{"start":{"line":85,"column":4},"end":{"line":85,"column":73}},"61":{"start":{"line":86,"column":4},"end":{"line":87,"column":18}},"62":{"start":{"line":87,"column":6},"end":{"line":87,"column":18}},"63":{"start":{"line":88,"column":4},"end":{"line":88,"column":19}},"64":{"start":{"line":91,"column":2},"end":{"line":91,"column":13}},"65":{"start":{"line":93,"column":0},"end":{"line":93,"column":22}},"66":{"start":{"line":96,"column":0},"end":{"line":149,"column":1}},"67":{"start":{"line":97,"column":2},"end":{"line":100,"column":4}},"68":{"start":{"line":102,"column":2},"end":{"line":102,"column":18}},"69":{"start":{"line":103,"column":2},"end":{"line":103,"column":18}},"70":{"start":{"line":104,"column":2},"end":{"line":104,"column":13}},"71":{"start":{"line":105,"column":2},"end":{"line":105,"column":13}},"72":{"start":{"line":106,"column":2},"end":{"line":146,"column":3}},"73":{"start":{"line":109,"column":4},"end":{"line":109,"column":37}},"74":{"start":{"line":110,"column":4},"end":{"line":110,"column":37}},"75":{"start":{"line":111,"column":4},"end":{"line":112,"column":15}},"76":{"start":{"line":112,"column":6},"end":{"line":112,"column":15}},"77":{"start":{"line":113,"column":4},"end":{"line":114,"column":15}},"78":{"start":{"line":114,"column":6},"end":{"line":114,"column":15}},"79":{"start":{"line":115,"column":4},"end":{"line":115,"column":11}},"80":{"start":{"line":116,"column":4},"end":{"line":124,"column":5}},"81":{"start":{"line":117,"column":6},"end":{"line":117,"column":13}},"82":{"start":{"line":119,"column":6},"end":{"line":119,"column":38}},"83":{"start":{"line":120,"column":6},"end":{"line":123,"column":17}},"84":{"start":{"line":121,"column":8},"end":{"line":121,"column":18}},"85":{"start":{"line":123,"column":8},"end":{"line":123,"column":17}},"86":{"start":{"line":125,"column":4},"end":{"line":125,"column":20}},"87":{"start":{"line":127,"column":4},"end":{"line":127,"column":11}},"88":{"start":{"line":128,"column":4},"end":{"line":136,"column":5}},"89":{"start":{"line":129,"column":6},"end":{"line":129,"column":13}},"90":{"start":{"line":131,"column":6},"end":{"line":131,"column":38}},"91":{"start":{"line":132,"column":6},"end":{"line":135,"column":17}},"92":{"start":{"line":133,"column":8},"end":{"line":133,"column":18}},"93":{"start":{"line":135,"column":8},"end":{"line":135,"column":17}},"94":{"start":{"line":137,"column":4},"end":{"line":137,"column":20}},"95":{"start":{"line":140,"column":4},"end":{"line":141,"column":18}},"96":{"start":{"line":141,"column":6},"end":{"line":141,"column":18}},"97":{"start":{"line":142,"column":4},"end":{"line":143,"column":18}},"98":{"start":{"line":143,"column":6},"end":{"line":143,"column":18}},"99":{"start":{"line":144,"column":4},"end":{"line":144,"column":16}},"100":{"start":{"line":145,"column":4},"end":{"line":145,"column":16}},"101":{"start":{"line":148,"column":2},"end":{"line":148,"column":13}},"102":{"start":{"line":150,"column":0},"end":{"line":150,"column":22}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":20},"end":{"line":7,"column":23}},{"start":{"line":7,"column":27},"end":{"line":7,"column":45}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"4":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"5":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"6":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"7":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":6}},{"start":{"line":26,"column":6},"end":{"line":26,"column":6}}]},"8":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":9},"end":{"line":31,"column":9}},{"start":{"line":31,"column":9},"end":{"line":31,"column":9}}]},"9":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"10":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"11":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"12":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"13":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]},"14":{"line":85,"type":"cond-expr","locations":[{"start":{"line":85,"column":62},"end":{"line":85,"column":67}},{"start":{"line":85,"column":71},"end":{"line":85,"column":72}}]},"15":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":17},"end":{"line":85,"column":32}},{"start":{"line":85,"column":36},"end":{"line":85,"column":57}}]},"16":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":9},"end":{"line":106,"column":25}},{"start":{"line":106,"column":29},"end":{"line":106,"column":45}}]},"17":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"18":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"19":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"20":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]},"21":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":11},"end":{"line":120,"column":19}},{"start":{"line":120,"column":23},"end":{"line":120,"column":31}},{"start":{"line":120,"column":36},"end":{"line":120,"column":45}}]},"22":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"23":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":6},"end":{"line":132,"column":6}},{"start":{"line":132,"column":6},"end":{"line":132,"column":6}}]},"24":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":11},"end":{"line":132,"column":19}},{"start":{"line":132,"column":23},"end":{"line":132,"column":31}},{"start":{"line":132,"column":36},"end":{"line":132,"column":45}}]},"25":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"26":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]}},"code":["'use strict';","","var utils = exports;","","utils.assert = function assert(val, msg) {","  if (!val)","    throw new Error(msg || 'Assertion failed');","};","","function toArray(msg, enc) {","  if (Array.isArray(msg))","    return msg.slice();","  if (!msg)","    return [];","  var res = [];","  if (typeof msg !== 'string') {","    for (var i = 0; i < msg.length; i++)","      res[i] = msg[i] | 0;","    return res;","  }","  if (!enc) {","    for (var i = 0; i < msg.length; i++) {","      var c = msg.charCodeAt(i);","      var hi = c >> 8;","      var lo = c & 0xff;","      if (hi)","        res.push(hi, lo);","      else","        res.push(lo);","    }","  } else if (enc === 'hex') {","    msg = msg.replace(/[^a-z0-9]+/ig, '');","    if (msg.length % 2 !== 0)","      msg = '0' + msg;","    for (var i = 0; i < msg.length; i += 2)","      res.push(parseInt(msg[i] + msg[i + 1], 16));","  }","  return res;","}","utils.toArray = toArray;","","function zero2(word) {","  if (word.length === 1)","    return '0' + word;","  else","    return word;","}","utils.zero2 = zero2;","","function toHex(msg) {","  var res = '';","  for (var i = 0; i < msg.length; i++)","    res += zero2(msg[i].toString(16));","  return res;","}","utils.toHex = toHex;","","utils.encode = function encode(arr, enc) {","  if (enc === 'hex')","    return toHex(arr);","  else","    return arr;","};","","// Represent num in a w-NAF form","function getNAF(num, w) {","  var naf = [];","  var ws = 1 << (w + 1);","  var k = num.clone();","  while (k.cmpn(1) >= 0) {","    var z;","    if (k.isOdd()) {","      var mod = k.andln(ws - 1);","      if (mod > (ws >> 1) - 1)","        z = (ws >> 1) - mod;","      else","        z = mod;","      k.isubn(z);","    } else {","      z = 0;","    }","    naf.push(z);","","    // Optimization, shift by word if possible","    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;","    for (var i = 1; i < shift; i++)","      naf.push(0);","    k.ishrn(shift);","  }","","  return naf;","}","utils.getNAF = getNAF;","","// Represent k1, k2 in a Joint Sparse Form","function getJSF(k1, k2) {","  var jsf = [","    [],","    []","  ];","","  k1 = k1.clone();","  k2 = k2.clone();","  var d1 = 0;","  var d2 = 0;","  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {","","    // First phase","    var m14 = (k1.andln(3) + d1) & 3;","    var m24 = (k2.andln(3) + d2) & 3;","    if (m14 === 3)","      m14 = -1;","    if (m24 === 3)","      m24 = -1;","    var u1;","    if ((m14 & 1) === 0) {","      u1 = 0;","    } else {","      var m8 = (k1.andln(7) + d1) & 7;","      if ((m8 === 3 || m8 === 5) && m24 === 2)","        u1 = -m14;","      else","        u1 = m14;","    }","    jsf[0].push(u1);","","    var u2;","    if ((m24 & 1) === 0) {","      u2 = 0;","    } else {","      var m8 = (k2.andln(7) + d2) & 7;","      if ((m8 === 3 || m8 === 5) && m14 === 2)","        u2 = -m24;","      else","        u2 = m24;","    }","    jsf[1].push(u2);","","    // Second phase","    if (2 * d1 === u1 + 1)","      d1 = 1 - d1;","    if (2 * d2 === u2 + 1)","      d2 = 1 - d2;","    k1.ishrn(1);","    k2.ishrn(1);","  }","","  return jsf;","}","utils.getJSF = getJSF;",""],"l":{"3":1,"5":1,"6":2,"7":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"38":0,"40":1,"42":1,"43":0,"44":0,"46":0,"48":1,"50":1,"51":0,"52":0,"53":0,"54":0,"56":1,"58":1,"59":0,"60":0,"62":0,"66":1,"67":1,"68":1,"69":1,"70":1,"71":134,"72":134,"73":43,"74":43,"75":23,"77":20,"78":43,"80":91,"82":134,"85":134,"86":134,"87":123,"88":134,"91":1,"93":1,"96":1,"97":0,"102":0,"103":0,"104":0,"105":0,"106":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"119":0,"120":0,"121":0,"123":0,"125":0,"127":0,"128":0,"129":0,"131":0,"132":0,"133":0,"135":0,"137":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"148":0,"150":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/brorand/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/brorand/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"rand","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":36}}},"2":{"name":"Rand","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":20}}},"3":{"name":"generate","line":15,"loc":{"start":{"line":15,"column":26},"end":{"line":15,"column":49}}},"4":{"name":"_rand","line":22,"loc":{"start":{"line":22,"column":27},"end":{"line":22,"column":45}}},"5":{"name":"_rand","line":29,"loc":{"start":{"line":29,"column":27},"end":{"line":29,"column":45}}},"6":{"name":"(anonymous_6)","line":36,"loc":{"start":{"line":36,"column":27},"end":{"line":36,"column":38}}},"7":{"name":"_rand","line":45,"loc":{"start":{"line":45,"column":27},"end":{"line":45,"column":45}}},"8":{"name":"_rand","line":50,"loc":{"start":{"line":50,"column":27},"end":{"line":50,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":6}},"2":{"start":{"line":3,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":5,"column":23}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":23}},"5":{"start":{"line":7,"column":2},"end":{"line":7,"column":25}},"6":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":19}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"9":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"10":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"11":{"start":{"line":19,"column":0},"end":{"line":57,"column":1}},"12":{"start":{"line":20,"column":2},"end":{"line":39,"column":3}},"13":{"start":{"line":22,"column":4},"end":{"line":26,"column":6}},"14":{"start":{"line":23,"column":6},"end":{"line":23,"column":34}},"15":{"start":{"line":24,"column":6},"end":{"line":24,"column":41}},"16":{"start":{"line":25,"column":6},"end":{"line":25,"column":17}},"17":{"start":{"line":27,"column":9},"end":{"line":39,"column":3}},"18":{"start":{"line":29,"column":4},"end":{"line":33,"column":6}},"19":{"start":{"line":30,"column":6},"end":{"line":30,"column":34}},"20":{"start":{"line":31,"column":6},"end":{"line":31,"column":43}},"21":{"start":{"line":32,"column":6},"end":{"line":32,"column":17}},"22":{"start":{"line":36,"column":4},"end":{"line":38,"column":6}},"23":{"start":{"line":37,"column":6},"end":{"line":37,"column":45}},"24":{"start":{"line":42,"column":2},"end":{"line":56,"column":3}},"25":{"start":{"line":43,"column":4},"end":{"line":43,"column":40}},"26":{"start":{"line":45,"column":4},"end":{"line":47,"column":6}},"27":{"start":{"line":46,"column":6},"end":{"line":46,"column":35}},"28":{"start":{"line":50,"column":4},"end":{"line":55,"column":6}},"29":{"start":{"line":51,"column":6},"end":{"line":51,"column":34}},"30":{"start":{"line":52,"column":6},"end":{"line":53,"column":37}},"31":{"start":{"line":53,"column":8},"end":{"line":53,"column":37}},"32":{"start":{"line":54,"column":6},"end":{"line":54,"column":17}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":0},"end":{"line":19,"column":0}},{"start":{"line":19,"column":0},"end":{"line":19,"column":0}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":19}},{"start":{"line":20,"column":23},"end":{"line":20,"column":52}}]},"5":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":9}},{"start":{"line":27,"column":9},"end":{"line":27,"column":9}}]},"6":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":13},"end":{"line":27,"column":28}},{"start":{"line":27,"column":32},"end":{"line":27,"column":63}}]}},"code":["var r;","","module.exports = function rand(len) {","  if (!r)","    r = new Rand(null);","","  return r.generate(len);","};","","function Rand(rand) {","  this.rand = rand;","}","module.exports.Rand = Rand;","","Rand.prototype.generate = function generate(len) {","  return this._rand(len);","};","","if (typeof window === 'object') {","  if (window.crypto && window.crypto.getRandomValues) {","    // Modern browsers","    Rand.prototype._rand = function _rand(n) {","      var arr = new Uint8Array(n);","      window.crypto.getRandomValues(arr);","      return arr;","    };","  } else if (window.msCrypto && window.msCrypto.getRandomValues) {","    // IE","    Rand.prototype._rand = function _rand(n) {","      var arr = new Uint8Array(n);","      window.msCrypto.getRandomValues(arr);","      return arr;","    };","  } else {","    // Old junk","    Rand.prototype._rand = function() {","      throw new Error('Not implemented yet');","    };","  }","} else {","  // Node.js or Web worker","  try {","    var crypto = require('cry' + 'pto');","","    Rand.prototype._rand = function _rand(n) {","      return crypto.randomBytes(n);","    };","  } catch (e) {","    // Emulate crypto API using randy","    Rand.prototype._rand = function _rand(n) {","      var res = new Uint8Array(n);","      for (var i = 0; i < res.length; i++)","        res[i] = this.rand.getByte();","      return res;","    };","  }","}",""],"l":{"1":1,"3":1,"4":0,"5":0,"7":0,"10":1,"11":0,"13":1,"15":1,"16":0,"19":1,"20":0,"22":0,"23":0,"24":0,"25":0,"27":0,"29":0,"30":0,"31":0,"32":0,"36":0,"37":0,"42":1,"43":1,"45":1,"46":0,"50":0,"51":0,"52":0,"53":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/hmac-drbg.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/hmac-drbg.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"HmacDRBG","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}}},"2":{"name":"init","line":31,"loc":{"start":{"line":31,"column":27},"end":{"line":31,"column":63}}},"3":{"name":"hmac","line":46,"loc":{"start":{"line":46,"column":27},"end":{"line":46,"column":43}}},"4":{"name":"update","line":50,"loc":{"start":{"line":50,"column":29},"end":{"line":50,"column":51}}},"5":{"name":"reseed","line":69,"loc":{"start":{"line":69,"column":28},"end":{"line":69,"column":78}}},"6":{"name":"generate","line":87,"loc":{"start":{"line":87,"column":30},"end":{"line":87,"column":71}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"5":{"start":{"line":8,"column":0},"end":{"line":28,"column":1}},"6":{"start":{"line":9,"column":2},"end":{"line":10,"column":33}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":27}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":41}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":34}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":65}},"12":{"start":{"line":17,"column":2},"end":{"line":17,"column":21}},"13":{"start":{"line":18,"column":2},"end":{"line":18,"column":29}},"14":{"start":{"line":19,"column":2},"end":{"line":19,"column":16}},"15":{"start":{"line":20,"column":2},"end":{"line":20,"column":16}},"16":{"start":{"line":22,"column":2},"end":{"line":22,"column":67}},"17":{"start":{"line":23,"column":2},"end":{"line":23,"column":61}},"18":{"start":{"line":24,"column":2},"end":{"line":24,"column":58}},"19":{"start":{"line":25,"column":2},"end":{"line":26,"column":73}},"20":{"start":{"line":27,"column":2},"end":{"line":27,"column":35}},"21":{"start":{"line":29,"column":0},"end":{"line":29,"column":26}},"22":{"start":{"line":31,"column":0},"end":{"line":44,"column":2}},"23":{"start":{"line":32,"column":2},"end":{"line":32,"column":48}},"24":{"start":{"line":34,"column":2},"end":{"line":34,"column":38}},"25":{"start":{"line":35,"column":2},"end":{"line":35,"column":38}},"26":{"start":{"line":36,"column":2},"end":{"line":39,"column":3}},"27":{"start":{"line":37,"column":4},"end":{"line":37,"column":21}},"28":{"start":{"line":38,"column":4},"end":{"line":38,"column":21}},"29":{"start":{"line":41,"column":2},"end":{"line":41,"column":21}},"30":{"start":{"line":42,"column":2},"end":{"line":42,"column":18}},"31":{"start":{"line":43,"column":2},"end":{"line":43,"column":40}},"32":{"start":{"line":46,"column":0},"end":{"line":48,"column":2}},"33":{"start":{"line":47,"column":2},"end":{"line":47,"column":42}},"34":{"start":{"line":50,"column":0},"end":{"line":67,"column":2}},"35":{"start":{"line":51,"column":2},"end":{"line":53,"column":35}},"36":{"start":{"line":54,"column":2},"end":{"line":55,"column":29}},"37":{"start":{"line":55,"column":4},"end":{"line":55,"column":29}},"38":{"start":{"line":56,"column":2},"end":{"line":56,"column":25}},"39":{"start":{"line":57,"column":2},"end":{"line":57,"column":48}},"40":{"start":{"line":58,"column":2},"end":{"line":59,"column":11}},"41":{"start":{"line":59,"column":4},"end":{"line":59,"column":11}},"42":{"start":{"line":61,"column":2},"end":{"line":65,"column":25}},"43":{"start":{"line":66,"column":2},"end":{"line":66,"column":48}},"44":{"start":{"line":69,"column":0},"end":{"line":85,"column":2}},"45":{"start":{"line":71,"column":2},"end":{"line":75,"column":3}},"46":{"start":{"line":72,"column":4},"end":{"line":72,"column":17}},"47":{"start":{"line":73,"column":4},"end":{"line":73,"column":21}},"48":{"start":{"line":74,"column":4},"end":{"line":74,"column":22}},"49":{"start":{"line":77,"column":2},"end":{"line":77,"column":48}},"50":{"start":{"line":78,"column":2},"end":{"line":78,"column":36}},"51":{"start":{"line":80,"column":2},"end":{"line":81,"column":73}},"52":{"start":{"line":83,"column":2},"end":{"line":83,"column":42}},"53":{"start":{"line":84,"column":2},"end":{"line":84,"column":18}},"54":{"start":{"line":87,"column":0},"end":{"line":114,"column":2}},"55":{"start":{"line":88,"column":2},"end":{"line":89,"column":42}},"56":{"start":{"line":89,"column":4},"end":{"line":89,"column":42}},"57":{"start":{"line":92,"column":2},"end":{"line":96,"column":3}},"58":{"start":{"line":93,"column":4},"end":{"line":93,"column":17}},"59":{"start":{"line":94,"column":4},"end":{"line":94,"column":14}},"60":{"start":{"line":95,"column":4},"end":{"line":95,"column":15}},"61":{"start":{"line":99,"column":2},"end":{"line":102,"column":3}},"62":{"start":{"line":100,"column":4},"end":{"line":100,"column":37}},"63":{"start":{"line":101,"column":4},"end":{"line":101,"column":22}},"64":{"start":{"line":104,"column":2},"end":{"line":104,"column":16}},"65":{"start":{"line":105,"column":2},"end":{"line":108,"column":3}},"66":{"start":{"line":106,"column":4},"end":{"line":106,"column":50}},"67":{"start":{"line":107,"column":4},"end":{"line":107,"column":31}},"68":{"start":{"line":110,"column":2},"end":{"line":110,"column":31}},"69":{"start":{"line":111,"column":2},"end":{"line":111,"column":20}},"70":{"start":{"line":112,"column":2},"end":{"line":112,"column":16}},"71":{"start":{"line":113,"column":2},"end":{"line":113,"column":32}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":20},"end":{"line":15,"column":38}},{"start":{"line":15,"column":42},"end":{"line":15,"column":64}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"5":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":30},"end":{"line":83,"column":33}},{"start":{"line":83,"column":37},"end":{"line":83,"column":39}}]},"7":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"8":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"9":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]}},"code":["'use strict';","","var hash = require('hash.js');","var elliptic = require('../elliptic');","var utils = elliptic.utils;","var assert = utils.assert;","","function HmacDRBG(options) {","  if (!(this instanceof HmacDRBG))","    return new HmacDRBG(options);","  this.hash = options.hash;","  this.predResist = !!options.predResist;","","  this.outLen = this.hash.outSize;","  this.minEntropy = options.minEntropy || this.hash.hmacStrength;","","  this.reseed = null;","  this.reseedInterval = null;","  this.K = null;","  this.V = null;","","  var entropy = utils.toArray(options.entropy, options.entropyEnc);","  var nonce = utils.toArray(options.nonce, options.nonceEnc);","  var pers = utils.toArray(options.pers, options.persEnc);","  assert(entropy.length >= (this.minEntropy / 8),","         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');","  this._init(entropy, nonce, pers);","}","module.exports = HmacDRBG;","","HmacDRBG.prototype._init = function init(entropy, nonce, pers) {","  var seed = entropy.concat(nonce).concat(pers);","","  this.K = new Array(this.outLen / 8);","  this.V = new Array(this.outLen / 8);","  for (var i = 0; i < this.V.length; i++) {","    this.K[i] = 0x00;","    this.V[i] = 0x01;","  }","","  this._update(seed);","  this.reseed = 1;","  this.reseedInterval = 0x1000000000000;  // 2^48","};","","HmacDRBG.prototype._hmac = function hmac() {","  return new hash.hmac(this.hash, this.K);","};","","HmacDRBG.prototype._update = function update(seed) {","  var kmac = this._hmac()","                 .update(this.V)","                 .update([ 0x00 ]);","  if (seed)","    kmac = kmac.update(seed);","  this.K = kmac.digest();","  this.V = this._hmac().update(this.V).digest();","  if (!seed)","    return;","","  this.K = this._hmac()","               .update(this.V)","               .update([ 0x01 ])","               .update(seed)","               .digest();","  this.V = this._hmac().update(this.V).digest();","};","","HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {","  // Optional entropy enc","  if (typeof entropyEnc !== 'string') {","    addEnc = add;","    add = entropyEnc;","    entropyEnc = null;","  }","","  entropy = utils.toBuffer(entropy, entropyEnc);","  add = utils.toBuffer(add, addEnc);","","  assert(entropy.length >= (this.minEntropy / 8),","         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');","","  this._update(entropy.concat(add || []));","  this.reseed = 1;","};","","HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {","  if (this.reseed > this.reseedInterval)","    throw new Error('Reseed is required');","","  // Optional encoding","  if (typeof enc !== 'string') {","    addEnc = add;","    add = enc;","    enc = null;","  }","","  // Optional additional data","  if (add) {","    add = utils.toArray(add, addEnc);","    this._update(add);","  }","","  var temp = [];","  while (temp.length < len) {","    this.V = this._hmac().update(this.V).digest();","    temp = temp.concat(this.V);","  }","","  var res = temp.slice(0, len);","  this._update(add);","  this.reseed++;","  return utils.encode(res, enc);","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"11":0,"12":0,"14":0,"15":0,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"25":0,"27":0,"29":1,"31":1,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"41":0,"42":0,"43":0,"46":1,"47":0,"50":1,"51":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"66":0,"69":1,"71":0,"72":0,"73":0,"74":0,"77":0,"78":0,"80":0,"83":0,"84":0,"87":1,"88":0,"89":0,"92":0,"93":0,"94":0,"95":0,"99":0,"100":0,"101":0,"104":0,"105":0,"106":0,"107":0,"110":0,"111":0,"112":0,"113":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":19}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}}},"branchMap":{},"code":["var hash = exports;","","hash.utils = require('./hash/utils');","hash.common = require('./hash/common');","hash.sha = require('./hash/sha');","hash.ripemd = require('./hash/ripemd');","hash.hmac = require('./hash/hmac');","","// Proxy hash functions to the main object","hash.sha1 = hash.sha.sha1;","hash.sha256 = hash.sha.sha256;","hash.sha224 = hash.sha.sha224;","hash.sha384 = hash.sha.sha384;","hash.sha512 = hash.sha.sha512;","hash.ripemd160 = hash.ripemd.ripemd160;",""],"l":{"1":1,"3":1,"4":1,"5":1,"6":1,"7":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/utils.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1,"48":0,"49":0,"50":0,"51":1,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":1,"97":0,"98":1,"99":1,"100":0,"101":1,"102":1,"103":0,"104":1,"105":1,"106":0,"107":1,"108":1,"109":0,"110":1,"111":1,"112":0,"113":1,"114":1,"115":0,"116":0,"117":1,"118":1,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":1,"128":0,"129":0,"130":0,"131":1,"132":1,"133":0,"134":0,"135":1,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":1,"149":0,"150":0,"151":1,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":1,"167":0,"168":0,"169":1,"170":1,"171":0,"172":0,"173":1,"174":1,"175":0,"176":0,"177":1,"178":1,"179":0,"180":1,"181":1,"182":0,"183":0,"184":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"toArray","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}}},"2":{"name":"toHex","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":20}}},"3":{"name":"htonl","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":18}}},"4":{"name":"toHex32","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":30}}},"5":{"name":"zero2","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":21}}},"6":{"name":"zero8","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":21}}},"7":{"name":"join32","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":93,"column":41}}},"8":{"name":"split32","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":30}}},"9":{"name":"rotr32","line":129,"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":22}}},"10":{"name":"rotl32","line":134,"loc":{"start":{"line":134,"column":0},"end":{"line":134,"column":22}}},"11":{"name":"sum32","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":21}}},"12":{"name":"sum32_3","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":26}}},"13":{"name":"sum32_4","line":149,"loc":{"start":{"line":149,"column":0},"end":{"line":149,"column":29}}},"14":{"name":"sum32_5","line":154,"loc":{"start":{"line":154,"column":0},"end":{"line":154,"column":32}}},"15":{"name":"assert","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":27}}},"16":{"name":"sum64","line":167,"loc":{"start":{"line":167,"column":0},"end":{"line":167,"column":33}}},"17":{"name":"sum64_hi","line":178,"loc":{"start":{"line":178,"column":0},"end":{"line":178,"column":34}}},"18":{"name":"sum64_lo","line":185,"loc":{"start":{"line":185,"column":0},"end":{"line":185,"column":34}}},"19":{"name":"sum64_4_hi","line":191,"loc":{"start":{"line":191,"column":0},"end":{"line":191,"column":52}}},"20":{"name":"sum64_4_lo","line":206,"loc":{"start":{"line":206,"column":0},"end":{"line":206,"column":52}}},"21":{"name":"sum64_5_hi","line":212,"loc":{"start":{"line":212,"column":0},"end":{"line":212,"column":60}}},"22":{"name":"sum64_5_lo","line":229,"loc":{"start":{"line":229,"column":0},"end":{"line":229,"column":60}}},"23":{"name":"rotr64_hi","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":32}}},"24":{"name":"rotr64_lo","line":242,"loc":{"start":{"line":242,"column":0},"end":{"line":242,"column":32}}},"25":{"name":"shr64_hi","line":248,"loc":{"start":{"line":248,"column":0},"end":{"line":248,"column":31}}},"26":{"name":"shr64_lo","line":253,"loc":{"start":{"line":253,"column":0},"end":{"line":253,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":20}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":4,"column":0},"end":{"line":33,"column":1}},"4":{"start":{"line":5,"column":2},"end":{"line":6,"column":23}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":23}},"6":{"start":{"line":7,"column":2},"end":{"line":8,"column":14}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":14}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":15}},"9":{"start":{"line":10,"column":2},"end":{"line":31,"column":3}},"10":{"start":{"line":11,"column":4},"end":{"line":27,"column":5}},"11":{"start":{"line":12,"column":6},"end":{"line":20,"column":7}},"12":{"start":{"line":13,"column":8},"end":{"line":13,"column":34}},"13":{"start":{"line":14,"column":8},"end":{"line":14,"column":24}},"14":{"start":{"line":15,"column":8},"end":{"line":15,"column":26}},"15":{"start":{"line":16,"column":8},"end":{"line":19,"column":23}},"16":{"start":{"line":17,"column":10},"end":{"line":17,"column":27}},"17":{"start":{"line":19,"column":10},"end":{"line":19,"column":23}},"18":{"start":{"line":21,"column":11},"end":{"line":27,"column":5}},"19":{"start":{"line":22,"column":6},"end":{"line":22,"column":44}},"20":{"start":{"line":23,"column":6},"end":{"line":24,"column":24}},"21":{"start":{"line":24,"column":8},"end":{"line":24,"column":24}},"22":{"start":{"line":25,"column":6},"end":{"line":26,"column":52}},"23":{"start":{"line":26,"column":8},"end":{"line":26,"column":52}},"24":{"start":{"line":29,"column":4},"end":{"line":30,"column":26}},"25":{"start":{"line":30,"column":6},"end":{"line":30,"column":26}},"26":{"start":{"line":32,"column":2},"end":{"line":32,"column":13}},"27":{"start":{"line":34,"column":0},"end":{"line":34,"column":24}},"28":{"start":{"line":36,"column":0},"end":{"line":41,"column":1}},"29":{"start":{"line":37,"column":2},"end":{"line":37,"column":15}},"30":{"start":{"line":38,"column":2},"end":{"line":39,"column":38}},"31":{"start":{"line":39,"column":4},"end":{"line":39,"column":38}},"32":{"start":{"line":40,"column":2},"end":{"line":40,"column":13}},"33":{"start":{"line":42,"column":0},"end":{"line":42,"column":20}},"34":{"start":{"line":44,"column":0},"end":{"line":50,"column":1}},"35":{"start":{"line":45,"column":2},"end":{"line":48,"column":31}},"36":{"start":{"line":49,"column":2},"end":{"line":49,"column":19}},"37":{"start":{"line":51,"column":0},"end":{"line":51,"column":20}},"38":{"start":{"line":53,"column":0},"end":{"line":62,"column":1}},"39":{"start":{"line":54,"column":2},"end":{"line":54,"column":15}},"40":{"start":{"line":55,"column":2},"end":{"line":60,"column":3}},"41":{"start":{"line":56,"column":4},"end":{"line":56,"column":19}},"42":{"start":{"line":57,"column":4},"end":{"line":58,"column":19}},"43":{"start":{"line":58,"column":6},"end":{"line":58,"column":19}},"44":{"start":{"line":59,"column":4},"end":{"line":59,"column":33}},"45":{"start":{"line":61,"column":2},"end":{"line":61,"column":13}},"46":{"start":{"line":63,"column":0},"end":{"line":63,"column":24}},"47":{"start":{"line":65,"column":0},"end":{"line":70,"column":1}},"48":{"start":{"line":66,"column":2},"end":{"line":69,"column":16}},"49":{"start":{"line":67,"column":4},"end":{"line":67,"column":22}},"50":{"start":{"line":69,"column":4},"end":{"line":69,"column":16}},"51":{"start":{"line":71,"column":0},"end":{"line":71,"column":20}},"52":{"start":{"line":73,"column":0},"end":{"line":90,"column":1}},"53":{"start":{"line":74,"column":2},"end":{"line":89,"column":16}},"54":{"start":{"line":75,"column":4},"end":{"line":75,"column":22}},"55":{"start":{"line":76,"column":7},"end":{"line":89,"column":16}},"56":{"start":{"line":77,"column":4},"end":{"line":77,"column":23}},"57":{"start":{"line":78,"column":7},"end":{"line":89,"column":16}},"58":{"start":{"line":79,"column":4},"end":{"line":79,"column":24}},"59":{"start":{"line":80,"column":7},"end":{"line":89,"column":16}},"60":{"start":{"line":81,"column":4},"end":{"line":81,"column":25}},"61":{"start":{"line":82,"column":7},"end":{"line":89,"column":16}},"62":{"start":{"line":83,"column":4},"end":{"line":83,"column":26}},"63":{"start":{"line":84,"column":7},"end":{"line":89,"column":16}},"64":{"start":{"line":85,"column":4},"end":{"line":85,"column":27}},"65":{"start":{"line":86,"column":7},"end":{"line":89,"column":16}},"66":{"start":{"line":87,"column":4},"end":{"line":87,"column":28}},"67":{"start":{"line":89,"column":4},"end":{"line":89,"column":16}},"68":{"start":{"line":91,"column":0},"end":{"line":91,"column":20}},"69":{"start":{"line":93,"column":0},"end":{"line":106,"column":1}},"70":{"start":{"line":94,"column":2},"end":{"line":94,"column":24}},"71":{"start":{"line":95,"column":2},"end":{"line":95,"column":24}},"72":{"start":{"line":96,"column":2},"end":{"line":96,"column":31}},"73":{"start":{"line":97,"column":2},"end":{"line":104,"column":3}},"74":{"start":{"line":98,"column":4},"end":{"line":98,"column":10}},"75":{"start":{"line":99,"column":4},"end":{"line":102,"column":79}},"76":{"start":{"line":100,"column":6},"end":{"line":100,"column":79}},"77":{"start":{"line":102,"column":6},"end":{"line":102,"column":79}},"78":{"start":{"line":103,"column":4},"end":{"line":103,"column":21}},"79":{"start":{"line":105,"column":2},"end":{"line":105,"column":13}},"80":{"start":{"line":107,"column":0},"end":{"line":107,"column":22}},"81":{"start":{"line":109,"column":0},"end":{"line":126,"column":1}},"82":{"start":{"line":110,"column":2},"end":{"line":110,"column":38}},"83":{"start":{"line":111,"column":2},"end":{"line":124,"column":3}},"84":{"start":{"line":112,"column":4},"end":{"line":112,"column":19}},"85":{"start":{"line":113,"column":4},"end":{"line":123,"column":5}},"86":{"start":{"line":114,"column":6},"end":{"line":114,"column":24}},"87":{"start":{"line":115,"column":6},"end":{"line":115,"column":37}},"88":{"start":{"line":116,"column":6},"end":{"line":116,"column":36}},"89":{"start":{"line":117,"column":6},"end":{"line":117,"column":28}},"90":{"start":{"line":119,"column":6},"end":{"line":119,"column":28}},"91":{"start":{"line":120,"column":6},"end":{"line":120,"column":37}},"92":{"start":{"line":121,"column":6},"end":{"line":121,"column":36}},"93":{"start":{"line":122,"column":6},"end":{"line":122,"column":24}},"94":{"start":{"line":125,"column":2},"end":{"line":125,"column":13}},"95":{"start":{"line":127,"column":0},"end":{"line":127,"column":24}},"96":{"start":{"line":129,"column":0},"end":{"line":131,"column":1}},"97":{"start":{"line":130,"column":2},"end":{"line":130,"column":37}},"98":{"start":{"line":132,"column":0},"end":{"line":132,"column":22}},"99":{"start":{"line":134,"column":0},"end":{"line":136,"column":1}},"100":{"start":{"line":135,"column":2},"end":{"line":135,"column":37}},"101":{"start":{"line":137,"column":0},"end":{"line":137,"column":22}},"102":{"start":{"line":139,"column":0},"end":{"line":141,"column":1}},"103":{"start":{"line":140,"column":2},"end":{"line":140,"column":23}},"104":{"start":{"line":142,"column":0},"end":{"line":142,"column":20}},"105":{"start":{"line":144,"column":0},"end":{"line":146,"column":1}},"106":{"start":{"line":145,"column":2},"end":{"line":145,"column":27}},"107":{"start":{"line":147,"column":0},"end":{"line":147,"column":24}},"108":{"start":{"line":149,"column":0},"end":{"line":151,"column":1}},"109":{"start":{"line":150,"column":2},"end":{"line":150,"column":31}},"110":{"start":{"line":152,"column":0},"end":{"line":152,"column":24}},"111":{"start":{"line":154,"column":0},"end":{"line":156,"column":1}},"112":{"start":{"line":155,"column":2},"end":{"line":155,"column":35}},"113":{"start":{"line":157,"column":0},"end":{"line":157,"column":24}},"114":{"start":{"line":159,"column":0},"end":{"line":162,"column":1}},"115":{"start":{"line":160,"column":2},"end":{"line":161,"column":47}},"116":{"start":{"line":161,"column":4},"end":{"line":161,"column":47}},"117":{"start":{"line":163,"column":0},"end":{"line":163,"column":22}},"118":{"start":{"line":165,"column":0},"end":{"line":165,"column":26}},"119":{"start":{"line":167,"column":0},"end":{"line":175,"column":1}},"120":{"start":{"line":168,"column":2},"end":{"line":168,"column":20}},"121":{"start":{"line":169,"column":2},"end":{"line":169,"column":24}},"122":{"start":{"line":171,"column":2},"end":{"line":171,"column":27}},"123":{"start":{"line":172,"column":2},"end":{"line":172,"column":39}},"124":{"start":{"line":173,"column":2},"end":{"line":173,"column":22}},"125":{"start":{"line":174,"column":2},"end":{"line":174,"column":20}},"126":{"start":{"line":176,"column":0},"end":{"line":176,"column":22}},"127":{"start":{"line":178,"column":0},"end":{"line":182,"column":1}},"128":{"start":{"line":179,"column":2},"end":{"line":179,"column":27}},"129":{"start":{"line":180,"column":2},"end":{"line":180,"column":39}},"130":{"start":{"line":181,"column":2},"end":{"line":181,"column":18}},"131":{"start":{"line":183,"column":0},"end":{"line":183,"column":28}},"132":{"start":{"line":185,"column":0},"end":{"line":188,"column":1}},"133":{"start":{"line":186,"column":2},"end":{"line":186,"column":19}},"134":{"start":{"line":187,"column":2},"end":{"line":187,"column":18}},"135":{"start":{"line":189,"column":0},"end":{"line":189,"column":28}},"136":{"start":{"line":191,"column":0},"end":{"line":203,"column":1}},"137":{"start":{"line":192,"column":2},"end":{"line":192,"column":16}},"138":{"start":{"line":193,"column":2},"end":{"line":193,"column":14}},"139":{"start":{"line":194,"column":2},"end":{"line":194,"column":23}},"140":{"start":{"line":195,"column":2},"end":{"line":195,"column":27}},"141":{"start":{"line":196,"column":2},"end":{"line":196,"column":23}},"142":{"start":{"line":197,"column":2},"end":{"line":197,"column":27}},"143":{"start":{"line":198,"column":2},"end":{"line":198,"column":23}},"144":{"start":{"line":199,"column":2},"end":{"line":199,"column":27}},"145":{"start":{"line":201,"column":2},"end":{"line":201,"column":37}},"146":{"start":{"line":202,"column":2},"end":{"line":202,"column":18}},"147":{"start":{"line":204,"column":0},"end":{"line":204,"column":32}},"148":{"start":{"line":206,"column":0},"end":{"line":209,"column":1}},"149":{"start":{"line":207,"column":2},"end":{"line":207,"column":29}},"150":{"start":{"line":208,"column":2},"end":{"line":208,"column":18}},"151":{"start":{"line":210,"column":0},"end":{"line":210,"column":32}},"152":{"start":{"line":212,"column":0},"end":{"line":226,"column":1}},"153":{"start":{"line":213,"column":2},"end":{"line":213,"column":16}},"154":{"start":{"line":214,"column":2},"end":{"line":214,"column":14}},"155":{"start":{"line":215,"column":2},"end":{"line":215,"column":23}},"156":{"start":{"line":216,"column":2},"end":{"line":216,"column":27}},"157":{"start":{"line":217,"column":2},"end":{"line":217,"column":23}},"158":{"start":{"line":218,"column":2},"end":{"line":218,"column":27}},"159":{"start":{"line":219,"column":2},"end":{"line":219,"column":23}},"160":{"start":{"line":220,"column":2},"end":{"line":220,"column":27}},"161":{"start":{"line":221,"column":2},"end":{"line":221,"column":23}},"162":{"start":{"line":222,"column":2},"end":{"line":222,"column":27}},"163":{"start":{"line":224,"column":2},"end":{"line":224,"column":42}},"164":{"start":{"line":225,"column":2},"end":{"line":225,"column":18}},"165":{"start":{"line":227,"column":0},"end":{"line":227,"column":32}},"166":{"start":{"line":229,"column":0},"end":{"line":233,"column":1}},"167":{"start":{"line":230,"column":2},"end":{"line":230,"column":34}},"168":{"start":{"line":232,"column":2},"end":{"line":232,"column":18}},"169":{"start":{"line":234,"column":0},"end":{"line":234,"column":32}},"170":{"start":{"line":236,"column":0},"end":{"line":239,"column":1}},"171":{"start":{"line":237,"column":2},"end":{"line":237,"column":44}},"172":{"start":{"line":238,"column":2},"end":{"line":238,"column":17}},"173":{"start":{"line":240,"column":0},"end":{"line":240,"column":30}},"174":{"start":{"line":242,"column":0},"end":{"line":245,"column":1}},"175":{"start":{"line":243,"column":2},"end":{"line":243,"column":44}},"176":{"start":{"line":244,"column":2},"end":{"line":244,"column":17}},"177":{"start":{"line":246,"column":0},"end":{"line":246,"column":30}},"178":{"start":{"line":248,"column":0},"end":{"line":250,"column":1}},"179":{"start":{"line":249,"column":2},"end":{"line":249,"column":20}},"180":{"start":{"line":251,"column":0},"end":{"line":251,"column":28}},"181":{"start":{"line":253,"column":0},"end":{"line":256,"column":1}},"182":{"start":{"line":254,"column":2},"end":{"line":254,"column":44}},"183":{"start":{"line":255,"column":2},"end":{"line":255,"column":17}},"184":{"start":{"line":257,"column":0},"end":{"line":257,"column":28}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":2},"end":{"line":5,"column":2}},{"start":{"line":5,"column":2},"end":{"line":5,"column":2}}]},"2":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"4":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"5":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":8}},{"start":{"line":16,"column":8},"end":{"line":16,"column":8}}]},"6":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":11},"end":{"line":21,"column":11}},{"start":{"line":21,"column":11},"end":{"line":21,"column":11}}]},"7":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"9":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"10":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"11":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":7},"end":{"line":76,"column":7}},{"start":{"line":76,"column":7},"end":{"line":76,"column":7}}]},"12":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":7},"end":{"line":78,"column":7}},{"start":{"line":78,"column":7},"end":{"line":78,"column":7}}]},"13":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":7},"end":{"line":80,"column":7}},{"start":{"line":80,"column":7},"end":{"line":80,"column":7}}]},"14":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":7},"end":{"line":82,"column":7}},{"start":{"line":82,"column":7},"end":{"line":82,"column":7}}]},"15":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":7},"end":{"line":84,"column":7}},{"start":{"line":84,"column":7},"end":{"line":84,"column":7}}]},"16":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":7},"end":{"line":86,"column":7}},{"start":{"line":86,"column":7},"end":{"line":86,"column":7}}]},"17":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"18":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"19":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"20":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":20},"end":{"line":161,"column":23}},{"start":{"line":161,"column":27},"end":{"line":161,"column":45}}]},"21":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":22},"end":{"line":172,"column":23}},{"start":{"line":172,"column":26},"end":{"line":172,"column":27}}]},"22":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":22},"end":{"line":180,"column":23}},{"start":{"line":180,"column":26},"end":{"line":180,"column":27}}]},"23":{"line":195,"type":"cond-expr","locations":[{"start":{"line":195,"column":21},"end":{"line":195,"column":22}},{"start":{"line":195,"column":25},"end":{"line":195,"column":26}}]},"24":{"line":197,"type":"cond-expr","locations":[{"start":{"line":197,"column":21},"end":{"line":197,"column":22}},{"start":{"line":197,"column":25},"end":{"line":197,"column":26}}]},"25":{"line":199,"type":"cond-expr","locations":[{"start":{"line":199,"column":21},"end":{"line":199,"column":22}},{"start":{"line":199,"column":25},"end":{"line":199,"column":26}}]},"26":{"line":216,"type":"cond-expr","locations":[{"start":{"line":216,"column":21},"end":{"line":216,"column":22}},{"start":{"line":216,"column":25},"end":{"line":216,"column":26}}]},"27":{"line":218,"type":"cond-expr","locations":[{"start":{"line":218,"column":21},"end":{"line":218,"column":22}},{"start":{"line":218,"column":25},"end":{"line":218,"column":26}}]},"28":{"line":220,"type":"cond-expr","locations":[{"start":{"line":220,"column":21},"end":{"line":220,"column":22}},{"start":{"line":220,"column":25},"end":{"line":220,"column":26}}]},"29":{"line":222,"type":"cond-expr","locations":[{"start":{"line":222,"column":21},"end":{"line":222,"column":22}},{"start":{"line":222,"column":25},"end":{"line":222,"column":26}}]}},"code":["var utils = exports;","var inherits = require('inherits');","","function toArray(msg, enc) {","  if (Array.isArray(msg))","    return msg.slice();","  if (!msg)","    return [];","  var res = [];","  if (typeof msg === 'string') {","    if (!enc) {","      for (var i = 0; i < msg.length; i++) {","        var c = msg.charCodeAt(i);","        var hi = c >> 8;","        var lo = c & 0xff;","        if (hi)","          res.push(hi, lo);","        else","          res.push(lo);","      }","    } else if (enc === 'hex') {","      msg = msg.replace(/[^a-z0-9]+/ig, '');","      if (msg.length % 2 !== 0)","        msg = '0' + msg;","      for (var i = 0; i < msg.length; i += 2)","        res.push(parseInt(msg[i] + msg[i + 1], 16));","    }","  } else {","    for (var i = 0; i < msg.length; i++)","      res[i] = msg[i] | 0;","  }","  return res;","}","utils.toArray = toArray;","","function toHex(msg) {","  var res = '';","  for (var i = 0; i < msg.length; i++)","    res += zero2(msg[i].toString(16));","  return res;","}","utils.toHex = toHex;","","function htonl(w) {","  var res = (w >>> 24) |","            ((w >>> 8) & 0xff00) |","            ((w << 8) & 0xff0000) |","            ((w & 0xff) << 24);","  return res >>> 0;","}","utils.htonl = htonl;","","function toHex32(msg, endian) {","  var res = '';","  for (var i = 0; i < msg.length; i++) {","    var w = msg[i];","    if (endian === 'little')","      w = htonl(w);","    res += zero8(w.toString(16));","  }","  return res;","}","utils.toHex32 = toHex32;","","function zero2(word) {","  if (word.length === 1)","    return '0' + word;","  else","    return word;","}","utils.zero2 = zero2;","","function zero8(word) {","  if (word.length === 7)","    return '0' + word;","  else if (word.length === 6)","    return '00' + word;","  else if (word.length === 5)","    return '000' + word;","  else if (word.length === 4)","    return '0000' + word;","  else if (word.length === 3)","    return '00000' + word;","  else if (word.length === 2)","    return '000000' + word;","  else if (word.length === 1)","    return '0000000' + word;","  else","    return word;","}","utils.zero8 = zero8;","","function join32(msg, start, end, endian) {","  var len = end - start;","  assert(len % 4 === 0);","  var res = new Array(len / 4);","  for (var i = 0, k = start; i < res.length; i++, k += 4) {","    var w;","    if (endian === 'big')","      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];","    else","      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];","    res[i] = w >>> 0;","  }","  return res;","}","utils.join32 = join32;","","function split32(msg, endian) {","  var res = new Array(msg.length * 4);","  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {","    var m = msg[i];","    if (endian === 'big') {","      res[k] = m >>> 24;","      res[k + 1] = (m >>> 16) & 0xff;","      res[k + 2] = (m >>> 8) & 0xff;","      res[k + 3] = m & 0xff;","    } else {","      res[k + 3] = m >>> 24;","      res[k + 2] = (m >>> 16) & 0xff;","      res[k + 1] = (m >>> 8) & 0xff;","      res[k] = m & 0xff;","    }","  }","  return res;","}","utils.split32 = split32;","","function rotr32(w, b) {","  return (w >>> b) | (w << (32 - b));","}","utils.rotr32 = rotr32;","","function rotl32(w, b) {","  return (w << b) | (w >>> (32 - b));","}","utils.rotl32 = rotl32;","","function sum32(a, b) {","  return (a + b) >>> 0;","}","utils.sum32 = sum32;","","function sum32_3(a, b, c) {","  return (a + b + c) >>> 0;","}","utils.sum32_3 = sum32_3;","","function sum32_4(a, b, c, d) {","  return (a + b + c + d) >>> 0;","}","utils.sum32_4 = sum32_4;","","function sum32_5(a, b, c, d, e) {","  return (a + b + c + d + e) >>> 0;","}","utils.sum32_5 = sum32_5;","","function assert(cond, msg) {","  if (!cond)","    throw new Error(msg || 'Assertion failed');","}","utils.assert = assert;","","utils.inherits = inherits;","","function sum64(buf, pos, ah, al) {","  var bh = buf[pos];","  var bl = buf[pos + 1];","","  var lo = (al + bl) >>> 0;","  var hi = (lo < al ? 1 : 0) + ah + bh;","  buf[pos] = hi >>> 0;","  buf[pos + 1] = lo;","}","exports.sum64 = sum64;","","function sum64_hi(ah, al, bh, bl) {","  var lo = (al + bl) >>> 0;","  var hi = (lo < al ? 1 : 0) + ah + bh;","  return hi >>> 0;","};","exports.sum64_hi = sum64_hi;","","function sum64_lo(ah, al, bh, bl) {","  var lo = al + bl;","  return lo >>> 0;","};","exports.sum64_lo = sum64_lo;","","function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {","  var carry = 0;","  var lo = al;","  lo = (lo + bl) >>> 0;","  carry += lo < al ? 1 : 0;","  lo = (lo + cl) >>> 0;","  carry += lo < cl ? 1 : 0;","  lo = (lo + dl) >>> 0;","  carry += lo < dl ? 1 : 0;","","  var hi = ah + bh + ch + dh + carry;","  return hi >>> 0;","};","exports.sum64_4_hi = sum64_4_hi;","","function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {","  var lo = al + bl + cl + dl;","  return lo >>> 0;","};","exports.sum64_4_lo = sum64_4_lo;","","function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {","  var carry = 0;","  var lo = al;","  lo = (lo + bl) >>> 0;","  carry += lo < al ? 1 : 0;","  lo = (lo + cl) >>> 0;","  carry += lo < cl ? 1 : 0;","  lo = (lo + dl) >>> 0;","  carry += lo < dl ? 1 : 0;","  lo = (lo + el) >>> 0;","  carry += lo < el ? 1 : 0;","","  var hi = ah + bh + ch + dh + eh + carry;","  return hi >>> 0;","};","exports.sum64_5_hi = sum64_5_hi;","","function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {","  var lo = al + bl + cl + dl + el;","","  return lo >>> 0;","};","exports.sum64_5_lo = sum64_5_lo;","","function rotr64_hi(ah, al, num) {","  var r = (al << (32 - num)) | (ah >>> num);","  return r >>> 0;","};","exports.rotr64_hi = rotr64_hi;","","function rotr64_lo(ah, al, num) {","  var r = (ah << (32 - num)) | (al >>> num);","  return r >>> 0;","};","exports.rotr64_lo = rotr64_lo;","","function shr64_hi(ah, al, num) {","  return ah >>> num;","};","exports.shr64_hi = shr64_hi;","","function shr64_lo(ah, al, num) {","  var r = (ah << (32 - num)) | (al >>> num);","  return r >>> 0;","};","exports.shr64_lo = shr64_lo;",""],"l":{"1":1,"2":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"29":0,"30":0,"32":0,"34":1,"36":1,"37":0,"38":0,"39":0,"40":0,"42":1,"44":1,"45":0,"49":0,"51":1,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"63":1,"65":1,"66":0,"67":0,"69":0,"71":1,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"91":1,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"102":0,"103":0,"105":0,"107":1,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"119":0,"120":0,"121":0,"122":0,"125":0,"127":1,"129":1,"130":0,"132":1,"134":1,"135":0,"137":1,"139":1,"140":0,"142":1,"144":1,"145":0,"147":1,"149":1,"150":0,"152":1,"154":1,"155":0,"157":1,"159":1,"160":0,"161":0,"163":1,"165":1,"167":1,"168":0,"169":0,"171":0,"172":0,"173":0,"174":0,"176":1,"178":1,"179":0,"180":0,"181":0,"183":1,"185":1,"186":0,"187":0,"189":1,"191":1,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"201":0,"202":0,"204":1,"206":1,"207":0,"208":0,"210":1,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"224":0,"225":0,"227":1,"229":1,"230":0,"232":0,"234":1,"236":1,"237":0,"238":0,"240":1,"242":1,"243":0,"244":0,"246":1,"248":1,"249":0,"251":1,"253":1,"254":0,"255":0,"257":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/inherits/inherits.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/inherits/inherits.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}}},"branchMap":{},"code":["module.exports = require('util').inherits",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/common.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/common.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"BlockHash","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":21}}},"2":{"name":"update","line":19,"loc":{"start":{"line":19,"column":29},"end":{"line":19,"column":55}}},"3":{"name":"digest","line":46,"loc":{"start":{"line":46,"column":29},"end":{"line":46,"column":50}}},"4":{"name":"pad","line":53,"loc":{"start":{"line":53,"column":27},"end":{"line":53,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"4":{"start":{"line":5,"column":0},"end":{"line":16,"column":1}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":22}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":24}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":46}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":42}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":52}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":50}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":22}},"12":{"start":{"line":14,"column":2},"end":{"line":14,"column":36}},"13":{"start":{"line":15,"column":2},"end":{"line":15,"column":38}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"15":{"start":{"line":19,"column":0},"end":{"line":44,"column":2}},"16":{"start":{"line":21,"column":2},"end":{"line":21,"column":32}},"17":{"start":{"line":22,"column":2},"end":{"line":25,"column":44}},"18":{"start":{"line":23,"column":4},"end":{"line":23,"column":23}},"19":{"start":{"line":25,"column":4},"end":{"line":25,"column":44}},"20":{"start":{"line":26,"column":2},"end":{"line":26,"column":34}},"21":{"start":{"line":29,"column":2},"end":{"line":41,"column":3}},"22":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"23":{"start":{"line":33,"column":4},"end":{"line":33,"column":38}},"24":{"start":{"line":34,"column":4},"end":{"line":34,"column":57}},"25":{"start":{"line":35,"column":4},"end":{"line":36,"column":26}},"26":{"start":{"line":36,"column":6},"end":{"line":36,"column":26}},"27":{"start":{"line":38,"column":4},"end":{"line":38,"column":60}},"28":{"start":{"line":39,"column":4},"end":{"line":40,"column":46}},"29":{"start":{"line":40,"column":6},"end":{"line":40,"column":46}},"30":{"start":{"line":43,"column":2},"end":{"line":43,"column":14}},"31":{"start":{"line":46,"column":0},"end":{"line":51,"column":2}},"32":{"start":{"line":47,"column":2},"end":{"line":47,"column":27}},"33":{"start":{"line":48,"column":2},"end":{"line":48,"column":32}},"34":{"start":{"line":50,"column":2},"end":{"line":50,"column":27}},"35":{"start":{"line":53,"column":0},"end":{"line":91,"column":2}},"36":{"start":{"line":54,"column":2},"end":{"line":54,"column":30}},"37":{"start":{"line":55,"column":2},"end":{"line":55,"column":27}},"38":{"start":{"line":56,"column":2},"end":{"line":56,"column":51}},"39":{"start":{"line":57,"column":2},"end":{"line":57,"column":42}},"40":{"start":{"line":58,"column":2},"end":{"line":58,"column":16}},"41":{"start":{"line":59,"column":2},"end":{"line":60,"column":15}},"42":{"start":{"line":60,"column":4},"end":{"line":60,"column":15}},"43":{"start":{"line":63,"column":2},"end":{"line":63,"column":12}},"44":{"start":{"line":64,"column":2},"end":{"line":88,"column":3}},"45":{"start":{"line":65,"column":4},"end":{"line":66,"column":19}},"46":{"start":{"line":66,"column":6},"end":{"line":66,"column":19}},"47":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"48":{"start":{"line":69,"column":4},"end":{"line":69,"column":17}},"49":{"start":{"line":70,"column":4},"end":{"line":70,"column":17}},"50":{"start":{"line":71,"column":4},"end":{"line":71,"column":17}},"51":{"start":{"line":72,"column":4},"end":{"line":72,"column":35}},"52":{"start":{"line":73,"column":4},"end":{"line":73,"column":35}},"53":{"start":{"line":74,"column":4},"end":{"line":74,"column":34}},"54":{"start":{"line":75,"column":4},"end":{"line":75,"column":26}},"55":{"start":{"line":77,"column":4},"end":{"line":77,"column":26}},"56":{"start":{"line":78,"column":4},"end":{"line":78,"column":34}},"57":{"start":{"line":79,"column":4},"end":{"line":79,"column":35}},"58":{"start":{"line":80,"column":4},"end":{"line":80,"column":35}},"59":{"start":{"line":81,"column":4},"end":{"line":81,"column":17}},"60":{"start":{"line":82,"column":4},"end":{"line":82,"column":17}},"61":{"start":{"line":83,"column":4},"end":{"line":83,"column":17}},"62":{"start":{"line":84,"column":4},"end":{"line":84,"column":17}},"63":{"start":{"line":86,"column":4},"end":{"line":87,"column":19}},"64":{"start":{"line":87,"column":6},"end":{"line":87,"column":19}},"65":{"start":{"line":90,"column":2},"end":{"line":90,"column":13}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]}},"code":["var hash = require('../hash');","var utils = hash.utils;","var assert = utils.assert;","","function BlockHash() {","  this.pending = null;","  this.pendingTotal = 0;","  this.blockSize = this.constructor.blockSize;","  this.outSize = this.constructor.outSize;","  this.hmacStrength = this.constructor.hmacStrength;","  this.padLength = this.constructor.padLength / 8;","  this.endian = 'big';","","  this._delta8 = this.blockSize / 8;","  this._delta32 = this.blockSize / 32;","}","exports.BlockHash = BlockHash;","","BlockHash.prototype.update = function update(msg, enc) {","  // Convert message to array, pad it, and join into 32bit blocks","  msg = utils.toArray(msg, enc);","  if (!this.pending)","    this.pending = msg;","  else","    this.pending = this.pending.concat(msg);","  this.pendingTotal += msg.length;","","  // Enough data, try updating","  if (this.pending.length >= this._delta8) {","    msg = this.pending;","","    // Process pending data in blocks","    var r = msg.length % this._delta8;","    this.pending = msg.slice(msg.length - r, msg.length);","    if (this.pending.length === 0)","      this.pending = null;","","    msg = utils.join32(msg, 0, msg.length - r, this.endian);","    for (var i = 0; i < msg.length; i += this._delta32)","      this._update(msg, i, i + this._delta32);","  }","","  return this;","};","","BlockHash.prototype.digest = function digest(enc) {","  this.update(this._pad());","  assert(this.pending === null);","","  return this._digest(enc);","};","","BlockHash.prototype._pad = function pad() {","  var len = this.pendingTotal;","  var bytes = this._delta8;","  var k = bytes - ((len + this.padLength) % bytes);","  var res = new Array(k + this.padLength);","  res[0] = 0x80;","  for (var i = 1; i < k; i++)","    res[i] = 0;","","  // Append length","  len <<= 3;","  if (this.endian === 'big') {","    for (var t = 8; t < this.padLength; t++)","      res[i++] = 0;","","    res[i++] = 0;","    res[i++] = 0;","    res[i++] = 0;","    res[i++] = 0;","    res[i++] = (len >>> 24) & 0xff;","    res[i++] = (len >>> 16) & 0xff;","    res[i++] = (len >>> 8) & 0xff;","    res[i++] = len & 0xff;","  } else {","    res[i++] = len & 0xff;","    res[i++] = (len >>> 8) & 0xff;","    res[i++] = (len >>> 16) & 0xff;","    res[i++] = (len >>> 24) & 0xff;","    res[i++] = 0;","    res[i++] = 0;","    res[i++] = 0;","    res[i++] = 0;","","    for (var t = 8; t < this.padLength; t++)","      res[i++] = 0;","  }","","  return res;","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"14":0,"15":0,"17":1,"19":1,"21":0,"22":0,"23":0,"25":0,"26":0,"29":0,"30":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"40":0,"43":0,"46":1,"47":0,"48":0,"50":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"63":0,"64":0,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"86":0,"87":0,"90":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/sha.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/sha.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":0,"198":0,"199":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":1,"237":0,"238":0,"239":0,"240":1,"241":0,"242":1,"243":0,"244":1,"245":0,"246":1,"247":0,"248":1,"249":0,"250":1,"251":0,"252":1,"253":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":1,"262":0,"263":0,"264":0,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":1,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":1,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":1,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":1,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":1,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":1,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":1,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"fnMap":{"1":{"name":"SHA256","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":18}}},"2":{"name":"_update","line":108,"loc":{"start":{"line":108,"column":27},"end":{"line":108,"column":56}}},"3":{"name":"digest","line":149,"loc":{"start":{"line":149,"column":27},"end":{"line":149,"column":48}}},"4":{"name":"SHA224","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":18}}},"5":{"name":"digest","line":172,"loc":{"start":{"line":172,"column":27},"end":{"line":172,"column":48}}},"6":{"name":"SHA512","line":180,"loc":{"start":{"line":180,"column":0},"end":{"line":180,"column":18}}},"7":{"name":"_prepareBlock","line":204,"loc":{"start":{"line":204,"column":33},"end":{"line":204,"column":68}}},"8":{"name":"_update","line":231,"loc":{"start":{"line":231,"column":27},"end":{"line":231,"column":56}}},"9":{"name":"digest","line":320,"loc":{"start":{"line":320,"column":27},"end":{"line":320,"column":48}}},"10":{"name":"SHA384","line":327,"loc":{"start":{"line":327,"column":0},"end":{"line":327,"column":18}}},"11":{"name":"digest","line":349,"loc":{"start":{"line":349,"column":27},"end":{"line":349,"column":48}}},"12":{"name":"SHA1","line":356,"loc":{"start":{"line":356,"column":0},"end":{"line":356,"column":16}}},"13":{"name":"_update","line":374,"loc":{"start":{"line":374,"column":25},"end":{"line":374,"column":54}}},"14":{"name":"digest","line":406,"loc":{"start":{"line":406,"column":25},"end":{"line":406,"column":46}}},"15":{"name":"ch32","line":413,"loc":{"start":{"line":413,"column":0},"end":{"line":413,"column":23}}},"16":{"name":"maj32","line":417,"loc":{"start":{"line":417,"column":0},"end":{"line":417,"column":24}}},"17":{"name":"p32","line":421,"loc":{"start":{"line":421,"column":0},"end":{"line":421,"column":22}}},"18":{"name":"s0_256","line":425,"loc":{"start":{"line":425,"column":0},"end":{"line":425,"column":19}}},"19":{"name":"s1_256","line":429,"loc":{"start":{"line":429,"column":0},"end":{"line":429,"column":19}}},"20":{"name":"g0_256","line":433,"loc":{"start":{"line":433,"column":0},"end":{"line":433,"column":19}}},"21":{"name":"g1_256","line":437,"loc":{"start":{"line":437,"column":0},"end":{"line":437,"column":19}}},"22":{"name":"ft_1","line":441,"loc":{"start":{"line":441,"column":0},"end":{"line":441,"column":26}}},"23":{"name":"ch64_hi","line":450,"loc":{"start":{"line":450,"column":0},"end":{"line":450,"column":41}}},"24":{"name":"ch64_lo","line":457,"loc":{"start":{"line":457,"column":0},"end":{"line":457,"column":41}}},"25":{"name":"maj64_hi","line":464,"loc":{"start":{"line":464,"column":0},"end":{"line":464,"column":42}}},"26":{"name":"maj64_lo","line":471,"loc":{"start":{"line":471,"column":0},"end":{"line":471,"column":42}}},"27":{"name":"s0_512_hi","line":478,"loc":{"start":{"line":478,"column":0},"end":{"line":478,"column":27}}},"28":{"name":"s0_512_lo","line":489,"loc":{"start":{"line":489,"column":0},"end":{"line":489,"column":27}}},"29":{"name":"s1_512_hi","line":500,"loc":{"start":{"line":500,"column":0},"end":{"line":500,"column":27}}},"30":{"name":"s1_512_lo","line":511,"loc":{"start":{"line":511,"column":0},"end":{"line":511,"column":27}}},"31":{"name":"g0_512_hi","line":522,"loc":{"start":{"line":522,"column":0},"end":{"line":522,"column":27}}},"32":{"name":"g0_512_lo","line":533,"loc":{"start":{"line":533,"column":0},"end":{"line":533,"column":27}}},"33":{"name":"g1_512_hi","line":544,"loc":{"start":{"line":544,"column":0},"end":{"line":544,"column":27}}},"34":{"name":"g1_512_lo","line":555,"loc":{"start":{"line":555,"column":0},"end":{"line":555,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":24}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":34}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"21":{"start":{"line":23,"column":0},"end":{"line":40,"column":2}},"22":{"start":{"line":42,"column":0},"end":{"line":83,"column":2}},"23":{"start":{"line":85,"column":0},"end":{"line":88,"column":2}},"24":{"start":{"line":90,"column":0},"end":{"line":99,"column":1}},"25":{"start":{"line":91,"column":2},"end":{"line":92,"column":24}},"26":{"start":{"line":92,"column":4},"end":{"line":92,"column":24}},"27":{"start":{"line":94,"column":2},"end":{"line":94,"column":23}},"28":{"start":{"line":95,"column":2},"end":{"line":96,"column":62}},"29":{"start":{"line":97,"column":2},"end":{"line":97,"column":20}},"30":{"start":{"line":98,"column":2},"end":{"line":98,"column":25}},"31":{"start":{"line":100,"column":0},"end":{"line":100,"column":34}},"32":{"start":{"line":101,"column":0},"end":{"line":101,"column":24}},"33":{"start":{"line":103,"column":0},"end":{"line":103,"column":23}},"34":{"start":{"line":104,"column":0},"end":{"line":104,"column":21}},"35":{"start":{"line":105,"column":0},"end":{"line":105,"column":26}},"36":{"start":{"line":106,"column":0},"end":{"line":106,"column":22}},"37":{"start":{"line":108,"column":0},"end":{"line":147,"column":2}},"38":{"start":{"line":109,"column":2},"end":{"line":109,"column":17}},"39":{"start":{"line":111,"column":2},"end":{"line":112,"column":26}},"40":{"start":{"line":112,"column":4},"end":{"line":112,"column":26}},"41":{"start":{"line":113,"column":2},"end":{"line":114,"column":77}},"42":{"start":{"line":114,"column":4},"end":{"line":114,"column":77}},"43":{"start":{"line":116,"column":2},"end":{"line":116,"column":20}},"44":{"start":{"line":117,"column":2},"end":{"line":117,"column":20}},"45":{"start":{"line":118,"column":2},"end":{"line":118,"column":20}},"46":{"start":{"line":119,"column":2},"end":{"line":119,"column":20}},"47":{"start":{"line":120,"column":2},"end":{"line":120,"column":20}},"48":{"start":{"line":121,"column":2},"end":{"line":121,"column":20}},"49":{"start":{"line":122,"column":2},"end":{"line":122,"column":20}},"50":{"start":{"line":123,"column":2},"end":{"line":123,"column":20}},"51":{"start":{"line":125,"column":2},"end":{"line":125,"column":37}},"52":{"start":{"line":126,"column":2},"end":{"line":137,"column":3}},"53":{"start":{"line":127,"column":4},"end":{"line":127,"column":67}},"54":{"start":{"line":128,"column":4},"end":{"line":128,"column":46}},"55":{"start":{"line":129,"column":4},"end":{"line":129,"column":10}},"56":{"start":{"line":130,"column":4},"end":{"line":130,"column":10}},"57":{"start":{"line":131,"column":4},"end":{"line":131,"column":10}},"58":{"start":{"line":132,"column":4},"end":{"line":132,"column":21}},"59":{"start":{"line":133,"column":4},"end":{"line":133,"column":10}},"60":{"start":{"line":134,"column":4},"end":{"line":134,"column":10}},"61":{"start":{"line":135,"column":4},"end":{"line":135,"column":10}},"62":{"start":{"line":136,"column":4},"end":{"line":136,"column":22}},"63":{"start":{"line":139,"column":2},"end":{"line":139,"column":34}},"64":{"start":{"line":140,"column":2},"end":{"line":140,"column":34}},"65":{"start":{"line":141,"column":2},"end":{"line":141,"column":34}},"66":{"start":{"line":142,"column":2},"end":{"line":142,"column":34}},"67":{"start":{"line":143,"column":2},"end":{"line":143,"column":34}},"68":{"start":{"line":144,"column":2},"end":{"line":144,"column":34}},"69":{"start":{"line":145,"column":2},"end":{"line":145,"column":34}},"70":{"start":{"line":146,"column":2},"end":{"line":146,"column":34}},"71":{"start":{"line":149,"column":0},"end":{"line":154,"column":2}},"72":{"start":{"line":150,"column":2},"end":{"line":153,"column":40}},"73":{"start":{"line":151,"column":4},"end":{"line":151,"column":40}},"74":{"start":{"line":153,"column":4},"end":{"line":153,"column":40}},"75":{"start":{"line":156,"column":0},"end":{"line":163,"column":1}},"76":{"start":{"line":157,"column":2},"end":{"line":158,"column":24}},"77":{"start":{"line":158,"column":4},"end":{"line":158,"column":24}},"78":{"start":{"line":160,"column":2},"end":{"line":160,"column":20}},"79":{"start":{"line":161,"column":2},"end":{"line":162,"column":62}},"80":{"start":{"line":164,"column":0},"end":{"line":164,"column":31}},"81":{"start":{"line":165,"column":0},"end":{"line":165,"column":24}},"82":{"start":{"line":167,"column":0},"end":{"line":167,"column":23}},"83":{"start":{"line":168,"column":0},"end":{"line":168,"column":21}},"84":{"start":{"line":169,"column":0},"end":{"line":169,"column":26}},"85":{"start":{"line":170,"column":0},"end":{"line":170,"column":22}},"86":{"start":{"line":172,"column":0},"end":{"line":178,"column":2}},"87":{"start":{"line":174,"column":2},"end":{"line":177,"column":52}},"88":{"start":{"line":175,"column":4},"end":{"line":175,"column":52}},"89":{"start":{"line":177,"column":4},"end":{"line":177,"column":52}},"90":{"start":{"line":180,"column":0},"end":{"line":195,"column":1}},"91":{"start":{"line":181,"column":2},"end":{"line":182,"column":24}},"92":{"start":{"line":182,"column":4},"end":{"line":182,"column":24}},"93":{"start":{"line":184,"column":2},"end":{"line":184,"column":23}},"94":{"start":{"line":185,"column":2},"end":{"line":192,"column":38}},"95":{"start":{"line":193,"column":2},"end":{"line":193,"column":20}},"96":{"start":{"line":194,"column":2},"end":{"line":194,"column":26}},"97":{"start":{"line":196,"column":0},"end":{"line":196,"column":34}},"98":{"start":{"line":197,"column":0},"end":{"line":197,"column":24}},"99":{"start":{"line":199,"column":0},"end":{"line":199,"column":24}},"100":{"start":{"line":200,"column":0},"end":{"line":200,"column":21}},"101":{"start":{"line":201,"column":0},"end":{"line":201,"column":26}},"102":{"start":{"line":202,"column":0},"end":{"line":202,"column":23}},"103":{"start":{"line":204,"column":0},"end":{"line":229,"column":2}},"104":{"start":{"line":205,"column":2},"end":{"line":205,"column":17}},"105":{"start":{"line":208,"column":2},"end":{"line":209,"column":26}},"106":{"start":{"line":209,"column":4},"end":{"line":209,"column":26}},"107":{"start":{"line":210,"column":2},"end":{"line":228,"column":3}},"108":{"start":{"line":211,"column":4},"end":{"line":211,"column":46}},"109":{"start":{"line":212,"column":4},"end":{"line":212,"column":46}},"110":{"start":{"line":213,"column":4},"end":{"line":213,"column":26}},"111":{"start":{"line":214,"column":4},"end":{"line":214,"column":26}},"112":{"start":{"line":215,"column":4},"end":{"line":215,"column":48}},"113":{"start":{"line":216,"column":4},"end":{"line":216,"column":48}},"114":{"start":{"line":217,"column":4},"end":{"line":217,"column":26}},"115":{"start":{"line":218,"column":4},"end":{"line":218,"column":26}},"116":{"start":{"line":220,"column":4},"end":{"line":223,"column":36}},"117":{"start":{"line":224,"column":4},"end":{"line":227,"column":40}},"118":{"start":{"line":231,"column":0},"end":{"line":318,"column":2}},"119":{"start":{"line":232,"column":2},"end":{"line":232,"column":33}},"120":{"start":{"line":234,"column":2},"end":{"line":234,"column":17}},"121":{"start":{"line":236,"column":2},"end":{"line":236,"column":21}},"122":{"start":{"line":237,"column":2},"end":{"line":237,"column":21}},"123":{"start":{"line":238,"column":2},"end":{"line":238,"column":21}},"124":{"start":{"line":239,"column":2},"end":{"line":239,"column":21}},"125":{"start":{"line":240,"column":2},"end":{"line":240,"column":21}},"126":{"start":{"line":241,"column":2},"end":{"line":241,"column":21}},"127":{"start":{"line":242,"column":2},"end":{"line":242,"column":21}},"128":{"start":{"line":243,"column":2},"end":{"line":243,"column":21}},"129":{"start":{"line":244,"column":2},"end":{"line":244,"column":21}},"130":{"start":{"line":245,"column":2},"end":{"line":245,"column":21}},"131":{"start":{"line":246,"column":2},"end":{"line":246,"column":22}},"132":{"start":{"line":247,"column":2},"end":{"line":247,"column":22}},"133":{"start":{"line":248,"column":2},"end":{"line":248,"column":22}},"134":{"start":{"line":249,"column":2},"end":{"line":249,"column":22}},"135":{"start":{"line":250,"column":2},"end":{"line":250,"column":22}},"136":{"start":{"line":251,"column":2},"end":{"line":251,"column":22}},"137":{"start":{"line":253,"column":2},"end":{"line":253,"column":37}},"138":{"start":{"line":254,"column":2},"end":{"line":308,"column":3}},"139":{"start":{"line":255,"column":4},"end":{"line":255,"column":19}},"140":{"start":{"line":256,"column":4},"end":{"line":256,"column":19}},"141":{"start":{"line":257,"column":4},"end":{"line":257,"column":34}},"142":{"start":{"line":258,"column":4},"end":{"line":258,"column":34}},"143":{"start":{"line":259,"column":4},"end":{"line":259,"column":48}},"144":{"start":{"line":260,"column":4},"end":{"line":260,"column":48}},"145":{"start":{"line":261,"column":4},"end":{"line":261,"column":26}},"146":{"start":{"line":262,"column":4},"end":{"line":262,"column":30}},"147":{"start":{"line":263,"column":4},"end":{"line":263,"column":21}},"148":{"start":{"line":264,"column":4},"end":{"line":264,"column":25}},"149":{"start":{"line":266,"column":4},"end":{"line":270,"column":41}},"150":{"start":{"line":271,"column":4},"end":{"line":275,"column":41}},"151":{"start":{"line":277,"column":4},"end":{"line":277,"column":34}},"152":{"start":{"line":278,"column":4},"end":{"line":278,"column":34}},"153":{"start":{"line":279,"column":4},"end":{"line":279,"column":49}},"154":{"start":{"line":280,"column":4},"end":{"line":280,"column":49}},"155":{"start":{"line":282,"column":4},"end":{"line":282,"column":53}},"156":{"start":{"line":283,"column":4},"end":{"line":283,"column":53}},"157":{"start":{"line":285,"column":4},"end":{"line":285,"column":12}},"158":{"start":{"line":286,"column":4},"end":{"line":286,"column":12}},"159":{"start":{"line":288,"column":4},"end":{"line":288,"column":12}},"160":{"start":{"line":289,"column":4},"end":{"line":289,"column":12}},"161":{"start":{"line":291,"column":4},"end":{"line":291,"column":12}},"162":{"start":{"line":292,"column":4},"end":{"line":292,"column":12}},"163":{"start":{"line":294,"column":4},"end":{"line":294,"column":40}},"164":{"start":{"line":295,"column":4},"end":{"line":295,"column":40}},"165":{"start":{"line":297,"column":4},"end":{"line":297,"column":12}},"166":{"start":{"line":298,"column":4},"end":{"line":298,"column":12}},"167":{"start":{"line":300,"column":4},"end":{"line":300,"column":12}},"168":{"start":{"line":301,"column":4},"end":{"line":301,"column":12}},"169":{"start":{"line":303,"column":4},"end":{"line":303,"column":12}},"170":{"start":{"line":304,"column":4},"end":{"line":304,"column":12}},"171":{"start":{"line":306,"column":4},"end":{"line":306,"column":46}},"172":{"start":{"line":307,"column":4},"end":{"line":307,"column":46}},"173":{"start":{"line":310,"column":2},"end":{"line":310,"column":27}},"174":{"start":{"line":311,"column":2},"end":{"line":311,"column":27}},"175":{"start":{"line":312,"column":2},"end":{"line":312,"column":27}},"176":{"start":{"line":313,"column":2},"end":{"line":313,"column":27}},"177":{"start":{"line":314,"column":2},"end":{"line":314,"column":27}},"178":{"start":{"line":315,"column":2},"end":{"line":315,"column":28}},"179":{"start":{"line":316,"column":2},"end":{"line":316,"column":28}},"180":{"start":{"line":317,"column":2},"end":{"line":317,"column":28}},"181":{"start":{"line":320,"column":0},"end":{"line":325,"column":2}},"182":{"start":{"line":321,"column":2},"end":{"line":324,"column":40}},"183":{"start":{"line":322,"column":4},"end":{"line":322,"column":40}},"184":{"start":{"line":324,"column":4},"end":{"line":324,"column":40}},"185":{"start":{"line":327,"column":0},"end":{"line":340,"column":1}},"186":{"start":{"line":328,"column":2},"end":{"line":329,"column":24}},"187":{"start":{"line":329,"column":4},"end":{"line":329,"column":24}},"188":{"start":{"line":331,"column":2},"end":{"line":331,"column":20}},"189":{"start":{"line":332,"column":2},"end":{"line":339,"column":38}},"190":{"start":{"line":341,"column":0},"end":{"line":341,"column":31}},"191":{"start":{"line":342,"column":0},"end":{"line":342,"column":24}},"192":{"start":{"line":344,"column":0},"end":{"line":344,"column":24}},"193":{"start":{"line":345,"column":0},"end":{"line":345,"column":21}},"194":{"start":{"line":346,"column":0},"end":{"line":346,"column":26}},"195":{"start":{"line":347,"column":0},"end":{"line":347,"column":23}},"196":{"start":{"line":349,"column":0},"end":{"line":354,"column":2}},"197":{"start":{"line":350,"column":2},"end":{"line":353,"column":53}},"198":{"start":{"line":351,"column":4},"end":{"line":351,"column":53}},"199":{"start":{"line":353,"column":4},"end":{"line":353,"column":53}},"200":{"start":{"line":356,"column":0},"end":{"line":364,"column":1}},"201":{"start":{"line":357,"column":2},"end":{"line":358,"column":22}},"202":{"start":{"line":358,"column":4},"end":{"line":358,"column":22}},"203":{"start":{"line":360,"column":2},"end":{"line":360,"column":23}},"204":{"start":{"line":361,"column":2},"end":{"line":362,"column":38}},"205":{"start":{"line":363,"column":2},"end":{"line":363,"column":25}},"206":{"start":{"line":366,"column":0},"end":{"line":366,"column":32}},"207":{"start":{"line":367,"column":0},"end":{"line":367,"column":20}},"208":{"start":{"line":369,"column":0},"end":{"line":369,"column":21}},"209":{"start":{"line":370,"column":0},"end":{"line":370,"column":19}},"210":{"start":{"line":371,"column":0},"end":{"line":371,"column":23}},"211":{"start":{"line":372,"column":0},"end":{"line":372,"column":20}},"212":{"start":{"line":374,"column":0},"end":{"line":404,"column":2}},"213":{"start":{"line":375,"column":2},"end":{"line":375,"column":17}},"214":{"start":{"line":377,"column":2},"end":{"line":378,"column":26}},"215":{"start":{"line":378,"column":4},"end":{"line":378,"column":26}},"216":{"start":{"line":380,"column":2},"end":{"line":381,"column":66}},"217":{"start":{"line":381,"column":4},"end":{"line":381,"column":66}},"218":{"start":{"line":383,"column":2},"end":{"line":383,"column":20}},"219":{"start":{"line":384,"column":2},"end":{"line":384,"column":20}},"220":{"start":{"line":385,"column":2},"end":{"line":385,"column":20}},"221":{"start":{"line":386,"column":2},"end":{"line":386,"column":20}},"222":{"start":{"line":387,"column":2},"end":{"line":387,"column":20}},"223":{"start":{"line":389,"column":2},"end":{"line":397,"column":3}},"224":{"start":{"line":390,"column":4},"end":{"line":390,"column":23}},"225":{"start":{"line":391,"column":4},"end":{"line":391,"column":72}},"226":{"start":{"line":392,"column":4},"end":{"line":392,"column":10}},"227":{"start":{"line":393,"column":4},"end":{"line":393,"column":10}},"228":{"start":{"line":394,"column":4},"end":{"line":394,"column":22}},"229":{"start":{"line":395,"column":4},"end":{"line":395,"column":10}},"230":{"start":{"line":396,"column":4},"end":{"line":396,"column":10}},"231":{"start":{"line":399,"column":2},"end":{"line":399,"column":34}},"232":{"start":{"line":400,"column":2},"end":{"line":400,"column":34}},"233":{"start":{"line":401,"column":2},"end":{"line":401,"column":34}},"234":{"start":{"line":402,"column":2},"end":{"line":402,"column":34}},"235":{"start":{"line":403,"column":2},"end":{"line":403,"column":34}},"236":{"start":{"line":406,"column":0},"end":{"line":411,"column":2}},"237":{"start":{"line":407,"column":2},"end":{"line":410,"column":40}},"238":{"start":{"line":408,"column":4},"end":{"line":408,"column":40}},"239":{"start":{"line":410,"column":4},"end":{"line":410,"column":40}},"240":{"start":{"line":413,"column":0},"end":{"line":415,"column":1}},"241":{"start":{"line":414,"column":2},"end":{"line":414,"column":30}},"242":{"start":{"line":417,"column":0},"end":{"line":419,"column":1}},"243":{"start":{"line":418,"column":2},"end":{"line":418,"column":37}},"244":{"start":{"line":421,"column":0},"end":{"line":423,"column":1}},"245":{"start":{"line":422,"column":2},"end":{"line":422,"column":19}},"246":{"start":{"line":425,"column":0},"end":{"line":427,"column":1}},"247":{"start":{"line":426,"column":2},"end":{"line":426,"column":54}},"248":{"start":{"line":429,"column":0},"end":{"line":431,"column":1}},"249":{"start":{"line":430,"column":2},"end":{"line":430,"column":54}},"250":{"start":{"line":433,"column":0},"end":{"line":435,"column":1}},"251":{"start":{"line":434,"column":2},"end":{"line":434,"column":50}},"252":{"start":{"line":437,"column":0},"end":{"line":439,"column":1}},"253":{"start":{"line":438,"column":2},"end":{"line":438,"column":52}},"254":{"start":{"line":441,"column":0},"end":{"line":448,"column":1}},"255":{"start":{"line":442,"column":2},"end":{"line":443,"column":25}},"256":{"start":{"line":443,"column":4},"end":{"line":443,"column":25}},"257":{"start":{"line":444,"column":2},"end":{"line":445,"column":24}},"258":{"start":{"line":445,"column":4},"end":{"line":445,"column":24}},"259":{"start":{"line":446,"column":2},"end":{"line":447,"column":26}},"260":{"start":{"line":447,"column":4},"end":{"line":447,"column":26}},"261":{"start":{"line":450,"column":0},"end":{"line":455,"column":1}},"262":{"start":{"line":451,"column":2},"end":{"line":451,"column":35}},"263":{"start":{"line":452,"column":2},"end":{"line":453,"column":21}},"264":{"start":{"line":453,"column":4},"end":{"line":453,"column":21}},"265":{"start":{"line":454,"column":2},"end":{"line":454,"column":11}},"266":{"start":{"line":457,"column":0},"end":{"line":462,"column":1}},"267":{"start":{"line":458,"column":2},"end":{"line":458,"column":35}},"268":{"start":{"line":459,"column":2},"end":{"line":460,"column":21}},"269":{"start":{"line":460,"column":4},"end":{"line":460,"column":21}},"270":{"start":{"line":461,"column":2},"end":{"line":461,"column":11}},"271":{"start":{"line":464,"column":0},"end":{"line":469,"column":1}},"272":{"start":{"line":465,"column":2},"end":{"line":465,"column":44}},"273":{"start":{"line":466,"column":2},"end":{"line":467,"column":21}},"274":{"start":{"line":467,"column":4},"end":{"line":467,"column":21}},"275":{"start":{"line":468,"column":2},"end":{"line":468,"column":11}},"276":{"start":{"line":471,"column":0},"end":{"line":476,"column":1}},"277":{"start":{"line":472,"column":2},"end":{"line":472,"column":44}},"278":{"start":{"line":473,"column":2},"end":{"line":474,"column":21}},"279":{"start":{"line":474,"column":4},"end":{"line":474,"column":21}},"280":{"start":{"line":475,"column":2},"end":{"line":475,"column":11}},"281":{"start":{"line":478,"column":0},"end":{"line":487,"column":1}},"282":{"start":{"line":479,"column":2},"end":{"line":479,"column":36}},"283":{"start":{"line":480,"column":2},"end":{"line":480,"column":35}},"284":{"start":{"line":481,"column":2},"end":{"line":481,"column":35}},"285":{"start":{"line":483,"column":2},"end":{"line":483,"column":32}},"286":{"start":{"line":484,"column":2},"end":{"line":485,"column":21}},"287":{"start":{"line":485,"column":4},"end":{"line":485,"column":21}},"288":{"start":{"line":486,"column":2},"end":{"line":486,"column":11}},"289":{"start":{"line":489,"column":0},"end":{"line":498,"column":1}},"290":{"start":{"line":490,"column":2},"end":{"line":490,"column":36}},"291":{"start":{"line":491,"column":2},"end":{"line":491,"column":35}},"292":{"start":{"line":492,"column":2},"end":{"line":492,"column":35}},"293":{"start":{"line":494,"column":2},"end":{"line":494,"column":32}},"294":{"start":{"line":495,"column":2},"end":{"line":496,"column":21}},"295":{"start":{"line":496,"column":4},"end":{"line":496,"column":21}},"296":{"start":{"line":497,"column":2},"end":{"line":497,"column":11}},"297":{"start":{"line":500,"column":0},"end":{"line":509,"column":1}},"298":{"start":{"line":501,"column":2},"end":{"line":501,"column":36}},"299":{"start":{"line":502,"column":2},"end":{"line":502,"column":36}},"300":{"start":{"line":503,"column":2},"end":{"line":503,"column":35}},"301":{"start":{"line":505,"column":2},"end":{"line":505,"column":32}},"302":{"start":{"line":506,"column":2},"end":{"line":507,"column":21}},"303":{"start":{"line":507,"column":4},"end":{"line":507,"column":21}},"304":{"start":{"line":508,"column":2},"end":{"line":508,"column":11}},"305":{"start":{"line":511,"column":0},"end":{"line":520,"column":1}},"306":{"start":{"line":512,"column":2},"end":{"line":512,"column":36}},"307":{"start":{"line":513,"column":2},"end":{"line":513,"column":36}},"308":{"start":{"line":514,"column":2},"end":{"line":514,"column":35}},"309":{"start":{"line":516,"column":2},"end":{"line":516,"column":32}},"310":{"start":{"line":517,"column":2},"end":{"line":518,"column":21}},"311":{"start":{"line":518,"column":4},"end":{"line":518,"column":21}},"312":{"start":{"line":519,"column":2},"end":{"line":519,"column":11}},"313":{"start":{"line":522,"column":0},"end":{"line":531,"column":1}},"314":{"start":{"line":523,"column":2},"end":{"line":523,"column":35}},"315":{"start":{"line":524,"column":2},"end":{"line":524,"column":35}},"316":{"start":{"line":525,"column":2},"end":{"line":525,"column":34}},"317":{"start":{"line":527,"column":2},"end":{"line":527,"column":32}},"318":{"start":{"line":528,"column":2},"end":{"line":529,"column":21}},"319":{"start":{"line":529,"column":4},"end":{"line":529,"column":21}},"320":{"start":{"line":530,"column":2},"end":{"line":530,"column":11}},"321":{"start":{"line":533,"column":0},"end":{"line":542,"column":1}},"322":{"start":{"line":534,"column":2},"end":{"line":534,"column":35}},"323":{"start":{"line":535,"column":2},"end":{"line":535,"column":35}},"324":{"start":{"line":536,"column":2},"end":{"line":536,"column":34}},"325":{"start":{"line":538,"column":2},"end":{"line":538,"column":32}},"326":{"start":{"line":539,"column":2},"end":{"line":540,"column":21}},"327":{"start":{"line":540,"column":4},"end":{"line":540,"column":21}},"328":{"start":{"line":541,"column":2},"end":{"line":541,"column":11}},"329":{"start":{"line":544,"column":0},"end":{"line":553,"column":1}},"330":{"start":{"line":545,"column":2},"end":{"line":545,"column":36}},"331":{"start":{"line":546,"column":2},"end":{"line":546,"column":36}},"332":{"start":{"line":547,"column":2},"end":{"line":547,"column":34}},"333":{"start":{"line":549,"column":2},"end":{"line":549,"column":32}},"334":{"start":{"line":550,"column":2},"end":{"line":551,"column":21}},"335":{"start":{"line":551,"column":4},"end":{"line":551,"column":21}},"336":{"start":{"line":552,"column":2},"end":{"line":552,"column":11}},"337":{"start":{"line":555,"column":0},"end":{"line":564,"column":1}},"338":{"start":{"line":556,"column":2},"end":{"line":556,"column":36}},"339":{"start":{"line":557,"column":2},"end":{"line":557,"column":36}},"340":{"start":{"line":558,"column":2},"end":{"line":558,"column":34}},"341":{"start":{"line":560,"column":2},"end":{"line":560,"column":32}},"342":{"start":{"line":561,"column":2},"end":{"line":562,"column":21}},"343":{"start":{"line":562,"column":4},"end":{"line":562,"column":21}},"344":{"start":{"line":563,"column":2},"end":{"line":563,"column":11}}},"branchMap":{"1":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"2":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"3":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"4":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"5":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"6":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":2},"end":{"line":321,"column":2}},{"start":{"line":321,"column":2},"end":{"line":321,"column":2}}]},"7":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":2},"end":{"line":328,"column":2}},{"start":{"line":328,"column":2},"end":{"line":328,"column":2}}]},"8":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"9":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"10":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":2},"end":{"line":407,"column":2}},{"start":{"line":407,"column":2},"end":{"line":407,"column":2}}]},"11":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":2},"end":{"line":442,"column":2}},{"start":{"line":442,"column":2},"end":{"line":442,"column":2}}]},"12":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":2},"end":{"line":444,"column":2}},{"start":{"line":444,"column":2},"end":{"line":444,"column":2}}]},"13":{"line":444,"type":"binary-expr","locations":[{"start":{"line":444,"column":6},"end":{"line":444,"column":13}},{"start":{"line":444,"column":17},"end":{"line":444,"column":24}}]},"14":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":2},"end":{"line":446,"column":2}},{"start":{"line":446,"column":2},"end":{"line":446,"column":2}}]},"15":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":2},"end":{"line":452,"column":2}},{"start":{"line":452,"column":2},"end":{"line":452,"column":2}}]},"16":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":2},"end":{"line":459,"column":2}},{"start":{"line":459,"column":2},"end":{"line":459,"column":2}}]},"17":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":2},"end":{"line":466,"column":2}},{"start":{"line":466,"column":2},"end":{"line":466,"column":2}}]},"18":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":2},"end":{"line":473,"column":2}},{"start":{"line":473,"column":2},"end":{"line":473,"column":2}}]},"19":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":2},"end":{"line":484,"column":2}},{"start":{"line":484,"column":2},"end":{"line":484,"column":2}}]},"20":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":2},"end":{"line":495,"column":2}},{"start":{"line":495,"column":2},"end":{"line":495,"column":2}}]},"21":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":2},"end":{"line":506,"column":2}},{"start":{"line":506,"column":2},"end":{"line":506,"column":2}}]},"22":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":2},"end":{"line":517,"column":2}},{"start":{"line":517,"column":2},"end":{"line":517,"column":2}}]},"23":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":2},"end":{"line":528,"column":2}},{"start":{"line":528,"column":2},"end":{"line":528,"column":2}}]},"24":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":2},"end":{"line":539,"column":2}},{"start":{"line":539,"column":2},"end":{"line":539,"column":2}}]},"25":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":2},"end":{"line":550,"column":2}},{"start":{"line":550,"column":2},"end":{"line":550,"column":2}}]},"26":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":2},"end":{"line":561,"column":2}},{"start":{"line":561,"column":2},"end":{"line":561,"column":2}}]}},"code":["var hash = require('../hash');","var utils = hash.utils;","var assert = utils.assert;","","var rotr32 = utils.rotr32;","var rotl32 = utils.rotl32;","var sum32 = utils.sum32;","var sum32_4 = utils.sum32_4;","var sum32_5 = utils.sum32_5;","var rotr64_hi = utils.rotr64_hi;","var rotr64_lo = utils.rotr64_lo;","var shr64_hi = utils.shr64_hi;","var shr64_lo = utils.shr64_lo;","var sum64 = utils.sum64;","var sum64_hi = utils.sum64_hi;","var sum64_lo = utils.sum64_lo;","var sum64_4_hi = utils.sum64_4_hi;","var sum64_4_lo = utils.sum64_4_lo;","var sum64_5_hi = utils.sum64_5_hi;","var sum64_5_lo = utils.sum64_5_lo;","var BlockHash = hash.common.BlockHash;","","var sha256_K = [","  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,","  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,","  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,","  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,","  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,","  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,","  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,","  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,","  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,","  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,","  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,","  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,","  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,","  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,","  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,","  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2","];","","var sha512_K = [","  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,","  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,","  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,","  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,","  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,","  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,","  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,","  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,","  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,","  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,","  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,","  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,","  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,","  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,","  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,","  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,","  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,","  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,","  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,","  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,","  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,","  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,","  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,","  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,","  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,","  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,","  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,","  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,","  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,","  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,","  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,","  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,","  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,","  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,","  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,","  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,","  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,","  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,","  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,","  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817","];","","var sha1_K = [","  0x5A827999, 0x6ED9EBA1,","  0x8F1BBCDC, 0xCA62C1D6","];","","function SHA256() {","  if (!(this instanceof SHA256))","    return new SHA256();","","  BlockHash.call(this);","  this.h = [ 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,","             0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ];","  this.k = sha256_K;","  this.W = new Array(64);","}","utils.inherits(SHA256, BlockHash);","exports.sha256 = SHA256;","","SHA256.blockSize = 512;","SHA256.outSize = 256;","SHA256.hmacStrength = 192;","SHA256.padLength = 64;","","SHA256.prototype._update = function _update(msg, start) {","  var W = this.W;","","  for (var i = 0; i < 16; i++)","    W[i] = msg[start + i];","  for (; i < W.length; i++)","    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);","","  var a = this.h[0];","  var b = this.h[1];","  var c = this.h[2];","  var d = this.h[3];","  var e = this.h[4];","  var f = this.h[5];","  var g = this.h[6];","  var h = this.h[7];","","  assert(this.k.length === W.length);","  for (var i = 0; i < W.length; i++) {","    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);","    var T2 = sum32(s0_256(a), maj32(a, b, c));","    h = g;","    g = f;","    f = e;","    e = sum32(d, T1);","    d = c;","    c = b;","    b = a;","    a = sum32(T1, T2);","  }","","  this.h[0] = sum32(this.h[0], a);","  this.h[1] = sum32(this.h[1], b);","  this.h[2] = sum32(this.h[2], c);","  this.h[3] = sum32(this.h[3], d);","  this.h[4] = sum32(this.h[4], e);","  this.h[5] = sum32(this.h[5], f);","  this.h[6] = sum32(this.h[6], g);","  this.h[7] = sum32(this.h[7], h);","};","","SHA256.prototype._digest = function digest(enc) {","  if (enc === 'hex')","    return utils.toHex32(this.h, 'big');","  else","    return utils.split32(this.h, 'big');","};","","function SHA224() {","  if (!(this instanceof SHA224))","    return new SHA224();","","  SHA256.call(this);","  this.h = [ 0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,","             0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];","}","utils.inherits(SHA224, SHA256);","exports.sha224 = SHA224;","","SHA224.blockSize = 512;","SHA224.outSize = 224;","SHA224.hmacStrength = 192;","SHA224.padLength = 64;","","SHA224.prototype._digest = function digest(enc) {","  // Just truncate output","  if (enc === 'hex')","    return utils.toHex32(this.h.slice(0, 7), 'big');","  else","    return utils.split32(this.h.slice(0, 7), 'big');","};","","function SHA512() {","  if (!(this instanceof SHA512))","    return new SHA512();","","  BlockHash.call(this);","  this.h = [ 0x6a09e667, 0xf3bcc908,","             0xbb67ae85, 0x84caa73b,","             0x3c6ef372, 0xfe94f82b,","             0xa54ff53a, 0x5f1d36f1,","             0x510e527f, 0xade682d1,","             0x9b05688c, 0x2b3e6c1f,","             0x1f83d9ab, 0xfb41bd6b,","             0x5be0cd19, 0x137e2179 ];","  this.k = sha512_K;","  this.W = new Array(160);","}","utils.inherits(SHA512, BlockHash);","exports.sha512 = SHA512;","","SHA512.blockSize = 1024;","SHA512.outSize = 512;","SHA512.hmacStrength = 192;","SHA512.padLength = 128;","","SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {","  var W = this.W;","","  // 32 x 32bit words","  for (var i = 0; i < 32; i++)","    W[i] = msg[start + i];","  for (; i < W.length; i += 2) {","    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2","    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);","    var c1_hi = W[i - 14];  // i - 7","    var c1_lo = W[i - 13];","    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15","    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);","    var c3_hi = W[i - 32];  // i - 16","    var c3_lo = W[i - 31];","","    W[i] = sum64_4_hi(c0_hi, c0_lo,","                      c1_hi, c1_lo,","                      c2_hi, c2_lo,","                      c3_hi, c3_lo);","    W[i + 1] = sum64_4_lo(c0_hi, c0_lo,","                          c1_hi, c1_lo,","                          c2_hi, c2_lo,","                          c3_hi, c3_lo);","  }","};","","SHA512.prototype._update = function _update(msg, start) {","  this._prepareBlock(msg, start);","","  var W = this.W;","","  var ah = this.h[0];","  var al = this.h[1];","  var bh = this.h[2];","  var bl = this.h[3];","  var ch = this.h[4];","  var cl = this.h[5];","  var dh = this.h[6];","  var dl = this.h[7];","  var eh = this.h[8];","  var el = this.h[9];","  var fh = this.h[10];","  var fl = this.h[11];","  var gh = this.h[12];","  var gl = this.h[13];","  var hh = this.h[14];","  var hl = this.h[15];","","  assert(this.k.length === W.length);","  for (var i = 0; i < W.length; i += 2) {","    var c0_hi = hh;","    var c0_lo = hl;","    var c1_hi = s1_512_hi(eh, el);","    var c1_lo = s1_512_lo(eh, el);","    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);","    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);","    var c3_hi = this.k[i];","    var c3_lo = this.k[i + 1];","    var c4_hi = W[i];","    var c4_lo = W[i + 1];","","    var T1_hi = sum64_5_hi(c0_hi, c0_lo,","                           c1_hi, c1_lo,","                           c2_hi, c2_lo,","                           c3_hi, c3_lo,","                           c4_hi, c4_lo);","    var T1_lo = sum64_5_lo(c0_hi, c0_lo,","                           c1_hi, c1_lo,","                           c2_hi, c2_lo,","                           c3_hi, c3_lo,","                           c4_hi, c4_lo);","","    var c0_hi = s0_512_hi(ah, al);","    var c0_lo = s0_512_lo(ah, al);","    var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);","    var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);","","    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);","    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);","","    hh = gh;","    hl = gl;","","    gh = fh;","    gl = fl;","","    fh = eh;","    fl = el;","","    eh = sum64_hi(dh, dl, T1_hi, T1_lo);","    el = sum64_lo(dl, dl, T1_hi, T1_lo);","","    dh = ch;","    dl = cl;","","    ch = bh;","    cl = bl;","","    bh = ah;","    bl = al;","","    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);","    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);","  }","","  sum64(this.h, 0, ah, al);","  sum64(this.h, 2, bh, bl);","  sum64(this.h, 4, ch, cl);","  sum64(this.h, 6, dh, dl);","  sum64(this.h, 8, eh, el);","  sum64(this.h, 10, fh, fl);","  sum64(this.h, 12, gh, gl);","  sum64(this.h, 14, hh, hl);","};","","SHA512.prototype._digest = function digest(enc) {","  if (enc === 'hex')","    return utils.toHex32(this.h, 'big');","  else","    return utils.split32(this.h, 'big');","};","","function SHA384() {","  if (!(this instanceof SHA384))","    return new SHA384();","","  SHA512.call(this);","  this.h = [ 0xcbbb9d5d, 0xc1059ed8,","             0x629a292a, 0x367cd507,","             0x9159015a, 0x3070dd17,","             0x152fecd8, 0xf70e5939,","             0x67332667, 0xffc00b31,","             0x8eb44a87, 0x68581511,","             0xdb0c2e0d, 0x64f98fa7,","             0x47b5481d, 0xbefa4fa4 ];","}","utils.inherits(SHA384, SHA512);","exports.sha384 = SHA384;","","SHA384.blockSize = 1024;","SHA384.outSize = 384;","SHA384.hmacStrength = 192;","SHA384.padLength = 128;","","SHA384.prototype._digest = function digest(enc) {","  if (enc === 'hex')","    return utils.toHex32(this.h.slice(0, 12), 'big');","  else","    return utils.split32(this.h.slice(0, 12), 'big');","};","","function SHA1() {","  if (!(this instanceof SHA1))","    return new SHA1();","","  BlockHash.call(this);","  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe,","             0x10325476, 0xc3d2e1f0 ];","  this.W = new Array(80);","}","","utils.inherits(SHA1, BlockHash);","exports.sha1 = SHA1;","","SHA1.blockSize = 512;","SHA1.outSize = 160;","SHA1.hmacStrength = 80;","SHA1.padLength = 64;","","SHA1.prototype._update = function _update(msg, start) {","  var W = this.W;","","  for (var i = 0; i < 16; i++)","    W[i] = msg[start + i];","","  for(; i < W.length; i++)","    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);","","  var a = this.h[0];","  var b = this.h[1];","  var c = this.h[2];","  var d = this.h[3];","  var e = this.h[4];","","  for (var i = 0; i < W.length; i++) {","    var s = ~~(i / 20);","    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);","    e = d;","    d = c;","    c = rotl32(b, 30);","    b = a;","    a = t;","  }","","  this.h[0] = sum32(this.h[0], a);","  this.h[1] = sum32(this.h[1], b);","  this.h[2] = sum32(this.h[2], c);","  this.h[3] = sum32(this.h[3], d);","  this.h[4] = sum32(this.h[4], e);","};","","SHA1.prototype._digest = function digest(enc) {","  if (enc === 'hex')","    return utils.toHex32(this.h, 'big');","  else","    return utils.split32(this.h, 'big');","};","","function ch32(x, y, z) {","  return (x & y) ^ ((~x) & z);","}","","function maj32(x, y, z) {","  return (x & y) ^ (x & z) ^ (y & z);","}","","function p32(x, y, z) {","  return x ^ y ^ z;","}","","function s0_256(x) {","  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);","}","","function s1_256(x) {","  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);","}","","function g0_256(x) {","  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);","}","","function g1_256(x) {","  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);","}","","function ft_1(s, x, y, z) {","  if (s === 0)","    return ch32(x, y, z);","  if (s === 1 || s === 3)","    return p32(x, y, z);","  if (s === 2)","    return maj32(x, y, z);","}","","function ch64_hi(xh, xl, yh, yl, zh, zl) {","  var r = (xh & yh) ^ ((~xh) & zh);","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function ch64_lo(xh, xl, yh, yl, zh, zl) {","  var r = (xl & yl) ^ ((~xl) & zl);","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function maj64_hi(xh, xl, yh, yl, zh, zl) {","  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function maj64_lo(xh, xl, yh, yl, zh, zl) {","  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function s0_512_hi(xh, xl) {","  var c0_hi = rotr64_hi(xh, xl, 28);","  var c1_hi = rotr64_hi(xl, xh, 2);  // 34","  var c2_hi = rotr64_hi(xl, xh, 7);  // 39","","  var r = c0_hi ^ c1_hi ^ c2_hi;","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function s0_512_lo(xh, xl) {","  var c0_lo = rotr64_lo(xh, xl, 28);","  var c1_lo = rotr64_lo(xl, xh, 2);  // 34","  var c2_lo = rotr64_lo(xl, xh, 7);  // 39","","  var r = c0_lo ^ c1_lo ^ c2_lo;","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function s1_512_hi(xh, xl) {","  var c0_hi = rotr64_hi(xh, xl, 14);","  var c1_hi = rotr64_hi(xh, xl, 18);","  var c2_hi = rotr64_hi(xl, xh, 9);  // 41","","  var r = c0_hi ^ c1_hi ^ c2_hi;","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function s1_512_lo(xh, xl) {","  var c0_lo = rotr64_lo(xh, xl, 14);","  var c1_lo = rotr64_lo(xh, xl, 18);","  var c2_lo = rotr64_lo(xl, xh, 9);  // 41","","  var r = c0_lo ^ c1_lo ^ c2_lo;","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function g0_512_hi(xh, xl) {","  var c0_hi = rotr64_hi(xh, xl, 1);","  var c1_hi = rotr64_hi(xh, xl, 8);","  var c2_hi = shr64_hi(xh, xl, 7);","","  var r = c0_hi ^ c1_hi ^ c2_hi;","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function g0_512_lo(xh, xl) {","  var c0_lo = rotr64_lo(xh, xl, 1);","  var c1_lo = rotr64_lo(xh, xl, 8);","  var c2_lo = shr64_lo(xh, xl, 7);","","  var r = c0_lo ^ c1_lo ^ c2_lo;","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function g1_512_hi(xh, xl) {","  var c0_hi = rotr64_hi(xh, xl, 19);","  var c1_hi = rotr64_hi(xl, xh, 29);  // 61","  var c2_hi = shr64_hi(xh, xl, 6);","","  var r = c0_hi ^ c1_hi ^ c2_hi;","  if (r < 0)","    r += 0x100000000;","  return r;","}","","function g1_512_lo(xh, xl) {","  var c0_lo = rotr64_lo(xh, xl, 19);","  var c1_lo = rotr64_lo(xl, xh, 29);  // 61","  var c2_lo = shr64_lo(xh, xl, 6);","","  var r = c0_lo ^ c1_lo ^ c2_lo;","  if (r < 0)","    r += 0x100000000;","  return r;","}",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"23":1,"42":1,"85":1,"90":1,"91":0,"92":0,"94":0,"95":0,"97":0,"98":0,"100":1,"101":1,"103":1,"104":1,"105":1,"106":1,"108":1,"109":0,"111":0,"112":0,"113":0,"114":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"149":1,"150":0,"151":0,"153":0,"156":1,"157":0,"158":0,"160":0,"161":0,"164":1,"165":1,"167":1,"168":1,"169":1,"170":1,"172":1,"174":0,"175":0,"177":0,"180":1,"181":0,"182":0,"184":0,"185":0,"193":0,"194":0,"196":1,"197":1,"199":1,"200":1,"201":1,"202":1,"204":1,"205":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"220":0,"224":0,"231":1,"232":0,"234":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"266":0,"271":0,"277":0,"278":0,"279":0,"280":0,"282":0,"283":0,"285":0,"286":0,"288":0,"289":0,"291":0,"292":0,"294":0,"295":0,"297":0,"298":0,"300":0,"301":0,"303":0,"304":0,"306":0,"307":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"320":1,"321":0,"322":0,"324":0,"327":1,"328":0,"329":0,"331":0,"332":0,"341":1,"342":1,"344":1,"345":1,"346":1,"347":1,"349":1,"350":0,"351":0,"353":0,"356":1,"357":0,"358":0,"360":0,"361":0,"363":0,"366":1,"367":1,"369":1,"370":1,"371":1,"372":1,"374":1,"375":0,"377":0,"378":0,"380":0,"381":0,"383":0,"384":0,"385":0,"386":0,"387":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"399":0,"400":0,"401":0,"402":0,"403":0,"406":1,"407":0,"408":0,"410":0,"413":1,"414":0,"417":1,"418":0,"421":1,"422":0,"425":1,"426":0,"429":1,"430":0,"433":1,"434":0,"437":1,"438":0,"441":1,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"450":1,"451":0,"452":0,"453":0,"454":0,"457":1,"458":0,"459":0,"460":0,"461":0,"464":1,"465":0,"466":0,"467":0,"468":0,"471":1,"472":0,"473":0,"474":0,"475":0,"478":1,"479":0,"480":0,"481":0,"483":0,"484":0,"485":0,"486":0,"489":1,"490":0,"491":0,"492":0,"494":0,"495":0,"496":0,"497":0,"500":1,"501":0,"502":0,"503":0,"505":0,"506":0,"507":0,"508":0,"511":1,"512":0,"513":0,"514":0,"516":0,"517":0,"518":0,"519":0,"522":1,"523":0,"524":0,"525":0,"527":0,"528":0,"529":0,"530":0,"533":1,"534":0,"535":0,"536":0,"538":0,"539":0,"540":0,"541":0,"544":1,"545":0,"546":0,"547":0,"549":0,"550":0,"551":0,"552":0,"555":1,"556":0,"557":0,"558":0,"560":0,"561":0,"562":0,"563":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/ripemd.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/ripemd.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":1,"86":1,"87":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"RIPEMD160","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":21}}},"2":{"name":"update","line":27,"loc":{"start":{"line":27,"column":30},"end":{"line":27,"column":58}}},"3":{"name":"digest","line":68,"loc":{"start":{"line":68,"column":30},"end":{"line":68,"column":51}}},"4":{"name":"f","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":23}}},"5":{"name":"K","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":14}}},"6":{"name":"Kh","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":15}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":24}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"8":{"start":{"line":10,"column":0},"end":{"line":18,"column":1}},"9":{"start":{"line":11,"column":2},"end":{"line":12,"column":27}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":27}},"11":{"start":{"line":14,"column":2},"end":{"line":14,"column":23}},"12":{"start":{"line":16,"column":2},"end":{"line":16,"column":74}},"13":{"start":{"line":17,"column":2},"end":{"line":17,"column":25}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}},"16":{"start":{"line":22,"column":0},"end":{"line":22,"column":26}},"17":{"start":{"line":23,"column":0},"end":{"line":23,"column":24}},"18":{"start":{"line":24,"column":0},"end":{"line":24,"column":29}},"19":{"start":{"line":25,"column":0},"end":{"line":25,"column":25}},"20":{"start":{"line":27,"column":0},"end":{"line":66,"column":2}},"21":{"start":{"line":28,"column":2},"end":{"line":28,"column":20}},"22":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"23":{"start":{"line":30,"column":2},"end":{"line":30,"column":20}},"24":{"start":{"line":31,"column":2},"end":{"line":31,"column":20}},"25":{"start":{"line":32,"column":2},"end":{"line":32,"column":20}},"26":{"start":{"line":33,"column":2},"end":{"line":33,"column":13}},"27":{"start":{"line":34,"column":2},"end":{"line":34,"column":13}},"28":{"start":{"line":35,"column":2},"end":{"line":35,"column":13}},"29":{"start":{"line":36,"column":2},"end":{"line":36,"column":13}},"30":{"start":{"line":37,"column":2},"end":{"line":37,"column":13}},"31":{"start":{"line":38,"column":2},"end":{"line":59,"column":3}},"32":{"start":{"line":39,"column":4},"end":{"line":43,"column":9}},"33":{"start":{"line":44,"column":4},"end":{"line":44,"column":10}},"34":{"start":{"line":45,"column":4},"end":{"line":45,"column":10}},"35":{"start":{"line":46,"column":4},"end":{"line":46,"column":22}},"36":{"start":{"line":47,"column":4},"end":{"line":47,"column":10}},"37":{"start":{"line":48,"column":4},"end":{"line":48,"column":10}},"38":{"start":{"line":49,"column":4},"end":{"line":53,"column":10}},"39":{"start":{"line":54,"column":4},"end":{"line":54,"column":12}},"40":{"start":{"line":55,"column":4},"end":{"line":55,"column":12}},"41":{"start":{"line":56,"column":4},"end":{"line":56,"column":24}},"42":{"start":{"line":57,"column":4},"end":{"line":57,"column":12}},"43":{"start":{"line":58,"column":4},"end":{"line":58,"column":11}},"44":{"start":{"line":60,"column":2},"end":{"line":60,"column":32}},"45":{"start":{"line":61,"column":2},"end":{"line":61,"column":40}},"46":{"start":{"line":62,"column":2},"end":{"line":62,"column":40}},"47":{"start":{"line":63,"column":2},"end":{"line":63,"column":40}},"48":{"start":{"line":64,"column":2},"end":{"line":64,"column":40}},"49":{"start":{"line":65,"column":2},"end":{"line":65,"column":16}},"50":{"start":{"line":68,"column":0},"end":{"line":73,"column":2}},"51":{"start":{"line":69,"column":2},"end":{"line":72,"column":43}},"52":{"start":{"line":70,"column":4},"end":{"line":70,"column":43}},"53":{"start":{"line":72,"column":4},"end":{"line":72,"column":43}},"54":{"start":{"line":75,"column":0},"end":{"line":86,"column":1}},"55":{"start":{"line":76,"column":2},"end":{"line":85,"column":26}},"56":{"start":{"line":77,"column":4},"end":{"line":77,"column":21}},"57":{"start":{"line":78,"column":7},"end":{"line":85,"column":26}},"58":{"start":{"line":79,"column":4},"end":{"line":79,"column":32}},"59":{"start":{"line":80,"column":7},"end":{"line":85,"column":26}},"60":{"start":{"line":81,"column":4},"end":{"line":81,"column":26}},"61":{"start":{"line":82,"column":7},"end":{"line":85,"column":26}},"62":{"start":{"line":83,"column":4},"end":{"line":83,"column":32}},"63":{"start":{"line":85,"column":4},"end":{"line":85,"column":26}},"64":{"start":{"line":88,"column":0},"end":{"line":99,"column":1}},"65":{"start":{"line":89,"column":2},"end":{"line":98,"column":22}},"66":{"start":{"line":90,"column":4},"end":{"line":90,"column":22}},"67":{"start":{"line":91,"column":7},"end":{"line":98,"column":22}},"68":{"start":{"line":92,"column":4},"end":{"line":92,"column":22}},"69":{"start":{"line":93,"column":7},"end":{"line":98,"column":22}},"70":{"start":{"line":94,"column":4},"end":{"line":94,"column":22}},"71":{"start":{"line":95,"column":7},"end":{"line":98,"column":22}},"72":{"start":{"line":96,"column":4},"end":{"line":96,"column":22}},"73":{"start":{"line":98,"column":4},"end":{"line":98,"column":22}},"74":{"start":{"line":101,"column":0},"end":{"line":112,"column":1}},"75":{"start":{"line":102,"column":2},"end":{"line":111,"column":22}},"76":{"start":{"line":103,"column":4},"end":{"line":103,"column":22}},"77":{"start":{"line":104,"column":7},"end":{"line":111,"column":22}},"78":{"start":{"line":105,"column":4},"end":{"line":105,"column":22}},"79":{"start":{"line":106,"column":7},"end":{"line":111,"column":22}},"80":{"start":{"line":107,"column":4},"end":{"line":107,"column":22}},"81":{"start":{"line":108,"column":7},"end":{"line":111,"column":22}},"82":{"start":{"line":109,"column":4},"end":{"line":109,"column":22}},"83":{"start":{"line":111,"column":4},"end":{"line":111,"column":22}},"84":{"start":{"line":114,"column":0},"end":{"line":120,"column":2}},"85":{"start":{"line":122,"column":0},"end":{"line":128,"column":2}},"86":{"start":{"line":130,"column":0},"end":{"line":136,"column":2}},"87":{"start":{"line":138,"column":0},"end":{"line":144,"column":2}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"3":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":7},"end":{"line":78,"column":7}},{"start":{"line":78,"column":7},"end":{"line":78,"column":7}}]},"5":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":7},"end":{"line":80,"column":7}},{"start":{"line":80,"column":7},"end":{"line":80,"column":7}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":7},"end":{"line":82,"column":7}},{"start":{"line":82,"column":7},"end":{"line":82,"column":7}}]},"7":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"8":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":7},"end":{"line":91,"column":7}},{"start":{"line":91,"column":7},"end":{"line":91,"column":7}}]},"9":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":7},"end":{"line":93,"column":7}},{"start":{"line":93,"column":7},"end":{"line":93,"column":7}}]},"10":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":7},"end":{"line":95,"column":7}},{"start":{"line":95,"column":7},"end":{"line":95,"column":7}}]},"11":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"12":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":7},"end":{"line":104,"column":7}},{"start":{"line":104,"column":7},"end":{"line":104,"column":7}}]},"13":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":7},"end":{"line":106,"column":7}},{"start":{"line":106,"column":7},"end":{"line":106,"column":7}}]},"14":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":7},"end":{"line":108,"column":7}},{"start":{"line":108,"column":7},"end":{"line":108,"column":7}}]}},"code":["var hash = require('../hash');","var utils = hash.utils;","","var rotl32 = utils.rotl32;","var sum32 = utils.sum32;","var sum32_3 = utils.sum32_3;","var sum32_4 = utils.sum32_4;","var BlockHash = hash.common.BlockHash;","","function RIPEMD160() {","  if (!(this instanceof RIPEMD160))","    return new RIPEMD160();","","  BlockHash.call(this);","","  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];","  this.endian = 'little';","}","utils.inherits(RIPEMD160, BlockHash);","exports.ripemd160 = RIPEMD160;","","RIPEMD160.blockSize = 512;","RIPEMD160.outSize = 160;","RIPEMD160.hmacStrength = 192;","RIPEMD160.padLength = 64;","","RIPEMD160.prototype._update = function update(msg, start) {","  var A = this.h[0];","  var B = this.h[1];","  var C = this.h[2];","  var D = this.h[3];","  var E = this.h[4];","  var Ah = A;","  var Bh = B;","  var Ch = C;","  var Dh = D;","  var Eh = E;","  for (var j = 0; j < 80; j++) {","    var T = sum32(","      rotl32(","        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),","        s[j]),","      E);","    A = E;","    E = D;","    D = rotl32(C, 10);","    C = B;","    B = T;","    T = sum32(","      rotl32(","        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),","        sh[j]),","      Eh);","    Ah = Eh;","    Eh = Dh;","    Dh = rotl32(Ch, 10);","    Ch = Bh;","    Bh = T;","  }","  T = sum32_3(this.h[1], C, Dh);","  this.h[1] = sum32_3(this.h[2], D, Eh);","  this.h[2] = sum32_3(this.h[3], E, Ah);","  this.h[3] = sum32_3(this.h[4], A, Bh);","  this.h[4] = sum32_3(this.h[0], B, Ch);","  this.h[0] = T;","};","","RIPEMD160.prototype._digest = function digest(enc) {","  if (enc === 'hex')","    return utils.toHex32(this.h, 'little');","  else","    return utils.split32(this.h, 'little');","};","","function f(j, x, y, z) {","  if (j <= 15)","    return x ^ y ^ z;","  else if (j <= 31)","    return (x & y) | ((~x) & z);","  else if (j <= 47)","    return (x | (~y)) ^ z;","  else if (j <= 63)","    return (x & z) | (y & (~z));","  else","    return x ^ (y | (~z));","}","","function K(j) {","  if (j <= 15)","    return 0x00000000;","  else if (j <= 31)","    return 0x5a827999;","  else if (j <= 47)","    return 0x6ed9eba1;","  else if (j <= 63)","    return 0x8f1bbcdc;","  else","    return 0xa953fd4e;","}","","function Kh(j) {","  if (j <= 15)","    return 0x50a28be6;","  else if (j <= 31)","    return 0x5c4dd124;","  else if (j <= 47)","    return 0x6d703ef3;","  else if (j <= 63)","    return 0x7a6d76e9;","  else","    return 0x00000000;","}","","var r = [","  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,","  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,","  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,","  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,","  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13","];","","var rh = [","  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,","  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,","  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,","  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,","  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11","];","","var s = [","  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,","  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,","  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,","  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,","  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6","];","","var sh = [","  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,","  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,","  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,","  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,","  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11","];",""],"l":{"1":1,"2":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":0,"12":0,"14":0,"16":0,"17":0,"19":1,"20":1,"22":1,"23":1,"24":1,"25":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"68":1,"69":0,"70":0,"72":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"85":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"98":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"111":0,"114":1,"122":1,"130":1,"138":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/hmac.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/hmac.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Hmac","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}}},"2":{"name":"init","line":20,"loc":{"start":{"line":20,"column":23},"end":{"line":20,"column":42}}},"3":{"name":"update","line":40,"loc":{"start":{"line":40,"column":24},"end":{"line":40,"column":50}}},"4":{"name":"digest","line":45,"loc":{"start":{"line":45,"column":24},"end":{"line":45,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":19}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"5":{"start":{"line":7,"column":0},"end":{"line":17,"column":1}},"6":{"start":{"line":8,"column":2},"end":{"line":9,"column":36}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":36}},"8":{"start":{"line":10,"column":2},"end":{"line":10,"column":19}},"9":{"start":{"line":11,"column":2},"end":{"line":11,"column":38}},"10":{"start":{"line":12,"column":2},"end":{"line":12,"column":34}},"11":{"start":{"line":13,"column":2},"end":{"line":13,"column":20}},"12":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}},"13":{"start":{"line":16,"column":2},"end":{"line":16,"column":38}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}},"15":{"start":{"line":20,"column":0},"end":{"line":38,"column":2}},"16":{"start":{"line":22,"column":2},"end":{"line":23,"column":47}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":47}},"18":{"start":{"line":24,"column":2},"end":{"line":24,"column":39}},"19":{"start":{"line":27,"column":2},"end":{"line":28,"column":16}},"20":{"start":{"line":28,"column":4},"end":{"line":28,"column":16}},"21":{"start":{"line":30,"column":2},"end":{"line":31,"column":19}},"22":{"start":{"line":31,"column":4},"end":{"line":31,"column":19}},"23":{"start":{"line":32,"column":2},"end":{"line":32,"column":43}},"24":{"start":{"line":35,"column":2},"end":{"line":36,"column":19}},"25":{"start":{"line":36,"column":4},"end":{"line":36,"column":19}},"26":{"start":{"line":37,"column":2},"end":{"line":37,"column":43}},"27":{"start":{"line":40,"column":0},"end":{"line":43,"column":2}},"28":{"start":{"line":41,"column":2},"end":{"line":41,"column":30}},"29":{"start":{"line":42,"column":2},"end":{"line":42,"column":14}},"30":{"start":{"line":45,"column":0},"end":{"line":48,"column":2}},"31":{"start":{"line":46,"column":2},"end":{"line":46,"column":41}},"32":{"start":{"line":47,"column":2},"end":{"line":47,"column":32}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]}},"code":["var hmac = exports;","","var hash = require('../hash');","var utils = hash.utils;","var assert = utils.assert;","","function Hmac(hash, key, enc) {","  if (!(this instanceof Hmac))","    return new Hmac(hash, key, enc);","  this.Hash = hash;","  this.blockSize = hash.blockSize / 8;","  this.outSize = hash.outSize / 8;","  this.inner = null;","  this.outer = null;","","  this._init(utils.toArray(key, enc));","}","module.exports = Hmac;","","Hmac.prototype._init = function init(key) {","  // Shorten key, if needed","  if (key.length > this.blockSize)","    key = new this.Hash().update(key).digest();","  assert(key.length <= this.blockSize);","","  // Add padding to key","  for (var i = key.length; i < this.blockSize; i++)","    key.push(0);","","  for (var i = 0; i < key.length; i++)","    key[i] ^= 0x36;","  this.inner = new this.Hash().update(key);","","  // 0x36 ^ 0x5c = 0x6a","  for (var i = 0; i < key.length; i++)","    key[i] ^= 0x6a;","  this.outer = new this.Hash().update(key);","};","","Hmac.prototype.update = function update(msg, enc) {","  this.inner.update(msg, enc);","  return this;","};","","Hmac.prototype.digest = function digest(enc) {","  this.outer.update(this.inner.digest());","  return this.outer.digest(enc);","};",""],"l":{"1":1,"3":1,"4":1,"5":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"16":0,"18":1,"20":1,"22":0,"23":0,"24":0,"27":0,"28":0,"30":0,"31":0,"32":0,"35":0,"36":0,"37":0,"40":1,"41":0,"42":0,"45":1,"46":0,"47":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":20}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}}},"branchMap":{},"code":["'use strict';","","var curve = exports;","","curve.base = require('./base');","curve.short = require('./short');","curve.mont = require('./mont');","curve.edwards = require('./edwards');",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/base.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/base.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":1,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":65,"32":65,"33":260,"34":65,"35":1,"36":1,"37":1,"38":10,"39":650,"40":650,"41":14,"42":636,"43":17,"44":10,"45":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":254,"146":254,"147":254,"148":1,"149":1,"150":1,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1,"161":1,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0},"b":{"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,0],"5":[14,636],"6":[17,619],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[1,0],"28":[1,1],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":254,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"BaseCurve","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}}},"2":{"name":"point","line":34,"loc":{"start":{"line":34,"column":28},"end":{"line":34,"column":45}}},"3":{"name":"validate","line":38,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":51}}},"4":{"name":"_fixedNafMul","line":42,"loc":{"start":{"line":42,"column":35},"end":{"line":42,"column":63}}},"5":{"name":"_wnafMul","line":73,"loc":{"start":{"line":73,"column":31},"end":{"line":73,"column":55}}},"6":{"name":"_wnafMulAdd","line":115,"loc":{"start":{"line":115,"column":34},"end":{"line":118,"column":60}}},"7":{"name":"BasePoint","line":234,"loc":{"start":{"line":234,"column":0},"end":{"line":234,"column":32}}},"8":{"name":"validate","line":241,"loc":{"start":{"line":241,"column":31},"end":{"line":241,"column":51}}},"9":{"name":"precompute","line":245,"loc":{"start":{"line":245,"column":33},"end":{"line":245,"column":60}}},"10":{"name":"_getDoubles","line":262,"loc":{"start":{"line":262,"column":34},"end":{"line":262,"column":68}}},"11":{"name":"_getNAFPoints","line":279,"loc":{"start":{"line":279,"column":36},"end":{"line":279,"column":64}}},"12":{"name":"_getBeta","line":294,"loc":{"start":{"line":294,"column":31},"end":{"line":294,"column":51}}},"13":{"name":"dblp","line":298,"loc":{"start":{"line":298,"column":27},"end":{"line":298,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"6":{"start":{"line":10,"column":0},"end":{"line":31,"column":1}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":19}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":30}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":63}},"10":{"start":{"line":18,"column":2},"end":{"line":18,"column":40}},"11":{"start":{"line":19,"column":2},"end":{"line":19,"column":39}},"12":{"start":{"line":20,"column":2},"end":{"line":20,"column":39}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":40}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":59}},"15":{"start":{"line":27,"column":2},"end":{"line":27,"column":30}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"17":{"start":{"line":29,"column":2},"end":{"line":29,"column":30}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"19":{"start":{"line":32,"column":0},"end":{"line":32,"column":27}},"20":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":37}},"22":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"23":{"start":{"line":39,"column":2},"end":{"line":39,"column":37}},"24":{"start":{"line":42,"column":0},"end":{"line":71,"column":2}},"25":{"start":{"line":43,"column":2},"end":{"line":43,"column":32}},"26":{"start":{"line":45,"column":2},"end":{"line":45,"column":25}},"27":{"start":{"line":46,"column":2},"end":{"line":46,"column":71}},"28":{"start":{"line":47,"column":2},"end":{"line":47,"column":9}},"29":{"start":{"line":50,"column":2},"end":{"line":50,"column":16}},"30":{"start":{"line":51,"column":2},"end":{"line":56,"column":3}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"32":{"start":{"line":53,"column":4},"end":{"line":54,"column":34}},"33":{"start":{"line":54,"column":6},"end":{"line":54,"column":34}},"34":{"start":{"line":55,"column":4},"end":{"line":55,"column":20}},"35":{"start":{"line":58,"column":2},"end":{"line":58,"column":40}},"36":{"start":{"line":59,"column":2},"end":{"line":59,"column":40}},"37":{"start":{"line":60,"column":2},"end":{"line":69,"column":3}},"38":{"start":{"line":61,"column":4},"end":{"line":67,"column":5}},"39":{"start":{"line":62,"column":6},"end":{"line":62,"column":25}},"40":{"start":{"line":63,"column":6},"end":{"line":66,"column":48}},"41":{"start":{"line":64,"column":8},"end":{"line":64,"column":42}},"42":{"start":{"line":65,"column":11},"end":{"line":66,"column":48}},"43":{"start":{"line":66,"column":8},"end":{"line":66,"column":48}},"44":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"45":{"start":{"line":70,"column":2},"end":{"line":70,"column":17}},"46":{"start":{"line":73,"column":0},"end":{"line":113,"column":2}},"47":{"start":{"line":74,"column":2},"end":{"line":74,"column":12}},"48":{"start":{"line":77,"column":2},"end":{"line":77,"column":37}},"49":{"start":{"line":78,"column":2},"end":{"line":78,"column":20}},"50":{"start":{"line":79,"column":2},"end":{"line":79,"column":29}},"51":{"start":{"line":82,"column":2},"end":{"line":82,"column":25}},"52":{"start":{"line":85,"column":2},"end":{"line":85,"column":42}},"53":{"start":{"line":86,"column":2},"end":{"line":111,"column":3}},"54":{"start":{"line":88,"column":4},"end":{"line":89,"column":10}},"55":{"start":{"line":89,"column":6},"end":{"line":89,"column":10}},"56":{"start":{"line":90,"column":4},"end":{"line":91,"column":10}},"57":{"start":{"line":91,"column":6},"end":{"line":91,"column":10}},"58":{"start":{"line":92,"column":4},"end":{"line":92,"column":22}},"59":{"start":{"line":94,"column":4},"end":{"line":95,"column":12}},"60":{"start":{"line":95,"column":6},"end":{"line":95,"column":12}},"61":{"start":{"line":96,"column":4},"end":{"line":96,"column":19}},"62":{"start":{"line":97,"column":4},"end":{"line":97,"column":20}},"63":{"start":{"line":98,"column":4},"end":{"line":110,"column":5}},"64":{"start":{"line":100,"column":6},"end":{"line":103,"column":53}},"65":{"start":{"line":101,"column":8},"end":{"line":101,"column":46}},"66":{"start":{"line":103,"column":8},"end":{"line":103,"column":53}},"67":{"start":{"line":106,"column":6},"end":{"line":109,"column":48}},"68":{"start":{"line":107,"column":8},"end":{"line":107,"column":41}},"69":{"start":{"line":109,"column":8},"end":{"line":109,"column":48}},"70":{"start":{"line":112,"column":2},"end":{"line":112,"column":47}},"71":{"start":{"line":115,"column":0},"end":{"line":232,"column":2}},"72":{"start":{"line":119,"column":2},"end":{"line":119,"column":30}},"73":{"start":{"line":120,"column":2},"end":{"line":120,"column":25}},"74":{"start":{"line":121,"column":2},"end":{"line":121,"column":25}},"75":{"start":{"line":124,"column":2},"end":{"line":124,"column":14}},"76":{"start":{"line":125,"column":2},"end":{"line":130,"column":3}},"77":{"start":{"line":126,"column":4},"end":{"line":126,"column":22}},"78":{"start":{"line":127,"column":4},"end":{"line":127,"column":42}},"79":{"start":{"line":128,"column":4},"end":{"line":128,"column":32}},"80":{"start":{"line":129,"column":4},"end":{"line":129,"column":30}},"81":{"start":{"line":133,"column":2},"end":{"line":187,"column":3}},"82":{"start":{"line":134,"column":4},"end":{"line":134,"column":18}},"83":{"start":{"line":135,"column":4},"end":{"line":135,"column":14}},"84":{"start":{"line":136,"column":4},"end":{"line":142,"column":5}},"85":{"start":{"line":137,"column":6},"end":{"line":137,"column":46}},"86":{"start":{"line":138,"column":6},"end":{"line":138,"column":46}},"87":{"start":{"line":139,"column":6},"end":{"line":139,"column":41}},"88":{"start":{"line":140,"column":6},"end":{"line":140,"column":41}},"89":{"start":{"line":141,"column":6},"end":{"line":141,"column":15}},"90":{"start":{"line":144,"column":4},"end":{"line":149,"column":6}},"91":{"start":{"line":152,"column":4},"end":{"line":161,"column":5}},"92":{"start":{"line":153,"column":6},"end":{"line":153,"column":41}},"93":{"start":{"line":154,"column":6},"end":{"line":154,"column":58}},"94":{"start":{"line":155,"column":11},"end":{"line":161,"column":5}},"95":{"start":{"line":156,"column":6},"end":{"line":156,"column":52}},"96":{"start":{"line":157,"column":6},"end":{"line":157,"column":47}},"97":{"start":{"line":159,"column":6},"end":{"line":159,"column":52}},"98":{"start":{"line":160,"column":6},"end":{"line":160,"column":58}},"99":{"start":{"line":163,"column":4},"end":{"line":173,"column":6}},"100":{"start":{"line":175,"column":4},"end":{"line":175,"column":43}},"101":{"start":{"line":176,"column":4},"end":{"line":176,"column":39}},"102":{"start":{"line":177,"column":4},"end":{"line":177,"column":28}},"103":{"start":{"line":178,"column":4},"end":{"line":178,"column":28}},"104":{"start":{"line":179,"column":4},"end":{"line":186,"column":5}},"105":{"start":{"line":180,"column":6},"end":{"line":180,"column":29}},"106":{"start":{"line":181,"column":6},"end":{"line":181,"column":29}},"107":{"start":{"line":183,"column":6},"end":{"line":183,"column":49}},"108":{"start":{"line":184,"column":6},"end":{"line":184,"column":20}},"109":{"start":{"line":185,"column":6},"end":{"line":185,"column":20}},"110":{"start":{"line":189,"column":2},"end":{"line":189,"column":42}},"111":{"start":{"line":190,"column":2},"end":{"line":190,"column":25}},"112":{"start":{"line":191,"column":2},"end":{"line":227,"column":3}},"113":{"start":{"line":192,"column":4},"end":{"line":192,"column":14}},"114":{"start":{"line":194,"column":4},"end":{"line":205,"column":5}},"115":{"start":{"line":195,"column":6},"end":{"line":195,"column":22}},"116":{"start":{"line":196,"column":6},"end":{"line":200,"column":7}},"117":{"start":{"line":197,"column":8},"end":{"line":197,"column":31}},"118":{"start":{"line":198,"column":8},"end":{"line":199,"column":23}},"119":{"start":{"line":199,"column":10},"end":{"line":199,"column":23}},"120":{"start":{"line":201,"column":6},"end":{"line":202,"column":14}},"121":{"start":{"line":202,"column":8},"end":{"line":202,"column":14}},"122":{"start":{"line":203,"column":6},"end":{"line":203,"column":10}},"123":{"start":{"line":204,"column":6},"end":{"line":204,"column":10}},"124":{"start":{"line":206,"column":4},"end":{"line":207,"column":10}},"125":{"start":{"line":207,"column":6},"end":{"line":207,"column":10}},"126":{"start":{"line":208,"column":4},"end":{"line":208,"column":22}},"127":{"start":{"line":209,"column":4},"end":{"line":210,"column":12}},"128":{"start":{"line":210,"column":6},"end":{"line":210,"column":12}},"129":{"start":{"line":212,"column":4},"end":{"line":226,"column":5}},"130":{"start":{"line":213,"column":6},"end":{"line":213,"column":21}},"131":{"start":{"line":214,"column":6},"end":{"line":214,"column":12}},"132":{"start":{"line":215,"column":6},"end":{"line":220,"column":40}},"133":{"start":{"line":216,"column":8},"end":{"line":216,"column":17}},"134":{"start":{"line":217,"column":11},"end":{"line":220,"column":40}},"135":{"start":{"line":218,"column":8},"end":{"line":218,"column":33}},"136":{"start":{"line":219,"column":11},"end":{"line":220,"column":40}},"137":{"start":{"line":220,"column":8},"end":{"line":220,"column":40}},"138":{"start":{"line":222,"column":6},"end":{"line":225,"column":25}},"139":{"start":{"line":223,"column":8},"end":{"line":223,"column":30}},"140":{"start":{"line":225,"column":8},"end":{"line":225,"column":25}},"141":{"start":{"line":229,"column":2},"end":{"line":230,"column":18}},"142":{"start":{"line":230,"column":4},"end":{"line":230,"column":18}},"143":{"start":{"line":231,"column":2},"end":{"line":231,"column":19}},"144":{"start":{"line":234,"column":0},"end":{"line":238,"column":1}},"145":{"start":{"line":235,"column":2},"end":{"line":235,"column":21}},"146":{"start":{"line":236,"column":2},"end":{"line":236,"column":19}},"147":{"start":{"line":237,"column":2},"end":{"line":237,"column":26}},"148":{"start":{"line":239,"column":0},"end":{"line":239,"column":32}},"149":{"start":{"line":241,"column":0},"end":{"line":243,"column":2}},"150":{"start":{"line":242,"column":2},"end":{"line":242,"column":35}},"151":{"start":{"line":245,"column":0},"end":{"line":260,"column":2}},"152":{"start":{"line":246,"column":2},"end":{"line":247,"column":16}},"153":{"start":{"line":247,"column":4},"end":{"line":247,"column":16}},"154":{"start":{"line":249,"column":2},"end":{"line":253,"column":4}},"155":{"start":{"line":254,"column":2},"end":{"line":254,"column":42}},"156":{"start":{"line":255,"column":2},"end":{"line":255,"column":51}},"157":{"start":{"line":256,"column":2},"end":{"line":256,"column":37}},"158":{"start":{"line":257,"column":2},"end":{"line":257,"column":33}},"159":{"start":{"line":259,"column":2},"end":{"line":259,"column":14}},"160":{"start":{"line":262,"column":0},"end":{"line":277,"column":2}},"161":{"start":{"line":263,"column":2},"end":{"line":264,"column":36}},"162":{"start":{"line":264,"column":4},"end":{"line":264,"column":36}},"163":{"start":{"line":266,"column":2},"end":{"line":266,"column":25}},"164":{"start":{"line":267,"column":2},"end":{"line":267,"column":17}},"165":{"start":{"line":268,"column":2},"end":{"line":272,"column":3}},"166":{"start":{"line":269,"column":4},"end":{"line":270,"column":22}},"167":{"start":{"line":270,"column":6},"end":{"line":270,"column":22}},"168":{"start":{"line":271,"column":4},"end":{"line":271,"column":22}},"169":{"start":{"line":273,"column":2},"end":{"line":276,"column":4}},"170":{"start":{"line":279,"column":0},"end":{"line":292,"column":2}},"171":{"start":{"line":280,"column":2},"end":{"line":281,"column":32}},"172":{"start":{"line":281,"column":4},"end":{"line":281,"column":32}},"173":{"start":{"line":283,"column":2},"end":{"line":283,"column":21}},"174":{"start":{"line":284,"column":2},"end":{"line":284,"column":27}},"175":{"start":{"line":285,"column":2},"end":{"line":285,"column":42}},"176":{"start":{"line":286,"column":2},"end":{"line":287,"column":33}},"177":{"start":{"line":287,"column":4},"end":{"line":287,"column":33}},"178":{"start":{"line":288,"column":2},"end":{"line":291,"column":4}},"179":{"start":{"line":294,"column":0},"end":{"line":296,"column":2}},"180":{"start":{"line":295,"column":2},"end":{"line":295,"column":14}},"181":{"start":{"line":298,"column":0},"end":{"line":303,"column":2}},"182":{"start":{"line":299,"column":2},"end":{"line":299,"column":15}},"183":{"start":{"line":300,"column":2},"end":{"line":301,"column":16}},"184":{"start":{"line":301,"column":4},"end":{"line":301,"column":16}},"185":{"start":{"line":302,"column":2},"end":{"line":302,"column":11}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":26},"end":{"line":15,"column":44}},{"start":{"line":15,"column":47},"end":{"line":15,"column":62}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":17}},{"start":{"line":23,"column":21},"end":{"line":23,"column":39}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":11},"end":{"line":24,"column":17}},{"start":{"line":24,"column":21},"end":{"line":24,"column":58}}]},"4":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":64},"end":{"line":46,"column":65}},{"start":{"line":46,"column":68},"end":{"line":46,"column":69}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":11},"end":{"line":65,"column":11}},{"start":{"line":65,"column":11},"end":{"line":65,"column":11}}]},"7":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":20},"end":{"line":88,"column":26}},{"start":{"line":88,"column":30},"end":{"line":88,"column":42}}]},"8":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"9":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"10":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"11":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"12":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":6}},{"start":{"line":106,"column":6},"end":{"line":106,"column":6}}]},"13":{"line":112,"type":"cond-expr","locations":[{"start":{"line":112,"column":31},"end":{"line":112,"column":40}},{"start":{"line":112,"column":43},"end":{"line":112,"column":46}}]},"14":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"15":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":25}},{"start":{"line":136,"column":29},"end":{"line":136,"column":46}}]},"16":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"17":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":11},"end":{"line":155,"column":11}},{"start":{"line":155,"column":11},"end":{"line":155,"column":11}}]},"18":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"19":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":6}},{"start":{"line":201,"column":6},"end":{"line":201,"column":6}}]},"20":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"21":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"22":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":6}},{"start":{"line":215,"column":6},"end":{"line":215,"column":6}}]},"23":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":11},"end":{"line":217,"column":11}},{"start":{"line":217,"column":11},"end":{"line":217,"column":11}}]},"24":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":11},"end":{"line":219,"column":11}},{"start":{"line":219,"column":11},"end":{"line":219,"column":11}}]},"25":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":6}},{"start":{"line":222,"column":6},"end":{"line":222,"column":6}}]},"26":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"27":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":263,"column":2}},{"start":{"line":263,"column":2},"end":{"line":263,"column":2}}]},"28":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":6},"end":{"line":263,"column":22}},{"start":{"line":263,"column":26},"end":{"line":263,"column":50}}]},"29":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"30":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":22}},{"start":{"line":280,"column":26},"end":{"line":280,"column":46}}]},"31":{"line":285,"type":"cond-expr","locations":[{"start":{"line":285,"column":24},"end":{"line":285,"column":28}},{"start":{"line":285,"column":31},"end":{"line":285,"column":41}}]}},"code":["'use strict';","","var bn = require('bn.js');","var elliptic = require('../../elliptic');","","var getNAF = elliptic.utils.getNAF;","var getJSF = elliptic.utils.getJSF;","var assert = elliptic.utils.assert;","","function BaseCurve(type, conf) {","  this.type = type;","  this.p = new bn(conf.p, 16);","","  // Use Montgomery, when there is no fast reduction for the prime","  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);","","  // Useful for many curves","  this.zero = new bn(0).toRed(this.red);","  this.one = new bn(1).toRed(this.red);","  this.two = new bn(2).toRed(this.red);","","  // Curve configuration, optional","  this.n = conf.n && new bn(conf.n, 16);","  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);","","  // Temporary arrays","  this._wnafT1 = new Array(4);","  this._wnafT2 = new Array(4);","  this._wnafT3 = new Array(4);","  this._wnafT4 = new Array(4);","}","module.exports = BaseCurve;","","BaseCurve.prototype.point = function point() {","  throw new Error('Not implemented');","};","","BaseCurve.prototype.validate = function validate() {","  throw new Error('Not implemented');","};","","BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {","  var doubles = p._getDoubles();","","  var naf = getNAF(k, 1);","  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);","  I /= 3;","","  // Translate into more windowed form","  var repr = [];","  for (var j = 0; j < naf.length; j += doubles.step) {","    var nafW = 0;","    for (var k = j + doubles.step - 1; k >= j; k--)","      nafW = (nafW << 1) + naf[k];","    repr.push(nafW);","  }","","  var a = this.jpoint(null, null, null);","  var b = this.jpoint(null, null, null);","  for (var i = I; i > 0; i--) {","    for (var j = 0; j < repr.length; j++) {","      var nafW = repr[j];","      if (nafW === i)","        b = b.mixedAdd(doubles.points[j]);","      else if (nafW === -i)","        b = b.mixedAdd(doubles.points[j].neg());","    }","    a = a.add(b);","  }","  return a.toP();","};","","BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {","  var w = 4;","","  // Precompute window","  var nafPoints = p._getNAFPoints(w);","  w = nafPoints.wnd;","  var wnd = nafPoints.points;","","  // Get NAF form","  var naf = getNAF(k, w);","","  // Add `this`*(N+1) for every w-NAF index","  var acc = this.jpoint(null, null, null);","  for (var i = naf.length - 1; i >= 0; i--) {","    // Count zeroes","    for (var k = 0; i >= 0 && naf[i] === 0; i--)","      k++;","    if (i >= 0)","      k++;","    acc = acc.dblp(k);","","    if (i < 0)","      break;","    var z = naf[i];","    assert(z !== 0);","    if (p.type === 'affine') {","      // J +- P","      if (z > 0)","        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);","      else","        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());","    } else {","      // J +- J","      if (z > 0)","        acc = acc.add(wnd[(z - 1) >> 1]);","      else","        acc = acc.add(wnd[(-z - 1) >> 1].neg());","    }","  }","  return p.type === 'affine' ? acc.toP() : acc;","};","","BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,","                                                       points,","                                                       coeffs,","                                                       len) {","  var wndWidth = this._wnafT1;","  var wnd = this._wnafT2;","  var naf = this._wnafT3;","","  // Fill all arrays","  var max = 0;","  for (var i = 0; i < len; i++) {","    var p = points[i];","    var nafPoints = p._getNAFPoints(defW);","    wndWidth[i] = nafPoints.wnd;","    wnd[i] = nafPoints.points;","  }","","  // Comb small window NAFs","  for (var i = len - 1; i >= 1; i -= 2) {","    var a = i - 1;","    var b = i;","    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {","      naf[a] = getNAF(coeffs[a], wndWidth[a]);","      naf[b] = getNAF(coeffs[b], wndWidth[b]);","      max = Math.max(naf[a].length, max);","      max = Math.max(naf[b].length, max);","      continue;","    }","","    var comb = [","      points[a], /* 1 */","      null, /* 3 */","      null, /* 5 */","      points[b] /* 7 */","    ];","","    // Try to avoid Projective points, if possible","    if (points[a].y.cmp(points[b].y) === 0) {","      comb[1] = points[a].add(points[b]);","      comb[2] = points[a].toJ().mixedAdd(points[b].neg());","    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {","      comb[1] = points[a].toJ().mixedAdd(points[b]);","      comb[2] = points[a].add(points[b].neg());","    } else {","      comb[1] = points[a].toJ().mixedAdd(points[b]);","      comb[2] = points[a].toJ().mixedAdd(points[b].neg());","    }","","    var index = [","      -3, /* -1 -1 */","      -1, /* -1 0 */","      -5, /* -1 1 */","      -7, /* 0 -1 */","      0, /* 0 0 */","      7, /* 0 1 */","      5, /* 1 -1 */","      1, /* 1 0 */","      3  /* 1 1 */","    ];","","    var jsf = getJSF(coeffs[a], coeffs[b]);","    max = Math.max(jsf[0].length, max);","    naf[a] = new Array(max);","    naf[b] = new Array(max);","    for (var j = 0; j < max; j++) {","      var ja = jsf[0][j] | 0;","      var jb = jsf[1][j] | 0;","","      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];","      naf[b][j] = 0;","      wnd[a] = comb;","    }","  }","","  var acc = this.jpoint(null, null, null);","  var tmp = this._wnafT4;","  for (var i = max; i >= 0; i--) {","    var k = 0;","","    while (i >= 0) {","      var zero = true;","      for (var j = 0; j < len; j++) {","        tmp[j] = naf[j][i] | 0;","        if (tmp[j] !== 0)","          zero = false;","      }","      if (!zero)","        break;","      k++;","      i--;","    }","    if (i >= 0)","      k++;","    acc = acc.dblp(k);","    if (i < 0)","      break;","","    for (var j = 0; j < len; j++) {","      var z = tmp[j];","      var p;","      if (z === 0)","        continue;","      else if (z > 0)","        p = wnd[j][(z - 1) >> 1];","      else if (z < 0)","        p = wnd[j][(-z - 1) >> 1].neg();","","      if (p.type === 'affine')","        acc = acc.mixedAdd(p);","      else","        acc = acc.add(p);","    }","  }","  // Zeroify references","  for (var i = 0; i < len; i++)","    wnd[i] = null;","  return acc.toP();","};","","function BasePoint(curve, type) {","  this.curve = curve;","  this.type = type;","  this.precomputed = null;","}","BaseCurve.BasePoint = BasePoint;","","BasePoint.prototype.validate = function validate() {","  return this.curve.validate(this);","};","","BasePoint.prototype.precompute = function precompute(power) {","  if (this.precomputed)","    return this;","","  var precomputed = {","    doubles: null,","    naf: null,","    beta: null","  };","  precomputed.naf = this._getNAFPoints(8);","  precomputed.doubles = this._getDoubles(4, power);","  precomputed.beta = this._getBeta();","  this.precomputed = precomputed;","","  return this;","};","","BasePoint.prototype._getDoubles = function _getDoubles(step, power) {","  if (this.precomputed && this.precomputed.doubles)","    return this.precomputed.doubles;","","  var doubles = [ this ];","  var acc = this;","  for (var i = 0; i < power; i += step) {","    for (var j = 0; j < step; j++)","      acc = acc.dbl();","    doubles.push(acc);","  }","  return {","    step: step,","    points: doubles","  };","};","","BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {","  if (this.precomputed && this.precomputed.naf)","    return this.precomputed.naf;","","  var res = [ this ];","  var max = (1 << wnd) - 1;","  var dbl = max === 1 ? null : this.dbl();","  for (var i = 1; i < max; i++)","    res[i] = res[i - 1].add(dbl);","  return {","    wnd: wnd,","    points: res","  };","};","","BasePoint.prototype._getBeta = function _getBeta() {","  return null;","};","","BasePoint.prototype.dblp = function dblp(k) {","  var r = this;","  for (var i = 0; i < k; i++)","    r = r.dbl();","  return r;","};",""],"l":{"3":1,"4":1,"6":1,"7":1,"8":1,"10":1,"11":1,"12":1,"15":1,"18":1,"19":1,"20":1,"23":1,"24":1,"27":1,"28":1,"29":1,"30":1,"32":1,"34":1,"35":0,"38":1,"39":0,"42":1,"43":1,"45":1,"46":1,"47":1,"50":1,"51":1,"52":65,"53":65,"54":260,"55":65,"58":1,"59":1,"60":1,"61":10,"62":650,"63":650,"64":14,"65":636,"66":17,"68":10,"70":1,"73":1,"74":0,"77":0,"78":0,"79":0,"82":0,"85":0,"86":0,"88":0,"89":0,"90":0,"91":0,"92":0,"94":0,"95":0,"96":0,"97":0,"98":0,"100":0,"101":0,"103":0,"106":0,"107":0,"109":0,"112":0,"115":1,"119":0,"120":0,"121":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"144":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"159":0,"160":0,"163":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"183":0,"184":0,"185":0,"189":0,"190":0,"191":0,"192":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"201":0,"202":0,"203":0,"204":0,"206":0,"207":0,"208":0,"209":0,"210":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"222":0,"223":0,"225":0,"229":0,"230":0,"231":0,"234":1,"235":254,"236":254,"237":254,"239":1,"241":1,"242":1,"245":1,"246":0,"247":0,"249":0,"254":0,"255":0,"256":0,"257":0,"259":0,"262":1,"263":1,"264":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"273":0,"279":1,"280":0,"281":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"294":1,"295":0,"298":1,"299":0,"300":0,"301":0,"302":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/short.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/short.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":2,"40":0,"41":1,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":1,"126":0,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":212,"156":212,"157":1,"158":1,"159":1,"160":211,"161":211,"162":211,"163":0,"164":0,"165":211,"166":194,"167":211,"168":194,"169":211,"170":1,"171":1,"172":212,"173":1,"174":1,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":0,"191":0,"192":0,"193":1,"194":1,"195":0,"196":1,"197":1,"198":0,"199":1,"200":192,"201":1,"202":1,"203":1,"204":1,"205":0,"206":0,"207":0,"208":1,"209":31,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":1,"241":0,"242":1,"243":0,"244":1,"245":1,"246":1,"247":1,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":1,"260":17,"261":0,"262":17,"263":17,"264":0,"265":0,"266":0,"267":0,"268":17,"269":1,"270":1,"271":0,"272":1,"273":1,"274":1,"275":42,"276":42,"277":3,"278":3,"279":3,"280":39,"281":39,"282":39,"283":42,"284":0,"285":42,"286":0,"287":42,"288":3,"289":42,"290":1,"291":1,"292":42,"293":1,"294":1,"295":1,"296":0,"297":0,"298":0,"299":0,"300":0,"301":1,"302":0,"303":1,"304":10,"305":1,"306":9,"307":0,"308":9,"309":9,"310":9,"311":9,"312":9,"313":9,"314":9,"315":9,"316":9,"317":1,"318":1,"319":0,"320":8,"321":8,"322":8,"323":8,"324":8,"325":8,"326":8,"327":1,"328":31,"329":1,"330":30,"331":0,"332":30,"333":30,"334":30,"335":30,"336":30,"337":30,"338":30,"339":30,"340":0,"341":0,"342":0,"343":30,"344":30,"345":30,"346":30,"347":30,"348":30,"349":30,"350":1,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":1,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":1,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":1,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":1,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":1,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":1,"514":0,"515":0,"516":1,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":1,"529":0,"530":0,"531":0,"532":1,"533":51},"b":{"1":[0,1],"2":[1,1,1,1],"3":[1,0],"4":[0,0],"5":[1,0],"6":[0,0],"7":[1,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,1],"20":[0,0],"21":[0,0],"22":[1,211],"23":[212,1],"24":[0,211],"25":[194,17],"26":[194,17],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,1],"38":[0,1],"39":[1,1],"40":[1,1],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[1,0],"51":[1,1],"52":[0,0],"53":[0,0],"54":[0,0,0,0,0],"55":[0,17],"56":[0,17],"57":[17,0],"58":[0,0],"59":[0,0],"60":[0,1],"61":[3,39],"62":[42,3,3],"63":[0,42],"64":[0,42],"65":[3,39],"66":[1,0],"67":[1,9],"68":[0,9],"69":[1,8],"70":[1,0],"71":[1,30],"72":[0,30],"73":[0,30],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0]},"f":{"1":1,"2":1,"3":2,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":212,"11":212,"12":1,"13":0,"14":0,"15":0,"16":1,"17":192,"18":0,"19":31,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":17,"28":0,"29":1,"30":42,"31":42,"32":1,"33":0,"34":10,"35":31,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":51},"fnMap":{"1":{"name":"ShortCurve","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":26}}},"2":{"name":"_getEndomorphism","line":29,"loc":{"start":{"line":29,"column":40},"end":{"line":29,"column":72}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":27},"end":{"line":61,"column":41}}},"4":{"name":"_getEndoRoots","line":78,"loc":{"start":{"line":78,"column":37},"end":{"line":78,"column":65}}},"5":{"name":"_getEndoBasis","line":93,"loc":{"start":{"line":93,"column":37},"end":{"line":93,"column":68}}},"6":{"name":"_endoSplit","line":169,"loc":{"start":{"line":169,"column":34},"end":{"line":169,"column":57}}},"7":{"name":"pointFromX","line":188,"loc":{"start":{"line":188,"column":34},"end":{"line":188,"column":62}}},"8":{"name":"validate","line":205,"loc":{"start":{"line":205,"column":32},"end":{"line":205,"column":57}}},"9":{"name":"_endoWnafMulAdd","line":218,"loc":{"start":{"line":218,"column":4},"end":{"line":218,"column":45}}},"10":{"name":"Point","line":250,"loc":{"start":{"line":250,"column":0},"end":{"line":250,"column":35}}},"11":{"name":"point","line":273,"loc":{"start":{"line":273,"column":29},"end":{"line":273,"column":57}}},"12":{"name":"pointFromJSON","line":277,"loc":{"start":{"line":277,"column":37},"end":{"line":277,"column":70}}},"13":{"name":"_getBeta","line":281,"loc":{"start":{"line":281,"column":27},"end":{"line":281,"column":47}}},"14":{"name":"(anonymous_14)","line":292,"loc":{"start":{"line":292,"column":18},"end":{"line":292,"column":30}}},"15":{"name":"toJSON","line":311,"loc":{"start":{"line":311,"column":25},"end":{"line":311,"column":43}}},"16":{"name":"fromJSON","line":327,"loc":{"start":{"line":327,"column":17},"end":{"line":327,"column":52}}},"17":{"name":"obj2point","line":334,"loc":{"start":{"line":334,"column":2},"end":{"line":334,"column":26}}},"18":{"name":"inspect","line":353,"loc":{"start":{"line":353,"column":26},"end":{"line":353,"column":45}}},"19":{"name":"isInfinity","line":360,"loc":{"start":{"line":360,"column":29},"end":{"line":360,"column":51}}},"20":{"name":"add","line":364,"loc":{"start":{"line":364,"column":22},"end":{"line":364,"column":38}}},"21":{"name":"dbl","line":393,"loc":{"start":{"line":393,"column":22},"end":{"line":393,"column":37}}},"22":{"name":"getX","line":413,"loc":{"start":{"line":413,"column":23},"end":{"line":413,"column":39}}},"23":{"name":"getY","line":417,"loc":{"start":{"line":417,"column":23},"end":{"line":417,"column":39}}},"24":{"name":"mul","line":421,"loc":{"start":{"line":421,"column":22},"end":{"line":421,"column":38}}},"25":{"name":"mulAdd","line":432,"loc":{"start":{"line":432,"column":25},"end":{"line":432,"column":53}}},"26":{"name":"eq","line":441,"loc":{"start":{"line":441,"column":21},"end":{"line":441,"column":36}}},"27":{"name":"neg","line":447,"loc":{"start":{"line":447,"column":22},"end":{"line":447,"column":48}}},"28":{"name":"(anonymous_28)","line":454,"loc":{"start":{"line":454,"column":17},"end":{"line":454,"column":29}}},"29":{"name":"toJ","line":471,"loc":{"start":{"line":471,"column":22},"end":{"line":471,"column":37}}},"30":{"name":"JPoint","line":479,"loc":{"start":{"line":479,"column":0},"end":{"line":479,"column":32}}},"31":{"name":"jpoint","line":501,"loc":{"start":{"line":501,"column":30},"end":{"line":501,"column":55}}},"32":{"name":"toP","line":505,"loc":{"start":{"line":505,"column":23},"end":{"line":505,"column":38}}},"33":{"name":"neg","line":517,"loc":{"start":{"line":517,"column":23},"end":{"line":517,"column":38}}},"34":{"name":"add","line":521,"loc":{"start":{"line":521,"column":23},"end":{"line":521,"column":39}}},"35":{"name":"mixedAdd","line":558,"loc":{"start":{"line":558,"column":28},"end":{"line":558,"column":49}}},"36":{"name":"dblp","line":594,"loc":{"start":{"line":594,"column":24},"end":{"line":594,"column":43}}},"37":{"name":"dbl","line":644,"loc":{"start":{"line":644,"column":23},"end":{"line":644,"column":38}}},"38":{"name":"_zeroDbl","line":656,"loc":{"start":{"line":656,"column":28},"end":{"line":656,"column":48}}},"39":{"name":"_threeDbl","line":727,"loc":{"start":{"line":727,"column":29},"end":{"line":727,"column":50}}},"40":{"name":"_dbl","line":790,"loc":{"start":{"line":790,"column":24},"end":{"line":790,"column":40}}},"41":{"name":"trpl","line":820,"loc":{"start":{"line":820,"column":24},"end":{"line":820,"column":40}}},"42":{"name":"mul","line":871,"loc":{"start":{"line":871,"column":23},"end":{"line":871,"column":46}}},"43":{"name":"eq","line":877,"loc":{"start":{"line":877,"column":22},"end":{"line":877,"column":37}}},"44":{"name":"inspect","line":896,"loc":{"start":{"line":896,"column":27},"end":{"line":896,"column":46}}},"45":{"name":"isInfinity","line":904,"loc":{"start":{"line":904,"column":30},"end":{"line":904,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"7":{"start":{"line":11,"column":0},"end":{"line":25,"column":1}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":46}},"10":{"start":{"line":15,"column":2},"end":{"line":15,"column":46}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":33}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":46}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":60}},"14":{"start":{"line":22,"column":2},"end":{"line":22,"column":42}},"15":{"start":{"line":23,"column":2},"end":{"line":23,"column":34}},"16":{"start":{"line":24,"column":2},"end":{"line":24,"column":34}},"17":{"start":{"line":26,"column":0},"end":{"line":26,"column":27}},"18":{"start":{"line":27,"column":0},"end":{"line":27,"column":28}},"19":{"start":{"line":29,"column":0},"end":{"line":76,"column":2}},"20":{"start":{"line":31,"column":2},"end":{"line":32,"column":11}},"21":{"start":{"line":32,"column":4},"end":{"line":32,"column":11}},"22":{"start":{"line":35,"column":2},"end":{"line":35,"column":11}},"23":{"start":{"line":36,"column":2},"end":{"line":36,"column":13}},"24":{"start":{"line":37,"column":2},"end":{"line":44,"column":3}},"25":{"start":{"line":38,"column":4},"end":{"line":38,"column":49}},"26":{"start":{"line":40,"column":4},"end":{"line":40,"column":43}},"27":{"start":{"line":42,"column":4},"end":{"line":42,"column":60}},"28":{"start":{"line":43,"column":4},"end":{"line":43,"column":32}},"29":{"start":{"line":45,"column":2},"end":{"line":56,"column":3}},"30":{"start":{"line":46,"column":4},"end":{"line":46,"column":37}},"31":{"start":{"line":49,"column":4},"end":{"line":49,"column":45}},"32":{"start":{"line":50,"column":4},"end":{"line":55,"column":5}},"33":{"start":{"line":51,"column":6},"end":{"line":51,"column":26}},"34":{"start":{"line":53,"column":6},"end":{"line":53,"column":26}},"35":{"start":{"line":54,"column":6},"end":{"line":54,"column":68}},"36":{"start":{"line":59,"column":2},"end":{"line":59,"column":12}},"37":{"start":{"line":60,"column":2},"end":{"line":69,"column":3}},"38":{"start":{"line":61,"column":4},"end":{"line":66,"column":7}},"39":{"start":{"line":62,"column":6},"end":{"line":65,"column":8}},"40":{"start":{"line":68,"column":4},"end":{"line":68,"column":39}},"41":{"start":{"line":71,"column":2},"end":{"line":75,"column":4}},"42":{"start":{"line":78,"column":0},"end":{"line":91,"column":2}},"43":{"start":{"line":82,"column":2},"end":{"line":82,"column":53}},"44":{"start":{"line":83,"column":2},"end":{"line":83,"column":44}},"45":{"start":{"line":84,"column":2},"end":{"line":84,"column":28}},"46":{"start":{"line":86,"column":2},"end":{"line":86,"column":63}},"47":{"start":{"line":88,"column":2},"end":{"line":88,"column":37}},"48":{"start":{"line":89,"column":2},"end":{"line":89,"column":37}},"49":{"start":{"line":90,"column":2},"end":{"line":90,"column":20}},"50":{"start":{"line":93,"column":0},"end":{"line":167,"column":2}},"51":{"start":{"line":95,"column":2},"end":{"line":95,"column":65}},"52":{"start":{"line":99,"column":2},"end":{"line":99,"column":17}},"53":{"start":{"line":100,"column":2},"end":{"line":100,"column":25}},"54":{"start":{"line":101,"column":2},"end":{"line":101,"column":21}},"55":{"start":{"line":102,"column":2},"end":{"line":102,"column":21}},"56":{"start":{"line":103,"column":2},"end":{"line":103,"column":21}},"57":{"start":{"line":104,"column":2},"end":{"line":104,"column":21}},"58":{"start":{"line":107,"column":2},"end":{"line":107,"column":9}},"59":{"start":{"line":108,"column":2},"end":{"line":108,"column":9}},"60":{"start":{"line":110,"column":2},"end":{"line":110,"column":9}},"61":{"start":{"line":111,"column":2},"end":{"line":111,"column":9}},"62":{"start":{"line":113,"column":2},"end":{"line":113,"column":9}},"63":{"start":{"line":114,"column":2},"end":{"line":114,"column":9}},"64":{"start":{"line":116,"column":2},"end":{"line":116,"column":12}},"65":{"start":{"line":117,"column":2},"end":{"line":117,"column":12}},"66":{"start":{"line":118,"column":2},"end":{"line":118,"column":8}},"67":{"start":{"line":119,"column":2},"end":{"line":119,"column":8}},"68":{"start":{"line":120,"column":2},"end":{"line":142,"column":3}},"69":{"start":{"line":121,"column":4},"end":{"line":121,"column":21}},"70":{"start":{"line":122,"column":4},"end":{"line":122,"column":24}},"71":{"start":{"line":123,"column":4},"end":{"line":123,"column":26}},"72":{"start":{"line":124,"column":4},"end":{"line":124,"column":30}},"73":{"start":{"line":126,"column":4},"end":{"line":133,"column":5}},"74":{"start":{"line":127,"column":6},"end":{"line":127,"column":23}},"75":{"start":{"line":128,"column":6},"end":{"line":128,"column":14}},"76":{"start":{"line":129,"column":6},"end":{"line":129,"column":19}},"77":{"start":{"line":130,"column":6},"end":{"line":130,"column":13}},"78":{"start":{"line":131,"column":11},"end":{"line":133,"column":5}},"79":{"start":{"line":132,"column":6},"end":{"line":132,"column":12}},"80":{"start":{"line":134,"column":4},"end":{"line":134,"column":14}},"81":{"start":{"line":136,"column":4},"end":{"line":136,"column":10}},"82":{"start":{"line":137,"column":4},"end":{"line":137,"column":10}},"83":{"start":{"line":138,"column":4},"end":{"line":138,"column":12}},"84":{"start":{"line":139,"column":4},"end":{"line":139,"column":11}},"85":{"start":{"line":140,"column":4},"end":{"line":140,"column":12}},"86":{"start":{"line":141,"column":4},"end":{"line":141,"column":11}},"87":{"start":{"line":143,"column":2},"end":{"line":143,"column":15}},"88":{"start":{"line":144,"column":2},"end":{"line":144,"column":9}},"89":{"start":{"line":146,"column":2},"end":{"line":146,"column":36}},"90":{"start":{"line":147,"column":2},"end":{"line":147,"column":36}},"91":{"start":{"line":148,"column":2},"end":{"line":151,"column":3}},"92":{"start":{"line":149,"column":4},"end":{"line":149,"column":12}},"93":{"start":{"line":150,"column":4},"end":{"line":150,"column":12}},"94":{"start":{"line":154,"column":2},"end":{"line":157,"column":3}},"95":{"start":{"line":155,"column":4},"end":{"line":155,"column":18}},"96":{"start":{"line":156,"column":4},"end":{"line":156,"column":18}},"97":{"start":{"line":158,"column":2},"end":{"line":161,"column":3}},"98":{"start":{"line":159,"column":4},"end":{"line":159,"column":18}},"99":{"start":{"line":160,"column":4},"end":{"line":160,"column":18}},"100":{"start":{"line":163,"column":2},"end":{"line":166,"column":4}},"101":{"start":{"line":169,"column":0},"end":{"line":186,"column":2}},"102":{"start":{"line":170,"column":2},"end":{"line":170,"column":30}},"103":{"start":{"line":171,"column":2},"end":{"line":171,"column":20}},"104":{"start":{"line":172,"column":2},"end":{"line":172,"column":20}},"105":{"start":{"line":174,"column":2},"end":{"line":174,"column":40}},"106":{"start":{"line":175,"column":2},"end":{"line":175,"column":46}},"107":{"start":{"line":177,"column":2},"end":{"line":177,"column":24}},"108":{"start":{"line":178,"column":2},"end":{"line":178,"column":24}},"109":{"start":{"line":179,"column":2},"end":{"line":179,"column":24}},"110":{"start":{"line":180,"column":2},"end":{"line":180,"column":24}},"111":{"start":{"line":183,"column":2},"end":{"line":183,"column":29}},"112":{"start":{"line":184,"column":2},"end":{"line":184,"column":28}},"113":{"start":{"line":185,"column":2},"end":{"line":185,"column":28}},"114":{"start":{"line":188,"column":0},"end":{"line":203,"column":2}},"115":{"start":{"line":189,"column":2},"end":{"line":189,"column":20}},"116":{"start":{"line":190,"column":2},"end":{"line":191,"column":26}},"117":{"start":{"line":191,"column":4},"end":{"line":191,"column":26}},"118":{"start":{"line":193,"column":2},"end":{"line":193,"column":74}},"119":{"start":{"line":194,"column":2},"end":{"line":194,"column":23}},"120":{"start":{"line":198,"column":2},"end":{"line":198,"column":34}},"121":{"start":{"line":199,"column":2},"end":{"line":200,"column":19}},"122":{"start":{"line":200,"column":4},"end":{"line":200,"column":19}},"123":{"start":{"line":202,"column":2},"end":{"line":202,"column":26}},"124":{"start":{"line":205,"column":0},"end":{"line":215,"column":2}},"125":{"start":{"line":206,"column":2},"end":{"line":207,"column":16}},"126":{"start":{"line":207,"column":4},"end":{"line":207,"column":16}},"127":{"start":{"line":209,"column":2},"end":{"line":209,"column":18}},"128":{"start":{"line":210,"column":2},"end":{"line":210,"column":18}},"129":{"start":{"line":212,"column":2},"end":{"line":212,"column":28}},"130":{"start":{"line":213,"column":2},"end":{"line":213,"column":61}},"131":{"start":{"line":214,"column":2},"end":{"line":214,"column":47}},"132":{"start":{"line":217,"column":0},"end":{"line":248,"column":2}},"133":{"start":{"line":219,"column":2},"end":{"line":219,"column":33}},"134":{"start":{"line":220,"column":2},"end":{"line":220,"column":33}},"135":{"start":{"line":221,"column":2},"end":{"line":239,"column":3}},"136":{"start":{"line":222,"column":4},"end":{"line":222,"column":43}},"137":{"start":{"line":223,"column":4},"end":{"line":223,"column":22}},"138":{"start":{"line":224,"column":4},"end":{"line":224,"column":28}},"139":{"start":{"line":226,"column":4},"end":{"line":229,"column":5}},"140":{"start":{"line":227,"column":6},"end":{"line":227,"column":37}},"141":{"start":{"line":228,"column":6},"end":{"line":228,"column":22}},"142":{"start":{"line":230,"column":4},"end":{"line":233,"column":5}},"143":{"start":{"line":231,"column":6},"end":{"line":231,"column":37}},"144":{"start":{"line":232,"column":6},"end":{"line":232,"column":28}},"145":{"start":{"line":235,"column":4},"end":{"line":235,"column":23}},"146":{"start":{"line":236,"column":4},"end":{"line":236,"column":30}},"147":{"start":{"line":237,"column":4},"end":{"line":237,"column":30}},"148":{"start":{"line":238,"column":4},"end":{"line":238,"column":34}},"149":{"start":{"line":240,"column":2},"end":{"line":240,"column":57}},"150":{"start":{"line":243,"column":2},"end":{"line":246,"column":3}},"151":{"start":{"line":244,"column":4},"end":{"line":244,"column":22}},"152":{"start":{"line":245,"column":4},"end":{"line":245,"column":22}},"153":{"start":{"line":247,"column":2},"end":{"line":247,"column":13}},"154":{"start":{"line":250,"column":0},"end":{"line":270,"column":1}},"155":{"start":{"line":251,"column":2},"end":{"line":251,"column":45}},"156":{"start":{"line":252,"column":2},"end":{"line":269,"column":3}},"157":{"start":{"line":253,"column":4},"end":{"line":253,"column":18}},"158":{"start":{"line":254,"column":4},"end":{"line":254,"column":18}},"159":{"start":{"line":255,"column":4},"end":{"line":255,"column":20}},"160":{"start":{"line":257,"column":4},"end":{"line":257,"column":27}},"161":{"start":{"line":258,"column":4},"end":{"line":258,"column":27}},"162":{"start":{"line":260,"column":4},"end":{"line":263,"column":5}},"163":{"start":{"line":261,"column":6},"end":{"line":261,"column":38}},"164":{"start":{"line":262,"column":6},"end":{"line":262,"column":38}},"165":{"start":{"line":264,"column":4},"end":{"line":265,"column":44}},"166":{"start":{"line":265,"column":6},"end":{"line":265,"column":44}},"167":{"start":{"line":266,"column":4},"end":{"line":267,"column":44}},"168":{"start":{"line":267,"column":6},"end":{"line":267,"column":44}},"169":{"start":{"line":268,"column":4},"end":{"line":268,"column":21}},"170":{"start":{"line":271,"column":0},"end":{"line":271,"column":32}},"171":{"start":{"line":273,"column":0},"end":{"line":275,"column":2}},"172":{"start":{"line":274,"column":2},"end":{"line":274,"column":38}},"173":{"start":{"line":277,"column":0},"end":{"line":279,"column":2}},"174":{"start":{"line":278,"column":2},"end":{"line":278,"column":40}},"175":{"start":{"line":281,"column":0},"end":{"line":309,"column":2}},"176":{"start":{"line":282,"column":2},"end":{"line":283,"column":11}},"177":{"start":{"line":283,"column":4},"end":{"line":283,"column":11}},"178":{"start":{"line":285,"column":2},"end":{"line":285,"column":29}},"179":{"start":{"line":286,"column":2},"end":{"line":287,"column":20}},"180":{"start":{"line":287,"column":4},"end":{"line":287,"column":20}},"181":{"start":{"line":289,"column":2},"end":{"line":289,"column":75}},"182":{"start":{"line":290,"column":2},"end":{"line":307,"column":3}},"183":{"start":{"line":291,"column":4},"end":{"line":291,"column":27}},"184":{"start":{"line":292,"column":4},"end":{"line":294,"column":6}},"185":{"start":{"line":293,"column":6},"end":{"line":293,"column":59}},"186":{"start":{"line":295,"column":4},"end":{"line":295,"column":20}},"187":{"start":{"line":296,"column":4},"end":{"line":306,"column":6}},"188":{"start":{"line":308,"column":2},"end":{"line":308,"column":14}},"189":{"start":{"line":311,"column":0},"end":{"line":325,"column":2}},"190":{"start":{"line":312,"column":2},"end":{"line":313,"column":30}},"191":{"start":{"line":313,"column":4},"end":{"line":313,"column":30}},"192":{"start":{"line":315,"column":2},"end":{"line":324,"column":6}},"193":{"start":{"line":327,"column":0},"end":{"line":351,"column":2}},"194":{"start":{"line":328,"column":2},"end":{"line":329,"column":26}},"195":{"start":{"line":329,"column":4},"end":{"line":329,"column":26}},"196":{"start":{"line":330,"column":2},"end":{"line":330,"column":45}},"197":{"start":{"line":331,"column":2},"end":{"line":332,"column":15}},"198":{"start":{"line":332,"column":4},"end":{"line":332,"column":15}},"199":{"start":{"line":334,"column":2},"end":{"line":336,"column":3}},"200":{"start":{"line":335,"column":4},"end":{"line":335,"column":44}},"201":{"start":{"line":338,"column":2},"end":{"line":338,"column":19}},"202":{"start":{"line":339,"column":2},"end":{"line":349,"column":4}},"203":{"start":{"line":350,"column":2},"end":{"line":350,"column":13}},"204":{"start":{"line":353,"column":0},"end":{"line":358,"column":2}},"205":{"start":{"line":354,"column":2},"end":{"line":355,"column":33}},"206":{"start":{"line":355,"column":4},"end":{"line":355,"column":33}},"207":{"start":{"line":356,"column":2},"end":{"line":357,"column":54}},"208":{"start":{"line":360,"column":0},"end":{"line":362,"column":2}},"209":{"start":{"line":361,"column":2},"end":{"line":361,"column":18}},"210":{"start":{"line":364,"column":0},"end":{"line":391,"column":2}},"211":{"start":{"line":366,"column":2},"end":{"line":367,"column":13}},"212":{"start":{"line":367,"column":4},"end":{"line":367,"column":13}},"213":{"start":{"line":370,"column":2},"end":{"line":371,"column":16}},"214":{"start":{"line":371,"column":4},"end":{"line":371,"column":16}},"215":{"start":{"line":374,"column":2},"end":{"line":375,"column":22}},"216":{"start":{"line":375,"column":4},"end":{"line":375,"column":22}},"217":{"start":{"line":378,"column":2},"end":{"line":379,"column":40}},"218":{"start":{"line":379,"column":4},"end":{"line":379,"column":40}},"219":{"start":{"line":382,"column":2},"end":{"line":383,"column":40}},"220":{"start":{"line":383,"column":4},"end":{"line":383,"column":40}},"221":{"start":{"line":385,"column":2},"end":{"line":385,"column":29}},"222":{"start":{"line":386,"column":2},"end":{"line":387,"column":47}},"223":{"start":{"line":387,"column":4},"end":{"line":387,"column":47}},"224":{"start":{"line":388,"column":2},"end":{"line":388,"column":51}},"225":{"start":{"line":389,"column":2},"end":{"line":389,"column":55}},"226":{"start":{"line":390,"column":2},"end":{"line":390,"column":34}},"227":{"start":{"line":393,"column":0},"end":{"line":411,"column":2}},"228":{"start":{"line":394,"column":2},"end":{"line":395,"column":16}},"229":{"start":{"line":395,"column":4},"end":{"line":395,"column":16}},"230":{"start":{"line":398,"column":2},"end":{"line":398,"column":34}},"231":{"start":{"line":399,"column":2},"end":{"line":400,"column":40}},"232":{"start":{"line":400,"column":4},"end":{"line":400,"column":40}},"233":{"start":{"line":402,"column":2},"end":{"line":402,"column":23}},"234":{"start":{"line":404,"column":2},"end":{"line":404,"column":27}},"235":{"start":{"line":405,"column":2},"end":{"line":405,"column":28}},"236":{"start":{"line":406,"column":2},"end":{"line":406,"column":61}},"237":{"start":{"line":408,"column":2},"end":{"line":408,"column":53}},"238":{"start":{"line":409,"column":2},"end":{"line":409,"column":55}},"239":{"start":{"line":410,"column":2},"end":{"line":410,"column":34}},"240":{"start":{"line":413,"column":0},"end":{"line":415,"column":2}},"241":{"start":{"line":414,"column":2},"end":{"line":414,"column":26}},"242":{"start":{"line":417,"column":0},"end":{"line":419,"column":2}},"243":{"start":{"line":418,"column":2},"end":{"line":418,"column":26}},"244":{"start":{"line":421,"column":0},"end":{"line":430,"column":2}},"245":{"start":{"line":422,"column":2},"end":{"line":422,"column":20}},"246":{"start":{"line":424,"column":2},"end":{"line":429,"column":40}},"247":{"start":{"line":425,"column":4},"end":{"line":425,"column":44}},"248":{"start":{"line":426,"column":7},"end":{"line":429,"column":40}},"249":{"start":{"line":427,"column":4},"end":{"line":427,"column":55}},"250":{"start":{"line":429,"column":4},"end":{"line":429,"column":40}},"251":{"start":{"line":432,"column":0},"end":{"line":439,"column":2}},"252":{"start":{"line":433,"column":2},"end":{"line":433,"column":28}},"253":{"start":{"line":434,"column":2},"end":{"line":434,"column":26}},"254":{"start":{"line":435,"column":2},"end":{"line":438,"column":56}},"255":{"start":{"line":436,"column":4},"end":{"line":436,"column":54}},"256":{"start":{"line":438,"column":4},"end":{"line":438,"column":56}},"257":{"start":{"line":441,"column":0},"end":{"line":445,"column":2}},"258":{"start":{"line":442,"column":2},"end":{"line":444,"column":74}},"259":{"start":{"line":447,"column":0},"end":{"line":469,"column":2}},"260":{"start":{"line":448,"column":2},"end":{"line":449,"column":16}},"261":{"start":{"line":449,"column":4},"end":{"line":449,"column":16}},"262":{"start":{"line":451,"column":2},"end":{"line":451,"column":54}},"263":{"start":{"line":452,"column":2},"end":{"line":467,"column":3}},"264":{"start":{"line":453,"column":4},"end":{"line":453,"column":31}},"265":{"start":{"line":454,"column":4},"end":{"line":456,"column":6}},"266":{"start":{"line":455,"column":6},"end":{"line":455,"column":21}},"267":{"start":{"line":457,"column":4},"end":{"line":466,"column":6}},"268":{"start":{"line":468,"column":2},"end":{"line":468,"column":13}},"269":{"start":{"line":471,"column":0},"end":{"line":477,"column":2}},"270":{"start":{"line":472,"column":2},"end":{"line":473,"column":47}},"271":{"start":{"line":473,"column":4},"end":{"line":473,"column":47}},"272":{"start":{"line":475,"column":2},"end":{"line":475,"column":62}},"273":{"start":{"line":476,"column":2},"end":{"line":476,"column":13}},"274":{"start":{"line":479,"column":0},"end":{"line":498,"column":1}},"275":{"start":{"line":480,"column":2},"end":{"line":480,"column":47}},"276":{"start":{"line":481,"column":2},"end":{"line":489,"column":3}},"277":{"start":{"line":482,"column":4},"end":{"line":482,"column":28}},"278":{"start":{"line":483,"column":4},"end":{"line":483,"column":28}},"279":{"start":{"line":484,"column":4},"end":{"line":484,"column":23}},"280":{"start":{"line":486,"column":4},"end":{"line":486,"column":27}},"281":{"start":{"line":487,"column":4},"end":{"line":487,"column":27}},"282":{"start":{"line":488,"column":4},"end":{"line":488,"column":27}},"283":{"start":{"line":490,"column":2},"end":{"line":491,"column":42}},"284":{"start":{"line":491,"column":4},"end":{"line":491,"column":42}},"285":{"start":{"line":492,"column":2},"end":{"line":493,"column":42}},"286":{"start":{"line":493,"column":4},"end":{"line":493,"column":42}},"287":{"start":{"line":494,"column":2},"end":{"line":495,"column":42}},"288":{"start":{"line":495,"column":4},"end":{"line":495,"column":42}},"289":{"start":{"line":497,"column":2},"end":{"line":497,"column":40}},"290":{"start":{"line":499,"column":0},"end":{"line":499,"column":33}},"291":{"start":{"line":501,"column":0},"end":{"line":503,"column":2}},"292":{"start":{"line":502,"column":2},"end":{"line":502,"column":35}},"293":{"start":{"line":505,"column":0},"end":{"line":515,"column":2}},"294":{"start":{"line":506,"column":2},"end":{"line":507,"column":40}},"295":{"start":{"line":507,"column":4},"end":{"line":507,"column":40}},"296":{"start":{"line":509,"column":2},"end":{"line":509,"column":30}},"297":{"start":{"line":510,"column":2},"end":{"line":510,"column":28}},"298":{"start":{"line":511,"column":2},"end":{"line":511,"column":32}},"299":{"start":{"line":512,"column":2},"end":{"line":512,"column":45}},"300":{"start":{"line":514,"column":2},"end":{"line":514,"column":34}},"301":{"start":{"line":517,"column":0},"end":{"line":519,"column":2}},"302":{"start":{"line":518,"column":2},"end":{"line":518,"column":60}},"303":{"start":{"line":521,"column":0},"end":{"line":556,"column":2}},"304":{"start":{"line":523,"column":2},"end":{"line":524,"column":13}},"305":{"start":{"line":524,"column":4},"end":{"line":524,"column":13}},"306":{"start":{"line":527,"column":2},"end":{"line":528,"column":16}},"307":{"start":{"line":528,"column":4},"end":{"line":528,"column":16}},"308":{"start":{"line":531,"column":2},"end":{"line":531,"column":25}},"309":{"start":{"line":532,"column":2},"end":{"line":532,"column":27}},"310":{"start":{"line":533,"column":2},"end":{"line":533,"column":30}},"311":{"start":{"line":534,"column":2},"end":{"line":534,"column":26}},"312":{"start":{"line":535,"column":2},"end":{"line":535,"column":42}},"313":{"start":{"line":536,"column":2},"end":{"line":536,"column":41}},"314":{"start":{"line":538,"column":2},"end":{"line":538,"column":24}},"315":{"start":{"line":539,"column":2},"end":{"line":539,"column":24}},"316":{"start":{"line":540,"column":2},"end":{"line":545,"column":3}},"317":{"start":{"line":541,"column":4},"end":{"line":544,"column":24}},"318":{"start":{"line":542,"column":6},"end":{"line":542,"column":49}},"319":{"start":{"line":544,"column":6},"end":{"line":544,"column":24}},"320":{"start":{"line":547,"column":2},"end":{"line":547,"column":22}},"321":{"start":{"line":548,"column":2},"end":{"line":548,"column":24}},"322":{"start":{"line":549,"column":2},"end":{"line":549,"column":24}},"323":{"start":{"line":551,"column":2},"end":{"line":551,"column":56}},"324":{"start":{"line":552,"column":2},"end":{"line":552,"column":58}},"325":{"start":{"line":553,"column":2},"end":{"line":553,"column":40}},"326":{"start":{"line":555,"column":2},"end":{"line":555,"column":39}},"327":{"start":{"line":558,"column":0},"end":{"line":592,"column":2}},"328":{"start":{"line":560,"column":2},"end":{"line":561,"column":19}},"329":{"start":{"line":561,"column":4},"end":{"line":561,"column":19}},"330":{"start":{"line":564,"column":2},"end":{"line":565,"column":16}},"331":{"start":{"line":565,"column":4},"end":{"line":565,"column":16}},"332":{"start":{"line":568,"column":2},"end":{"line":568,"column":27}},"333":{"start":{"line":569,"column":2},"end":{"line":569,"column":18}},"334":{"start":{"line":570,"column":2},"end":{"line":570,"column":26}},"335":{"start":{"line":571,"column":2},"end":{"line":571,"column":18}},"336":{"start":{"line":572,"column":2},"end":{"line":572,"column":41}},"337":{"start":{"line":574,"column":2},"end":{"line":574,"column":24}},"338":{"start":{"line":575,"column":2},"end":{"line":575,"column":24}},"339":{"start":{"line":576,"column":2},"end":{"line":581,"column":3}},"340":{"start":{"line":577,"column":4},"end":{"line":580,"column":24}},"341":{"start":{"line":578,"column":6},"end":{"line":578,"column":49}},"342":{"start":{"line":580,"column":6},"end":{"line":580,"column":24}},"343":{"start":{"line":583,"column":2},"end":{"line":583,"column":22}},"344":{"start":{"line":584,"column":2},"end":{"line":584,"column":24}},"345":{"start":{"line":585,"column":2},"end":{"line":585,"column":24}},"346":{"start":{"line":587,"column":2},"end":{"line":587,"column":56}},"347":{"start":{"line":588,"column":2},"end":{"line":588,"column":58}},"348":{"start":{"line":589,"column":2},"end":{"line":589,"column":28}},"349":{"start":{"line":591,"column":2},"end":{"line":591,"column":39}},"350":{"start":{"line":594,"column":0},"end":{"line":642,"column":2}},"351":{"start":{"line":595,"column":2},"end":{"line":596,"column":16}},"352":{"start":{"line":596,"column":4},"end":{"line":596,"column":16}},"353":{"start":{"line":597,"column":2},"end":{"line":598,"column":16}},"354":{"start":{"line":598,"column":4},"end":{"line":598,"column":16}},"355":{"start":{"line":599,"column":2},"end":{"line":600,"column":22}},"356":{"start":{"line":600,"column":4},"end":{"line":600,"column":22}},"357":{"start":{"line":602,"column":2},"end":{"line":607,"column":3}},"358":{"start":{"line":603,"column":4},"end":{"line":603,"column":17}},"359":{"start":{"line":604,"column":4},"end":{"line":605,"column":18}},"360":{"start":{"line":605,"column":6},"end":{"line":605,"column":18}},"361":{"start":{"line":606,"column":4},"end":{"line":606,"column":13}},"362":{"start":{"line":611,"column":2},"end":{"line":611,"column":23}},"363":{"start":{"line":612,"column":2},"end":{"line":612,"column":29}},"364":{"start":{"line":614,"column":2},"end":{"line":614,"column":18}},"365":{"start":{"line":615,"column":2},"end":{"line":615,"column":18}},"366":{"start":{"line":616,"column":2},"end":{"line":616,"column":18}},"367":{"start":{"line":617,"column":2},"end":{"line":617,"column":33}},"368":{"start":{"line":620,"column":2},"end":{"line":620,"column":26}},"369":{"start":{"line":621,"column":2},"end":{"line":639,"column":3}},"370":{"start":{"line":622,"column":4},"end":{"line":622,"column":26}},"371":{"start":{"line":623,"column":4},"end":{"line":623,"column":28}},"372":{"start":{"line":624,"column":4},"end":{"line":624,"column":29}},"373":{"start":{"line":625,"column":4},"end":{"line":625,"column":64}},"374":{"start":{"line":627,"column":4},"end":{"line":627,"column":29}},"375":{"start":{"line":628,"column":4},"end":{"line":628,"column":47}},"376":{"start":{"line":629,"column":4},"end":{"line":629,"column":28}},"377":{"start":{"line":630,"column":4},"end":{"line":630,"column":27}},"378":{"start":{"line":631,"column":4},"end":{"line":631,"column":41}},"379":{"start":{"line":632,"column":4},"end":{"line":632,"column":28}},"380":{"start":{"line":633,"column":4},"end":{"line":634,"column":29}},"381":{"start":{"line":634,"column":6},"end":{"line":634,"column":29}},"382":{"start":{"line":636,"column":4},"end":{"line":636,"column":12}},"383":{"start":{"line":637,"column":4},"end":{"line":637,"column":12}},"384":{"start":{"line":638,"column":4},"end":{"line":638,"column":14}},"385":{"start":{"line":641,"column":2},"end":{"line":641,"column":53}},"386":{"start":{"line":644,"column":0},"end":{"line":654,"column":2}},"387":{"start":{"line":645,"column":2},"end":{"line":646,"column":16}},"388":{"start":{"line":646,"column":4},"end":{"line":646,"column":16}},"389":{"start":{"line":648,"column":2},"end":{"line":653,"column":23}},"390":{"start":{"line":649,"column":4},"end":{"line":649,"column":27}},"391":{"start":{"line":650,"column":7},"end":{"line":653,"column":23}},"392":{"start":{"line":651,"column":4},"end":{"line":651,"column":28}},"393":{"start":{"line":653,"column":4},"end":{"line":653,"column":23}},"394":{"start":{"line":656,"column":0},"end":{"line":725,"column":2}},"395":{"start":{"line":657,"column":2},"end":{"line":657,"column":9}},"396":{"start":{"line":658,"column":2},"end":{"line":658,"column":9}},"397":{"start":{"line":659,"column":2},"end":{"line":659,"column":9}},"398":{"start":{"line":661,"column":2},"end":{"line":722,"column":3}},"399":{"start":{"line":667,"column":4},"end":{"line":667,"column":29}},"400":{"start":{"line":669,"column":4},"end":{"line":669,"column":29}},"401":{"start":{"line":671,"column":4},"end":{"line":671,"column":27}},"402":{"start":{"line":673,"column":4},"end":{"line":673,"column":65}},"403":{"start":{"line":674,"column":4},"end":{"line":674,"column":21}},"404":{"start":{"line":676,"column":4},"end":{"line":676,"column":38}},"405":{"start":{"line":678,"column":4},"end":{"line":678,"column":45}},"406":{"start":{"line":681,"column":4},"end":{"line":681,"column":35}},"407":{"start":{"line":682,"column":4},"end":{"line":682,"column":33}},"408":{"start":{"line":683,"column":4},"end":{"line":683,"column":33}},"409":{"start":{"line":686,"column":4},"end":{"line":686,"column":11}},"410":{"start":{"line":688,"column":4},"end":{"line":688,"column":47}},"411":{"start":{"line":690,"column":4},"end":{"line":690,"column":31}},"412":{"start":{"line":697,"column":4},"end":{"line":697,"column":28}},"413":{"start":{"line":699,"column":4},"end":{"line":699,"column":28}},"414":{"start":{"line":701,"column":4},"end":{"line":701,"column":23}},"415":{"start":{"line":703,"column":4},"end":{"line":703,"column":60}},"416":{"start":{"line":704,"column":4},"end":{"line":704,"column":21}},"417":{"start":{"line":706,"column":4},"end":{"line":706,"column":35}},"418":{"start":{"line":708,"column":4},"end":{"line":708,"column":23}},"419":{"start":{"line":711,"column":4},"end":{"line":711,"column":26}},"420":{"start":{"line":712,"column":4},"end":{"line":712,"column":24}},"421":{"start":{"line":713,"column":4},"end":{"line":713,"column":24}},"422":{"start":{"line":716,"column":4},"end":{"line":716,"column":33}},"423":{"start":{"line":718,"column":4},"end":{"line":718,"column":45}},"424":{"start":{"line":720,"column":4},"end":{"line":720,"column":31}},"425":{"start":{"line":721,"column":4},"end":{"line":721,"column":24}},"426":{"start":{"line":724,"column":2},"end":{"line":724,"column":39}},"427":{"start":{"line":727,"column":0},"end":{"line":788,"column":2}},"428":{"start":{"line":728,"column":2},"end":{"line":728,"column":9}},"429":{"start":{"line":729,"column":2},"end":{"line":729,"column":9}},"430":{"start":{"line":730,"column":2},"end":{"line":730,"column":9}},"431":{"start":{"line":732,"column":2},"end":{"line":785,"column":3}},"432":{"start":{"line":738,"column":4},"end":{"line":738,"column":29}},"433":{"start":{"line":740,"column":4},"end":{"line":740,"column":29}},"434":{"start":{"line":742,"column":4},"end":{"line":742,"column":27}},"435":{"start":{"line":744,"column":4},"end":{"line":744,"column":65}},"436":{"start":{"line":745,"column":4},"end":{"line":745,"column":21}},"437":{"start":{"line":747,"column":4},"end":{"line":747,"column":60}},"438":{"start":{"line":749,"column":4},"end":{"line":749,"column":45}},"439":{"start":{"line":751,"column":4},"end":{"line":751,"column":11}},"440":{"start":{"line":753,"column":4},"end":{"line":753,"column":35}},"441":{"start":{"line":754,"column":4},"end":{"line":754,"column":33}},"442":{"start":{"line":755,"column":4},"end":{"line":755,"column":33}},"443":{"start":{"line":756,"column":4},"end":{"line":756,"column":47}},"444":{"start":{"line":758,"column":4},"end":{"line":758,"column":31}},"445":{"start":{"line":764,"column":4},"end":{"line":764,"column":32}},"446":{"start":{"line":766,"column":4},"end":{"line":766,"column":32}},"447":{"start":{"line":768,"column":4},"end":{"line":768,"column":36}},"448":{"start":{"line":770,"column":4},"end":{"line":770,"column":66}},"449":{"start":{"line":771,"column":4},"end":{"line":771,"column":47}},"450":{"start":{"line":773,"column":4},"end":{"line":773,"column":35}},"451":{"start":{"line":774,"column":4},"end":{"line":774,"column":33}},"452":{"start":{"line":775,"column":4},"end":{"line":775,"column":36}},"453":{"start":{"line":776,"column":4},"end":{"line":776,"column":39}},"454":{"start":{"line":778,"column":4},"end":{"line":778,"column":70}},"455":{"start":{"line":780,"column":4},"end":{"line":780,"column":33}},"456":{"start":{"line":781,"column":4},"end":{"line":781,"column":39}},"457":{"start":{"line":782,"column":4},"end":{"line":782,"column":39}},"458":{"start":{"line":783,"column":4},"end":{"line":783,"column":39}},"459":{"start":{"line":784,"column":4},"end":{"line":784,"column":58}},"460":{"start":{"line":787,"column":2},"end":{"line":787,"column":39}},"461":{"start":{"line":790,"column":0},"end":{"line":818,"column":2}},"462":{"start":{"line":791,"column":2},"end":{"line":791,"column":23}},"463":{"start":{"line":794,"column":2},"end":{"line":794,"column":18}},"464":{"start":{"line":795,"column":2},"end":{"line":795,"column":18}},"465":{"start":{"line":796,"column":2},"end":{"line":796,"column":18}},"466":{"start":{"line":797,"column":2},"end":{"line":797,"column":33}},"467":{"start":{"line":799,"column":2},"end":{"line":799,"column":24}},"468":{"start":{"line":800,"column":2},"end":{"line":800,"column":24}},"469":{"start":{"line":802,"column":2},"end":{"line":802,"column":62}},"470":{"start":{"line":804,"column":2},"end":{"line":804,"column":27}},"471":{"start":{"line":805,"column":2},"end":{"line":805,"column":28}},"472":{"start":{"line":806,"column":2},"end":{"line":806,"column":28}},"473":{"start":{"line":807,"column":2},"end":{"line":807,"column":45}},"474":{"start":{"line":808,"column":2},"end":{"line":808,"column":26}},"475":{"start":{"line":810,"column":2},"end":{"line":810,"column":26}},"476":{"start":{"line":811,"column":2},"end":{"line":811,"column":28}},"477":{"start":{"line":812,"column":2},"end":{"line":812,"column":28}},"478":{"start":{"line":813,"column":2},"end":{"line":813,"column":28}},"479":{"start":{"line":814,"column":2},"end":{"line":814,"column":38}},"480":{"start":{"line":815,"column":2},"end":{"line":815,"column":36}},"481":{"start":{"line":817,"column":2},"end":{"line":817,"column":39}},"482":{"start":{"line":820,"column":0},"end":{"line":869,"column":2}},"483":{"start":{"line":821,"column":2},"end":{"line":822,"column":32}},"484":{"start":{"line":822,"column":4},"end":{"line":822,"column":32}},"485":{"start":{"line":828,"column":2},"end":{"line":828,"column":27}},"486":{"start":{"line":830,"column":2},"end":{"line":830,"column":27}},"487":{"start":{"line":832,"column":2},"end":{"line":832,"column":27}},"488":{"start":{"line":834,"column":2},"end":{"line":834,"column":25}},"489":{"start":{"line":836,"column":2},"end":{"line":836,"column":36}},"490":{"start":{"line":838,"column":2},"end":{"line":838,"column":22}},"491":{"start":{"line":840,"column":2},"end":{"line":840,"column":63}},"492":{"start":{"line":841,"column":2},"end":{"line":841,"column":19}},"493":{"start":{"line":842,"column":2},"end":{"line":842,"column":29}},"494":{"start":{"line":843,"column":2},"end":{"line":843,"column":20}},"495":{"start":{"line":845,"column":2},"end":{"line":845,"column":22}},"496":{"start":{"line":847,"column":2},"end":{"line":847,"column":29}},"497":{"start":{"line":848,"column":2},"end":{"line":848,"column":19}},"498":{"start":{"line":849,"column":2},"end":{"line":849,"column":19}},"499":{"start":{"line":850,"column":2},"end":{"line":850,"column":19}},"500":{"start":{"line":852,"column":2},"end":{"line":852,"column":67}},"501":{"start":{"line":854,"column":2},"end":{"line":854,"column":26}},"502":{"start":{"line":855,"column":2},"end":{"line":855,"column":28}},"503":{"start":{"line":856,"column":2},"end":{"line":856,"column":28}},"504":{"start":{"line":857,"column":2},"end":{"line":857,"column":43}},"505":{"start":{"line":858,"column":2},"end":{"line":858,"column":22}},"506":{"start":{"line":859,"column":2},"end":{"line":859,"column":22}},"507":{"start":{"line":861,"column":2},"end":{"line":861,"column":71}},"508":{"start":{"line":862,"column":2},"end":{"line":862,"column":22}},"509":{"start":{"line":863,"column":2},"end":{"line":863,"column":22}},"510":{"start":{"line":864,"column":2},"end":{"line":864,"column":22}},"511":{"start":{"line":866,"column":2},"end":{"line":866,"column":61}},"512":{"start":{"line":868,"column":2},"end":{"line":868,"column":39}},"513":{"start":{"line":871,"column":0},"end":{"line":875,"column":2}},"514":{"start":{"line":872,"column":2},"end":{"line":872,"column":23}},"515":{"start":{"line":874,"column":2},"end":{"line":874,"column":38}},"516":{"start":{"line":877,"column":0},"end":{"line":894,"column":2}},"517":{"start":{"line":878,"column":2},"end":{"line":879,"column":28}},"518":{"start":{"line":879,"column":4},"end":{"line":879,"column":28}},"519":{"start":{"line":881,"column":2},"end":{"line":882,"column":16}},"520":{"start":{"line":882,"column":4},"end":{"line":882,"column":16}},"521":{"start":{"line":885,"column":2},"end":{"line":885,"column":27}},"522":{"start":{"line":886,"column":2},"end":{"line":886,"column":25}},"523":{"start":{"line":887,"column":2},"end":{"line":888,"column":17}},"524":{"start":{"line":888,"column":4},"end":{"line":888,"column":17}},"525":{"start":{"line":891,"column":2},"end":{"line":891,"column":29}},"526":{"start":{"line":892,"column":2},"end":{"line":892,"column":28}},"527":{"start":{"line":893,"column":2},"end":{"line":893,"column":66}},"528":{"start":{"line":896,"column":0},"end":{"line":902,"column":2}},"529":{"start":{"line":897,"column":2},"end":{"line":898,"column":34}},"530":{"start":{"line":898,"column":4},"end":{"line":898,"column":34}},"531":{"start":{"line":899,"column":2},"end":{"line":901,"column":44}},"532":{"start":{"line":904,"column":0},"end":{"line":907,"column":2}},"533":{"start":{"line":906,"column":2},"end":{"line":906,"column":30}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":17}},{"start":{"line":31,"column":21},"end":{"line":31,"column":28}},{"start":{"line":31,"column":32},"end":{"line":31,"column":39}},{"start":{"line":31,"column":43},"end":{"line":31,"column":63}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":40},"end":{"line":42,"column":48}},{"start":{"line":42,"column":51},"end":{"line":42,"column":59}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"7":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"8":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":29},"end":{"line":82,"column":37}},{"start":{"line":82,"column":40},"end":{"line":82,"column":52}}]},"9":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":4}},{"start":{"line":126,"column":4},"end":{"line":126,"column":4}}]},"10":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":8},"end":{"line":126,"column":11}},{"start":{"line":126,"column":15},"end":{"line":126,"column":34}}]},"11":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":11},"end":{"line":131,"column":11}},{"start":{"line":131,"column":11},"end":{"line":131,"column":11}}]},"12":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":15},"end":{"line":131,"column":17}},{"start":{"line":131,"column":21},"end":{"line":131,"column":30}}]},"13":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"14":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"15":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"16":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"17":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"18":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":9}},{"start":{"line":199,"column":13},"end":{"line":199,"column":19}},{"start":{"line":199,"column":23},"end":{"line":199,"column":27}},{"start":{"line":199,"column":31},"end":{"line":199,"column":36}}]},"19":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"20":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]},"21":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"22":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":252,"column":2}},{"start":{"line":252,"column":2},"end":{"line":252,"column":2}}]},"23":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":6},"end":{"line":252,"column":16}},{"start":{"line":252,"column":20},"end":{"line":252,"column":30}}]},"24":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":4}},{"start":{"line":260,"column":4},"end":{"line":260,"column":4}}]},"25":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"26":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"27":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"28":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]},"29":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":6},"end":{"line":286,"column":9}},{"start":{"line":286,"column":13},"end":{"line":286,"column":21}}]},"30":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":2},"end":{"line":290,"column":2}},{"start":{"line":290,"column":2},"end":{"line":290,"column":2}}]},"31":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":11},"end":{"line":298,"column":18}},{"start":{"line":298,"column":22},"end":{"line":301,"column":7}}]},"32":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":15},"end":{"line":302,"column":26}},{"start":{"line":302,"column":30},"end":{"line":305,"column":7}}]},"33":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"34":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":27},"end":{"line":315,"column":43}},{"start":{"line":315,"column":47},"end":{"line":324,"column":3}}]},"35":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":13},"end":{"line":316,"column":37}},{"start":{"line":316,"column":41},"end":{"line":319,"column":5}}]},"36":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":9},"end":{"line":320,"column":29}},{"start":{"line":320,"column":33},"end":{"line":323,"column":5}}]},"37":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":2},"end":{"line":328,"column":2}},{"start":{"line":328,"column":2},"end":{"line":328,"column":2}}]},"38":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":2},"end":{"line":331,"column":2}},{"start":{"line":331,"column":2},"end":{"line":331,"column":2}}]},"39":{"line":341,"type":"binary-expr","locations":[{"start":{"line":341,"column":13},"end":{"line":341,"column":24}},{"start":{"line":341,"column":28},"end":{"line":344,"column":5}}]},"40":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":9},"end":{"line":345,"column":16}},{"start":{"line":345,"column":20},"end":{"line":348,"column":5}}]},"41":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":2},"end":{"line":354,"column":2}},{"start":{"line":354,"column":2},"end":{"line":354,"column":2}}]},"42":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":2},"end":{"line":366,"column":2}},{"start":{"line":366,"column":2},"end":{"line":366,"column":2}}]},"43":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":2},"end":{"line":370,"column":2}},{"start":{"line":370,"column":2},"end":{"line":370,"column":2}}]},"44":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":2},"end":{"line":374,"column":2}},{"start":{"line":374,"column":2},"end":{"line":374,"column":2}}]},"45":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":2},"end":{"line":378,"column":2}},{"start":{"line":378,"column":2},"end":{"line":378,"column":2}}]},"46":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":2},"end":{"line":382,"column":2}},{"start":{"line":382,"column":2},"end":{"line":382,"column":2}}]},"47":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":2},"end":{"line":386,"column":2}},{"start":{"line":386,"column":2},"end":{"line":386,"column":2}}]},"48":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":2},"end":{"line":394,"column":2}},{"start":{"line":394,"column":2},"end":{"line":394,"column":2}}]},"49":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":2},"end":{"line":399,"column":2}},{"start":{"line":399,"column":2},"end":{"line":399,"column":2}}]},"50":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":2},"end":{"line":424,"column":2}},{"start":{"line":424,"column":2},"end":{"line":424,"column":2}}]},"51":{"line":424,"type":"binary-expr","locations":[{"start":{"line":424,"column":6},"end":{"line":424,"column":22}},{"start":{"line":424,"column":26},"end":{"line":424,"column":50}}]},"52":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":7},"end":{"line":426,"column":7}},{"start":{"line":426,"column":7},"end":{"line":426,"column":7}}]},"53":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":2},"end":{"line":435,"column":2}},{"start":{"line":435,"column":2},"end":{"line":435,"column":2}}]},"54":{"line":442,"type":"binary-expr","locations":[{"start":{"line":442,"column":9},"end":{"line":442,"column":19}},{"start":{"line":443,"column":9},"end":{"line":443,"column":27}},{"start":{"line":444,"column":14},"end":{"line":444,"column":22}},{"start":{"line":444,"column":26},"end":{"line":444,"column":47}},{"start":{"line":444,"column":51},"end":{"line":444,"column":72}}]},"55":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":2},"end":{"line":448,"column":2}},{"start":{"line":448,"column":2},"end":{"line":448,"column":2}}]},"56":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":2},"end":{"line":452,"column":2}},{"start":{"line":452,"column":2},"end":{"line":452,"column":2}}]},"57":{"line":452,"type":"binary-expr","locations":[{"start":{"line":452,"column":6},"end":{"line":452,"column":17}},{"start":{"line":452,"column":21},"end":{"line":452,"column":37}}]},"58":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":11},"end":{"line":458,"column":18}},{"start":{"line":458,"column":22},"end":{"line":461,"column":7}}]},"59":{"line":462,"type":"binary-expr","locations":[{"start":{"line":462,"column":15},"end":{"line":462,"column":26}},{"start":{"line":462,"column":30},"end":{"line":465,"column":7}}]},"60":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":2},"end":{"line":472,"column":2}},{"start":{"line":472,"column":2},"end":{"line":472,"column":2}}]},"61":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":2},"end":{"line":481,"column":2}},{"start":{"line":481,"column":2},"end":{"line":481,"column":2}}]},"62":{"line":481,"type":"binary-expr","locations":[{"start":{"line":481,"column":6},"end":{"line":481,"column":16}},{"start":{"line":481,"column":20},"end":{"line":481,"column":30}},{"start":{"line":481,"column":34},"end":{"line":481,"column":44}}]},"63":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":2},"end":{"line":490,"column":2}},{"start":{"line":490,"column":2},"end":{"line":490,"column":2}}]},"64":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":2},"end":{"line":492,"column":2}},{"start":{"line":492,"column":2},"end":{"line":492,"column":2}}]},"65":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":2},"end":{"line":494,"column":2}},{"start":{"line":494,"column":2},"end":{"line":494,"column":2}}]},"66":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":2},"end":{"line":506,"column":2}},{"start":{"line":506,"column":2},"end":{"line":506,"column":2}}]},"67":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":2},"end":{"line":523,"column":2}},{"start":{"line":523,"column":2},"end":{"line":523,"column":2}}]},"68":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":2},"end":{"line":527,"column":2}},{"start":{"line":527,"column":2},"end":{"line":527,"column":2}}]},"69":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":2},"end":{"line":540,"column":2}},{"start":{"line":540,"column":2},"end":{"line":540,"column":2}}]},"70":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":4},"end":{"line":541,"column":4}},{"start":{"line":541,"column":4},"end":{"line":541,"column":4}}]},"71":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":2},"end":{"line":560,"column":2}},{"start":{"line":560,"column":2},"end":{"line":560,"column":2}}]},"72":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":2},"end":{"line":564,"column":2}},{"start":{"line":564,"column":2},"end":{"line":564,"column":2}}]},"73":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":2},"end":{"line":576,"column":2}},{"start":{"line":576,"column":2},"end":{"line":576,"column":2}}]},"74":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":4},"end":{"line":577,"column":4}},{"start":{"line":577,"column":4},"end":{"line":577,"column":4}}]},"75":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":2},"end":{"line":595,"column":2}},{"start":{"line":595,"column":2},"end":{"line":595,"column":2}}]},"76":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":2},"end":{"line":597,"column":2}},{"start":{"line":597,"column":2},"end":{"line":597,"column":2}}]},"77":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":2},"end":{"line":599,"column":2}},{"start":{"line":599,"column":2},"end":{"line":599,"column":2}}]},"78":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":2},"end":{"line":602,"column":2}},{"start":{"line":602,"column":2},"end":{"line":602,"column":2}}]},"79":{"line":602,"type":"binary-expr","locations":[{"start":{"line":602,"column":6},"end":{"line":602,"column":22}},{"start":{"line":602,"column":26},"end":{"line":602,"column":43}}]},"80":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":4},"end":{"line":633,"column":4}},{"start":{"line":633,"column":4},"end":{"line":633,"column":4}}]},"81":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":2},"end":{"line":645,"column":2}},{"start":{"line":645,"column":2},"end":{"line":645,"column":2}}]},"82":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":2},"end":{"line":648,"column":2}},{"start":{"line":648,"column":2},"end":{"line":648,"column":2}}]},"83":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":7},"end":{"line":650,"column":7}},{"start":{"line":650,"column":7},"end":{"line":650,"column":7}}]},"84":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":2},"end":{"line":661,"column":2}},{"start":{"line":661,"column":2},"end":{"line":661,"column":2}}]},"85":{"line":732,"type":"if","locations":[{"start":{"line":732,"column":2},"end":{"line":732,"column":2}},{"start":{"line":732,"column":2},"end":{"line":732,"column":2}}]},"86":{"line":821,"type":"if","locations":[{"start":{"line":821,"column":2},"end":{"line":821,"column":2}},{"start":{"line":821,"column":2},"end":{"line":821,"column":2}}]},"87":{"line":878,"type":"if","locations":[{"start":{"line":878,"column":2},"end":{"line":878,"column":2}},{"start":{"line":878,"column":2},"end":{"line":878,"column":2}}]},"88":{"line":881,"type":"if","locations":[{"start":{"line":881,"column":2},"end":{"line":881,"column":2}},{"start":{"line":881,"column":2},"end":{"line":881,"column":2}}]},"89":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":2},"end":{"line":887,"column":2}},{"start":{"line":887,"column":2},"end":{"line":887,"column":2}}]},"90":{"line":897,"type":"if","locations":[{"start":{"line":897,"column":2},"end":{"line":897,"column":2}},{"start":{"line":897,"column":2},"end":{"line":897,"column":2}}]}},"code":["'use strict';","","var curve = require('../curve');","var elliptic = require('../../elliptic');","var bn = require('bn.js');","var inherits = require('inherits');","var Base = curve.base;","","var assert = elliptic.utils.assert;","","function ShortCurve(conf) {","  Base.call(this, 'short', conf);","","  this.a = new bn(conf.a, 16).toRed(this.red);","  this.b = new bn(conf.b, 16).toRed(this.red);","  this.tinv = this.two.redInvm();","","  this.zeroA = this.a.fromRed().cmpn(0) === 0;","  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;","","  // If the curve is endomorphic, precalculate beta and lambda","  this.endo = this._getEndomorphism(conf);","  this._endoWnafT1 = new Array(4);","  this._endoWnafT2 = new Array(4);","}","inherits(ShortCurve, Base);","module.exports = ShortCurve;","","ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {","  // No efficient endomorphism","  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)","    return;","","  // Compute beta and lambda, that lambda * P = (beta * Px; Py)","  var beta;","  var lambda;","  if (conf.beta) {","    beta = new bn(conf.beta, 16).toRed(this.red);","  } else {","    var betas = this._getEndoRoots(this.p);","    // Choose the smallest beta","    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];","    beta = beta.toRed(this.red);","  }","  if (conf.lambda) {","    lambda = new bn(conf.lambda, 16);","  } else {","    // Choose the lambda that is matching selected beta","    var lambdas = this._getEndoRoots(this.n);","    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {","      lambda = lambdas[0];","    } else {","      lambda = lambdas[1];","      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);","    }","  }","","  // Get basis vectors, used for balanced length-two representation","  var basis;","  if (conf.basis) {","    basis = conf.basis.map(function(vec) {","      return {","        a: new bn(vec.a, 16),","        b: new bn(vec.b, 16)","      };","    });","  } else {","    basis = this._getEndoBasis(lambda);","  }","","  return {","    beta: beta,","    lambda: lambda,","    basis: basis","  };","};","","ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {","  // Find roots of for x^2 + x + 1 in F","  // Root = (-1 +- Sqrt(-3)) / 2","  //","  var red = num === this.p ? this.red : bn.mont(num);","  var tinv = new bn(2).toRed(red).redInvm();","  var ntinv = tinv.redNeg();","","  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);","","  var l1 = ntinv.redAdd(s).fromRed();","  var l2 = ntinv.redSub(s).fromRed();","  return [ l1, l2 ];","};","","ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {","  // aprxSqrt >= sqrt(this.n)","  var aprxSqrt = this.n.shrn(Math.floor(this.n.bitLength() / 2));","","  // 3.74","  // Run EGCD, until r(L + 1) < aprxSqrt","  var u = lambda;","  var v = this.n.clone();","  var x1 = new bn(1);","  var y1 = new bn(0);","  var x2 = new bn(0);","  var y2 = new bn(1);","","  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)","  var a0;","  var b0;","  // First vector","  var a1;","  var b1;","  // Second vector","  var a2;","  var b2;","","  var prevR;","  var i = 0;","  var r;","  var x;","  while (u.cmpn(0) !== 0) {","    var q = v.div(u);","    r = v.sub(q.mul(u));","    x = x2.sub(q.mul(x1));","    var y = y2.sub(q.mul(y1));","","    if (!a1 && r.cmp(aprxSqrt) < 0) {","      a0 = prevR.neg();","      b0 = x1;","      a1 = r.neg();","      b1 = x;","    } else if (a1 && ++i === 2) {","      break;","    }","    prevR = r;","","    v = u;","    u = r;","    x2 = x1;","    x1 = x;","    y2 = y1;","    y1 = y;","  }","  a2 = r.neg();","  b2 = x;","","  var len1 = a1.sqr().add(b1.sqr());","  var len2 = a2.sqr().add(b2.sqr());","  if (len2.cmp(len1) >= 0) {","    a2 = a0;","    b2 = b0;","  }","","  // Normalize signs","  if (a1.sign) {","    a1 = a1.neg();","    b1 = b1.neg();","  }","  if (a2.sign) {","    a2 = a2.neg();","    b2 = b2.neg();","  }","","  return [","    { a: a1, b: b1 },","    { a: a2, b: b2 }","  ];","};","","ShortCurve.prototype._endoSplit = function _endoSplit(k) {","  var basis = this.endo.basis;","  var v1 = basis[0];","  var v2 = basis[1];","","  var c1 = v2.b.mul(k).divRound(this.n);","  var c2 = v1.b.neg().mul(k).divRound(this.n);","","  var p1 = c1.mul(v1.a);","  var p2 = c2.mul(v2.a);","  var q1 = c1.mul(v1.b);","  var q2 = c2.mul(v2.b);","","  // Calculate answer","  var k1 = k.sub(p1).sub(p2);","  var k2 = q1.add(q2).neg();","  return { k1: k1, k2: k2 };","};","","ShortCurve.prototype.pointFromX = function pointFromX(odd, x) {","  x = new bn(x, 16);","  if (!x.red)","    x = x.toRed(this.red);","","  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);","  var y = y2.redSqrt();","","  // XXX Is there any way to tell if the number is odd without converting it","  // to non-red form?","  var isOdd = y.fromRed().isOdd();","  if (odd && !isOdd || !odd && isOdd)","    y = y.redNeg();","","  return this.point(x, y);","};","","ShortCurve.prototype.validate = function validate(point) {","  if (point.inf)","    return true;","","  var x = point.x;","  var y = point.y;","","  var ax = this.a.redMul(x);","  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);","  return y.redSqr().redISub(rhs).cmpn(0) === 0;","};","","ShortCurve.prototype._endoWnafMulAdd =","    function _endoWnafMulAdd(points, coeffs) {","  var npoints = this._endoWnafT1;","  var ncoeffs = this._endoWnafT2;","  for (var i = 0; i < points.length; i++) {","    var split = this._endoSplit(coeffs[i]);","    var p = points[i];","    var beta = p._getBeta();","","    if (split.k1.sign) {","      split.k1.sign = !split.k1.sign;","      p = p.neg(true);","    }","    if (split.k2.sign) {","      split.k2.sign = !split.k2.sign;","      beta = beta.neg(true);","    }","","    npoints[i * 2] = p;","    npoints[i * 2 + 1] = beta;","    ncoeffs[i * 2] = split.k1;","    ncoeffs[i * 2 + 1] = split.k2;","  }","  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);","","  // Clean-up references to points and coefficients","  for (var j = 0; j < i * 2; j++) {","    npoints[j] = null;","    ncoeffs[j] = null;","  }","  return res;","};","","function Point(curve, x, y, isRed) {","  Base.BasePoint.call(this, curve, 'affine');","  if (x === null && y === null) {","    this.x = null;","    this.y = null;","    this.inf = true;","  } else {","    this.x = new bn(x, 16);","    this.y = new bn(y, 16);","    // Force redgomery representation when loading from JSON","    if (isRed) {","      this.x.forceRed(this.curve.red);","      this.y.forceRed(this.curve.red);","    }","    if (!this.x.red)","      this.x = this.x.toRed(this.curve.red);","    if (!this.y.red)","      this.y = this.y.toRed(this.curve.red);","    this.inf = false;","  }","}","inherits(Point, Base.BasePoint);","","ShortCurve.prototype.point = function point(x, y, isRed) {","  return new Point(this, x, y, isRed);","};","","ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {","  return Point.fromJSON(this, obj, red);","};","","Point.prototype._getBeta = function _getBeta() {","  if (!this.curve.endo)","    return;","","  var pre = this.precomputed;","  if (pre && pre.beta)","    return pre.beta;","","  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);","  if (pre) {","    var curve = this.curve;","    var endoMul = function(p) {","      return curve.point(p.x.redMul(curve.endo.beta), p.y);","    };","    pre.beta = beta;","    beta.precomputed = {","      beta: null,","      naf: pre.naf && {","        wnd: pre.naf.wnd,","        points: pre.naf.points.map(endoMul)","      },","      doubles: pre.doubles && {","        step: pre.doubles.step,","        points: pre.doubles.points.map(endoMul)","      }","    };","  }","  return beta;","};","","Point.prototype.toJSON = function toJSON() {","  if (!this.precomputed)","    return [ this.x, this.y ];","","  return [ this.x, this.y, this.precomputed && {","    doubles: this.precomputed.doubles && {","      step: this.precomputed.doubles.step,","      points: this.precomputed.doubles.points.slice(1)","    },","    naf: this.precomputed.naf && {","      wnd: this.precomputed.naf.wnd,","      points: this.precomputed.naf.points.slice(1)","    }","  } ];","};","","Point.fromJSON = function fromJSON(curve, obj, red) {","  if (typeof obj === 'string')","    obj = JSON.parse(obj);","  var res = curve.point(obj[0], obj[1], red);","  if (!obj[2])","    return res;","","  function obj2point(obj) {","    return curve.point(obj[0], obj[1], red);","  }","","  var pre = obj[2];","  res.precomputed = {","    beta: null,","    doubles: pre.doubles && {","      step: pre.doubles.step,","      points: [ res ].concat(pre.doubles.points.map(obj2point))","    },","    naf: pre.naf && {","      wnd: pre.naf.wnd,","      points: [ res ].concat(pre.naf.points.map(obj2point))","    }","  };","  return res;","};","","Point.prototype.inspect = function inspect() {","  if (this.isInfinity())","    return '<EC Point Infinity>';","  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +","      ' y: ' + this.y.fromRed().toString(16, 2) + '>';","};","","Point.prototype.isInfinity = function isInfinity() {","  return this.inf;","};","","Point.prototype.add = function add(p) {","  // O + P = P","  if (this.inf)","    return p;","","  // P + O = P","  if (p.inf)","    return this;","","  // P + P = 2P","  if (this.eq(p))","    return this.dbl();","","  // P + (-P) = O","  if (this.neg().eq(p))","    return this.curve.point(null, null);","","  // P + Q = O","  if (this.x.cmp(p.x) === 0)","    return this.curve.point(null, null);","","  var c = this.y.redSub(p.y);","  if (c.cmpn(0) !== 0)","    c = c.redMul(this.x.redSub(p.x).redInvm());","  var nx = c.redSqr().redISub(this.x).redISub(p.x);","  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);","  return this.curve.point(nx, ny);","};","","Point.prototype.dbl = function dbl() {","  if (this.inf)","    return this;","","  // 2P = O","  var ys1 = this.y.redAdd(this.y);","  if (ys1.cmpn(0) === 0)","    return this.curve.point(null, null);","","  var a = this.curve.a;","","  var x2 = this.x.redSqr();","  var dyinv = ys1.redInvm();","  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);","","  var nx = c.redSqr().redISub(this.x.redAdd(this.x));","  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);","  return this.curve.point(nx, ny);","};","","Point.prototype.getX = function getX() {","  return this.x.fromRed();","};","","Point.prototype.getY = function getY() {","  return this.y.fromRed();","};","","Point.prototype.mul = function mul(k) {","  k = new bn(k, 16);","","  if (this.precomputed && this.precomputed.doubles)","    return this.curve._fixedNafMul(this, k);","  else if (this.curve.endo)","    return this.curve._endoWnafMulAdd([ this ], [ k ]);","  else","    return this.curve._wnafMul(this, k);","};","","Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {","  var points = [ this, p2 ];","  var coeffs = [ k1, k2 ];","  if (this.curve.endo)","    return this.curve._endoWnafMulAdd(points, coeffs);","  else","    return this.curve._wnafMulAdd(1, points, coeffs, 2);","};","","Point.prototype.eq = function eq(p) {","  return this === p ||","         this.inf === p.inf &&","             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);","};","","Point.prototype.neg = function neg(_precompute) {","  if (this.inf)","    return this;","","  var res = this.curve.point(this.x, this.y.redNeg());","  if (_precompute && this.precomputed) {","    var pre = this.precomputed;","    var negate = function(p) {","      return p.neg();","    };","    res.precomputed = {","      naf: pre.naf && {","        wnd: pre.naf.wnd,","        points: pre.naf.points.map(negate)","      },","      doubles: pre.doubles && {","        step: pre.doubles.step,","        points: pre.doubles.points.map(negate)","      }","    };","  }","  return res;","};","","Point.prototype.toJ = function toJ() {","  if (this.inf)","    return this.curve.jpoint(null, null, null);","","  var res = this.curve.jpoint(this.x, this.y, this.curve.one);","  return res;","};","","function JPoint(curve, x, y, z) {","  Base.BasePoint.call(this, curve, 'jacobian');","  if (x === null && y === null && z === null) {","    this.x = this.curve.one;","    this.y = this.curve.one;","    this.z = new bn(0);","  } else {","    this.x = new bn(x, 16);","    this.y = new bn(y, 16);","    this.z = new bn(z, 16);","  }","  if (!this.x.red)","    this.x = this.x.toRed(this.curve.red);","  if (!this.y.red)","    this.y = this.y.toRed(this.curve.red);","  if (!this.z.red)","    this.z = this.z.toRed(this.curve.red);","","  this.zOne = this.z === this.curve.one;","}","inherits(JPoint, Base.BasePoint);","","ShortCurve.prototype.jpoint = function jpoint(x, y, z) {","  return new JPoint(this, x, y, z);","};","","JPoint.prototype.toP = function toP() {","  if (this.isInfinity())","    return this.curve.point(null, null);","","  var zinv = this.z.redInvm();","  var zinv2 = zinv.redSqr();","  var ax = this.x.redMul(zinv2);","  var ay = this.y.redMul(zinv2).redMul(zinv);","","  return this.curve.point(ax, ay);","};","","JPoint.prototype.neg = function neg() {","  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);","};","","JPoint.prototype.add = function add(p) {","  // O + P = P","  if (this.isInfinity())","    return p;","","  // P + O = P","  if (p.isInfinity())","    return this;","","  // 12M + 4S + 7A","  var pz2 = p.z.redSqr();","  var z2 = this.z.redSqr();","  var u1 = this.x.redMul(pz2);","  var u2 = p.x.redMul(z2);","  var s1 = this.y.redMul(pz2.redMul(p.z));","  var s2 = p.y.redMul(z2.redMul(this.z));","","  var h = u1.redSub(u2);","  var r = s1.redSub(s2);","  if (h.cmpn(0) === 0) {","    if (r.cmpn(0) !== 0)","      return this.curve.jpoint(null, null, null);","    else","      return this.dbl();","  }","","  var h2 = h.redSqr();","  var h3 = h2.redMul(h);","  var v = u1.redMul(h2);","","  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);","  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));","  var nz = this.z.redMul(p.z).redMul(h);","","  return this.curve.jpoint(nx, ny, nz);","};","","JPoint.prototype.mixedAdd = function mixedAdd(p) {","  // O + P = P","  if (this.isInfinity())","    return p.toJ();","","  // P + O = P","  if (p.isInfinity())","    return this;","","  // 8M + 3S + 7A","  var z2 = this.z.redSqr();","  var u1 = this.x;","  var u2 = p.x.redMul(z2);","  var s1 = this.y;","  var s2 = p.y.redMul(z2).redMul(this.z);","","  var h = u1.redSub(u2);","  var r = s1.redSub(s2);","  if (h.cmpn(0) === 0) {","    if (r.cmpn(0) !== 0)","      return this.curve.jpoint(null, null, null);","    else","      return this.dbl();","  }","","  var h2 = h.redSqr();","  var h3 = h2.redMul(h);","  var v = u1.redMul(h2);","","  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);","  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));","  var nz = this.z.redMul(h);","","  return this.curve.jpoint(nx, ny, nz);","};","","JPoint.prototype.dblp = function dblp(pow) {","  if (pow === 0)","    return this;","  if (this.isInfinity())","    return this;","  if (!pow)","    return this.dbl();","","  if (this.curve.zeroA || this.curve.threeA) {","    var r = this;","    for (var i = 0; i < pow; i++)","      r = r.dbl();","    return r;","  }","","  // 1M + 2S + 1A + N * (4S + 5M + 8A)","  // N = 1 => 6M + 6S + 9A","  var a = this.curve.a;","  var tinv = this.curve.tinv;","","  var jx = this.x;","  var jy = this.y;","  var jz = this.z;","  var jz4 = jz.redSqr().redSqr();","","  // Reuse results","  var jyd = jy.redAdd(jy);","  for (var i = 0; i < pow; i++) {","    var jx2 = jx.redSqr();","    var jyd2 = jyd.redSqr();","    var jyd4 = jyd2.redSqr();","    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));","","    var t1 = jx.redMul(jyd2);","    var nx = c.redSqr().redISub(t1.redAdd(t1));","    var t2 = t1.redISub(nx);","    var dny = c.redMul(t2);","    dny = dny.redIAdd(dny).redISub(jyd4);","    var nz = jyd.redMul(jz);","    if (i + 1 < pow)","      jz4 = jz4.redMul(jyd4);","","    jx = nx;","    jz = nz;","    jyd = dny;","  }","","  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);","};","","JPoint.prototype.dbl = function dbl() {","  if (this.isInfinity())","    return this;","","  if (this.curve.zeroA)","    return this._zeroDbl();","  else if (this.curve.threeA)","    return this._threeDbl();","  else","    return this._dbl();","};","","JPoint.prototype._zeroDbl = function _zeroDbl() {","  var nx;","  var ny;","  var nz;","  // Z = 1","  if (this.zOne) {","    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html","    //     #doubling-mdbl-2007-bl","    // 1M + 5S + 14A","","    // XX = X1^2","    var xx = this.x.redSqr();","    // YY = Y1^2","    var yy = this.y.redSqr();","    // YYYY = YY^2","    var yyyy = yy.redSqr();","    // S = 2 * ((X1 + YY)^2 - XX - YYYY)","    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);","    s = s.redIAdd(s);","    // M = 3 * XX + a; a = 0","    var m = xx.redAdd(xx).redIAdd(xx);","    // T = M ^ 2 - 2*S","    var t = m.redSqr().redISub(s).redISub(s);","","    // 8 * YYYY","    var yyyy8 = yyyy.redIAdd(yyyy);","    yyyy8 = yyyy8.redIAdd(yyyy8);","    yyyy8 = yyyy8.redIAdd(yyyy8);","","    // X3 = T","    nx = t;","    // Y3 = M * (S - T) - 8 * YYYY","    ny = m.redMul(s.redISub(t)).redISub(yyyy8);","    // Z3 = 2*Y1","    nz = this.y.redAdd(this.y);","  } else {","    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html","    //     #doubling-dbl-2009-l","    // 2M + 5S + 13A","","    // A = X1^2","    var a = this.x.redSqr();","    // B = Y1^2","    var b = this.y.redSqr();","    // C = B^2","    var c = b.redSqr();","    // D = 2 * ((X1 + B)^2 - A - C)","    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);","    d = d.redIAdd(d);","    // E = 3 * A","    var e = a.redAdd(a).redIAdd(a);","    // F = E^2","    var f = e.redSqr();","","    // 8 * C","    var c8 = c.redIAdd(c);","    c8 = c8.redIAdd(c8);","    c8 = c8.redIAdd(c8);","","    // X3 = F - 2 * D","    nx = f.redISub(d).redISub(d);","    // Y3 = E * (D - X3) - 8 * C","    ny = e.redMul(d.redISub(nx)).redISub(c8);","    // Z3 = 2 * Y1 * Z1","    nz = this.y.redMul(this.z);","    nz = nz.redIAdd(nz);","  }","","  return this.curve.jpoint(nx, ny, nz);","};","","JPoint.prototype._threeDbl = function _threeDbl() {","  var nx;","  var ny;","  var nz;","  // Z = 1","  if (this.zOne) {","    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html","    //     #doubling-mdbl-2007-bl","    // 1M + 5S + 15A","","    // XX = X1^2","    var xx = this.x.redSqr();","    // YY = Y1^2","    var yy = this.y.redSqr();","    // YYYY = YY^2","    var yyyy = yy.redSqr();","    // S = 2 * ((X1 + YY)^2 - XX - YYYY)","    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);","    s = s.redIAdd(s);","    // M = 3 * XX + a","    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);","    // T = M^2 - 2 * S","    var t = m.redSqr().redISub(s).redISub(s);","    // X3 = T","    nx = t;","    // Y3 = M * (S - T) - 8 * YYYY","    var yyyy8 = yyyy.redIAdd(yyyy);","    yyyy8 = yyyy8.redIAdd(yyyy8);","    yyyy8 = yyyy8.redIAdd(yyyy8);","    ny = m.redMul(s.redISub(t)).redISub(yyyy8);","    // Z3 = 2 * Y1","    nz = this.y.redAdd(this.y);","  } else {","    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b","    // 3M + 5S","","    // delta = Z1^2","    var delta = this.z.redSqr();","    // gamma = Y1^2","    var gamma = this.y.redSqr();","    // beta = X1 * gamma","    var beta = this.x.redMul(gamma);","    // alpha = 3 * (X1 - delta) * (X1 + delta)","    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));","    alpha = alpha.redAdd(alpha).redIAdd(alpha);","    // X3 = alpha^2 - 8 * beta","    var beta4 = beta.redIAdd(beta);","    beta4 = beta4.redIAdd(beta4);","    var beta8 = beta4.redAdd(beta4);","    nx = alpha.redSqr().redISub(beta8);","    // Z3 = (Y1 + Z1)^2 - gamma - delta","    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);","    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2","    var ggamma8 = gamma.redSqr();","    ggamma8 = ggamma8.redIAdd(ggamma8);","    ggamma8 = ggamma8.redIAdd(ggamma8);","    ggamma8 = ggamma8.redIAdd(ggamma8);","    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);","  }","","  return this.curve.jpoint(nx, ny, nz);","};","","JPoint.prototype._dbl = function _dbl() {","  var a = this.curve.a;","","  // 4M + 6S + 10A","  var jx = this.x;","  var jy = this.y;","  var jz = this.z;","  var jz4 = jz.redSqr().redSqr();","","  var jx2 = jx.redSqr();","  var jy2 = jy.redSqr();","","  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));","","  var jxd4 = jx.redAdd(jx);","  jxd4 = jxd4.redIAdd(jxd4);","  var t1 = jxd4.redMul(jy2);","  var nx = c.redSqr().redISub(t1.redAdd(t1));","  var t2 = t1.redISub(nx);","","  var jyd8 = jy2.redSqr();","  jyd8 = jyd8.redIAdd(jyd8);","  jyd8 = jyd8.redIAdd(jyd8);","  jyd8 = jyd8.redIAdd(jyd8);","  var ny = c.redMul(t2).redISub(jyd8);","  var nz = jy.redAdd(jy).redMul(jz);","","  return this.curve.jpoint(nx, ny, nz);","};","","JPoint.prototype.trpl = function trpl() {","  if (!this.curve.zeroA)","    return this.dbl().add(this);","","  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl","  // 5M + 10S + ...","","  // XX = X1^2","  var xx = this.x.redSqr();","  // YY = Y1^2","  var yy = this.y.redSqr();","  // ZZ = Z1^2","  var zz = this.z.redSqr();","  // YYYY = YY^2","  var yyyy = yy.redSqr();","  // M = 3 * XX + a * ZZ2; a = 0","  var m = xx.redAdd(xx).redIAdd(xx);","  // MM = M^2","  var mm = m.redSqr();","  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM","  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);","  e = e.redIAdd(e);","  e = e.redAdd(e).redIAdd(e);","  e = e.redISub(mm);","  // EE = E^2","  var ee = e.redSqr();","  // T = 16*YYYY","  var t = yyyy.redIAdd(yyyy);","  t = t.redIAdd(t);","  t = t.redIAdd(t);","  t = t.redIAdd(t);","  // U = (M + E)^2 - MM - EE - T","  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);","  // X3 = 4 * (X1 * EE - 4 * YY * U)","  var yyu4 = yy.redMul(u);","  yyu4 = yyu4.redIAdd(yyu4);","  yyu4 = yyu4.redIAdd(yyu4);","  var nx = this.x.redMul(ee).redISub(yyu4);","  nx = nx.redIAdd(nx);","  nx = nx.redIAdd(nx);","  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)","  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));","  ny = ny.redIAdd(ny);","  ny = ny.redIAdd(ny);","  ny = ny.redIAdd(ny);","  // Z3 = (Z1 + E)^2 - ZZ - EE","  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);","","  return this.curve.jpoint(nx, ny, nz);","};","","JPoint.prototype.mul = function mul(k, kbase) {","  k = new bn(k, kbase);","","  return this.curve._wnafMul(this, k);","};","","JPoint.prototype.eq = function eq(p) {","  if (p.type === 'affine')","    return this.eq(p.toJ());","","  if (this === p)","    return true;","","  // x1 * z2^2 == x2 * z1^2","  var z2 = this.z.redSqr();","  var pz2 = p.z.redSqr();","  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)","    return false;","","  // y1 * z2^3 == y2 * z1^3","  var z3 = z2.redMul(this.z);","  var pz3 = pz2.redMul(p.z);","  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;","};","","JPoint.prototype.inspect = function inspect() {","  if (this.isInfinity())","    return '<EC JPoint Infinity>';","  return '<EC JPoint x: ' + this.x.toString(16, 2) +","      ' y: ' + this.y.toString(16, 2) +","      ' z: ' + this.z.toString(16, 2) + '>';","};","","JPoint.prototype.isInfinity = function isInfinity() {","  // XXX This code assumes that zero is always zero in red","  return this.z.cmpn(0) === 0;","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"11":1,"12":1,"14":1,"15":1,"16":1,"18":1,"19":1,"22":1,"23":1,"24":1,"26":1,"27":1,"29":1,"31":1,"32":0,"35":1,"36":1,"37":1,"38":1,"40":0,"42":0,"43":0,"45":1,"46":1,"49":0,"50":0,"51":0,"53":0,"54":0,"59":1,"60":1,"61":1,"62":2,"68":0,"71":1,"78":1,"82":0,"83":0,"84":0,"86":0,"88":0,"89":0,"90":0,"93":1,"95":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"107":0,"108":0,"110":0,"111":0,"113":0,"114":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"134":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"143":0,"144":0,"146":0,"147":0,"148":0,"149":0,"150":0,"154":0,"155":0,"156":0,"158":0,"159":0,"160":0,"163":0,"169":1,"170":0,"171":0,"172":0,"174":0,"175":0,"177":0,"178":0,"179":0,"180":0,"183":0,"184":0,"185":0,"188":1,"189":0,"190":0,"191":0,"193":0,"194":0,"198":0,"199":0,"200":0,"202":0,"205":1,"206":1,"207":0,"209":1,"210":1,"212":1,"213":1,"214":1,"217":1,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"226":0,"227":0,"228":0,"230":0,"231":0,"232":0,"235":0,"236":0,"237":0,"238":0,"240":0,"243":0,"244":0,"245":0,"247":0,"250":1,"251":212,"252":212,"253":1,"254":1,"255":1,"257":211,"258":211,"260":211,"261":0,"262":0,"264":211,"265":194,"266":211,"267":194,"268":211,"271":1,"273":1,"274":212,"277":1,"278":1,"281":1,"282":0,"283":0,"285":0,"286":0,"287":0,"289":0,"290":0,"291":0,"292":0,"293":0,"295":0,"296":0,"308":0,"311":1,"312":0,"313":0,"315":0,"327":1,"328":1,"329":0,"330":1,"331":1,"332":0,"334":1,"335":192,"338":1,"339":1,"350":1,"353":1,"354":0,"355":0,"356":0,"360":1,"361":31,"364":1,"366":0,"367":0,"370":0,"371":0,"374":0,"375":0,"378":0,"379":0,"382":0,"383":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"393":1,"394":0,"395":0,"398":0,"399":0,"400":0,"402":0,"404":0,"405":0,"406":0,"408":0,"409":0,"410":0,"413":1,"414":0,"417":1,"418":0,"421":1,"422":1,"424":1,"425":1,"426":0,"427":0,"429":0,"432":1,"433":0,"434":0,"435":0,"436":0,"438":0,"441":1,"442":0,"447":1,"448":17,"449":0,"451":17,"452":17,"453":0,"454":0,"455":0,"457":0,"468":17,"471":1,"472":1,"473":0,"475":1,"476":1,"479":1,"480":42,"481":42,"482":3,"483":3,"484":3,"486":39,"487":39,"488":39,"490":42,"491":0,"492":42,"493":0,"494":42,"495":3,"497":42,"499":1,"501":1,"502":42,"505":1,"506":1,"507":1,"509":0,"510":0,"511":0,"512":0,"514":0,"517":1,"518":0,"521":1,"523":10,"524":1,"527":9,"528":0,"531":9,"532":9,"533":9,"534":9,"535":9,"536":9,"538":9,"539":9,"540":9,"541":1,"542":1,"544":0,"547":8,"548":8,"549":8,"551":8,"552":8,"553":8,"555":8,"558":1,"560":31,"561":1,"564":30,"565":0,"568":30,"569":30,"570":30,"571":30,"572":30,"574":30,"575":30,"576":30,"577":0,"578":0,"580":0,"583":30,"584":30,"585":30,"587":30,"588":30,"589":30,"591":30,"594":1,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"602":0,"603":0,"604":0,"605":0,"606":0,"611":0,"612":0,"614":0,"615":0,"616":0,"617":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"636":0,"637":0,"638":0,"641":0,"644":1,"645":0,"646":0,"648":0,"649":0,"650":0,"651":0,"653":0,"656":1,"657":0,"658":0,"659":0,"661":0,"667":0,"669":0,"671":0,"673":0,"674":0,"676":0,"678":0,"681":0,"682":0,"683":0,"686":0,"688":0,"690":0,"697":0,"699":0,"701":0,"703":0,"704":0,"706":0,"708":0,"711":0,"712":0,"713":0,"716":0,"718":0,"720":0,"721":0,"724":0,"727":1,"728":0,"729":0,"730":0,"732":0,"738":0,"740":0,"742":0,"744":0,"745":0,"747":0,"749":0,"751":0,"753":0,"754":0,"755":0,"756":0,"758":0,"764":0,"766":0,"768":0,"770":0,"771":0,"773":0,"774":0,"775":0,"776":0,"778":0,"780":0,"781":0,"782":0,"783":0,"784":0,"787":0,"790":1,"791":0,"794":0,"795":0,"796":0,"797":0,"799":0,"800":0,"802":0,"804":0,"805":0,"806":0,"807":0,"808":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"817":0,"820":1,"821":0,"822":0,"828":0,"830":0,"832":0,"834":0,"836":0,"838":0,"840":0,"841":0,"842":0,"843":0,"845":0,"847":0,"848":0,"849":0,"850":0,"852":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"861":0,"862":0,"863":0,"864":0,"866":0,"868":0,"871":1,"872":0,"874":0,"877":1,"878":0,"879":0,"881":0,"882":0,"885":0,"886":0,"887":0,"888":0,"891":0,"892":0,"893":0,"896":1,"897":0,"898":0,"899":0,"904":1,"906":51}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/mont.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/mont.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1,"33":0,"34":1,"35":0,"36":1,"37":1,"38":0,"39":1,"40":0,"41":0,"42":0,"43":1,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":1,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"MontCurve","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}}},"2":{"name":"validate","line":20,"loc":{"start":{"line":20,"column":31},"end":{"line":20,"column":56}}},"3":{"name":"Point","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}}},"4":{"name":"point","line":45,"loc":{"start":{"line":45,"column":28},"end":{"line":45,"column":49}}},"5":{"name":"pointFromJSON","line":49,"loc":{"start":{"line":49,"column":36},"end":{"line":49,"column":64}}},"6":{"name":"precompute","line":53,"loc":{"start":{"line":53,"column":29},"end":{"line":53,"column":51}}},"7":{"name":"fromJSON","line":57,"loc":{"start":{"line":57,"column":17},"end":{"line":57,"column":47}}},"8":{"name":"inspect","line":61,"loc":{"start":{"line":61,"column":26},"end":{"line":61,"column":45}}},"9":{"name":"isInfinity","line":68,"loc":{"start":{"line":68,"column":29},"end":{"line":68,"column":51}}},"10":{"name":"dbl","line":73,"loc":{"start":{"line":73,"column":22},"end":{"line":73,"column":37}}},"11":{"name":"add","line":94,"loc":{"start":{"line":94,"column":22},"end":{"line":94,"column":37}}},"12":{"name":"diffAdd","line":98,"loc":{"start":{"line":98,"column":26},"end":{"line":98,"column":52}}},"13":{"name":"mul","line":121,"loc":{"start":{"line":121,"column":22},"end":{"line":121,"column":38}}},"14":{"name":"mulAdd","line":146,"loc":{"start":{"line":146,"column":25},"end":{"line":146,"column":43}}},"15":{"name":"normalize","line":150,"loc":{"start":{"line":150,"column":28},"end":{"line":150,"column":49}}},"16":{"name":"getX","line":156,"loc":{"start":{"line":156,"column":23},"end":{"line":156,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"5":{"start":{"line":8,"column":0},"end":{"line":16,"column":1}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":32}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":46}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":46}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":48}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":39}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":53}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"14":{"start":{"line":20,"column":0},"end":{"line":27,"column":2}},"15":{"start":{"line":21,"column":2},"end":{"line":21,"column":30}},"16":{"start":{"line":22,"column":2},"end":{"line":22,"column":22}},"17":{"start":{"line":23,"column":2},"end":{"line":23,"column":61}},"18":{"start":{"line":24,"column":2},"end":{"line":24,"column":24}},"19":{"start":{"line":26,"column":2},"end":{"line":26,"column":35}},"20":{"start":{"line":29,"column":0},"end":{"line":42,"column":1}},"21":{"start":{"line":30,"column":2},"end":{"line":30,"column":49}},"22":{"start":{"line":31,"column":2},"end":{"line":41,"column":3}},"23":{"start":{"line":32,"column":4},"end":{"line":32,"column":28}},"24":{"start":{"line":33,"column":4},"end":{"line":33,"column":29}},"25":{"start":{"line":35,"column":4},"end":{"line":35,"column":27}},"26":{"start":{"line":36,"column":4},"end":{"line":36,"column":27}},"27":{"start":{"line":37,"column":4},"end":{"line":38,"column":44}},"28":{"start":{"line":38,"column":6},"end":{"line":38,"column":44}},"29":{"start":{"line":39,"column":4},"end":{"line":40,"column":44}},"30":{"start":{"line":40,"column":6},"end":{"line":40,"column":44}},"31":{"start":{"line":43,"column":0},"end":{"line":43,"column":32}},"32":{"start":{"line":45,"column":0},"end":{"line":47,"column":2}},"33":{"start":{"line":46,"column":2},"end":{"line":46,"column":31}},"34":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"35":{"start":{"line":50,"column":2},"end":{"line":50,"column":35}},"36":{"start":{"line":53,"column":0},"end":{"line":55,"column":2}},"37":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"38":{"start":{"line":58,"column":2},"end":{"line":58,"column":55}},"39":{"start":{"line":61,"column":0},"end":{"line":66,"column":2}},"40":{"start":{"line":62,"column":2},"end":{"line":63,"column":33}},"41":{"start":{"line":63,"column":4},"end":{"line":63,"column":33}},"42":{"start":{"line":64,"column":2},"end":{"line":65,"column":54}},"43":{"start":{"line":68,"column":0},"end":{"line":71,"column":2}},"44":{"start":{"line":70,"column":2},"end":{"line":70,"column":30}},"45":{"start":{"line":73,"column":0},"end":{"line":92,"column":2}},"46":{"start":{"line":78,"column":2},"end":{"line":78,"column":32}},"47":{"start":{"line":80,"column":2},"end":{"line":80,"column":22}},"48":{"start":{"line":82,"column":2},"end":{"line":82,"column":32}},"49":{"start":{"line":84,"column":2},"end":{"line":84,"column":22}},"50":{"start":{"line":86,"column":2},"end":{"line":86,"column":24}},"51":{"start":{"line":88,"column":2},"end":{"line":88,"column":25}},"52":{"start":{"line":90,"column":2},"end":{"line":90,"column":57}},"53":{"start":{"line":91,"column":2},"end":{"line":91,"column":34}},"54":{"start":{"line":94,"column":0},"end":{"line":96,"column":2}},"55":{"start":{"line":95,"column":2},"end":{"line":95,"column":55}},"56":{"start":{"line":98,"column":0},"end":{"line":119,"column":2}},"57":{"start":{"line":103,"column":2},"end":{"line":103,"column":32}},"58":{"start":{"line":105,"column":2},"end":{"line":105,"column":32}},"59":{"start":{"line":107,"column":2},"end":{"line":107,"column":26}},"60":{"start":{"line":109,"column":2},"end":{"line":109,"column":26}},"61":{"start":{"line":111,"column":2},"end":{"line":111,"column":23}},"62":{"start":{"line":113,"column":2},"end":{"line":113,"column":23}},"63":{"start":{"line":115,"column":2},"end":{"line":115,"column":49}},"64":{"start":{"line":117,"column":2},"end":{"line":117,"column":50}},"65":{"start":{"line":118,"column":2},"end":{"line":118,"column":34}},"66":{"start":{"line":121,"column":0},"end":{"line":144,"column":2}},"67":{"start":{"line":122,"column":2},"end":{"line":122,"column":20}},"68":{"start":{"line":123,"column":2},"end":{"line":123,"column":15}},"69":{"start":{"line":124,"column":2},"end":{"line":124,"column":39}},"70":{"start":{"line":125,"column":2},"end":{"line":125,"column":15}},"71":{"start":{"line":127,"column":2},"end":{"line":128,"column":26}},"72":{"start":{"line":128,"column":4},"end":{"line":128,"column":26}},"73":{"start":{"line":130,"column":2},"end":{"line":142,"column":3}},"74":{"start":{"line":131,"column":4},"end":{"line":141,"column":5}},"75":{"start":{"line":133,"column":6},"end":{"line":133,"column":26}},"76":{"start":{"line":135,"column":6},"end":{"line":135,"column":18}},"77":{"start":{"line":138,"column":6},"end":{"line":138,"column":26}},"78":{"start":{"line":140,"column":6},"end":{"line":140,"column":18}},"79":{"start":{"line":143,"column":2},"end":{"line":143,"column":11}},"80":{"start":{"line":146,"column":0},"end":{"line":148,"column":2}},"81":{"start":{"line":147,"column":2},"end":{"line":147,"column":55}},"82":{"start":{"line":150,"column":0},"end":{"line":154,"column":2}},"83":{"start":{"line":151,"column":2},"end":{"line":151,"column":43}},"84":{"start":{"line":152,"column":2},"end":{"line":152,"column":26}},"85":{"start":{"line":153,"column":2},"end":{"line":153,"column":14}},"86":{"start":{"line":156,"column":0},"end":{"line":161,"column":2}},"87":{"start":{"line":158,"column":2},"end":{"line":158,"column":19}},"88":{"start":{"line":160,"column":2},"end":{"line":160,"column":26}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":16}},{"start":{"line":31,"column":20},"end":{"line":31,"column":30}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"5":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":34},"end":{"line":58,"column":40}},{"start":{"line":58,"column":44},"end":{"line":58,"column":53}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"7":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]}},"code":["'use strict';","","var curve = require('../curve');","var bn = require('bn.js');","var inherits = require('inherits');","var Base = curve.base;","","function MontCurve(conf) {","  Base.call(this, 'mont', conf);","","  this.a = new bn(conf.a, 16).toRed(this.red);","  this.b = new bn(conf.b, 16).toRed(this.red);","  this.i4 = new bn(4).toRed(this.red).redInvm();","  this.two = new bn(2).toRed(this.red);","  this.a24 = this.i4.redMul(this.a.redAdd(this.two));","}","inherits(MontCurve, Base);","module.exports = MontCurve;","","MontCurve.prototype.validate = function validate(point) {","  var x = point.normalize().x;","  var x2 = x.redSqr();","  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);","  var y = rhs.redSqrt();","","  return y.redSqr().cmp(rhs) === 0;","};","","function Point(curve, x, z) {","  Base.BasePoint.call(this, curve, 'projective');","  if (x === null && z === null) {","    this.x = this.curve.one;","    this.z = this.curve.zero;","  } else {","    this.x = new bn(x, 16);","    this.z = new bn(z, 16);","    if (!this.x.red)","      this.x = this.x.toRed(this.curve.red);","    if (!this.z.red)","      this.z = this.z.toRed(this.curve.red);","  }","}","inherits(Point, Base.BasePoint);","","MontCurve.prototype.point = function point(x, z) {","  return new Point(this, x, z);","};","","MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {","  return Point.fromJSON(this, obj);","};","","Point.prototype.precompute = function precompute() {","  // No-op","};","","Point.fromJSON = function fromJSON(curve, obj) {","  return new Point(curve, obj[0], obj[1] || curve.one);","};","","Point.prototype.inspect = function inspect() {","  if (this.isInfinity())","    return '<EC Point Infinity>';","  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +","      ' z: ' + this.z.fromRed().toString(16, 2) + '>';","};","","Point.prototype.isInfinity = function isInfinity() {","  // XXX This code assumes that zero is always zero in red","  return this.z.cmpn(0) === 0;","};","","Point.prototype.dbl = function dbl() {","  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3","  // 2M + 2S + 4A","","  // A = X1 + Z1","  var a = this.x.redAdd(this.z);","  // AA = A^2","  var aa = a.redSqr();","  // B = X1 - Z1","  var b = this.x.redSub(this.z);","  // BB = B^2","  var bb = b.redSqr();","  // C = AA - BB","  var c = aa.redSub(bb);","  // X3 = AA * BB","  var nx = aa.redMul(bb);","  // Z3 = C * (BB + A24 * C)","  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));","  return this.curve.point(nx, nz);","};","","Point.prototype.add = function add() {","  throw new Error('Not supported on Montgomery curve');","};","","Point.prototype.diffAdd = function diffAdd(p, diff) {","  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3","  // 4M + 2S + 6A","","  // A = X2 + Z2","  var a = this.x.redAdd(this.z);","  // B = X2 - Z2","  var b = this.x.redSub(this.z);","  // C = X3 + Z3","  var c = p.x.redAdd(p.z);","  // D = X3 - Z3","  var d = p.x.redSub(p.z);","  // DA = D * A","  var da = d.redMul(a);","  // CB = C * B","  var cb = c.redMul(b);","  // X5 = Z1 * (DA + CB)^2","  var nx = diff.z.redMul(da.redAdd(cb).redSqr());","  // Z5 = X1 * (DA - CB)^2","  var nz = diff.x.redMul(da.redISub(cb).redSqr());","  return this.curve.point(nx, nz);","};","","Point.prototype.mul = function mul(k) {","  var t = k.clone();","  var a = this; // (N / 2) * Q + Q","  var b = this.curve.point(null, null); // (N / 2) * Q","  var c = this; // Q","","  for (var bits = []; t.cmpn(0) !== 0; t.ishrn(1))","    bits.push(t.andln(1));","","  for (var i = bits.length - 1; i >= 0; i--) {","    if (bits[i] === 0) {","      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q","      a = a.diffAdd(b, c);","      // N * Q = 2 * ((N / 2) * Q + Q))","      b = b.dbl();","    } else {","      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)","      b = a.diffAdd(b, c);","      // N * Q + Q = 2 * ((N / 2) * Q + Q)","      a = a.dbl();","    }","  }","  return b;","};","","Point.prototype.mulAdd = function mulAdd() {","  throw new Error('Not supported on Montgomery curve');","};","","Point.prototype.normalize = function normalize() {","  this.x = this.x.redMul(this.z.redInvm());","  this.z = this.curve.one;","  return this;","};","","Point.prototype.getX = function getX() {","  // Normalize coordinates","  this.normalize();","","  return this.x.fromRed();","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"11":0,"12":0,"13":0,"14":0,"15":0,"17":1,"18":1,"20":1,"21":0,"22":0,"23":0,"24":0,"26":0,"29":1,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"43":1,"45":1,"46":0,"49":1,"50":0,"53":1,"57":1,"58":0,"61":1,"62":0,"63":0,"64":0,"68":1,"70":0,"73":1,"78":0,"80":0,"82":0,"84":0,"86":0,"88":0,"90":0,"91":0,"94":1,"95":0,"98":1,"103":0,"105":0,"107":0,"109":0,"111":0,"113":0,"115":0,"117":0,"118":0,"121":1,"122":0,"123":0,"124":0,"125":0,"127":0,"128":0,"130":0,"131":0,"133":0,"135":0,"138":0,"140":0,"143":0,"146":1,"147":0,"150":1,"151":0,"152":0,"153":0,"156":1,"158":0,"160":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/edwards.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curve/edwards.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":1,"79":0,"80":1,"81":0,"82":1,"83":0,"84":1,"85":0,"86":0,"87":0,"88":1,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":1,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":0,"196":1,"197":0,"198":0,"199":1,"200":0,"201":0,"202":1,"203":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"EdwardsCurve","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}}},"2":{"name":"_mulA","line":31,"loc":{"start":{"line":31,"column":31},"end":{"line":31,"column":51}}},"3":{"name":"_mulC","line":38,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":51}}},"4":{"name":"jpoint","line":46,"loc":{"start":{"line":46,"column":32},"end":{"line":46,"column":60}}},"5":{"name":"pointFromX","line":50,"loc":{"start":{"line":50,"column":36},"end":{"line":50,"column":64}}},"6":{"name":"validate","line":67,"loc":{"start":{"line":67,"column":34},"end":{"line":67,"column":59}}},"7":{"name":"Point","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":34}}},"8":{"name":"pointFromJSON","line":115,"loc":{"start":{"line":115,"column":39},"end":{"line":115,"column":67}}},"9":{"name":"point","line":119,"loc":{"start":{"line":119,"column":31},"end":{"line":119,"column":58}}},"10":{"name":"fromJSON","line":123,"loc":{"start":{"line":123,"column":17},"end":{"line":123,"column":47}}},"11":{"name":"inspect","line":127,"loc":{"start":{"line":127,"column":26},"end":{"line":127,"column":45}}},"12":{"name":"isInfinity","line":135,"loc":{"start":{"line":135,"column":29},"end":{"line":135,"column":51}}},"13":{"name":"_extDbl","line":141,"loc":{"start":{"line":141,"column":26},"end":{"line":141,"column":45}}},"14":{"name":"_projDbl","line":174,"loc":{"start":{"line":174,"column":27},"end":{"line":174,"column":47}}},"15":{"name":"dbl","line":232,"loc":{"start":{"line":232,"column":22},"end":{"line":232,"column":37}}},"16":{"name":"_extAdd","line":243,"loc":{"start":{"line":243,"column":26},"end":{"line":243,"column":46}}},"17":{"name":"_projAdd","line":275,"loc":{"start":{"line":275,"column":27},"end":{"line":275,"column":48}}},"18":{"name":"add","line":314,"loc":{"start":{"line":314,"column":22},"end":{"line":314,"column":38}}},"19":{"name":"mul","line":326,"loc":{"start":{"line":326,"column":22},"end":{"line":326,"column":38}}},"20":{"name":"mulAdd","line":333,"loc":{"start":{"line":333,"column":25},"end":{"line":333,"column":52}}},"21":{"name":"normalize","line":337,"loc":{"start":{"line":337,"column":28},"end":{"line":337,"column":49}}},"22":{"name":"neg","line":352,"loc":{"start":{"line":352,"column":22},"end":{"line":352,"column":37}}},"23":{"name":"getX","line":359,"loc":{"start":{"line":359,"column":23},"end":{"line":359,"column":39}}},"24":{"name":"getY","line":364,"loc":{"start":{"line":364,"column":23},"end":{"line":364,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"7":{"start":{"line":11,"column":0},"end":{"line":27,"column":1}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":36}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":51}},"10":{"start":{"line":15,"column":2},"end":{"line":15,"column":29}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":35}},"12":{"start":{"line":19,"column":2},"end":{"line":19,"column":62}},"13":{"start":{"line":20,"column":2},"end":{"line":20,"column":46}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":28}},"15":{"start":{"line":22,"column":2},"end":{"line":22,"column":46}},"16":{"start":{"line":23,"column":2},"end":{"line":23,"column":34}},"17":{"start":{"line":25,"column":2},"end":{"line":25,"column":58}},"18":{"start":{"line":26,"column":2},"end":{"line":26,"column":33}},"19":{"start":{"line":28,"column":0},"end":{"line":28,"column":29}},"20":{"start":{"line":29,"column":0},"end":{"line":29,"column":30}},"21":{"start":{"line":31,"column":0},"end":{"line":36,"column":2}},"22":{"start":{"line":32,"column":2},"end":{"line":35,"column":30}},"23":{"start":{"line":33,"column":4},"end":{"line":33,"column":24}},"24":{"start":{"line":35,"column":4},"end":{"line":35,"column":30}},"25":{"start":{"line":38,"column":0},"end":{"line":43,"column":2}},"26":{"start":{"line":39,"column":2},"end":{"line":42,"column":30}},"27":{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},"28":{"start":{"line":42,"column":4},"end":{"line":42,"column":30}},"29":{"start":{"line":46,"column":0},"end":{"line":48,"column":2}},"30":{"start":{"line":47,"column":2},"end":{"line":47,"column":32}},"31":{"start":{"line":50,"column":0},"end":{"line":65,"column":2}},"32":{"start":{"line":51,"column":2},"end":{"line":51,"column":20}},"33":{"start":{"line":52,"column":2},"end":{"line":53,"column":26}},"34":{"start":{"line":53,"column":4},"end":{"line":53,"column":26}},"35":{"start":{"line":55,"column":2},"end":{"line":55,"column":22}},"36":{"start":{"line":56,"column":2},"end":{"line":56,"column":46}},"37":{"start":{"line":57,"column":2},"end":{"line":57,"column":63}},"38":{"start":{"line":59,"column":2},"end":{"line":59,"column":46}},"39":{"start":{"line":60,"column":2},"end":{"line":60,"column":34}},"40":{"start":{"line":61,"column":2},"end":{"line":62,"column":19}},"41":{"start":{"line":62,"column":4},"end":{"line":62,"column":19}},"42":{"start":{"line":64,"column":2},"end":{"line":64,"column":37}},"43":{"start":{"line":67,"column":0},"end":{"line":80,"column":2}},"44":{"start":{"line":68,"column":2},"end":{"line":69,"column":16}},"45":{"start":{"line":69,"column":4},"end":{"line":69,"column":16}},"46":{"start":{"line":72,"column":2},"end":{"line":72,"column":20}},"47":{"start":{"line":74,"column":2},"end":{"line":74,"column":28}},"48":{"start":{"line":75,"column":2},"end":{"line":75,"column":28}},"49":{"start":{"line":76,"column":2},"end":{"line":76,"column":41}},"50":{"start":{"line":77,"column":2},"end":{"line":77,"column":74}},"51":{"start":{"line":79,"column":2},"end":{"line":79,"column":28}},"52":{"start":{"line":82,"column":0},"end":{"line":112,"column":1}},"53":{"start":{"line":83,"column":2},"end":{"line":83,"column":49}},"54":{"start":{"line":84,"column":2},"end":{"line":111,"column":3}},"55":{"start":{"line":85,"column":4},"end":{"line":85,"column":29}},"56":{"start":{"line":86,"column":4},"end":{"line":86,"column":28}},"57":{"start":{"line":87,"column":4},"end":{"line":87,"column":28}},"58":{"start":{"line":88,"column":4},"end":{"line":88,"column":29}},"59":{"start":{"line":89,"column":4},"end":{"line":89,"column":21}},"60":{"start":{"line":91,"column":4},"end":{"line":91,"column":27}},"61":{"start":{"line":92,"column":4},"end":{"line":92,"column":27}},"62":{"start":{"line":93,"column":4},"end":{"line":93,"column":48}},"63":{"start":{"line":94,"column":4},"end":{"line":94,"column":32}},"64":{"start":{"line":95,"column":4},"end":{"line":96,"column":44}},"65":{"start":{"line":96,"column":6},"end":{"line":96,"column":44}},"66":{"start":{"line":97,"column":4},"end":{"line":98,"column":44}},"67":{"start":{"line":98,"column":6},"end":{"line":98,"column":44}},"68":{"start":{"line":99,"column":4},"end":{"line":100,"column":44}},"69":{"start":{"line":100,"column":6},"end":{"line":100,"column":44}},"70":{"start":{"line":101,"column":4},"end":{"line":102,"column":44}},"71":{"start":{"line":102,"column":6},"end":{"line":102,"column":44}},"72":{"start":{"line":103,"column":4},"end":{"line":103,"column":42}},"73":{"start":{"line":106,"column":4},"end":{"line":110,"column":5}},"74":{"start":{"line":107,"column":6},"end":{"line":107,"column":37}},"75":{"start":{"line":108,"column":6},"end":{"line":109,"column":49}},"76":{"start":{"line":109,"column":8},"end":{"line":109,"column":49}},"77":{"start":{"line":113,"column":0},"end":{"line":113,"column":32}},"78":{"start":{"line":115,"column":0},"end":{"line":117,"column":2}},"79":{"start":{"line":116,"column":2},"end":{"line":116,"column":35}},"80":{"start":{"line":119,"column":0},"end":{"line":121,"column":2}},"81":{"start":{"line":120,"column":2},"end":{"line":120,"column":37}},"82":{"start":{"line":123,"column":0},"end":{"line":125,"column":2}},"83":{"start":{"line":124,"column":2},"end":{"line":124,"column":50}},"84":{"start":{"line":127,"column":0},"end":{"line":133,"column":2}},"85":{"start":{"line":128,"column":2},"end":{"line":129,"column":33}},"86":{"start":{"line":129,"column":4},"end":{"line":129,"column":33}},"87":{"start":{"line":130,"column":2},"end":{"line":132,"column":54}},"88":{"start":{"line":135,"column":0},"end":{"line":139,"column":2}},"89":{"start":{"line":137,"column":2},"end":{"line":138,"column":34}},"90":{"start":{"line":141,"column":0},"end":{"line":172,"column":2}},"91":{"start":{"line":147,"column":2},"end":{"line":147,"column":26}},"92":{"start":{"line":149,"column":2},"end":{"line":149,"column":26}},"93":{"start":{"line":151,"column":2},"end":{"line":151,"column":26}},"94":{"start":{"line":152,"column":2},"end":{"line":152,"column":19}},"95":{"start":{"line":154,"column":2},"end":{"line":154,"column":30}},"96":{"start":{"line":156,"column":2},"end":{"line":156,"column":63}},"97":{"start":{"line":158,"column":2},"end":{"line":158,"column":22}},"98":{"start":{"line":160,"column":2},"end":{"line":160,"column":22}},"99":{"start":{"line":162,"column":2},"end":{"line":162,"column":22}},"100":{"start":{"line":164,"column":2},"end":{"line":164,"column":23}},"101":{"start":{"line":166,"column":2},"end":{"line":166,"column":23}},"102":{"start":{"line":168,"column":2},"end":{"line":168,"column":23}},"103":{"start":{"line":170,"column":2},"end":{"line":170,"column":23}},"104":{"start":{"line":171,"column":2},"end":{"line":171,"column":42}},"105":{"start":{"line":174,"column":0},"end":{"line":230,"column":2}},"106":{"start":{"line":182,"column":2},"end":{"line":182,"column":41}},"107":{"start":{"line":184,"column":2},"end":{"line":184,"column":26}},"108":{"start":{"line":186,"column":2},"end":{"line":186,"column":26}},"109":{"start":{"line":188,"column":2},"end":{"line":188,"column":9}},"110":{"start":{"line":189,"column":2},"end":{"line":189,"column":9}},"111":{"start":{"line":190,"column":2},"end":{"line":190,"column":9}},"112":{"start":{"line":191,"column":2},"end":{"line":228,"column":3}},"113":{"start":{"line":193,"column":4},"end":{"line":193,"column":32}},"114":{"start":{"line":195,"column":4},"end":{"line":195,"column":24}},"115":{"start":{"line":196,"column":4},"end":{"line":214,"column":5}},"116":{"start":{"line":198,"column":6},"end":{"line":198,"column":66}},"117":{"start":{"line":200,"column":6},"end":{"line":200,"column":33}},"118":{"start":{"line":202,"column":6},"end":{"line":202,"column":42}},"119":{"start":{"line":205,"column":6},"end":{"line":205,"column":30}},"120":{"start":{"line":207,"column":6},"end":{"line":207,"column":37}},"121":{"start":{"line":209,"column":6},"end":{"line":209,"column":44}},"122":{"start":{"line":211,"column":6},"end":{"line":211,"column":33}},"123":{"start":{"line":213,"column":6},"end":{"line":213,"column":23}},"124":{"start":{"line":217,"column":4},"end":{"line":217,"column":24}},"125":{"start":{"line":219,"column":4},"end":{"line":219,"column":61}},"126":{"start":{"line":221,"column":4},"end":{"line":221,"column":34}},"127":{"start":{"line":223,"column":4},"end":{"line":223,"column":50}},"128":{"start":{"line":225,"column":4},"end":{"line":225,"column":50}},"129":{"start":{"line":227,"column":4},"end":{"line":227,"column":21}},"130":{"start":{"line":229,"column":2},"end":{"line":229,"column":38}},"131":{"start":{"line":232,"column":0},"end":{"line":241,"column":2}},"132":{"start":{"line":233,"column":2},"end":{"line":234,"column":16}},"133":{"start":{"line":234,"column":4},"end":{"line":234,"column":16}},"134":{"start":{"line":237,"column":2},"end":{"line":240,"column":27}},"135":{"start":{"line":238,"column":4},"end":{"line":238,"column":26}},"136":{"start":{"line":240,"column":4},"end":{"line":240,"column":27}},"137":{"start":{"line":243,"column":0},"end":{"line":273,"column":2}},"138":{"start":{"line":249,"column":2},"end":{"line":249,"column":56}},"139":{"start":{"line":251,"column":2},"end":{"line":251,"column":56}},"140":{"start":{"line":253,"column":2},"end":{"line":253,"column":51}},"141":{"start":{"line":255,"column":2},"end":{"line":255,"column":41}},"142":{"start":{"line":257,"column":2},"end":{"line":257,"column":22}},"143":{"start":{"line":259,"column":2},"end":{"line":259,"column":22}},"144":{"start":{"line":261,"column":2},"end":{"line":261,"column":22}},"145":{"start":{"line":263,"column":2},"end":{"line":263,"column":22}},"146":{"start":{"line":265,"column":2},"end":{"line":265,"column":23}},"147":{"start":{"line":267,"column":2},"end":{"line":267,"column":23}},"148":{"start":{"line":269,"column":2},"end":{"line":269,"column":23}},"149":{"start":{"line":271,"column":2},"end":{"line":271,"column":23}},"150":{"start":{"line":272,"column":2},"end":{"line":272,"column":42}},"151":{"start":{"line":275,"column":0},"end":{"line":312,"column":2}},"152":{"start":{"line":282,"column":2},"end":{"line":282,"column":29}},"153":{"start":{"line":284,"column":2},"end":{"line":284,"column":21}},"154":{"start":{"line":286,"column":2},"end":{"line":286,"column":29}},"155":{"start":{"line":288,"column":2},"end":{"line":288,"column":29}},"156":{"start":{"line":290,"column":2},"end":{"line":290,"column":43}},"157":{"start":{"line":292,"column":2},"end":{"line":292,"column":22}},"158":{"start":{"line":294,"column":2},"end":{"line":294,"column":22}},"159":{"start":{"line":296,"column":2},"end":{"line":296,"column":80}},"160":{"start":{"line":297,"column":2},"end":{"line":297,"column":35}},"161":{"start":{"line":298,"column":2},"end":{"line":298,"column":9}},"162":{"start":{"line":299,"column":2},"end":{"line":299,"column":9}},"163":{"start":{"line":300,"column":2},"end":{"line":310,"column":3}},"164":{"start":{"line":302,"column":4},"end":{"line":302,"column":59}},"165":{"start":{"line":304,"column":4},"end":{"line":304,"column":21}},"166":{"start":{"line":307,"column":4},"end":{"line":307,"column":41}},"167":{"start":{"line":309,"column":4},"end":{"line":309,"column":39}},"168":{"start":{"line":311,"column":2},"end":{"line":311,"column":38}},"169":{"start":{"line":314,"column":0},"end":{"line":324,"column":2}},"170":{"start":{"line":315,"column":2},"end":{"line":316,"column":13}},"171":{"start":{"line":316,"column":4},"end":{"line":316,"column":13}},"172":{"start":{"line":317,"column":2},"end":{"line":318,"column":16}},"173":{"start":{"line":318,"column":4},"end":{"line":318,"column":16}},"174":{"start":{"line":320,"column":2},"end":{"line":323,"column":28}},"175":{"start":{"line":321,"column":4},"end":{"line":321,"column":27}},"176":{"start":{"line":323,"column":4},"end":{"line":323,"column":28}},"177":{"start":{"line":326,"column":0},"end":{"line":331,"column":2}},"178":{"start":{"line":327,"column":2},"end":{"line":330,"column":40}},"179":{"start":{"line":328,"column":4},"end":{"line":328,"column":44}},"180":{"start":{"line":330,"column":4},"end":{"line":330,"column":40}},"181":{"start":{"line":333,"column":0},"end":{"line":335,"column":2}},"182":{"start":{"line":334,"column":2},"end":{"line":334,"column":63}},"183":{"start":{"line":337,"column":0},"end":{"line":350,"column":2}},"184":{"start":{"line":338,"column":2},"end":{"line":339,"column":16}},"185":{"start":{"line":339,"column":4},"end":{"line":339,"column":16}},"186":{"start":{"line":342,"column":2},"end":{"line":342,"column":28}},"187":{"start":{"line":343,"column":2},"end":{"line":343,"column":29}},"188":{"start":{"line":344,"column":2},"end":{"line":344,"column":29}},"189":{"start":{"line":345,"column":2},"end":{"line":346,"column":31}},"190":{"start":{"line":346,"column":4},"end":{"line":346,"column":31}},"191":{"start":{"line":347,"column":2},"end":{"line":347,"column":26}},"192":{"start":{"line":348,"column":2},"end":{"line":348,"column":19}},"193":{"start":{"line":349,"column":2},"end":{"line":349,"column":14}},"194":{"start":{"line":352,"column":0},"end":{"line":357,"column":2}},"195":{"start":{"line":353,"column":2},"end":{"line":356,"column":53}},"196":{"start":{"line":359,"column":0},"end":{"line":362,"column":2}},"197":{"start":{"line":360,"column":2},"end":{"line":360,"column":19}},"198":{"start":{"line":361,"column":2},"end":{"line":361,"column":26}},"199":{"start":{"line":364,"column":0},"end":{"line":367,"column":2}},"200":{"start":{"line":365,"column":2},"end":{"line":365,"column":19}},"201":{"start":{"line":366,"column":2},"end":{"line":366,"column":26}},"202":{"start":{"line":370,"column":0},"end":{"line":370,"column":48}},"203":{"start":{"line":371,"column":0},"end":{"line":371,"column":47}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":15},"end":{"line":14,"column":27}},{"start":{"line":14,"column":31},"end":{"line":14,"column":50}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":9},"end":{"line":25,"column":22}},{"start":{"line":25,"column":26},"end":{"line":25,"column":56}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"7":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":9}},{"start":{"line":61,"column":13},"end":{"line":61,"column":19}},{"start":{"line":61,"column":23},"end":{"line":61,"column":27}},{"start":{"line":61,"column":31},"end":{"line":61,"column":36}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"9":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"10":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":16}},{"start":{"line":84,"column":20},"end":{"line":84,"column":30}},{"start":{"line":84,"column":34},"end":{"line":84,"column":44}}]},"11":{"line":93,"type":"cond-expr","locations":[{"start":{"line":93,"column":17},"end":{"line":93,"column":30}},{"start":{"line":93,"column":33},"end":{"line":93,"column":47}}]},"12":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":13},"end":{"line":94,"column":14}},{"start":{"line":94,"column":18},"end":{"line":94,"column":31}}]},"13":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"14":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"15":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"16":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"17":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":14}},{"start":{"line":101,"column":18},"end":{"line":101,"column":29}}]},"18":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"19":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":27}},{"start":{"line":106,"column":31},"end":{"line":106,"column":38}}]},"20":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":6}},{"start":{"line":108,"column":6},"end":{"line":108,"column":6}}]},"21":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"22":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":9},"end":{"line":137,"column":29}},{"start":{"line":138,"column":9},"end":{"line":138,"column":33}}]},"23":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"24":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"25":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"26":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"27":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":2},"end":{"line":300,"column":2}},{"start":{"line":300,"column":2},"end":{"line":300,"column":2}}]},"28":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":2},"end":{"line":315,"column":2}},{"start":{"line":315,"column":2},"end":{"line":315,"column":2}}]},"29":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":2},"end":{"line":317,"column":2}},{"start":{"line":317,"column":2},"end":{"line":317,"column":2}}]},"30":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":2},"end":{"line":320,"column":2}},{"start":{"line":320,"column":2},"end":{"line":320,"column":2}}]},"31":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":2},"end":{"line":327,"column":2}},{"start":{"line":327,"column":2},"end":{"line":327,"column":2}}]},"32":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":6},"end":{"line":327,"column":22}},{"start":{"line":327,"column":26},"end":{"line":327,"column":50}}]},"33":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":2},"end":{"line":338,"column":2}},{"start":{"line":338,"column":2},"end":{"line":338,"column":2}}]},"34":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":2},"end":{"line":345,"column":2}},{"start":{"line":345,"column":2},"end":{"line":345,"column":2}}]},"35":{"line":356,"type":"binary-expr","locations":[{"start":{"line":356,"column":26},"end":{"line":356,"column":32}},{"start":{"line":356,"column":36},"end":{"line":356,"column":51}}]}},"code":["'use strict';","","var curve = require('../curve');","var elliptic = require('../../elliptic');","var bn = require('bn.js');","var inherits = require('inherits');","var Base = curve.base;","","var assert = elliptic.utils.assert;","","function EdwardsCurve(conf) {","  // NOTE: Important as we are creating point in Base.call()","  this.twisted = (conf.a | 0) !== 1;","  this.mOneA = this.twisted && (conf.a | 0) === -1;","  this.extended = this.mOneA;","","  Base.call(this, 'edwards', conf);","","  this.a = new bn(conf.a, 16).mod(this.red.m).toRed(this.red);","  this.c = new bn(conf.c, 16).toRed(this.red);","  this.c2 = this.c.redSqr();","  this.d = new bn(conf.d, 16).toRed(this.red);","  this.dd = this.d.redAdd(this.d);","","  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);","  this.oneC = (conf.c | 0) === 1;","}","inherits(EdwardsCurve, Base);","module.exports = EdwardsCurve;","","EdwardsCurve.prototype._mulA = function _mulA(num) {","  if (this.mOneA)","    return num.redNeg();","  else","    return this.a.redMul(num);","};","","EdwardsCurve.prototype._mulC = function _mulC(num) {","  if (this.oneC)","    return num;","  else","    return this.c.redMul(num);","};","","// Just for compatibility with Short curve","EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {","  return this.point(x, y, z, t);","};","","EdwardsCurve.prototype.pointFromX = function pointFromX(odd, x) {","  x = new bn(x, 16);","  if (!x.red)","    x = x.toRed(this.red);","","  var x2 = x.redSqr();","  var rhs = this.c2.redSub(this.a.redMul(x2));","  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));","","  var y = rhs.redMul(lhs.redInvm()).redSqrt();","  var isOdd = y.fromRed().isOdd();","  if (odd && !isOdd || !odd && isOdd)","    y = y.redNeg();","","  return this.point(x, y, curve.one);","};","","EdwardsCurve.prototype.validate = function validate(point) {","  if (point.isInfinity())","    return true;","","  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)","  point.normalize();","","  var x2 = point.x.redSqr();","  var y2 = point.y.redSqr();","  var lhs = x2.redMul(this.a).redAdd(y2);","  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));","","  return lhs.cmp(rhs) === 0;","};","","function Point(curve, x, y, z, t) {","  Base.BasePoint.call(this, curve, 'projective');","  if (x === null && y === null && z === null) {","    this.x = this.curve.zero;","    this.y = this.curve.one;","    this.z = this.curve.one;","    this.t = this.curve.zero;","    this.zOne = true;","  } else {","    this.x = new bn(x, 16);","    this.y = new bn(y, 16);","    this.z = z ? new bn(z, 16) : this.curve.one;","    this.t = t && new bn(t, 16);","    if (!this.x.red)","      this.x = this.x.toRed(this.curve.red);","    if (!this.y.red)","      this.y = this.y.toRed(this.curve.red);","    if (!this.z.red)","      this.z = this.z.toRed(this.curve.red);","    if (this.t && !this.t.red)","      this.t = this.t.toRed(this.curve.red);","    this.zOne = this.z === this.curve.one;","","    // Use extended coordinates","    if (this.curve.extended && !this.t) {","      this.t = this.x.redMul(this.y);","      if (!this.zOne)","        this.t = this.t.redMul(this.z.redInvm());","    }","  }","}","inherits(Point, Base.BasePoint);","","EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {","  return Point.fromJSON(this, obj);","};","","EdwardsCurve.prototype.point = function point(x, y, z, t) {","  return new Point(this, x, y, z, t);","};","","Point.fromJSON = function fromJSON(curve, obj) {","  return new Point(curve, obj[0], obj[1], obj[2]);","};","","Point.prototype.inspect = function inspect() {","  if (this.isInfinity())","    return '<EC Point Infinity>';","  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +","      ' y: ' + this.y.fromRed().toString(16, 2) +","      ' z: ' + this.z.fromRed().toString(16, 2) + '>';","};","","Point.prototype.isInfinity = function isInfinity() {","  // XXX This code assumes that zero is always zero in red","  return this.x.cmpn(0) === 0 &&","         this.y.cmp(this.z) === 0;","};","","Point.prototype._extDbl = function _extDbl() {","  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html","  //     #doubling-dbl-2008-hwcd","  // 4M + 4S","","  // A = X1^2","  var a = this.x.redSqr();","  // B = Y1^2","  var b = this.y.redSqr();","  // C = 2 * Z1^2","  var c = this.z.redSqr();","  c = c.redIAdd(c);","  // D = a * A","  var d = this.curve._mulA(a);","  // E = (X1 + Y1)^2 - A - B","  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);","  // G = D + B","  var g = d.redAdd(b);","  // F = G - C","  var f = g.redSub(c);","  // H = D - B","  var h = d.redSub(b);","  // X3 = E * F","  var nx = e.redMul(f);","  // Y3 = G * H","  var ny = g.redMul(h);","  // T3 = E * H","  var nt = e.redMul(h);","  // Z3 = F * G","  var nz = f.redMul(g);","  return this.curve.point(nx, ny, nz, nt);","};","","Point.prototype._projDbl = function _projDbl() {","  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html","  //     #doubling-dbl-2008-bbjlp","  //     #doubling-dbl-2007-bl","  // and others","  // Generally 3M + 4S or 2M + 4S","","  // B = (X1 + Y1)^2","  var b = this.x.redAdd(this.y).redSqr();","  // C = X1^2","  var c = this.x.redSqr();","  // D = Y1^2","  var d = this.y.redSqr();","","  var nx;","  var ny;","  var nz;","  if (this.curve.twisted) {","    // E = a * C","    var e = this.curve._mulA(c);","    // F = E + D","    var f = e.redAdd(d);","    if (this.zOne) {","      // X3 = (B - C - D) * (F - 2)","      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));","      // Y3 = F * (E - D)","      ny = f.redMul(e.redSub(d));","      // Z3 = F^2 - 2 * F","      nz = f.redSqr().redSub(f).redSub(f);","    } else {","      // H = Z1^2","      var h = this.z.redSqr();","      // J = F - 2 * H","      var j = f.redSub(h).redISub(h);","      // X3 = (B-C-D)*J","      nx = b.redSub(c).redISub(d).redMul(j);","      // Y3 = F * (E - D)","      ny = f.redMul(e.redSub(d));","      // Z3 = F * J","      nz = f.redMul(j);","    }","  } else {","    // E = C + D","    var e = c.redAdd(d);","    // H = (c * Z1)^2","    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();","    // J = E - 2 * H","    var j = e.redSub(h).redSub(h);","    // X3 = c * (B - E) * J","    nx = this.curve._mulC(b.redISub(e)).redMul(j);","    // Y3 = c * E * (C - D)","    ny = this.curve._mulC(e).redMul(c.redISub(d));","    // Z3 = E * J","    nz = e.redMul(j);","  }","  return this.curve.point(nx, ny, nz);","};","","Point.prototype.dbl = function dbl() {","  if (this.isInfinity())","    return this;","","  // Double in extended coordinates","  if (this.curve.extended)","    return this._extDbl();","  else","    return this._projDbl();","};","","Point.prototype._extAdd = function _extAdd(p) {","  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html","  //     #addition-add-2008-hwcd-3","  // 8M","","  // A = (Y1 - X1) * (Y2 - X2)","  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));","  // B = (Y1 + X1) * (Y2 + X2)","  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));","  // C = T1 * k * T2","  var c = this.t.redMul(this.curve.dd).redMul(p.t);","  // D = Z1 * 2 * Z2","  var d = this.z.redMul(p.z.redAdd(p.z));","  // E = B - A","  var e = b.redSub(a);","  // F = D - C","  var f = d.redSub(c);","  // G = D + C","  var g = d.redAdd(c);","  // H = B + A","  var h = b.redAdd(a);","  // X3 = E * F","  var nx = e.redMul(f);","  // Y3 = G * H","  var ny = g.redMul(h);","  // T3 = E * H","  var nt = e.redMul(h);","  // Z3 = F * G","  var nz = f.redMul(g);","  return this.curve.point(nx, ny, nz, nt);","};","","Point.prototype._projAdd = function _projAdd(p) {","  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html","  //     #addition-add-2008-bbjlp","  //     #addition-add-2007-bl","  // 10M + 1S","","  // A = Z1 * Z2","  var a = this.z.redMul(p.z);","  // B = A^2","  var b = a.redSqr();","  // C = X1 * X2","  var c = this.x.redMul(p.x);","  // D = Y1 * Y2","  var d = this.y.redMul(p.y);","  // E = d * C * D","  var e = this.curve.d.redMul(c).redMul(d);","  // F = B - E","  var f = b.redSub(e);","  // G = B + E","  var g = b.redAdd(e);","  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)","  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);","  var nx = a.redMul(f).redMul(tmp);","  var ny;","  var nz;","  if (this.curve.twisted) {","    // Y3 = A * G * (D - a * C)","    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));","    // Z3 = F * G","    nz = f.redMul(g);","  } else {","    // Y3 = A * G * (D - C)","    ny = a.redMul(g).redMul(d.redSub(c));","    // Z3 = c * F * G","    nz = this.curve._mulC(f).redMul(g);","  }","  return this.curve.point(nx, ny, nz);","};","","Point.prototype.add = function add(p) {","  if (this.isInfinity())","    return p;","  if (p.isInfinity())","    return this;","","  if (this.curve.extended)","    return this._extAdd(p);","  else","    return this._projAdd(p);","};","","Point.prototype.mul = function mul(k) {","  if (this.precomputed && this.precomputed.doubles)","    return this.curve._fixedNafMul(this, k);","  else","    return this.curve._wnafMul(this, k);","};","","Point.prototype.mulAdd = function mulAdd(k1, p, k2) {","  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2);","};","","Point.prototype.normalize = function normalize() {","  if (this.zOne)","    return this;","","  // Normalize coordinates","  var zi = this.z.redInvm();","  this.x = this.x.redMul(zi);","  this.y = this.y.redMul(zi);","  if (this.t)","    this.t = this.t.redMul(zi);","  this.z = this.curve.one;","  this.zOne = true;","  return this;","};","","Point.prototype.neg = function neg() {","  return this.curve.point(this.x.redNeg(),","                          this.y,","                          this.z,","                          this.t && this.t.redNeg());","};","","Point.prototype.getX = function getX() {","  this.normalize();","  return this.x.fromRed();","};","","Point.prototype.getY = function getY() {","  this.normalize();","  return this.y.fromRed();","};","","// Compatibility with BaseCurve","Point.prototype.toP = Point.prototype.normalize;","Point.prototype.mixedAdd = Point.prototype.add;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"11":1,"13":0,"14":0,"15":0,"17":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":1,"29":1,"31":1,"32":0,"33":0,"35":0,"38":1,"39":0,"40":0,"42":0,"46":1,"47":0,"50":1,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"64":0,"67":1,"68":0,"69":0,"72":0,"74":0,"75":0,"76":0,"77":0,"79":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"106":0,"107":0,"108":0,"109":0,"113":1,"115":1,"116":0,"119":1,"120":0,"123":1,"124":0,"127":1,"128":0,"129":0,"130":0,"135":1,"137":0,"141":1,"147":0,"149":0,"151":0,"152":0,"154":0,"156":0,"158":0,"160":0,"162":0,"164":0,"166":0,"168":0,"170":0,"171":0,"174":1,"182":0,"184":0,"186":0,"188":0,"189":0,"190":0,"191":0,"193":0,"195":0,"196":0,"198":0,"200":0,"202":0,"205":0,"207":0,"209":0,"211":0,"213":0,"217":0,"219":0,"221":0,"223":0,"225":0,"227":0,"229":0,"232":1,"233":0,"234":0,"237":0,"238":0,"240":0,"243":1,"249":0,"251":0,"253":0,"255":0,"257":0,"259":0,"261":0,"263":0,"265":0,"267":0,"269":0,"271":0,"272":0,"275":1,"282":0,"284":0,"286":0,"288":0,"290":0,"292":0,"294":0,"296":0,"297":0,"298":0,"299":0,"300":0,"302":0,"304":0,"307":0,"309":0,"311":0,"314":1,"315":0,"316":0,"317":0,"318":0,"320":0,"321":0,"323":0,"326":1,"327":0,"328":0,"330":0,"333":1,"334":0,"337":1,"338":0,"339":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"352":1,"353":0,"359":1,"360":0,"361":0,"364":1,"365":0,"366":0,"370":1,"371":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curves.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/curves.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":6,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":1},"b":{"1":[1,0],"2":[0,0]},"f":{"1":1,"2":6,"3":1},"fnMap":{"1":{"name":"PresetCurve","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}}},"2":{"name":"defineCurve","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":9},"end":{"line":30,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"5":{"start":{"line":10,"column":0},"end":{"line":23,"column":1}},"6":{"start":{"line":11,"column":2},"end":{"line":16,"column":50}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":51}},"8":{"start":{"line":13,"column":7},"end":{"line":16,"column":50}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":53}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":50}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":24}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":24}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":27}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":45}},"15":{"start":{"line":22,"column":2},"end":{"line":22,"column":69}},"16":{"start":{"line":24,"column":0},"end":{"line":24,"column":33}},"17":{"start":{"line":26,"column":0},"end":{"line":40,"column":1}},"18":{"start":{"line":27,"column":2},"end":{"line":39,"column":5}},"19":{"start":{"line":31,"column":6},"end":{"line":31,"column":43}},"20":{"start":{"line":32,"column":6},"end":{"line":36,"column":9}},"21":{"start":{"line":37,"column":6},"end":{"line":37,"column":19}},"22":{"start":{"line":42,"column":0},"end":{"line":55,"column":3}},"23":{"start":{"line":57,"column":0},"end":{"line":70,"column":3}},"24":{"start":{"line":72,"column":0},"end":{"line":85,"column":3}},"25":{"start":{"line":87,"column":0},"end":{"line":99,"column":3}},"26":{"start":{"line":101,"column":0},"end":{"line":118,"column":3}},"27":{"start":{"line":120,"column":0},"end":{"line":120,"column":8}},"28":{"start":{"line":121,"column":0},"end":{"line":125,"column":1}},"29":{"start":{"line":122,"column":2},"end":{"line":122,"column":43}},"30":{"start":{"line":124,"column":2},"end":{"line":124,"column":18}},"31":{"start":{"line":127,"column":0},"end":{"line":157,"column":3}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":7},"end":{"line":13,"column":7}},{"start":{"line":13,"column":7},"end":{"line":13,"column":7}}]}},"code":["'use strict';","","var curves = exports;","","var hash = require('hash.js');","var elliptic = require('../elliptic');","","var assert = elliptic.utils.assert;","","function PresetCurve(options) {","  if (options.type === 'short')","    this.curve = new elliptic.curve.short(options);","  else if (options.type === 'edwards')","    this.curve = new elliptic.curve.edwards(options);","  else","    this.curve = new elliptic.curve.mont(options);","  this.g = this.curve.g;","  this.n = this.curve.n;","  this.hash = options.hash;","","  assert(this.g.validate(), 'Invalid curve');","  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');","}","curves.PresetCurve = PresetCurve;","","function defineCurve(name, options) {","  Object.defineProperty(curves, name, {","    configurable: true,","    enumerable: true,","    get: function() {","      var curve = new PresetCurve(options);","      Object.defineProperty(curves, name, {","        configurable: true,","        enumerable: true,","        value: curve","      });","      return curve;","    }","  });","}","","defineCurve('p192', {","  type: 'short',","  prime: 'p192',","  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',","  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',","  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',","  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',","  hash: hash.sha256,","  gRed: false,","  g: [","    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',","    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'","  ]","});","","defineCurve('p224', {","  type: 'short',","  prime: 'p224',","  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',","  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',","  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',","  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',","  hash: hash.sha256,","  gRed: false,","  g: [","    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',","    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'","  ]","});","","defineCurve('p256', {","  type: 'short',","  prime: null,","  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',","  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',","  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',","  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',","  hash: hash.sha256,","  gRed: false,","  g: [","    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',","    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'","  ]","});","","defineCurve('curve25519', {","  type: 'mont',","  prime: 'p25519',","  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',","  a: '76d06',","  b: '0',","  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',","  hash: hash.sha256,","  gRed: false,","  g: [","    '9'","  ]","});","","defineCurve('ed25519', {","  type: 'edwards',","  prime: 'p25519',","  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',","  a: '-1',","  c: '1',","  // -121665 * (121666^(-1)) (mod P)","  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',","  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',","  hash: hash.sha256,","  gRed: false,","  g: [","    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',","","    // 4/5","    '6666666666666666666666666666666666666666666666666666666666666658'","  ]","});","","var pre;","try {","  pre = require('./precomputed/secp256k1');","} catch (e) {","  pre = undefined;","}","","defineCurve('secp256k1', {","  type: 'short',","  prime: 'k256',","  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',","  a: '0',","  b: '7',","  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',","  h: '1',","  hash: hash.sha256,","","  // Precomputed endomorphism","  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',","  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',","  basis: [","    {","      a: '3086d221a7d46bcde86c90e49284eb15',","      b: '-e4437ed6010e88286f547fa90abfe4c3'","    },","    {","      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',","      b: '3086d221a7d46bcde86c90e49284eb15'","    }","  ],","","  gRed: false,","  g: [","    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',","    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',","    pre","  ]","});",""],"l":{"3":1,"5":1,"6":1,"8":1,"10":1,"11":1,"12":1,"13":0,"14":0,"16":0,"17":1,"18":1,"19":1,"21":1,"22":1,"24":1,"26":1,"27":6,"31":1,"32":1,"37":1,"42":1,"57":1,"72":1,"87":1,"101":1,"120":1,"121":1,"122":1,"124":0,"127":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":780,"column":2}}},"branchMap":{},"code":["module.exports = {","  doubles: {","    step: 4,","    points: [","      [","        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',","        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'","      ],","      [","        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',","        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'","      ],","      [","        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',","        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'","      ],","      [","        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',","        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'","      ],","      [","        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',","        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'","      ],","      [","        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',","        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'","      ],","      [","        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',","        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'","      ],","      [","        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',","        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'","      ],","      [","        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',","        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'","      ],","      [","        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',","        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'","      ],","      [","        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',","        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'","      ],","      [","        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',","        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'","      ],","      [","        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',","        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'","      ],","      [","        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',","        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'","      ],","      [","        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',","        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'","      ],","      [","        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',","        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'","      ],","      [","        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',","        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'","      ],","      [","        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',","        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'","      ],","      [","        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',","        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'","      ],","      [","        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',","        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'","      ],","      [","        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',","        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'","      ],","      [","        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',","        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'","      ],","      [","        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',","        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'","      ],","      [","        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',","        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'","      ],","      [","        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',","        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'","      ],","      [","        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',","        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'","      ],","      [","        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',","        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'","      ],","      [","        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',","        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'","      ],","      [","        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',","        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'","      ],","      [","        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',","        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'","      ],","      [","        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',","        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'","      ],","      [","        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',","        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'","      ],","      [","        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',","        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'","      ],","      [","        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',","        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'","      ],","      [","        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',","        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'","      ],","      [","        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',","        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'","      ],","      [","        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',","        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'","      ],","      [","        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',","        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'","      ],","      [","        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',","        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'","      ],","      [","        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',","        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'","      ],","      [","        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',","        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'","      ],","      [","        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',","        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'","      ],","      [","        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',","        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'","      ],","      [","        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',","        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'","      ],","      [","        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',","        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'","      ],","      [","        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',","        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'","      ],","      [","        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',","        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'","      ],","      [","        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',","        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'","      ],","      [","        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',","        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'","      ],","      [","        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',","        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'","      ],","      [","        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',","        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'","      ],","      [","        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',","        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'","      ],","      [","        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',","        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'","      ],","      [","        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',","        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'","      ],","      [","        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',","        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'","      ],","      [","        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',","        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'","      ],","      [","        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',","        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'","      ],","      [","        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',","        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'","      ],","      [","        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',","        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'","      ],","      [","        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',","        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'","      ],","      [","        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',","        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'","      ],","      [","        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',","        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'","      ],","      [","        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',","        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'","      ],","      [","        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',","        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'","      ],","      [","        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',","        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'","      ]","    ]","  },","  naf: {","    wnd: 7,","    points: [","      [","        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',","        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'","      ],","      [","        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',","        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'","      ],","      [","        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',","        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'","      ],","      [","        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',","        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'","      ],","      [","        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',","        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'","      ],","      [","        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',","        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'","      ],","      [","        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',","        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'","      ],","      [","        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',","        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'","      ],","      [","        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',","        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'","      ],","      [","        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',","        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'","      ],","      [","        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',","        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'","      ],","      [","        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',","        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'","      ],","      [","        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',","        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'","      ],","      [","        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',","        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'","      ],","      [","        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',","        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'","      ],","      [","        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',","        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'","      ],","      [","        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',","        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'","      ],","      [","        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',","        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'","      ],","      [","        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',","        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'","      ],","      [","        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',","        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'","      ],","      [","        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',","        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'","      ],","      [","        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',","        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'","      ],","      [","        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',","        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'","      ],","      [","        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',","        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'","      ],","      [","        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',","        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'","      ],","      [","        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',","        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'","      ],","      [","        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',","        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'","      ],","      [","        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',","        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'","      ],","      [","        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',","        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'","      ],","      [","        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',","        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'","      ],","      [","        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',","        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'","      ],","      [","        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',","        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'","      ],","      [","        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',","        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'","      ],","      [","        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',","        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'","      ],","      [","        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',","        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'","      ],","      [","        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',","        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'","      ],","      [","        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',","        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'","      ],","      [","        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',","        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'","      ],","      [","        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',","        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'","      ],","      [","        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',","        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'","      ],","      [","        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',","        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'","      ],","      [","        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',","        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'","      ],","      [","        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',","        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'","      ],","      [","        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',","        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'","      ],","      [","        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',","        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'","      ],","      [","        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',","        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'","      ],","      [","        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',","        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'","      ],","      [","        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',","        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'","      ],","      [","        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',","        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'","      ],","      [","        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',","        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'","      ],","      [","        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',","        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'","      ],","      [","        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',","        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'","      ],","      [","        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',","        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'","      ],","      [","        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',","        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'","      ],","      [","        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',","        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'","      ],","      [","        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',","        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'","      ],","      [","        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',","        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'","      ],","      [","        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',","        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'","      ],","      [","        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',","        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'","      ],","      [","        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',","        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'","      ],","      [","        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',","        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'","      ],","      [","        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',","        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'","      ],","      [","        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',","        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'","      ],","      [","        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',","        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'","      ],","      [","        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',","        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'","      ],","      [","        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',","        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'","      ],","      [","        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',","        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'","      ],","      [","        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',","        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'","      ],","      [","        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',","        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'","      ],","      [","        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',","        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'","      ],","      [","        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',","        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'","      ],","      [","        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',","        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'","      ],","      [","        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',","        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'","      ],","      [","        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',","        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'","      ],","      [","        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',","        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'","      ],","      [","        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',","        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'","      ],","      [","        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',","        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'","      ],","      [","        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',","        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'","      ],","      [","        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',","        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'","      ],","      [","        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',","        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'","      ],","      [","        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',","        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'","      ],","      [","        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',","        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'","      ],","      [","        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',","        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'","      ],","      [","        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',","        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'","      ],","      [","        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',","        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'","      ],","      [","        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',","        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'","      ],","      [","        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',","        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'","      ],","      [","        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',","        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'","      ],","      [","        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',","        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'","      ],","      [","        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',","        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'","      ],","      [","        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',","        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'","      ],","      [","        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',","        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'","      ],","      [","        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',","        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'","      ],","      [","        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',","        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'","      ],","      [","        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',","        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'","      ],","      [","        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',","        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'","      ],","      [","        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',","        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'","      ],","      [","        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',","        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'","      ],","      [","        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',","        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'","      ],","      [","        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',","        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'","      ],","      [","        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',","        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'","      ],","      [","        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',","        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'","      ],","      [","        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',","        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'","      ],","      [","        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',","        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'","      ],","      [","        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',","        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'","      ],","      [","        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',","        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'","      ],","      [","        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',","        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'","      ],","      [","        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',","        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'","      ],","      [","        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',","        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'","      ],","      [","        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',","        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'","      ],","      [","        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',","        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'","      ],","      [","        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',","        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'","      ],","      [","        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',","        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'","      ],","      [","        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',","        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'","      ],","      [","        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',","        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'","      ],","      [","        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',","        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'","      ],","      [","        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',","        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'","      ],","      [","        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',","        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'","      ],","      [","        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',","        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'","      ],","      [","        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',","        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'","      ],","      [","        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',","        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'","      ],","      [","        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',","        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'","      ],","      [","        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',","        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'","      ],","      [","        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',","        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'","      ],","      [","        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',","        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'","      ],","      [","        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',","        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'","      ],","      [","        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',","        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'","      ]","    ]","  }","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/ec/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/ec/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"EC","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":21}}},"2":{"name":"keyPair","line":40,"loc":{"start":{"line":40,"column":23},"end":{"line":40,"column":49}}},"3":{"name":"keyFromPrivate","line":44,"loc":{"start":{"line":44,"column":30},"end":{"line":44,"column":65}}},"4":{"name":"keyFromPublic","line":48,"loc":{"start":{"line":48,"column":29},"end":{"line":48,"column":62}}},"5":{"name":"genKeyPair","line":52,"loc":{"start":{"line":52,"column":26},"end":{"line":52,"column":55}}},"6":{"name":"truncateToN","line":76,"loc":{"start":{"line":76,"column":28},"end":{"line":76,"column":65}}},"7":{"name":"sign","line":86,"loc":{"start":{"line":86,"column":20},"end":{"line":86,"column":58}}},"8":{"name":"verify","line":143,"loc":{"start":{"line":143,"column":22},"end":{"line":143,"column":64}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"7":{"start":{"line":11,"column":0},"end":{"line":37,"column":1}},"8":{"start":{"line":12,"column":2},"end":{"line":13,"column":27}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":27}},"10":{"start":{"line":16,"column":2},"end":{"line":20,"column":3}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":80}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":39}},"13":{"start":{"line":23,"column":2},"end":{"line":24,"column":33}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":33}},"15":{"start":{"line":26,"column":2},"end":{"line":26,"column":35}},"16":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":27}},"18":{"start":{"line":29,"column":2},"end":{"line":29,"column":24}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":27}},"20":{"start":{"line":33,"column":2},"end":{"line":33,"column":53}},"21":{"start":{"line":36,"column":2},"end":{"line":36,"column":49}},"22":{"start":{"line":38,"column":0},"end":{"line":38,"column":20}},"23":{"start":{"line":40,"column":0},"end":{"line":42,"column":2}},"24":{"start":{"line":41,"column":2},"end":{"line":41,"column":36}},"25":{"start":{"line":44,"column":0},"end":{"line":46,"column":2}},"26":{"start":{"line":45,"column":2},"end":{"line":45,"column":46}},"27":{"start":{"line":48,"column":0},"end":{"line":50,"column":2}},"28":{"start":{"line":49,"column":2},"end":{"line":49,"column":44}},"29":{"start":{"line":52,"column":0},"end":{"line":74,"column":2}},"30":{"start":{"line":53,"column":2},"end":{"line":54,"column":17}},"31":{"start":{"line":54,"column":4},"end":{"line":54,"column":17}},"32":{"start":{"line":57,"column":2},"end":{"line":62,"column":5}},"33":{"start":{"line":64,"column":2},"end":{"line":64,"column":34}},"34":{"start":{"line":65,"column":2},"end":{"line":65,"column":34}},"35":{"start":{"line":66,"column":2},"end":{"line":73,"column":17}},"36":{"start":{"line":67,"column":4},"end":{"line":67,"column":44}},"37":{"start":{"line":68,"column":4},"end":{"line":69,"column":15}},"38":{"start":{"line":69,"column":6},"end":{"line":69,"column":15}},"39":{"start":{"line":71,"column":4},"end":{"line":71,"column":18}},"40":{"start":{"line":72,"column":4},"end":{"line":72,"column":37}},"41":{"start":{"line":76,"column":0},"end":{"line":84,"column":2}},"42":{"start":{"line":77,"column":2},"end":{"line":77,"column":56}},"43":{"start":{"line":78,"column":2},"end":{"line":79,"column":26}},"44":{"start":{"line":79,"column":4},"end":{"line":79,"column":26}},"45":{"start":{"line":80,"column":2},"end":{"line":83,"column":15}},"46":{"start":{"line":81,"column":4},"end":{"line":81,"column":27}},"47":{"start":{"line":83,"column":4},"end":{"line":83,"column":15}},"48":{"start":{"line":86,"column":0},"end":{"line":141,"column":2}},"49":{"start":{"line":87,"column":2},"end":{"line":90,"column":3}},"50":{"start":{"line":88,"column":4},"end":{"line":88,"column":18}},"51":{"start":{"line":89,"column":4},"end":{"line":89,"column":15}},"52":{"start":{"line":91,"column":2},"end":{"line":92,"column":17}},"53":{"start":{"line":92,"column":4},"end":{"line":92,"column":17}},"54":{"start":{"line":94,"column":2},"end":{"line":94,"column":38}},"55":{"start":{"line":95,"column":2},"end":{"line":95,"column":43}},"56":{"start":{"line":98,"column":2},"end":{"line":98,"column":34}},"57":{"start":{"line":99,"column":2},"end":{"line":99,"column":40}},"58":{"start":{"line":100,"column":2},"end":{"line":101,"column":20}},"59":{"start":{"line":101,"column":4},"end":{"line":101,"column":20}},"60":{"start":{"line":104,"column":2},"end":{"line":104,"column":28}},"61":{"start":{"line":105,"column":2},"end":{"line":106,"column":21}},"62":{"start":{"line":106,"column":4},"end":{"line":106,"column":21}},"63":{"start":{"line":109,"column":2},"end":{"line":113,"column":5}},"64":{"start":{"line":116,"column":2},"end":{"line":116,"column":34}},"65":{"start":{"line":117,"column":2},"end":{"line":140,"column":17}},"66":{"start":{"line":118,"column":4},"end":{"line":118,"column":55}},"67":{"start":{"line":119,"column":4},"end":{"line":119,"column":35}},"68":{"start":{"line":120,"column":4},"end":{"line":121,"column":15}},"69":{"start":{"line":121,"column":6},"end":{"line":121,"column":15}},"70":{"start":{"line":123,"column":4},"end":{"line":123,"column":27}},"71":{"start":{"line":124,"column":4},"end":{"line":125,"column":15}},"72":{"start":{"line":125,"column":6},"end":{"line":125,"column":15}},"73":{"start":{"line":127,"column":4},"end":{"line":127,"column":34}},"74":{"start":{"line":128,"column":4},"end":{"line":129,"column":15}},"75":{"start":{"line":129,"column":6},"end":{"line":129,"column":15}},"76":{"start":{"line":131,"column":4},"end":{"line":131,"column":78}},"77":{"start":{"line":132,"column":4},"end":{"line":133,"column":15}},"78":{"start":{"line":133,"column":6},"end":{"line":133,"column":15}},"79":{"start":{"line":136,"column":4},"end":{"line":137,"column":24}},"80":{"start":{"line":137,"column":6},"end":{"line":137,"column":24}},"81":{"start":{"line":139,"column":4},"end":{"line":139,"column":41}},"82":{"start":{"line":143,"column":0},"end":{"line":166,"column":2}},"83":{"start":{"line":144,"column":2},"end":{"line":144,"column":43}},"84":{"start":{"line":145,"column":2},"end":{"line":145,"column":37}},"85":{"start":{"line":146,"column":2},"end":{"line":146,"column":46}},"86":{"start":{"line":149,"column":2},"end":{"line":149,"column":22}},"87":{"start":{"line":150,"column":2},"end":{"line":150,"column":22}},"88":{"start":{"line":151,"column":2},"end":{"line":152,"column":17}},"89":{"start":{"line":152,"column":4},"end":{"line":152,"column":17}},"90":{"start":{"line":153,"column":2},"end":{"line":154,"column":17}},"91":{"start":{"line":154,"column":4},"end":{"line":154,"column":17}},"92":{"start":{"line":157,"column":2},"end":{"line":157,"column":28}},"93":{"start":{"line":158,"column":2},"end":{"line":158,"column":37}},"94":{"start":{"line":159,"column":2},"end":{"line":159,"column":35}},"95":{"start":{"line":161,"column":2},"end":{"line":161,"column":49}},"96":{"start":{"line":162,"column":2},"end":{"line":163,"column":17}},"97":{"start":{"line":163,"column":4},"end":{"line":163,"column":17}},"98":{"start":{"line":165,"column":2},"end":{"line":165,"column":43}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":14},"end":{"line":36,"column":26}},{"start":{"line":36,"column":30},"end":{"line":36,"column":48}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"6":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":13},"end":{"line":60,"column":28}},{"start":{"line":60,"column":32},"end":{"line":60,"column":69}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"8":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"9":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"10":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":16}},{"start":{"line":80,"column":20},"end":{"line":80,"column":40}}]},"11":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"12":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"13":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"14":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":22}},{"start":{"line":120,"column":26},"end":{"line":120,"column":41}}]},"15":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"16":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"17":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"18":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"19":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":25}},{"start":{"line":136,"column":29},"end":{"line":136,"column":47}}]},"20":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"21":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":19}},{"start":{"line":151,"column":23},"end":{"line":151,"column":41}}]},"22":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"23":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":6},"end":{"line":153,"column":19}},{"start":{"line":153,"column":23},"end":{"line":153,"column":41}}]},"24":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]}},"code":["'use strict';","","var bn = require('bn.js');","var elliptic = require('../../elliptic');","var utils = elliptic.utils;","var assert = utils.assert;","","var KeyPair = require('./key');","var Signature = require('./signature');","","function EC(options) {","  if (!(this instanceof EC))","    return new EC(options);","","  // Shortcut `elliptic.ec(curve-name)`","  if (typeof options === 'string') {","    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);","","    options = elliptic.curves[options];","  }","","  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`","  if (options instanceof elliptic.curves.PresetCurve)","    options = { curve: options };","","  this.curve = options.curve.curve;","  this.n = this.curve.n;","  this.nh = this.n.shrn(1);","  this.g = this.curve.g;","","  // Point on curve","  this.g = options.curve.g;","  this.g.precompute(options.curve.n.bitLength() + 1);","","  // Hash for function for DRBG","  this.hash = options.hash || options.curve.hash;","}","module.exports = EC;","","EC.prototype.keyPair = function keyPair(options) {","  return new KeyPair(this, options);","};","","EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {","  return KeyPair.fromPrivate(this, priv, enc);","};","","EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {","  return KeyPair.fromPublic(this, pub, enc);","};","","EC.prototype.genKeyPair = function genKeyPair(options) {","  if (!options)","    options = {};","","  // Instantiate Hmac_DRBG","  var drbg = new elliptic.hmacDRBG({","    hash: this.hash,","    pers: options.pers,","    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),","    nonce: this.n.toArray()","  });","","  var bytes = this.n.byteLength();","  var ns2 = this.n.sub(new bn(2));","  do {","    var priv = new bn(drbg.generate(bytes));","    if (priv.cmp(ns2) > 0)","      continue;","","    priv.iaddn(1);","    return this.keyFromPrivate(priv);","  } while (true);","};","","EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {","  var delta = msg.byteLength() * 8 - this.n.bitLength();","  if (delta > 0)","    msg = msg.shrn(delta);","  if (!truncOnly && msg.cmp(this.n) >= 0)","    return msg.sub(this.n);","  else","    return msg;","};","","EC.prototype.sign = function sign(msg, key, enc, options) {","  if (typeof enc === 'object') {","    options = enc;","    enc = null;","  }","  if (!options)","    options = {};","","  key = this.keyFromPrivate(key, enc);","  msg = this._truncateToN(new bn(msg, 16));","","  // Zero-extend key to provide enough entropy","  var bytes = this.n.byteLength();","  var bkey = key.getPrivate().toArray();","  for (var i = bkey.length; i < 21; i++)","    bkey.unshift(0);","","  // Zero-extend nonce to have the same byte size as N","  var nonce = msg.toArray();","  for (var i = nonce.length; i < bytes; i++)","    nonce.unshift(0);","","  // Instantiate Hmac_DRBG","  var drbg = new elliptic.hmacDRBG({","    hash: this.hash,","    entropy: bkey,","    nonce: nonce","  });","","  // Number of bytes to generate","  var ns1 = this.n.sub(new bn(1));","  do {","    var k = new bn(drbg.generate(this.n.byteLength()));","    k = this._truncateToN(k, true);","    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)","      continue;","","    var kp = this.g.mul(k);","    if (kp.isInfinity())","      continue;","","    var r = kp.getX().mod(this.n);","    if (r.cmpn(0) === 0)","      continue;","","    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg)).mod(this.n);","    if (s.cmpn(0) === 0)","      continue;","","    // Use complement of `s`, if it is > `n / 2`","    if (options.canonical && s.cmp(this.nh) > 0)","      s = this.n.sub(s);","","    return new Signature({ r: r, s: s });","  } while (true);","};","","EC.prototype.verify = function verify(msg, signature, key, enc) {","  msg = this._truncateToN(new bn(msg, 16));","  key = this.keyFromPublic(key, enc);","  signature = new Signature(signature, 'hex');","","  // Perform primitive values validation","  var r = signature.r;","  var s = signature.s;","  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)","    return false;","  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)","    return false;","","  // Validate signature","  var sinv = s.invm(this.n);","  var u1 = sinv.mul(msg).mod(this.n);","  var u2 = sinv.mul(r).mod(this.n);","","  var p = this.g.mulAdd(u1, key.getPublic(), u2);","  if (p.isInfinity())","    return false;","","  return p.getX().mod(this.n).cmp(r) === 0;","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"11":1,"12":0,"13":0,"16":0,"17":0,"19":0,"23":0,"24":0,"26":0,"27":0,"28":0,"29":0,"32":0,"33":0,"36":0,"38":1,"40":1,"41":0,"44":1,"45":0,"48":1,"49":0,"52":1,"53":0,"54":0,"57":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"71":0,"72":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"83":0,"86":1,"87":0,"88":0,"89":0,"91":0,"92":0,"94":0,"95":0,"98":0,"99":0,"100":0,"101":0,"104":0,"105":0,"106":0,"109":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"123":0,"124":0,"125":0,"127":0,"128":0,"129":0,"131":0,"132":0,"133":0,"136":0,"137":0,"139":0,"143":1,"144":0,"145":0,"146":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"157":0,"158":0,"159":0,"161":0,"162":0,"163":0,"165":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/ec/key.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/ec/key.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":1,"76":0,"77":1,"78":0,"79":1,"80":0,"81":1,"82":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"KeyPair","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}}},"2":{"name":"fromPublic","line":21,"loc":{"start":{"line":21,"column":21},"end":{"line":21,"column":55}}},"3":{"name":"fromPrivate","line":31,"loc":{"start":{"line":31,"column":22},"end":{"line":31,"column":58}}},"4":{"name":"validate","line":41,"loc":{"start":{"line":41,"column":29},"end":{"line":41,"column":49}}},"5":{"name":"getPublic","line":54,"loc":{"start":{"line":54,"column":30},"end":{"line":54,"column":63}}},"6":{"name":"getPrivate","line":90,"loc":{"start":{"line":90,"column":31},"end":{"line":90,"column":56}}},"7":{"name":"_importPrivate","line":97,"loc":{"start":{"line":97,"column":35},"end":{"line":97,"column":69}}},"8":{"name":"_importPublic","line":105,"loc":{"start":{"line":105,"column":34},"end":{"line":105,"column":67}}},"9":{"name":"_importPublicShort","line":118,"loc":{"start":{"line":118,"column":39},"end":{"line":118,"column":72}}},"10":{"name":"_importPublicMont","line":129,"loc":{"start":{"line":129,"column":38},"end":{"line":129,"column":70}}},"11":{"name":"derive","line":134,"loc":{"start":{"line":134,"column":27},"end":{"line":134,"column":48}}},"12":{"name":"sign","line":139,"loc":{"start":{"line":139,"column":25},"end":{"line":139,"column":44}}},"13":{"name":"verify","line":143,"loc":{"start":{"line":143,"column":27},"end":{"line":143,"column":59}}},"14":{"name":"inspect","line":147,"loc":{"start":{"line":147,"column":28},"end":{"line":147,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"4":{"start":{"line":8,"column":0},"end":{"line":18,"column":1}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":15}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":19}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":18}},"8":{"start":{"line":14,"column":2},"end":{"line":15,"column":55}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":55}},"10":{"start":{"line":16,"column":2},"end":{"line":17,"column":52}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":52}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":25}},"13":{"start":{"line":21,"column":0},"end":{"line":29,"column":2}},"14":{"start":{"line":22,"column":2},"end":{"line":23,"column":15}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":15}},"16":{"start":{"line":25,"column":2},"end":{"line":28,"column":5}},"17":{"start":{"line":31,"column":0},"end":{"line":39,"column":2}},"18":{"start":{"line":32,"column":2},"end":{"line":33,"column":16}},"19":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"20":{"start":{"line":35,"column":2},"end":{"line":38,"column":5}},"21":{"start":{"line":41,"column":0},"end":{"line":52,"column":2}},"22":{"start":{"line":42,"column":2},"end":{"line":42,"column":29}},"23":{"start":{"line":44,"column":2},"end":{"line":45,"column":59}},"24":{"start":{"line":45,"column":4},"end":{"line":45,"column":59}},"25":{"start":{"line":46,"column":2},"end":{"line":47,"column":66}},"26":{"start":{"line":47,"column":4},"end":{"line":47,"column":66}},"27":{"start":{"line":48,"column":2},"end":{"line":49,"column":60}},"28":{"start":{"line":49,"column":4},"end":{"line":49,"column":60}},"29":{"start":{"line":51,"column":2},"end":{"line":51,"column":40}},"30":{"start":{"line":54,"column":0},"end":{"line":88,"column":2}},"31":{"start":{"line":55,"column":2},"end":{"line":56,"column":40}},"32":{"start":{"line":56,"column":4},"end":{"line":56,"column":40}},"33":{"start":{"line":59,"column":2},"end":{"line":62,"column":3}},"34":{"start":{"line":60,"column":4},"end":{"line":60,"column":18}},"35":{"start":{"line":61,"column":4},"end":{"line":61,"column":19}},"36":{"start":{"line":64,"column":2},"end":{"line":65,"column":20}},"37":{"start":{"line":65,"column":4},"end":{"line":65,"column":20}},"38":{"start":{"line":67,"column":2},"end":{"line":67,"column":41}},"39":{"start":{"line":68,"column":2},"end":{"line":68,"column":36}},"40":{"start":{"line":70,"column":2},"end":{"line":71,"column":17}},"41":{"start":{"line":71,"column":4},"end":{"line":71,"column":17}},"42":{"start":{"line":73,"column":2},"end":{"line":73,"column":10}},"43":{"start":{"line":74,"column":2},"end":{"line":85,"column":3}},"44":{"start":{"line":75,"column":4},"end":{"line":82,"column":5}},"45":{"start":{"line":76,"column":6},"end":{"line":76,"column":65}},"46":{"start":{"line":78,"column":6},"end":{"line":78,"column":40}},"47":{"start":{"line":79,"column":6},"end":{"line":80,"column":21}},"48":{"start":{"line":80,"column":8},"end":{"line":80,"column":21}},"49":{"start":{"line":81,"column":6},"end":{"line":81,"column":38}},"50":{"start":{"line":84,"column":4},"end":{"line":84,"column":12}},"51":{"start":{"line":87,"column":2},"end":{"line":87,"column":32}},"52":{"start":{"line":90,"column":0},"end":{"line":95,"column":2}},"53":{"start":{"line":91,"column":2},"end":{"line":94,"column":21}},"54":{"start":{"line":92,"column":4},"end":{"line":92,"column":37}},"55":{"start":{"line":94,"column":4},"end":{"line":94,"column":21}},"56":{"start":{"line":97,"column":0},"end":{"line":103,"column":2}},"57":{"start":{"line":98,"column":2},"end":{"line":98,"column":37}},"58":{"start":{"line":102,"column":2},"end":{"line":102,"column":45}},"59":{"start":{"line":105,"column":0},"end":{"line":116,"column":2}},"60":{"start":{"line":106,"column":2},"end":{"line":109,"column":3}},"61":{"start":{"line":107,"column":4},"end":{"line":107,"column":49}},"62":{"start":{"line":108,"column":4},"end":{"line":108,"column":11}},"63":{"start":{"line":111,"column":2},"end":{"line":111,"column":32}},"64":{"start":{"line":112,"column":2},"end":{"line":115,"column":39}},"65":{"start":{"line":113,"column":4},"end":{"line":113,"column":40}},"66":{"start":{"line":115,"column":4},"end":{"line":115,"column":39}},"67":{"start":{"line":118,"column":0},"end":{"line":127,"column":2}},"68":{"start":{"line":119,"column":2},"end":{"line":119,"column":41}},"69":{"start":{"line":120,"column":2},"end":{"line":126,"column":3}},"70":{"start":{"line":121,"column":4},"end":{"line":123,"column":39}},"71":{"start":{"line":124,"column":9},"end":{"line":126,"column":3}},"72":{"start":{"line":125,"column":4},"end":{"line":125,"column":80}},"73":{"start":{"line":129,"column":0},"end":{"line":131,"column":2}},"74":{"start":{"line":130,"column":2},"end":{"line":130,"column":41}},"75":{"start":{"line":134,"column":0},"end":{"line":136,"column":2}},"76":{"start":{"line":135,"column":2},"end":{"line":135,"column":35}},"77":{"start":{"line":139,"column":0},"end":{"line":141,"column":2}},"78":{"start":{"line":140,"column":2},"end":{"line":140,"column":33}},"79":{"start":{"line":143,"column":0},"end":{"line":145,"column":2}},"80":{"start":{"line":144,"column":2},"end":{"line":144,"column":46}},"81":{"start":{"line":147,"column":0},"end":{"line":150,"column":2}},"82":{"start":{"line":148,"column":2},"end":{"line":149,"column":60}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"9":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"10":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"11":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"12":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"13":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":41},"end":{"line":76,"column":45}},{"start":{"line":76,"column":48},"end":{"line":76,"column":52}}]},"14":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"15":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":26},"end":{"line":98,"column":29}},{"start":{"line":98,"column":33},"end":{"line":98,"column":35}}]},"16":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"17":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":11}},{"start":{"line":106,"column":15},"end":{"line":106,"column":20}}]},"18":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"19":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":2},"end":{"line":120,"column":2}},{"start":{"line":120,"column":2},"end":{"line":120,"column":2}}]},"20":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":21}},{"start":{"line":120,"column":25},"end":{"line":120,"column":51}}]},"21":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":9},"end":{"line":124,"column":9}},{"start":{"line":124,"column":9},"end":{"line":124,"column":9}}]},"22":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":14},"end":{"line":124,"column":29}},{"start":{"line":124,"column":33},"end":{"line":124,"column":48}},{"start":{"line":124,"column":53},"end":{"line":124,"column":75}}]},"23":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":26},"end":{"line":148,"column":35}},{"start":{"line":148,"column":39},"end":{"line":148,"column":64}}]},"24":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":21},"end":{"line":149,"column":29}},{"start":{"line":149,"column":33},"end":{"line":149,"column":51}}]}},"code":["'use strict';","","var bn = require('bn.js');","","var elliptic = require('../../elliptic');","var utils = elliptic.utils;","","function KeyPair(ec, options) {","  this.ec = ec;","  this.priv = null;","  this.pub = null;","","  // KeyPair(ec, { priv: ..., pub: ... })","  if (options.priv)","    this._importPrivate(options.priv, options.privEnc);","  if (options.pub)","    this._importPublic(options.pub, options.pubEnc);","}","module.exports = KeyPair;","","KeyPair.fromPublic = function fromPublic(ec, pub, enc) {","  if (pub instanceof KeyPair)","    return pub;","","  return new KeyPair(ec, {","    pub: pub,","    pubEnc: enc","  });","};","","KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {","  if (priv instanceof KeyPair)","    return priv;","","  return new KeyPair(ec, {","    priv: priv,","    privEnc: enc","  });","};","","KeyPair.prototype.validate = function validate() {","  var pub = this.getPublic();","","  if (pub.isInfinity())","    return { result: false, reason: 'Invalid public key' };","  if (!pub.validate())","    return { result: false, reason: 'Public key is not a point' };","  if (!pub.mul(this.ec.curve.n).isInfinity())","    return { result: false, reason: 'Public key * N != O' };","","  return { result: true, reason: null };","};","","KeyPair.prototype.getPublic = function getPublic(compact, enc) {","  if (!this.pub)","    this.pub = this.ec.g.mul(this.priv);","","  // compact is optional argument","  if (typeof compact === 'string') {","    enc = compact;","    compact = null;","  }","","  if (!enc)","    return this.pub;","","  var len = this.ec.curve.p.byteLength();","  var x = this.pub.getX().toArray();","","  for (var i = x.length; i < len; i++)","    x.unshift(0);","","  var res;","  if (this.ec.curve.type !== 'mont') {","    if (compact) {","      res = [ this.pub.getY().isEven() ? 0x02 : 0x03 ].concat(x);","    } else {","      var y = this.pub.getY().toArray();","      for (var i = y.length; i < len; i++)","        y.unshift(0);","      var res = [ 0x04 ].concat(x, y);","    }","  } else {","    res = x;","  }","","  return utils.encode(res, enc);","};","","KeyPair.prototype.getPrivate = function getPrivate(enc) {","  if (enc === 'hex')","    return this.priv.toString(16, 2);","  else","    return this.priv;","};","","KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {","  this.priv = new bn(key, enc || 16);","","  // Ensure that the priv won't be bigger than n, otherwise we may fail","  // in fixed multiplication method","  this.priv = this.priv.mod(this.ec.curve.n);","};","","KeyPair.prototype._importPublic = function _importPublic(key, enc) {","  if (key.x || key.y) {","    this.pub = this.ec.curve.point(key.x, key.y);","    return;","  }","","  key = utils.toArray(key, enc);","  if (this.ec.curve.type !== 'mont')","    return this._importPublicShort(key);","  else","    return this._importPublicMont(key);","};","","KeyPair.prototype._importPublicShort = function _importPublicShort(key) {","  var len = this.ec.curve.p.byteLength();","  if (key[0] === 0x04 && key.length - 1 === 2 * len) {","    this.pub = this.ec.curve.point(","      key.slice(1, 1 + len),","      key.slice(1 + len, 1 + 2 * len));","  } else if ((key[0] === 0x02 || key[0] === 0x03) && key.length - 1 === len) {","    this.pub = this.ec.curve.pointFromX(key[0] === 0x03, key.slice(1, 1 + len));","  }","};","","KeyPair.prototype._importPublicMont = function _importPublicMont(key) {","  this.pub = this.ec.curve.point(key, 1);","};","","// ECDH","KeyPair.prototype.derive = function derive(pub) {","  return pub.mul(this.priv).getX();","};","","// ECDSA","KeyPair.prototype.sign = function sign(msg) {","  return this.ec.sign(msg, this);","};","","KeyPair.prototype.verify = function verify(msg, signature) {","  return this.ec.verify(msg, signature, this);","};","","KeyPair.prototype.inspect = function inspect() {","  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +","         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';","};",""],"l":{"3":1,"5":1,"6":1,"8":1,"9":0,"10":0,"11":0,"14":0,"15":0,"16":0,"17":0,"19":1,"21":1,"22":0,"23":0,"25":0,"31":1,"32":0,"33":0,"35":0,"41":1,"42":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"54":1,"55":0,"56":0,"59":0,"60":0,"61":0,"64":0,"65":0,"67":0,"68":0,"70":0,"71":0,"73":0,"74":0,"75":0,"76":0,"78":0,"79":0,"80":0,"81":0,"84":0,"87":0,"90":1,"91":0,"92":0,"94":0,"97":1,"98":0,"102":0,"105":1,"106":0,"107":0,"108":0,"111":0,"112":0,"113":0,"115":0,"118":1,"119":0,"120":0,"121":0,"124":0,"125":0,"129":1,"130":0,"134":1,"135":0,"139":1,"140":0,"143":1,"144":0,"147":1,"148":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/ec/signature.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/elliptic/lib/elliptic/ec/signature.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"Signature","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}}},"2":{"name":"_importDER","line":22,"loc":{"start":{"line":22,"column":33},"end":{"line":22,"column":64}}},"3":{"name":"toDER","line":50,"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"5":{"start":{"line":9,"column":0},"end":{"line":19,"column":1}},"6":{"start":{"line":10,"column":2},"end":{"line":11,"column":19}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":19}},"8":{"start":{"line":13,"column":2},"end":{"line":14,"column":11}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":11}},"10":{"start":{"line":16,"column":2},"end":{"line":16,"column":61}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":33}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":33}},"13":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"14":{"start":{"line":22,"column":0},"end":{"line":48,"column":2}},"15":{"start":{"line":23,"column":2},"end":{"line":23,"column":34}},"16":{"start":{"line":24,"column":2},"end":{"line":25,"column":17}},"17":{"start":{"line":25,"column":4},"end":{"line":25,"column":17}},"18":{"start":{"line":26,"column":2},"end":{"line":26,"column":22}},"19":{"start":{"line":27,"column":2},"end":{"line":28,"column":17}},"20":{"start":{"line":28,"column":4},"end":{"line":28,"column":17}},"21":{"start":{"line":29,"column":2},"end":{"line":29,"column":21}},"22":{"start":{"line":31,"column":2},"end":{"line":32,"column":17}},"23":{"start":{"line":32,"column":4},"end":{"line":32,"column":17}},"24":{"start":{"line":33,"column":2},"end":{"line":34,"column":17}},"25":{"start":{"line":34,"column":4},"end":{"line":34,"column":17}},"26":{"start":{"line":35,"column":2},"end":{"line":36,"column":17}},"27":{"start":{"line":36,"column":4},"end":{"line":36,"column":17}},"28":{"start":{"line":37,"column":2},"end":{"line":37,"column":28}},"29":{"start":{"line":39,"column":2},"end":{"line":40,"column":17}},"30":{"start":{"line":40,"column":4},"end":{"line":40,"column":17}},"31":{"start":{"line":41,"column":2},"end":{"line":42,"column":17}},"32":{"start":{"line":42,"column":4},"end":{"line":42,"column":17}},"33":{"start":{"line":44,"column":2},"end":{"line":44,"column":43}},"34":{"start":{"line":45,"column":2},"end":{"line":45,"column":65}},"35":{"start":{"line":47,"column":2},"end":{"line":47,"column":14}},"36":{"start":{"line":50,"column":0},"end":{"line":65,"column":2}},"37":{"start":{"line":51,"column":2},"end":{"line":51,"column":27}},"38":{"start":{"line":52,"column":2},"end":{"line":52,"column":27}},"39":{"start":{"line":55,"column":2},"end":{"line":56,"column":24}},"40":{"start":{"line":56,"column":4},"end":{"line":56,"column":24}},"41":{"start":{"line":58,"column":2},"end":{"line":59,"column":24}},"42":{"start":{"line":59,"column":4},"end":{"line":59,"column":24}},"43":{"start":{"line":61,"column":2},"end":{"line":61,"column":38}},"44":{"start":{"line":62,"column":2},"end":{"line":62,"column":44}},"45":{"start":{"line":63,"column":2},"end":{"line":63,"column":45}},"46":{"start":{"line":64,"column":2},"end":{"line":64,"column":32}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":9},"end":{"line":16,"column":18}},{"start":{"line":16,"column":22},"end":{"line":16,"column":31}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"5":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":21}},{"start":{"line":24,"column":25},"end":{"line":24,"column":41}},{"start":{"line":24,"column":45},"end":{"line":24,"column":61}}]},"6":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"7":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"8":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"9":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"10":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"11":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"12":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"13":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]}},"code":["'use strict';","","var bn = require('bn.js');","","var elliptic = require('../../elliptic');","var utils = elliptic.utils;","var assert = utils.assert;","","function Signature(options, enc) {","  if (options instanceof Signature)","    return options;","","  if (this._importDER(options, enc))","    return;","","  assert(options.r && options.s, 'Signature without r or s');","  this.r = new bn(options.r, 16);","  this.s = new bn(options.s, 16);","}","module.exports = Signature;","","Signature.prototype._importDER = function _importDER(data, enc) {","  data = utils.toArray(data, enc);","  if (data.length < 6 || data[0] !== 0x30 || data[2] !== 0x02)","    return false;","  var total = data[1];","  if (1 + total > data.length)","    return false;","  var rlen = data[3];","  // Short length notation","  if (rlen >= 0x80)","    return false;","  if (4 + rlen + 2 >= data.length)","    return false;","  if (data[4 + rlen] !== 0x02)","    return false;","  var slen = data[5 + rlen];","  // Short length notation","  if (slen >= 0x80)","    return false;","  if (4 + rlen + 2 + slen > data.length)","    return false;","","  this.r = new bn(data.slice(4, 4 + rlen));","  this.s = new bn(data.slice(4 + rlen + 2, 4 + rlen + 2 + slen));","","  return true;","};","","Signature.prototype.toDER = function toDER(enc) {","  var r = this.r.toArray();","  var s = this.s.toArray();","","  // Pad values","  if (r[0] & 0x80)","    r = [ 0 ].concat(r);","  // Pad values","  if (s[0] & 0x80)","    s = [ 0 ].concat(s);","","  var total = r.length + s.length + 4;","  var res = [ 0x30, total, 0x02, r.length ];","  res = res.concat(r, [ 0x02, s.length ], s);","  return utils.encode(res, enc);","};",""],"l":{"3":1,"5":1,"6":1,"7":1,"9":1,"10":0,"11":0,"13":0,"14":0,"16":0,"17":0,"18":0,"20":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"47":0,"50":1,"51":0,"52":0,"55":0,"56":0,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/signature.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/signature.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":1,"163":1,"164":1,"165":1,"166":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"Signature","line":9,"loc":{"start":{"line":9,"column":16},"end":{"line":9,"column":41}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":26},"end":{"line":25,"column":40}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":24},"end":{"line":35,"column":38}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":43},"end":{"line":62,"column":65}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":25},"end":{"line":73,"column":39}}},"6":{"name":"(anonymous_6)","line":81,"loc":{"start":{"line":81,"column":23},"end":{"line":81,"column":37}}},"7":{"name":"(anonymous_7)","line":90,"loc":{"start":{"line":90,"column":21},"end":{"line":90,"column":43}}},"8":{"name":"(anonymous_8)","line":145,"loc":{"start":{"line":145,"column":32},"end":{"line":145,"column":56}}},"9":{"name":"(anonymous_9)","line":167,"loc":{"start":{"line":167,"column":59},"end":{"line":167,"column":70}}},"10":{"name":"(anonymous_10)","line":188,"loc":{"start":{"line":188,"column":31},"end":{"line":188,"column":42}}},"11":{"name":"(anonymous_11)","line":205,"loc":{"start":{"line":205,"column":20},"end":{"line":205,"column":34}}},"12":{"name":"(anonymous_12)","line":276,"loc":{"start":{"line":276,"column":30},"end":{"line":276,"column":41}}},"13":{"name":"(anonymous_13)","line":288,"loc":{"start":{"line":288,"column":41},"end":{"line":288,"column":52}}},"14":{"name":"(anonymous_14)","line":300,"loc":{"start":{"line":300,"column":33},"end":{"line":300,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"6":{"start":{"line":9,"column":0},"end":{"line":22,"column":2}},"7":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":31}},"9":{"start":{"line":13,"column":2},"end":{"line":21,"column":3}},"10":{"start":{"line":14,"column":4},"end":{"line":17,"column":7}},"11":{"start":{"line":18,"column":9},"end":{"line":21,"column":3}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":16}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":18}},"14":{"start":{"line":25,"column":0},"end":{"line":33,"column":2}},"15":{"start":{"line":26,"column":2},"end":{"line":26,"column":40}},"16":{"start":{"line":27,"column":2},"end":{"line":27,"column":40}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":57}},"18":{"start":{"line":29,"column":2},"end":{"line":30,"column":37}},"19":{"start":{"line":31,"column":2},"end":{"line":31,"column":64}},"20":{"start":{"line":32,"column":2},"end":{"line":32,"column":14}},"21":{"start":{"line":35,"column":0},"end":{"line":60,"column":2}},"22":{"start":{"line":36,"column":2},"end":{"line":36,"column":83}},"23":{"start":{"line":38,"column":2},"end":{"line":38,"column":28}},"24":{"start":{"line":40,"column":2},"end":{"line":40,"column":24}},"25":{"start":{"line":41,"column":2},"end":{"line":41,"column":38}},"26":{"start":{"line":42,"column":2},"end":{"line":45,"column":3}},"27":{"start":{"line":43,"column":4},"end":{"line":43,"column":23}},"28":{"start":{"line":44,"column":4},"end":{"line":44,"column":14}},"29":{"start":{"line":47,"column":2},"end":{"line":47,"column":28}},"30":{"start":{"line":48,"column":2},"end":{"line":48,"column":29}},"31":{"start":{"line":50,"column":2},"end":{"line":50,"column":98}},"32":{"start":{"line":51,"column":2},"end":{"line":51,"column":69}},"33":{"start":{"line":52,"column":2},"end":{"line":52,"column":69}},"34":{"start":{"line":54,"column":2},"end":{"line":54,"column":30}},"35":{"start":{"line":55,"column":2},"end":{"line":55,"column":12}},"36":{"start":{"line":56,"column":2},"end":{"line":56,"column":28}},"37":{"start":{"line":57,"column":2},"end":{"line":57,"column":28}},"38":{"start":{"line":59,"column":2},"end":{"line":59,"column":13}},"39":{"start":{"line":62,"column":0},"end":{"line":70,"column":2}},"40":{"start":{"line":63,"column":2},"end":{"line":63,"column":44}},"41":{"start":{"line":64,"column":2},"end":{"line":64,"column":28}},"42":{"start":{"line":66,"column":2},"end":{"line":66,"column":16}},"43":{"start":{"line":67,"column":2},"end":{"line":67,"column":16}},"44":{"start":{"line":69,"column":2},"end":{"line":69,"column":13}},"45":{"start":{"line":73,"column":0},"end":{"line":79,"column":2}},"46":{"start":{"line":74,"column":2},"end":{"line":74,"column":48}},"47":{"start":{"line":75,"column":2},"end":{"line":75,"column":44}},"48":{"start":{"line":76,"column":2},"end":{"line":76,"column":49}},"49":{"start":{"line":77,"column":2},"end":{"line":77,"column":28}},"50":{"start":{"line":78,"column":2},"end":{"line":78,"column":13}},"51":{"start":{"line":81,"column":0},"end":{"line":84,"column":2}},"52":{"start":{"line":82,"column":2},"end":{"line":82,"column":35}},"53":{"start":{"line":83,"column":2},"end":{"line":83,"column":32}},"54":{"start":{"line":90,"column":0},"end":{"line":142,"column":2}},"55":{"start":{"line":91,"column":2},"end":{"line":91,"column":101}},"56":{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},"57":{"start":{"line":93,"column":4},"end":{"line":93,"column":18}},"58":{"start":{"line":96,"column":2},"end":{"line":96,"column":22}},"59":{"start":{"line":97,"column":2},"end":{"line":97,"column":76}},"60":{"start":{"line":99,"column":2},"end":{"line":99,"column":22}},"61":{"start":{"line":100,"column":2},"end":{"line":100,"column":38}},"62":{"start":{"line":101,"column":2},"end":{"line":101,"column":107}},"63":{"start":{"line":103,"column":2},"end":{"line":103,"column":51}},"64":{"start":{"line":105,"column":2},"end":{"line":105,"column":27}},"65":{"start":{"line":106,"column":2},"end":{"line":106,"column":84}},"66":{"start":{"line":108,"column":2},"end":{"line":108,"column":27}},"67":{"start":{"line":109,"column":2},"end":{"line":109,"column":47}},"68":{"start":{"line":110,"column":2},"end":{"line":110,"column":30}},"69":{"start":{"line":111,"column":2},"end":{"line":111,"column":52}},"70":{"start":{"line":112,"column":2},"end":{"line":112,"column":79}},"71":{"start":{"line":114,"column":2},"end":{"line":114,"column":41}},"72":{"start":{"line":115,"column":2},"end":{"line":115,"column":84}},"73":{"start":{"line":117,"column":2},"end":{"line":117,"column":41}},"74":{"start":{"line":118,"column":2},"end":{"line":118,"column":75}},"75":{"start":{"line":119,"column":2},"end":{"line":119,"column":30}},"76":{"start":{"line":120,"column":2},"end":{"line":120,"column":66}},"77":{"start":{"line":121,"column":2},"end":{"line":121,"column":79}},"78":{"start":{"line":123,"column":2},"end":{"line":123,"column":48}},"79":{"start":{"line":124,"column":2},"end":{"line":124,"column":88}},"80":{"start":{"line":126,"column":2},"end":{"line":139,"column":4}},"81":{"start":{"line":141,"column":2},"end":{"line":141,"column":13}},"82":{"start":{"line":145,"column":0},"end":{"line":165,"column":2}},"83":{"start":{"line":146,"column":2},"end":{"line":146,"column":41}},"84":{"start":{"line":147,"column":2},"end":{"line":147,"column":78}},"85":{"start":{"line":149,"column":2},"end":{"line":151,"column":3}},"86":{"start":{"line":150,"column":4},"end":{"line":150,"column":56}},"87":{"start":{"line":153,"column":2},"end":{"line":153,"column":23}},"88":{"start":{"line":154,"column":2},"end":{"line":156,"column":3}},"89":{"start":{"line":155,"column":4},"end":{"line":155,"column":18}},"90":{"start":{"line":157,"column":2},"end":{"line":157,"column":29}},"91":{"start":{"line":158,"column":2},"end":{"line":160,"column":5}},"92":{"start":{"line":161,"column":2},"end":{"line":163,"column":5}},"93":{"start":{"line":164,"column":2},"end":{"line":164,"column":37}},"94":{"start":{"line":167,"column":0},"end":{"line":186,"column":2}},"95":{"start":{"line":168,"column":2},"end":{"line":168,"column":32}},"96":{"start":{"line":169,"column":2},"end":{"line":169,"column":32}},"97":{"start":{"line":171,"column":2},"end":{"line":171,"column":44}},"98":{"start":{"line":172,"column":2},"end":{"line":172,"column":44}},"99":{"start":{"line":174,"column":2},"end":{"line":174,"column":71}},"100":{"start":{"line":175,"column":2},"end":{"line":175,"column":71}},"101":{"start":{"line":177,"column":2},"end":{"line":177,"column":28}},"102":{"start":{"line":178,"column":2},"end":{"line":178,"column":28}},"103":{"start":{"line":179,"column":2},"end":{"line":179,"column":41}},"104":{"start":{"line":180,"column":2},"end":{"line":180,"column":21}},"105":{"start":{"line":181,"column":2},"end":{"line":181,"column":21}},"106":{"start":{"line":182,"column":2},"end":{"line":182,"column":20}},"107":{"start":{"line":184,"column":2},"end":{"line":184,"column":120}},"108":{"start":{"line":185,"column":2},"end":{"line":185,"column":13}},"109":{"start":{"line":188,"column":0},"end":{"line":191,"column":2}},"110":{"start":{"line":189,"column":2},"end":{"line":189,"column":25}},"111":{"start":{"line":190,"column":2},"end":{"line":190,"column":29}},"112":{"start":{"line":205,"column":0},"end":{"line":269,"column":2}},"113":{"start":{"line":206,"column":2},"end":{"line":209,"column":3}},"114":{"start":{"line":208,"column":4},"end":{"line":208,"column":17}},"115":{"start":{"line":210,"column":2},"end":{"line":213,"column":3}},"116":{"start":{"line":212,"column":4},"end":{"line":212,"column":17}},"117":{"start":{"line":214,"column":2},"end":{"line":217,"column":3}},"118":{"start":{"line":216,"column":4},"end":{"line":216,"column":17}},"119":{"start":{"line":218,"column":2},"end":{"line":221,"column":3}},"120":{"start":{"line":220,"column":4},"end":{"line":220,"column":17}},"121":{"start":{"line":222,"column":2},"end":{"line":222,"column":21}},"122":{"start":{"line":223,"column":2},"end":{"line":226,"column":3}},"123":{"start":{"line":225,"column":4},"end":{"line":225,"column":17}},"124":{"start":{"line":227,"column":2},"end":{"line":227,"column":29}},"125":{"start":{"line":228,"column":2},"end":{"line":231,"column":3}},"126":{"start":{"line":230,"column":4},"end":{"line":230,"column":17}},"127":{"start":{"line":233,"column":2},"end":{"line":233,"column":23}},"128":{"start":{"line":234,"column":2},"end":{"line":237,"column":3}},"129":{"start":{"line":236,"column":4},"end":{"line":236,"column":17}},"130":{"start":{"line":238,"column":2},"end":{"line":241,"column":3}},"131":{"start":{"line":240,"column":4},"end":{"line":240,"column":17}},"132":{"start":{"line":242,"column":2},"end":{"line":245,"column":3}},"133":{"start":{"line":244,"column":4},"end":{"line":244,"column":17}},"134":{"start":{"line":246,"column":2},"end":{"line":249,"column":3}},"135":{"start":{"line":248,"column":4},"end":{"line":248,"column":17}},"136":{"start":{"line":251,"column":2},"end":{"line":251,"column":31}},"137":{"start":{"line":252,"column":2},"end":{"line":255,"column":3}},"138":{"start":{"line":254,"column":4},"end":{"line":254,"column":17}},"139":{"start":{"line":256,"column":2},"end":{"line":259,"column":3}},"140":{"start":{"line":258,"column":4},"end":{"line":258,"column":17}},"141":{"start":{"line":260,"column":2},"end":{"line":263,"column":3}},"142":{"start":{"line":262,"column":4},"end":{"line":262,"column":17}},"143":{"start":{"line":264,"column":2},"end":{"line":267,"column":3}},"144":{"start":{"line":266,"column":4},"end":{"line":266,"column":17}},"145":{"start":{"line":268,"column":2},"end":{"line":268,"column":14}},"146":{"start":{"line":276,"column":0},"end":{"line":282,"column":2}},"147":{"start":{"line":277,"column":2},"end":{"line":280,"column":3}},"148":{"start":{"line":279,"column":4},"end":{"line":279,"column":17}},"149":{"start":{"line":281,"column":2},"end":{"line":281,"column":14}},"150":{"start":{"line":288,"column":0},"end":{"line":298,"column":2}},"151":{"start":{"line":289,"column":2},"end":{"line":291,"column":3}},"152":{"start":{"line":290,"column":4},"end":{"line":290,"column":17}},"153":{"start":{"line":293,"column":2},"end":{"line":293,"column":62}},"154":{"start":{"line":294,"column":2},"end":{"line":296,"column":3}},"155":{"start":{"line":295,"column":4},"end":{"line":295,"column":17}},"156":{"start":{"line":297,"column":2},"end":{"line":297,"column":14}},"157":{"start":{"line":300,"column":0},"end":{"line":305,"column":2}},"158":{"start":{"line":301,"column":2},"end":{"line":301,"column":28}},"159":{"start":{"line":302,"column":2},"end":{"line":302,"column":26}},"160":{"start":{"line":303,"column":2},"end":{"line":303,"column":36}},"161":{"start":{"line":304,"column":2},"end":{"line":304,"column":38}},"162":{"start":{"line":307,"column":0},"end":{"line":307,"column":29}},"163":{"start":{"line":308,"column":0},"end":{"line":308,"column":30}},"164":{"start":{"line":309,"column":0},"end":{"line":309,"column":32}},"165":{"start":{"line":310,"column":0},"end":{"line":310,"column":38}},"166":{"start":{"line":312,"column":0},"end":{"line":312,"column":27}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":9},"end":{"line":18,"column":9}},{"start":{"line":18,"column":9},"end":{"line":18,"column":9}}]},"4":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":11},"end":{"line":26,"column":16}},{"start":{"line":26,"column":20},"end":{"line":26,"column":26}},{"start":{"line":26,"column":30},"end":{"line":26,"column":39}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":11},"end":{"line":27,"column":16}},{"start":{"line":27,"column":20},"end":{"line":27,"column":26}},{"start":{"line":27,"column":30},"end":{"line":27,"column":39}}]},"6":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":42},"end":{"line":28,"column":47}},{"start":{"line":28,"column":50},"end":{"line":28,"column":56}}]},"7":{"line":29,"type":"cond-expr","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":18}},{"start":{"line":30,"column":21},"end":{"line":30,"column":36}}]},"8":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":19},"end":{"line":31,"column":32}},{"start":{"line":31,"column":36},"end":{"line":31,"column":50}},{"start":{"line":31,"column":54},"end":{"line":31,"column":63}}]},"9":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"10":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":18},"end":{"line":50,"column":25}},{"start":{"line":50,"column":29},"end":{"line":50,"column":36}},{"start":{"line":50,"column":40},"end":{"line":50,"column":47}},{"start":{"line":50,"column":51},"end":{"line":50,"column":58}}]},"11":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"12":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":18},"end":{"line":101,"column":25}},{"start":{"line":101,"column":29},"end":{"line":101,"column":49}}]},"13":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":32},"end":{"line":103,"column":38}},{"start":{"line":103,"column":41},"end":{"line":103,"column":50}}]},"14":{"line":111,"type":"cond-expr","locations":[{"start":{"line":111,"column":39},"end":{"line":111,"column":43}},{"start":{"line":111,"column":46},"end":{"line":111,"column":51}}]},"15":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":53},"end":{"line":120,"column":57}},{"start":{"line":120,"column":60},"end":{"line":120,"column":65}}]},"16":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":30},"end":{"line":146,"column":31}},{"start":{"line":146,"column":34},"end":{"line":146,"column":40}}]},"17":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":49},"end":{"line":147,"column":59}},{"start":{"line":147,"column":62},"end":{"line":147,"column":77}}]},"18":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"19":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":15}},{"start":{"line":149,"column":19},"end":{"line":149,"column":26}},{"start":{"line":149,"column":30},"end":{"line":149,"column":37}},{"start":{"line":149,"column":41},"end":{"line":149,"column":48}}]},"20":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"21":{"line":171,"type":"cond-expr","locations":[{"start":{"line":171,"column":31},"end":{"line":171,"column":35}},{"start":{"line":171,"column":38},"end":{"line":171,"column":43}}]},"22":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":31},"end":{"line":172,"column":35}},{"start":{"line":172,"column":38},"end":{"line":172,"column":43}}]},"23":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":20},"end":{"line":174,"column":62}},{"start":{"line":174,"column":65},"end":{"line":174,"column":70}}]},"24":{"line":175,"type":"cond-expr","locations":[{"start":{"line":175,"column":20},"end":{"line":175,"column":62}},{"start":{"line":175,"column":65},"end":{"line":175,"column":70}}]},"25":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"26":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"27":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":214,"column":2}},{"start":{"line":214,"column":2},"end":{"line":214,"column":2}}]},"28":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"29":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":2}},{"start":{"line":223,"column":2},"end":{"line":223,"column":2}}]},"30":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":228,"column":2}},{"start":{"line":228,"column":2},"end":{"line":228,"column":2}}]},"31":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":234,"column":2}},{"start":{"line":234,"column":2},"end":{"line":234,"column":2}}]},"32":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":2},"end":{"line":238,"column":2}},{"start":{"line":238,"column":2},"end":{"line":238,"column":2}}]},"33":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":2},"end":{"line":242,"column":2}},{"start":{"line":242,"column":2},"end":{"line":242,"column":2}}]},"34":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"35":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":6},"end":{"line":246,"column":15}},{"start":{"line":246,"column":20},"end":{"line":246,"column":33}},{"start":{"line":246,"column":38},"end":{"line":246,"column":52}}]},"36":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":252,"column":2}},{"start":{"line":252,"column":2},"end":{"line":252,"column":2}}]},"37":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"38":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"39":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"40":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":6},"end":{"line":264,"column":15}},{"start":{"line":264,"column":20},"end":{"line":264,"column":33}},{"start":{"line":264,"column":38},"end":{"line":264,"column":52}}]},"41":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]},"42":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":6},"end":{"line":277,"column":26}},{"start":{"line":278,"column":4},"end":{"line":278,"column":96}}]},"43":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":2},"end":{"line":289,"column":2}},{"start":{"line":289,"column":2},"end":{"line":289,"column":2}}]},"44":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"45":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":6},"end":{"line":294,"column":34}},{"start":{"line":294,"column":38},"end":{"line":294,"column":69}}]}},"code":["'use strict';","","var BN = require('./bn');","var _ = require('lodash');","var $ = require('../util/preconditions');","var BufferUtil = require('../util/buffer');","var JSUtil = require('../util/js');","","var Signature = function Signature(r, s) {","  if (!(this instanceof Signature)) {","    return new Signature(r, s);","  }","  if (r instanceof BN) {","    this.set({","      r: r,","      s: s","    });","  } else if (r) {","    var obj = r;","    this.set(obj);","  }","};","","/* jshint maxcomplexity: 7 */","Signature.prototype.set = function(obj) {","  this.r = obj.r || this.r || undefined;","  this.s = obj.s || this.s || undefined;","  this.i = typeof obj.i !== 'undefined' ? obj.i : this.i; //public key recovery parameter in range [0, 3]","  this.compressed = typeof obj.compressed !== 'undefined' ?","    obj.compressed : this.compressed; //whether the recovered pubkey is compressed","  this.nhashtype = obj.nhashtype || this.nhashtype || undefined;","  return this;","};","","Signature.fromCompact = function(buf) {","  $.checkArgument(BufferUtil.isBuffer(buf), 'Argument is expected to be a Buffer');","","  var sig = new Signature();","","  var compressed = true;","  var i = buf.slice(0, 1)[0] - 27 - 4;","  if (i < 0) {","    compressed = false;","    i = i + 4;","  }","","  var b2 = buf.slice(1, 33);","  var b3 = buf.slice(33, 65);","","  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be 0, 1, 2, or 3'));","  $.checkArgument(b2.length === 32, new Error('r must be 32 bytes'));","  $.checkArgument(b3.length === 32, new Error('s must be 32 bytes'));","","  sig.compressed = compressed;","  sig.i = i;","  sig.r = BN.fromBuffer(b2);","  sig.s = BN.fromBuffer(b3);","","  return sig;","};","","Signature.fromDER = Signature.fromBuffer = function(buf, strict) {","  var obj = Signature.parseDER(buf, strict);","  var sig = new Signature();","","  sig.r = obj.r;","  sig.s = obj.s;","","  return sig;","};","","// The format used in a tx","Signature.fromTxFormat = function(buf) {","  var nhashtype = buf.readUInt8(buf.length - 1);","  var derbuf = buf.slice(0, buf.length - 1);","  var sig = new Signature.fromDER(derbuf, false);","  sig.nhashtype = nhashtype;","  return sig;","};","","Signature.fromString = function(str) {","  var buf = new Buffer(str, 'hex');","  return Signature.fromDER(buf);","};","","","/**"," * In order to mimic the non-strict DER encoding of OpenSSL, set strict = false."," */","Signature.parseDER = function(buf, strict) {","  $.checkArgument(BufferUtil.isBuffer(buf), new Error('DER formatted signature should be a buffer'));","  if (_.isUndefined(strict)) {","    strict = true;","  }","","  var header = buf[0];","  $.checkArgument(header === 0x30, new Error('Header byte should be 0x30'));","","  var length = buf[1];","  var buflength = buf.slice(2).length;","  $.checkArgument(!strict || length === buflength, new Error('Length byte should length of what follows'));","","  length = length < buflength ? length : buflength;","","  var rheader = buf[2 + 0];","  $.checkArgument(rheader === 0x02, new Error('Integer byte for r should be 0x02'));","","  var rlength = buf[2 + 1];","  var rbuf = buf.slice(2 + 2, 2 + 2 + rlength);","  var r = BN.fromBuffer(rbuf);","  var rneg = buf[2 + 1 + 1] === 0x00 ? true : false;","  $.checkArgument(rlength === rbuf.length, new Error('Length of r incorrect'));","","  var sheader = buf[2 + 2 + rlength + 0];","  $.checkArgument(sheader === 0x02, new Error('Integer byte for s should be 0x02'));","","  var slength = buf[2 + 2 + rlength + 1];","  var sbuf = buf.slice(2 + 2 + rlength + 2, 2 + 2 + rlength + 2 + slength);","  var s = BN.fromBuffer(sbuf);","  var sneg = buf[2 + 2 + rlength + 2 + 2] === 0x00 ? true : false;","  $.checkArgument(slength === sbuf.length, new Error('Length of s incorrect'));","","  var sumlength = 2 + 2 + rlength + 2 + slength;","  $.checkArgument(length === sumlength - 2, new Error('Length of signature incorrect'));","","  var obj = {","    header: header,","    length: length,","    rheader: rheader,","    rlength: rlength,","    rneg: rneg,","    rbuf: rbuf,","    r: r,","    sheader: sheader,","    slength: slength,","    sneg: sneg,","    sbuf: sbuf,","    s: s","  };","","  return obj;","};","","","Signature.prototype.toCompact = function(i, compressed) {","  i = typeof i === 'number' ? i : this.i;","  compressed = typeof compressed === 'boolean' ? compressed : this.compressed;","","  if (!(i === 0 || i === 1 || i === 2 || i === 3)) {","    throw new Error('i must be equal to 0, 1, 2, or 3');","  }","","  var val = i + 27 + 4;","  if (compressed === false) {","    val = val - 4;","  }","  var b1 = new Buffer([val]);","  var b2 = this.r.toBuffer({","    size: 32","  });","  var b3 = this.s.toBuffer({","    size: 32","  });","  return Buffer.concat([b1, b2, b3]);","};","","Signature.prototype.toBuffer = Signature.prototype.toDER = function() {","  var rnbuf = this.r.toBuffer();","  var snbuf = this.s.toBuffer();","","  var rneg = rnbuf[0] & 0x80 ? true : false;","  var sneg = snbuf[0] & 0x80 ? true : false;","","  var rbuf = rneg ? Buffer.concat([new Buffer([0x00]), rnbuf]) : rnbuf;","  var sbuf = sneg ? Buffer.concat([new Buffer([0x00]), snbuf]) : snbuf;","","  var rlength = rbuf.length;","  var slength = sbuf.length;","  var length = 2 + rlength + 2 + slength;","  var rheader = 0x02;","  var sheader = 0x02;","  var header = 0x30;","","  var der = Buffer.concat([new Buffer([header, length, rheader, rlength]), rbuf, new Buffer([sheader, slength]), sbuf]);","  return der;","};","","Signature.prototype.toString = function() {","  var buf = this.toDER();","  return buf.toString('hex');","};","","/**"," * This function is translated from bitcoind's IsDERSignature and is used in"," * the script interpreter.  This \"DER\" format actually includes an extra byte,"," * the nhashtype, at the end. It is really the tx format, not DER format."," *"," * A canonical signature exists of: [30] [total len] [02] [len R] [R] [02] [len S] [S] [hashtype]"," * Where R and S are not negative (their first byte has its highest bit not set), and not"," * excessively padded (do not start with a 0 byte, unless an otherwise negative number follows,"," * in which case a single 0 byte is necessary and even required)."," *"," * See https://bitcointalk.org/index.php?topic=8392.msg127623#msg127623"," */","Signature.isTxDER = function(buf) {","  if (buf.length < 9) {","    //  Non-canonical signature: too short","    return false;","  }","  if (buf.length > 73) {","    // Non-canonical signature: too long","    return false;","  }","  if (buf[0] !== 0x30) {","    //  Non-canonical signature: wrong type","    return false;","  }","  if (buf[1] !== buf.length - 3) {","    //  Non-canonical signature: wrong length marker","    return false;","  }","  var nLenR = buf[3];","  if (5 + nLenR >= buf.length) {","    //  Non-canonical signature: S length misplaced","    return false;","  }","  var nLenS = buf[5 + nLenR];","  if ((nLenR + nLenS + 7) !== buf.length) {","    //  Non-canonical signature: R+S length mismatch","    return false;","  }","","  var R = buf.slice(4);","  if (buf[4 - 2] !== 0x02) {","    //  Non-canonical signature: R value type mismatch","    return false;","  }","  if (nLenR === 0) {","    //  Non-canonical signature: R length is zero","    return false;","  }","  if (R[0] & 0x80) {","    //  Non-canonical signature: R value negative","    return false;","  }","  if (nLenR > 1 && (R[0] === 0x00) && !(R[1] & 0x80)) {","    //  Non-canonical signature: R value excessively padded","    return false;","  }","","  var S = buf.slice(6 + nLenR);","  if (buf[6 + nLenR - 2] !== 0x02) {","    //  Non-canonical signature: S value type mismatch","    return false;","  }","  if (nLenS === 0) {","    //  Non-canonical signature: S length is zero","    return false;","  }","  if (S[0] & 0x80) {","    //  Non-canonical signature: S value negative","    return false;","  }","  if (nLenS > 1 && (S[0] === 0x00) && !(S[1] & 0x80)) {","    //  Non-canonical signature: S value excessively padded","    return false;","  }","  return true;","};","","/**"," * Compares to bitcoind's IsLowDERSignature"," * See also ECDSA signature algorithm which enforces this."," * See also BIP 62, \"low S values in signatures\""," */","Signature.prototype.hasLowS = function() {","  if (this.s.lt(new BN(1)) ||","    this.s.gt(new BN('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex'))) {","    return false;","  }","  return true;","};","","/**"," * @returns true if the nhashtype is exactly equal to one of the standard options or combinations thereof."," * Translated from bitcoind's IsDefinedHashtypeSignature"," */","Signature.prototype.hasDefinedHashtype = function() {","  if (!JSUtil.isNaturalNumber(this.nhashtype)) {","    return false;","  }","  // accept with or without Signature.SIGHASH_ANYONECANPAY by ignoring the bit","  var temp = this.nhashtype & ~Signature.SIGHASH_ANYONECANPAY;","  if (temp < Signature.SIGHASH_ALL || temp > Signature.SIGHASH_SINGLE) {","    return false;","  }","  return true;","};","","Signature.prototype.toTxFormat = function() {","  var derbuf = this.toDER();","  var buf = new Buffer(1);","  buf.writeUInt8(this.nhashtype, 0);","  return Buffer.concat([derbuf, buf]);","};","","Signature.SIGHASH_ALL = 0x01;","Signature.SIGHASH_NONE = 0x02;","Signature.SIGHASH_SINGLE = 0x03;","Signature.SIGHASH_ANYONECANPAY = 0x80;","","module.exports = Signature;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"11":0,"13":0,"14":0,"18":0,"19":0,"20":0,"25":1,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"35":1,"36":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"47":0,"48":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"57":0,"59":0,"62":1,"63":0,"64":0,"66":0,"67":0,"69":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"81":1,"82":0,"83":0,"90":1,"91":0,"92":0,"93":0,"96":0,"97":0,"99":0,"100":0,"101":0,"103":0,"105":0,"106":0,"108":0,"109":0,"110":0,"111":0,"112":0,"114":0,"115":0,"117":0,"118":0,"119":0,"120":0,"121":0,"123":0,"124":0,"126":0,"141":0,"145":1,"146":0,"147":0,"149":0,"150":0,"153":0,"154":0,"155":0,"157":0,"158":0,"161":0,"164":0,"167":1,"168":0,"169":0,"171":0,"172":0,"174":0,"175":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"184":0,"185":0,"188":1,"189":0,"190":0,"205":1,"206":0,"208":0,"210":0,"212":0,"214":0,"216":0,"218":0,"220":0,"222":0,"223":0,"225":0,"227":0,"228":0,"230":0,"233":0,"234":0,"236":0,"238":0,"240":0,"242":0,"244":0,"246":0,"248":0,"251":0,"252":0,"254":0,"256":0,"258":0,"260":0,"262":0,"264":0,"266":0,"268":0,"276":1,"277":0,"279":0,"281":0,"288":1,"289":0,"290":0,"293":0,"294":0,"295":0,"297":0,"300":1,"301":0,"302":0,"303":0,"304":0,"307":1,"308":1,"309":1,"310":1,"312":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/publickey.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/publickey.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":1,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":1,"131":0,"132":0,"133":1,"134":0,"135":1,"136":0,"137":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"PublicKey","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":32}}},"2":{"name":"(anonymous_2)","line":69,"loc":{"start":{"line":69,"column":36},"end":{"line":69,"column":58}}},"3":{"name":"(anonymous_3)","line":102,"loc":{"start":{"line":102,"column":26},"end":{"line":102,"column":42}}},"4":{"name":"(anonymous_4)","line":114,"loc":{"start":{"line":114,"column":22},"end":{"line":114,"column":38}}},"5":{"name":"(anonymous_5)","line":125,"loc":{"start":{"line":125,"column":33},"end":{"line":125,"column":51}}},"6":{"name":"(anonymous_6)","line":142,"loc":{"start":{"line":142,"column":26},"end":{"line":142,"column":48}}},"7":{"name":"(anonymous_7)","line":189,"loc":{"start":{"line":189,"column":24},"end":{"line":189,"column":41}}},"8":{"name":"(anonymous_8)","line":203,"loc":{"start":{"line":203,"column":29},"end":{"line":203,"column":44}}},"9":{"name":"(anonymous_9)","line":218,"loc":{"start":{"line":218,"column":27},"end":{"line":218,"column":45}}},"10":{"name":"(anonymous_10)","line":233,"loc":{"start":{"line":233,"column":43},"end":{"line":233,"column":65}}},"11":{"name":"(anonymous_11)","line":248,"loc":{"start":{"line":248,"column":22},"end":{"line":248,"column":50}}},"12":{"name":"(anonymous_12)","line":262,"loc":{"start":{"line":262,"column":23},"end":{"line":262,"column":47}}},"13":{"name":"(anonymous_13)","line":277,"loc":{"start":{"line":277,"column":18},"end":{"line":277,"column":35}}},"14":{"name":"(anonymous_14)","line":290,"loc":{"start":{"line":290,"column":31},"end":{"line":290,"column":46}}},"15":{"name":"(anonymous_15)","line":307,"loc":{"start":{"line":307,"column":20},"end":{"line":307,"column":35}}},"16":{"name":"toObject","line":314,"loc":{"start":{"line":314,"column":60},"end":{"line":314,"column":80}}},"17":{"name":"(anonymous_17)","line":327,"loc":{"start":{"line":327,"column":59},"end":{"line":327,"column":70}}},"18":{"name":"_getID","line":358,"loc":{"start":{"line":358,"column":29},"end":{"line":358,"column":47}}},"19":{"name":"(anonymous_19)","line":368,"loc":{"start":{"line":368,"column":32},"end":{"line":368,"column":50}}},"20":{"name":"(anonymous_20)","line":378,"loc":{"start":{"line":378,"column":31},"end":{"line":378,"column":42}}},"21":{"name":"(anonymous_21)","line":387,"loc":{"start":{"line":387,"column":30},"end":{"line":387,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"8":{"start":{"line":36,"column":0},"end":{"line":62,"column":1}},"9":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":38}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":87}},"12":{"start":{"line":44,"column":2},"end":{"line":47,"column":3}},"13":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}},"14":{"start":{"line":48,"column":2},"end":{"line":48,"column":22}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":45}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":24}},"17":{"start":{"line":55,"column":2},"end":{"line":59,"column":5}},"18":{"start":{"line":61,"column":2},"end":{"line":61,"column":14}},"19":{"start":{"line":69,"column":0},"end":{"line":93,"column":2}},"20":{"start":{"line":71,"column":2},"end":{"line":73,"column":4}},"21":{"start":{"line":76,"column":2},"end":{"line":88,"column":3}},"22":{"start":{"line":77,"column":4},"end":{"line":77,"column":22}},"23":{"start":{"line":78,"column":9},"end":{"line":88,"column":3}},"24":{"start":{"line":79,"column":4},"end":{"line":79,"column":44}},"25":{"start":{"line":80,"column":9},"end":{"line":88,"column":3}},"26":{"start":{"line":81,"column":4},"end":{"line":81,"column":60}},"27":{"start":{"line":82,"column":9},"end":{"line":88,"column":3}},"28":{"start":{"line":83,"column":4},"end":{"line":83,"column":41}},"29":{"start":{"line":84,"column":9},"end":{"line":88,"column":3}},"30":{"start":{"line":85,"column":4},"end":{"line":85,"column":48}},"31":{"start":{"line":87,"column":4},"end":{"line":87,"column":74}},"32":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"33":{"start":{"line":90,"column":4},"end":{"line":90,"column":89}},"34":{"start":{"line":92,"column":2},"end":{"line":92,"column":14}},"35":{"start":{"line":102,"column":0},"end":{"line":105,"column":2}},"36":{"start":{"line":103,"column":2},"end":{"line":103,"column":43}},"37":{"start":{"line":104,"column":2},"end":{"line":104,"column":37}},"38":{"start":{"line":114,"column":0},"end":{"line":116,"column":2}},"39":{"start":{"line":115,"column":2},"end":{"line":115,"column":68}},"40":{"start":{"line":125,"column":0},"end":{"line":132,"column":2}},"41":{"start":{"line":126,"column":2},"end":{"line":126,"column":89}},"42":{"start":{"line":127,"column":2},"end":{"line":127,"column":16}},"43":{"start":{"line":128,"column":2},"end":{"line":128,"column":44}},"44":{"start":{"line":129,"column":2},"end":{"line":129,"column":39}},"45":{"start":{"line":130,"column":2},"end":{"line":130,"column":33}},"46":{"start":{"line":131,"column":2},"end":{"line":131,"column":14}},"47":{"start":{"line":142,"column":0},"end":{"line":179,"column":2}},"48":{"start":{"line":145,"column":2},"end":{"line":145,"column":94}},"49":{"start":{"line":146,"column":2},"end":{"line":146,"column":16}},"50":{"start":{"line":148,"column":2},"end":{"line":148,"column":49}},"51":{"start":{"line":150,"column":2},"end":{"line":150,"column":8}},"52":{"start":{"line":151,"column":2},"end":{"line":151,"column":8}},"53":{"start":{"line":152,"column":2},"end":{"line":152,"column":11}},"54":{"start":{"line":153,"column":2},"end":{"line":153,"column":11}},"55":{"start":{"line":155,"column":2},"end":{"line":177,"column":3}},"56":{"start":{"line":156,"column":4},"end":{"line":156,"column":28}},"57":{"start":{"line":157,"column":4},"end":{"line":157,"column":29}},"58":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"59":{"start":{"line":159,"column":6},"end":{"line":159,"column":64}},"60":{"start":{"line":161,"column":4},"end":{"line":161,"column":21}},"61":{"start":{"line":162,"column":4},"end":{"line":162,"column":21}},"62":{"start":{"line":163,"column":4},"end":{"line":163,"column":33}},"63":{"start":{"line":164,"column":4},"end":{"line":164,"column":28}},"64":{"start":{"line":165,"column":9},"end":{"line":177,"column":3}},"65":{"start":{"line":166,"column":4},"end":{"line":166,"column":24}},"66":{"start":{"line":167,"column":4},"end":{"line":167,"column":21}},"67":{"start":{"line":168,"column":4},"end":{"line":168,"column":42}},"68":{"start":{"line":169,"column":4},"end":{"line":169,"column":27}},"69":{"start":{"line":170,"column":9},"end":{"line":177,"column":3}},"70":{"start":{"line":171,"column":4},"end":{"line":171,"column":24}},"71":{"start":{"line":172,"column":4},"end":{"line":172,"column":21}},"72":{"start":{"line":173,"column":4},"end":{"line":173,"column":43}},"73":{"start":{"line":174,"column":4},"end":{"line":174,"column":27}},"74":{"start":{"line":176,"column":4},"end":{"line":176,"column":57}},"75":{"start":{"line":178,"column":2},"end":{"line":178,"column":14}},"76":{"start":{"line":189,"column":0},"end":{"line":194,"column":2}},"77":{"start":{"line":190,"column":2},"end":{"line":190,"column":100}},"78":{"start":{"line":191,"column":2},"end":{"line":191,"column":16}},"79":{"start":{"line":192,"column":2},"end":{"line":192,"column":35}},"80":{"start":{"line":193,"column":2},"end":{"line":193,"column":14}},"81":{"start":{"line":203,"column":0},"end":{"line":210,"column":2}},"82":{"start":{"line":204,"column":2},"end":{"line":204,"column":32}},"83":{"start":{"line":205,"column":2},"end":{"line":205,"column":32}},"84":{"start":{"line":206,"column":2},"end":{"line":206,"column":30}},"85":{"start":{"line":207,"column":2},"end":{"line":209,"column":5}},"86":{"start":{"line":218,"column":0},"end":{"line":225,"column":2}},"87":{"start":{"line":219,"column":2},"end":{"line":219,"column":89}},"88":{"start":{"line":220,"column":2},"end":{"line":220,"column":53}},"89":{"start":{"line":221,"column":2},"end":{"line":224,"column":5}},"90":{"start":{"line":233,"column":0},"end":{"line":239,"column":2}},"91":{"start":{"line":234,"column":2},"end":{"line":234,"column":94}},"92":{"start":{"line":235,"column":2},"end":{"line":235,"column":50}},"93":{"start":{"line":236,"column":2},"end":{"line":238,"column":5}},"94":{"start":{"line":248,"column":0},"end":{"line":253,"column":2}},"95":{"start":{"line":249,"column":2},"end":{"line":249,"column":90}},"96":{"start":{"line":250,"column":2},"end":{"line":252,"column":5}},"97":{"start":{"line":262,"column":0},"end":{"line":268,"column":2}},"98":{"start":{"line":263,"column":2},"end":{"line":263,"column":47}},"99":{"start":{"line":264,"column":2},"end":{"line":264,"column":42}},"100":{"start":{"line":265,"column":2},"end":{"line":267,"column":5}},"101":{"start":{"line":277,"column":0},"end":{"line":282,"column":2}},"102":{"start":{"line":278,"column":2},"end":{"line":278,"column":43}},"103":{"start":{"line":279,"column":2},"end":{"line":281,"column":5}},"104":{"start":{"line":290,"column":0},"end":{"line":299,"column":2}},"105":{"start":{"line":291,"column":2},"end":{"line":291,"column":12}},"106":{"start":{"line":292,"column":2},"end":{"line":297,"column":3}},"107":{"start":{"line":294,"column":4},"end":{"line":294,"column":24}},"108":{"start":{"line":296,"column":4},"end":{"line":296,"column":14}},"109":{"start":{"line":298,"column":2},"end":{"line":298,"column":15}},"110":{"start":{"line":307,"column":0},"end":{"line":309,"column":2}},"111":{"start":{"line":308,"column":2},"end":{"line":308,"column":45}},"112":{"start":{"line":314,"column":0},"end":{"line":320,"column":2}},"113":{"start":{"line":315,"column":2},"end":{"line":319,"column":4}},"114":{"start":{"line":327,"column":0},"end":{"line":351,"column":2}},"115":{"start":{"line":328,"column":2},"end":{"line":328,"column":28}},"116":{"start":{"line":329,"column":2},"end":{"line":329,"column":28}},"117":{"start":{"line":331,"column":2},"end":{"line":333,"column":5}},"118":{"start":{"line":334,"column":2},"end":{"line":336,"column":5}},"119":{"start":{"line":338,"column":2},"end":{"line":338,"column":13}},"120":{"start":{"line":339,"column":2},"end":{"line":350,"column":3}},"121":{"start":{"line":340,"column":4},"end":{"line":340,"column":32}},"122":{"start":{"line":341,"column":4},"end":{"line":341,"column":47}},"123":{"start":{"line":343,"column":4},"end":{"line":343,"column":40}},"124":{"start":{"line":344,"column":4},"end":{"line":348,"column":5}},"125":{"start":{"line":345,"column":6},"end":{"line":345,"column":34}},"126":{"start":{"line":347,"column":6},"end":{"line":347,"column":34}},"127":{"start":{"line":349,"column":4},"end":{"line":349,"column":41}},"128":{"start":{"line":358,"column":0},"end":{"line":360,"column":2}},"129":{"start":{"line":359,"column":2},"end":{"line":359,"column":47}},"130":{"start":{"line":368,"column":0},"end":{"line":371,"column":2}},"131":{"start":{"line":369,"column":2},"end":{"line":369,"column":37}},"132":{"start":{"line":370,"column":2},"end":{"line":370,"column":62}},"133":{"start":{"line":378,"column":0},"end":{"line":380,"column":2}},"134":{"start":{"line":379,"column":2},"end":{"line":379,"column":38}},"135":{"start":{"line":387,"column":0},"end":{"line":390,"column":2}},"136":{"start":{"line":388,"column":2},"end":{"line":389,"column":52}},"137":{"start":{"line":393,"column":0},"end":{"line":393,"column":27}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"3":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":10},"end":{"line":48,"column":15}},{"start":{"line":48,"column":19},"end":{"line":48,"column":21}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":13},"end":{"line":58,"column":25}},{"start":{"line":58,"column":29},"end":{"line":58,"column":51}}]},"5":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":47}},{"start":{"line":72,"column":51},"end":{"line":72,"column":67}}]},"6":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"7":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":9},"end":{"line":78,"column":9}},{"start":{"line":78,"column":9},"end":{"line":78,"column":9}}]},"8":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":13},"end":{"line":78,"column":19}},{"start":{"line":78,"column":23},"end":{"line":78,"column":29}}]},"9":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":9},"end":{"line":80,"column":9}},{"start":{"line":80,"column":9},"end":{"line":80,"column":9}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":9},"end":{"line":82,"column":9}},{"start":{"line":82,"column":9},"end":{"line":82,"column":9}}]},"11":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":9},"end":{"line":84,"column":9}},{"start":{"line":84,"column":9},"end":{"line":84,"column":9}}]},"12":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"13":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":50},"end":{"line":90,"column":59}},{"start":{"line":90,"column":62},"end":{"line":90,"column":88}}]},"14":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":10},"end":{"line":115,"column":33}},{"start":{"line":115,"column":39},"end":{"line":115,"column":66}}]},"15":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":35},"end":{"line":148,"column":39}},{"start":{"line":148,"column":42},"end":{"line":148,"column":48}}]},"16":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"17":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":21}},{"start":{"line":155,"column":26},"end":{"line":155,"column":33}},{"start":{"line":155,"column":38},"end":{"line":155,"column":53}},{"start":{"line":155,"column":57},"end":{"line":155,"column":72}}]},"18":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"19":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":26}},{"start":{"line":158,"column":30},"end":{"line":158,"column":48}},{"start":{"line":158,"column":52},"end":{"line":158,"column":69}}]},"20":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":9},"end":{"line":165,"column":9}},{"start":{"line":165,"column":9},"end":{"line":165,"column":9}}]},"21":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":9},"end":{"line":170,"column":9}},{"start":{"line":170,"column":9},"end":{"line":170,"column":9}}]},"22":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":28},"end":{"line":263,"column":36}},{"start":{"line":263,"column":40},"end":{"line":263,"column":45}}]},"23":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":2},"end":{"line":339,"column":2}},{"start":{"line":339,"column":2},"end":{"line":339,"column":2}}]},"24":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":4},"end":{"line":344,"column":4}},{"start":{"line":344,"column":4},"end":{"line":344,"column":4}}]},"25":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":37},"end":{"line":370,"column":44}},{"start":{"line":370,"column":48},"end":{"line":370,"column":60}}]},"26":{"line":389,"type":"cond-expr","locations":[{"start":{"line":389,"column":23},"end":{"line":389,"column":25}},{"start":{"line":389,"column":28},"end":{"line":389,"column":44}}]}},"code":["'use strict';","","var BN = require('./crypto/bn');","var Point = require('./crypto/point');","var Hash = require('./crypto/hash');","var JSUtil = require('./util/js');","var Network = require('./networks');","var _ = require('lodash');","var $ = require('./util/preconditions');","","/**"," * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`."," *"," * There are two internal properties, `network` and `compressed`, that deal with importing"," * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}"," *"," * @example"," * ```javascript"," * // instantiate from a private key"," * var key = PublicKey(privateKey, true);"," *"," * // export to as a DER hex encoded string"," * var exported = key.toString();"," *"," * // import the public key"," * var imported = PublicKey.fromString(exported);"," * ```"," *"," * @param {string} data - The encoded data in various formats"," * @param {Object} extra - additional options"," * @param {Network=} extra.network - Which network should the address for this public key be for"," * @param {String=} extra.compressed - If the public key is compressed"," * @returns {PublicKey} A new valid instance of an PublicKey"," * @constructor"," */","function PublicKey(data, extra) {","","  if (!(this instanceof PublicKey)) {","    return new PublicKey(data, extra);","  }","","  $.checkArgument(data, 'First argument is required, please include public key data.');","","  if (data instanceof PublicKey) {","    // Return copy, but as it's an immutable object, return same argument","    return data;","  }","  extra = extra || {};","","  var info = this._classifyArgs(data, extra);","","  // validation","  info.point.validate();","","  JSUtil.defineImmutable(this, {","    point: info.point,","    compressed: info.compressed,","    network: info.network || Network.defaultNetwork","  });","","  return this;","};","","/**"," * Internal function to differentiate between arguments passed to the constructor"," * @param {*} data"," * @param {Object} extra"," */","PublicKey.prototype._classifyArgs = function(data, extra) {","  /* jshint maxcomplexity: 10 */","  var info = {","    compressed: _.isUndefined(extra.compressed) || extra.compressed","  };","","  // detect type of data","  if (data instanceof Point) {","    info.point = data;","  } else if (data.x && data.y) {","    info = PublicKey._transformObject(data);","  } else if (typeof(data) === 'string') {","    info = PublicKey._transformDER(new Buffer(data, 'hex'));","  } else if (PublicKey._isBuffer(data)) {","    info = PublicKey._transformDER(data);","  } else if (PublicKey._isPrivateKey(data)) {","    info = PublicKey._transformPrivateKey(data);","  } else {","    throw new TypeError('First argument is an unrecognized data format.');","  }","  if (!info.network) {","    info.network = _.isUndefined(extra.network) ? undefined : Network.get(extra.network);","  }","  return info;","};","","/**"," * Internal function to detect if an object is a {@link PrivateKey}"," *"," * @param {*} param - object to test"," * @returns {boolean}"," * @private"," */","PublicKey._isPrivateKey = function(param) {","  var PrivateKey = require('./privatekey');","  return param instanceof PrivateKey;","};","","/**"," * Internal function to detect if an object is a Buffer"," *"," * @param {*} param - object to test"," * @returns {boolean}"," * @private"," */","PublicKey._isBuffer = function(param) {","  return (param instanceof Buffer) || (param instanceof Uint8Array);","};","","/**"," * Internal function to transform a private key into a public key point"," *"," * @param {PrivateKey} privkey - An instance of PrivateKey"," * @returns {Object} An object with keys: point and compressed"," * @private"," */","PublicKey._transformPrivateKey = function(privkey) {","  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');","  var info = {};","  info.point = Point.getG().mul(privkey.bn);","  info.compressed = privkey.compressed;","  info.network = privkey.network;","  return info;","};","","/**"," * Internal function to transform DER into a public key point"," *"," * @param {Buffer} buf - An hex encoded buffer"," * @param {bool=} strict - if set to false, will loosen some conditions"," * @returns {Object} An object with keys: point and compressed"," * @private"," */","PublicKey._transformDER = function(buf, strict) {","  /* jshint maxstatements: 30 */","  /* jshint maxcomplexity: 12 */","  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');","  var info = {};","","  strict = _.isUndefined(strict) ? true : strict;","","  var x;","  var y;","  var xbuf;","  var ybuf;","","  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {","    xbuf = buf.slice(1, 33);","    ybuf = buf.slice(33, 65);","    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {","      throw new TypeError('Length of x and y must be 32 bytes');","    }","    x = new BN(xbuf);","    y = new BN(ybuf);","    info.point = new Point(x, y);","    info.compressed = false;","  } else if (buf[0] === 0x03) {","    xbuf = buf.slice(1);","    x = new BN(xbuf);","    info = PublicKey._transformX(true, x);","    info.compressed = true;","  } else if (buf[0] === 0x02) {","    xbuf = buf.slice(1);","    x = new BN(xbuf);","    info = PublicKey._transformX(false, x);","    info.compressed = true;","  } else {","    throw new TypeError('Invalid DER format public key');","  }","  return info;","};","","/**"," * Internal function to transform X into a public key point"," *"," * @param {Boolean} odd - If the point is above or below the x axis"," * @param {Point} x - The x point"," * @returns {Object} An object with keys: point and compressed"," * @private"," */","PublicKey._transformX = function(odd, x) {","  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');","  var info = {};","  info.point = Point.fromX(odd, x);","  return info;","};","","/**"," * Internal function to transform a JSON into a public key point"," *"," * @param {String|Object} json - a JSON string or plain object"," * @returns {Object} An object with keys: point and compressed"," * @private"," */","PublicKey._transformObject = function(json) {","  var x = new BN(json.x, 'hex');","  var y = new BN(json.y, 'hex');","  var point = new Point(x, y);","  return new PublicKey(point, {","    compressed: json.compressed","  });","};","","/**"," * Instantiate a PublicKey from a PrivateKey"," *"," * @param {PrivateKey} privkey - An instance of PrivateKey"," * @returns {PublicKey} A new valid instance of PublicKey"," */","PublicKey.fromPrivateKey = function(privkey) {","  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');","  var info = PublicKey._transformPrivateKey(privkey);","  return new PublicKey(info.point, {","    compressed: info.compressed,","    network: info.network","  });","};","","/**"," * Instantiate a PublicKey from a Buffer"," * @param {Buffer} buf - A DER hex buffer"," * @param {bool=} strict - if set to false, will loosen some conditions"," * @returns {PublicKey} A new valid instance of PublicKey"," */","PublicKey.fromDER = PublicKey.fromBuffer = function(buf, strict) {","  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');","  var info = PublicKey._transformDER(buf, strict);","  return new PublicKey(info.point, {","    compressed: info.compressed","  });","};","","/**"," * Instantiate a PublicKey from a Point"," *"," * @param {Point} point - A Point instance"," * @param {boolean=} compressed - whether to store this public key as compressed format"," * @returns {PublicKey} A new valid instance of PublicKey"," */","PublicKey.fromPoint = function(point, compressed) {","  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');","  return new PublicKey(point, {","    compressed: compressed","  });","};","","/**"," * Instantiate a PublicKey from a DER hex encoded string"," *"," * @param {string} str - A DER hex string"," * @param {String=} encoding - The type of string encoding"," * @returns {PublicKey} A new valid instance of PublicKey"," */","PublicKey.fromString = function(str, encoding) {","  var buf = new Buffer(str, encoding || 'hex');","  var info = PublicKey._transformDER(buf);","  return new PublicKey(info.point, {","    compressed: info.compressed","  });","};","","/**"," * Instantiate a PublicKey from an X Point"," *"," * @param {Boolean} odd - If the point is above or below the x axis"," * @param {Point} x - The x point"," * @returns {PublicKey} A new valid instance of PublicKey"," */","PublicKey.fromX = function(odd, x) {","  var info = PublicKey._transformX(odd, x);","  return new PublicKey(info.point, {","    compressed: info.compressed","  });","};","","/**"," * Check if there would be any errors when initializing a PublicKey"," *"," * @param {string} data - The encoded data in various formats"," * @returns {null|Error} An error if exists"," */","PublicKey.getValidationError = function(data) {","  var error;","  try {","    /* jshint nonew: false */","    new PublicKey(data);","  } catch (e) {","    error = e;","  }","  return error;","};","","/**"," * Check if the parameters are valid"," *"," * @param {string} data - The encoded data in various formats"," * @returns {Boolean} If the public key would be valid"," */","PublicKey.isValid = function(data) {","  return !PublicKey.getValidationError(data);","};","","/**"," * @returns {Object} A plain object of the PublicKey"," */","PublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {","  return {","    x: this.point.getX().toString('hex', 2),","    y: this.point.getY().toString('hex', 2),","    compressed: this.compressed","  };","};","","/**"," * Will output the PublicKey to a DER Buffer"," *"," * @returns {Buffer} A DER hex encoded buffer"," */","PublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function() {","  var x = this.point.getX();","  var y = this.point.getY();","","  var xbuf = x.toBuffer({","    size: 32","  });","  var ybuf = y.toBuffer({","    size: 32","  });","","  var prefix;","  if (!this.compressed) {","    prefix = new Buffer([0x04]);","    return Buffer.concat([prefix, xbuf, ybuf]);","  } else {","    var odd = ybuf[ybuf.length - 1] % 2;","    if (odd) {","      prefix = new Buffer([0x03]);","    } else {","      prefix = new Buffer([0x02]);","    }","    return Buffer.concat([prefix, xbuf]);","  }","};","","/**"," * Will return a sha256 + ripemd160 hash of the serialized public key"," * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141"," * @returns {Buffer}"," */","PublicKey.prototype._getID = function _getID() {","  return Hash.sha256ripemd160(this.toBuffer());","};","","/**"," * Will return an address for the public key"," *"," * @param {String|Network=} network - Which network should the address be for"," * @returns {Address} An address generated from the public key"," */","PublicKey.prototype.toAddress = function(network) {","  var Address = require('./address');","  return Address.fromPublicKey(this, network || this.network);","};","","/**"," * Will output the PublicKey to a DER encoded hex string"," *"," * @returns {string} A DER hex encoded string"," */","PublicKey.prototype.toString = function() {","  return this.toDER().toString('hex');","};","","/**"," * Will return a string formatted for the console"," *"," * @returns {string} Public key"," */","PublicKey.prototype.inspect = function() {","  return '<PublicKey: ' + this.toString() +","    (this.compressed ? '' : ', uncompressed') + '>';","};","","","module.exports = PublicKey;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"36":1,"38":0,"39":0,"42":0,"44":0,"46":0,"48":0,"50":0,"53":0,"55":0,"61":0,"69":1,"71":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"87":0,"89":0,"90":0,"92":0,"102":1,"103":0,"104":0,"114":1,"115":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"142":1,"145":0,"146":0,"148":0,"150":0,"151":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"159":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"176":0,"178":0,"189":1,"190":0,"191":0,"192":0,"193":0,"203":1,"204":0,"205":0,"206":0,"207":0,"218":1,"219":0,"220":0,"221":0,"233":1,"234":0,"235":0,"236":0,"248":1,"249":0,"250":0,"262":1,"263":0,"264":0,"265":0,"277":1,"278":0,"279":0,"290":1,"291":0,"292":0,"294":0,"296":0,"298":0,"307":1,"308":0,"314":1,"315":0,"327":1,"328":0,"329":0,"331":0,"334":0,"338":0,"339":0,"340":0,"341":0,"343":0,"344":0,"345":0,"347":0,"349":0,"358":1,"359":0,"368":1,"369":0,"370":0,"378":1,"379":0,"387":1,"388":0,"393":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/hash.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/hash.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":12},"end":{"line":9,"column":26}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":14},"end":{"line":16,"column":28}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":20},"end":{"line":23,"column":34}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":31}}},"5":{"name":"(anonymous_5)","line":33,"loc":{"start":{"line":33,"column":23},"end":{"line":33,"column":37}}},"6":{"name":"(anonymous_6)","line":38,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":28}}},"7":{"name":"(anonymous_7)","line":45,"loc":{"start":{"line":45,"column":12},"end":{"line":45,"column":39}}},"8":{"name":"(anonymous_8)","line":79,"loc":{"start":{"line":79,"column":18},"end":{"line":79,"column":38}}},"9":{"name":"(anonymous_9)","line":83,"loc":{"start":{"line":83,"column":18},"end":{"line":83,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"5":{"start":{"line":9,"column":0},"end":{"line":12,"column":2}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":44}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":56}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"9":{"start":{"line":16,"column":0},"end":{"line":19,"column":2}},"10":{"start":{"line":17,"column":2},"end":{"line":17,"column":44}},"11":{"start":{"line":18,"column":2},"end":{"line":18,"column":58}},"12":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}},"13":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":44}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":39}},"16":{"start":{"line":28,"column":0},"end":{"line":31,"column":2}},"17":{"start":{"line":29,"column":2},"end":{"line":29,"column":44}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":61}},"19":{"start":{"line":33,"column":0},"end":{"line":36,"column":2}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":44}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":42}},"22":{"start":{"line":38,"column":0},"end":{"line":41,"column":2}},"23":{"start":{"line":39,"column":2},"end":{"line":39,"column":44}},"24":{"start":{"line":40,"column":2},"end":{"line":40,"column":58}},"25":{"start":{"line":43,"column":0},"end":{"line":43,"column":29}},"26":{"start":{"line":45,"column":0},"end":{"line":77,"column":2}},"27":{"start":{"line":48,"column":2},"end":{"line":48,"column":45}},"28":{"start":{"line":49,"column":2},"end":{"line":49,"column":44}},"29":{"start":{"line":50,"column":2},"end":{"line":50,"column":35}},"30":{"start":{"line":52,"column":2},"end":{"line":52,"column":38}},"31":{"start":{"line":54,"column":2},"end":{"line":61,"column":3}},"32":{"start":{"line":55,"column":4},"end":{"line":55,"column":21}},"33":{"start":{"line":56,"column":9},"end":{"line":61,"column":3}},"34":{"start":{"line":57,"column":4},"end":{"line":57,"column":37}},"35":{"start":{"line":58,"column":4},"end":{"line":58,"column":17}},"36":{"start":{"line":59,"column":4},"end":{"line":59,"column":19}},"37":{"start":{"line":60,"column":4},"end":{"line":60,"column":15}},"38":{"start":{"line":63,"column":2},"end":{"line":63,"column":36}},"39":{"start":{"line":64,"column":2},"end":{"line":64,"column":19}},"40":{"start":{"line":66,"column":2},"end":{"line":66,"column":36}},"41":{"start":{"line":67,"column":2},"end":{"line":67,"column":19}},"42":{"start":{"line":69,"column":2},"end":{"line":69,"column":40}},"43":{"start":{"line":70,"column":2},"end":{"line":70,"column":40}},"44":{"start":{"line":71,"column":2},"end":{"line":74,"column":3}},"45":{"start":{"line":72,"column":4},"end":{"line":72,"column":37}},"46":{"start":{"line":73,"column":4},"end":{"line":73,"column":37}},"47":{"start":{"line":76,"column":2},"end":{"line":76,"column":84}},"48":{"start":{"line":79,"column":0},"end":{"line":81,"column":2}},"49":{"start":{"line":80,"column":2},"end":{"line":80,"column":43}},"50":{"start":{"line":83,"column":0},"end":{"line":85,"column":2}},"51":{"start":{"line":84,"column":2},"end":{"line":84,"column":43}}},"branchMap":{"1":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"2":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":9},"end":{"line":56,"column":9}},{"start":{"line":56,"column":9},"end":{"line":56,"column":9}}]}},"code":["'use strict';","","var crypto = require('crypto');","var BufferUtil = require('../util/buffer');","var $ = require('../util/preconditions');","","var Hash = module.exports;","","Hash.sha1 = function(buf) {","  $.checkArgument(BufferUtil.isBuffer(buf));","  return crypto.createHash('sha1').update(buf).digest();","};","","Hash.sha1.blocksize = 512;","","Hash.sha256 = function(buf) {","  $.checkArgument(BufferUtil.isBuffer(buf));","  return crypto.createHash('sha256').update(buf).digest();","};","","Hash.sha256.blocksize = 512;","","Hash.sha256sha256 = function(buf) {","  $.checkArgument(BufferUtil.isBuffer(buf));","  return Hash.sha256(Hash.sha256(buf));","};","","Hash.ripemd160 = function(buf) {","  $.checkArgument(BufferUtil.isBuffer(buf));","  return crypto.createHash('ripemd160').update(buf).digest();","};","","Hash.sha256ripemd160 = function(buf) {","  $.checkArgument(BufferUtil.isBuffer(buf));","  return Hash.ripemd160(Hash.sha256(buf));","};","","Hash.sha512 = function(buf) {","  $.checkArgument(BufferUtil.isBuffer(buf));","  return crypto.createHash('sha512').update(buf).digest();","};","","Hash.sha512.blocksize = 1024;","","Hash.hmac = function(hashf, data, key) {","  //http://en.wikipedia.org/wiki/Hash-based_message_authentication_code","  //http://tools.ietf.org/html/rfc4868#section-2","  $.checkArgument(BufferUtil.isBuffer(data));","  $.checkArgument(BufferUtil.isBuffer(key));","  $.checkArgument(hashf.blocksize);","","  var blocksize = hashf.blocksize / 8;","","  if (key.length > blocksize) {","    key = hashf(key);","  } else if (key < blocksize) {","    var fill = new Buffer(blocksize);","    fill.fill(0);","    key.copy(fill);","    key = fill;","  }","","  var o_key = new Buffer(blocksize);","  o_key.fill(0x5c);","","  var i_key = new Buffer(blocksize);","  i_key.fill(0x36);","","  var o_key_pad = new Buffer(blocksize);","  var i_key_pad = new Buffer(blocksize);","  for (var i = 0; i < blocksize; i++) {","    o_key_pad[i] = o_key[i] ^ key[i];","    i_key_pad[i] = i_key[i] ^ key[i];","  }","","  return hashf(Buffer.concat([o_key_pad, hashf(Buffer.concat([i_key_pad, data]))]));","};","","Hash.sha256hmac = function(data, key) {","  return Hash.hmac(Hash.sha256, data, key);","};","","Hash.sha512hmac = function(data, key) {","  return Hash.hmac(Hash.sha512, data, key);","};",""],"l":{"3":1,"4":1,"5":1,"7":1,"9":1,"10":0,"11":0,"14":1,"16":1,"17":0,"18":0,"21":1,"23":1,"24":0,"25":0,"28":1,"29":0,"30":0,"33":1,"34":0,"35":0,"38":1,"39":0,"40":0,"43":1,"45":1,"48":0,"49":0,"50":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"63":0,"64":0,"66":0,"67":0,"69":0,"70":0,"71":0,"72":0,"73":0,"76":0,"79":1,"80":0,"83":1,"84":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/networks.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/networks.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":2,"11":0,"12":2,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":2,"22":1,"23":2,"24":2,"25":2,"26":1,"27":2,"28":1,"29":2,"30":1,"31":2,"32":17,"33":15,"34":2,"35":2,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":3,"50":1,"51":1,"52":1,"53":3,"54":1,"55":1,"56":2,"57":0,"58":2,"59":1,"60":2,"61":0,"62":2,"63":1,"64":2,"65":0,"66":2,"67":1,"68":0,"69":1,"70":0,"71":1},"b":{"1":[0,2],"2":[0,2],"3":[0,0],"4":[0,0],"5":[1,1],"6":[1,1],"7":[1,1],"8":[15,2],"9":[17,17],"10":[0,0],"11":[0,0],"12":[1,2],"13":[1,2],"14":[0,2],"15":[0,2],"16":[0,2]},"f":{"1":2,"2":0,"3":2,"4":0,"5":2,"6":17,"7":0,"8":2,"9":2,"10":2,"11":0,"12":0},"fnMap":{"1":{"name":"Network","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":19}}},"2":{"name":"toString","line":17,"loc":{"start":{"line":17,"column":29},"end":{"line":17,"column":49}}},"3":{"name":"get","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":24}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":22},"end":{"line":37,"column":36}}},"5":{"name":"addNetwork","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":26}}},"6":{"name":"(anonymous_6)","line":98,"loc":{"start":{"line":98,"column":18},"end":{"line":98,"column":34}}},"7":{"name":"removeNetwork","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":32}}},"8":{"name":"(anonymous_8)","line":205,"loc":{"start":{"line":205,"column":7},"end":{"line":205,"column":18}}},"9":{"name":"(anonymous_9)","line":217,"loc":{"start":{"line":217,"column":7},"end":{"line":217,"column":18}}},"10":{"name":"(anonymous_10)","line":229,"loc":{"start":{"line":229,"column":7},"end":{"line":229,"column":18}}},"11":{"name":"enableRegtest","line":243,"loc":{"start":{"line":243,"column":0},"end":{"line":243,"column":25}}},"12":{"name":"disableRegtest","line":252,"loc":{"start":{"line":252,"column":0},"end":{"line":252,"column":26}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":18}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":21}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":21}},"7":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":19}},"9":{"start":{"line":29,"column":0},"end":{"line":48,"column":1}},"10":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":15}},"12":{"start":{"line":33,"column":2},"end":{"line":46,"column":3}},"13":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"14":{"start":{"line":35,"column":6},"end":{"line":35,"column":20}},"15":{"start":{"line":37,"column":4},"end":{"line":39,"column":6}},"16":{"start":{"line":38,"column":6},"end":{"line":38,"column":42}},"17":{"start":{"line":40,"column":4},"end":{"line":44,"column":5}},"18":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"19":{"start":{"line":42,"column":8},"end":{"line":42,"column":31}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":21}},"21":{"start":{"line":47,"column":2},"end":{"line":47,"column":26}},"22":{"start":{"line":67,"column":0},"end":{"line":108,"column":1}},"23":{"start":{"line":69,"column":2},"end":{"line":69,"column":30}},"24":{"start":{"line":71,"column":2},"end":{"line":79,"column":5}},"25":{"start":{"line":81,"column":2},"end":{"line":85,"column":3}},"26":{"start":{"line":82,"column":4},"end":{"line":84,"column":7}},"27":{"start":{"line":87,"column":2},"end":{"line":91,"column":3}},"28":{"start":{"line":88,"column":4},"end":{"line":90,"column":7}},"29":{"start":{"line":93,"column":2},"end":{"line":97,"column":3}},"30":{"start":{"line":94,"column":4},"end":{"line":96,"column":7}},"31":{"start":{"line":98,"column":2},"end":{"line":102,"column":5}},"32":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"33":{"start":{"line":100,"column":6},"end":{"line":100,"column":35}},"34":{"start":{"line":104,"column":2},"end":{"line":104,"column":25}},"35":{"start":{"line":106,"column":2},"end":{"line":106,"column":17}},"36":{"start":{"line":116,"column":0},"end":{"line":127,"column":1}},"37":{"start":{"line":117,"column":2},"end":{"line":121,"column":3}},"38":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"39":{"start":{"line":119,"column":6},"end":{"line":119,"column":28}},"40":{"start":{"line":122,"column":2},"end":{"line":126,"column":3}},"41":{"start":{"line":123,"column":4},"end":{"line":125,"column":5}},"42":{"start":{"line":124,"column":6},"end":{"line":124,"column":30}},"43":{"start":{"line":129,"column":0},"end":{"line":147,"column":3}},"44":{"start":{"line":153,"column":0},"end":{"line":153,"column":29}},"45":{"start":{"line":155,"column":0},"end":{"line":163,"column":3}},"46":{"start":{"line":169,"column":0},"end":{"line":169,"column":29}},"47":{"start":{"line":173,"column":0},"end":{"line":182,"column":2}},"48":{"start":{"line":184,"column":0},"end":{"line":188,"column":1}},"49":{"start":{"line":185,"column":2},"end":{"line":187,"column":3}},"50":{"start":{"line":186,"column":4},"end":{"line":186,"column":40}},"51":{"start":{"line":190,"column":0},"end":{"line":194,"column":2}},"52":{"start":{"line":196,"column":0},"end":{"line":200,"column":1}},"53":{"start":{"line":197,"column":2},"end":{"line":199,"column":3}},"54":{"start":{"line":198,"column":4},"end":{"line":198,"column":40}},"55":{"start":{"line":202,"column":0},"end":{"line":212,"column":3}},"56":{"start":{"line":206,"column":4},"end":{"line":210,"column":5}},"57":{"start":{"line":207,"column":6},"end":{"line":207,"column":26}},"58":{"start":{"line":209,"column":6},"end":{"line":209,"column":26}},"59":{"start":{"line":214,"column":0},"end":{"line":224,"column":3}},"60":{"start":{"line":218,"column":4},"end":{"line":222,"column":5}},"61":{"start":{"line":219,"column":6},"end":{"line":219,"column":35}},"62":{"start":{"line":221,"column":6},"end":{"line":221,"column":35}},"63":{"start":{"line":226,"column":0},"end":{"line":236,"column":3}},"64":{"start":{"line":230,"column":4},"end":{"line":234,"column":5}},"65":{"start":{"line":231,"column":6},"end":{"line":231,"column":31}},"66":{"start":{"line":233,"column":6},"end":{"line":233,"column":31}},"67":{"start":{"line":243,"column":0},"end":{"line":245,"column":1}},"68":{"start":{"line":244,"column":2},"end":{"line":244,"column":32}},"69":{"start":{"line":252,"column":0},"end":{"line":254,"column":1}},"70":{"start":{"line":253,"column":2},"end":{"line":253,"column":33}},"71":{"start":{"line":259,"column":0},"end":{"line":269,"column":2}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"5":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"6":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"7":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"8":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"9":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":29}},{"start":{"line":99,"column":33},"end":{"line":99,"column":51}}]},"10":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"11":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"12":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"13":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":197,"column":2}},{"start":{"line":197,"column":2},"end":{"line":197,"column":2}}]},"14":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"15":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"16":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]}},"code":["'use strict';","var _ = require('lodash');","","var BufferUtil = require('./util/buffer');","var JSUtil = require('./util/js');","var networks = [];","var networkMaps = {};","","/**"," * A network is merely a map containing values that correspond to version"," * numbers for each bitcoin network. Currently only supporting \"livenet\""," * (a.k.a. \"mainnet\") and \"testnet\"."," * @constructor"," */","function Network() {}","","Network.prototype.toString = function toString() {","  return this.name;","};","","/**"," * @function"," * @member Networks#get"," * Retrieves the network associated with a magic number or string."," * @param {string|number|Network} arg"," * @param {string|Array} keys - if set, only check if the magic number associated with this name matches"," * @return Network"," */","function get(arg, keys) {","  if (~networks.indexOf(arg)) {","    return arg;","  }","  if (keys) {","    if (!_.isArray(keys)) {","      keys = [keys];","    }","    var containsArg = function(key) {","      return networks[index][key] === arg;","    };","    for (var index in networks) {","      if (_.any(keys, containsArg)) {","        return networks[index];","      }","    }","    return undefined;","  }","  return networkMaps[arg];","}","","/**"," * @function"," * @member Networks#add"," * Will add a custom Network"," * @param {Object} data"," * @param {string} data.name - The name of the network"," * @param {string} data.alias - The aliased name of the network"," * @param {Number} data.pubkeyhash - The publickey hash prefix"," * @param {Number} data.privatekey - The privatekey prefix"," * @param {Number} data.scripthash - The scripthash prefix"," * @param {Number} data.xpubkey - The extended public key magic"," * @param {Number} data.xprivkey - The extended private key magic"," * @param {Number} data.networkMagic - The network magic number"," * @param {Number} data.port - The network port"," * @param {Array}  data.dnsSeeds - An array of dns seeds"," * @return Network"," */","function addNetwork(data) {","","  var network = new Network();","","  JSUtil.defineImmutable(network, {","    name: data.name,","    alias: data.alias,","    pubkeyhash: data.pubkeyhash,","    privatekey: data.privatekey,","    scripthash: data.scripthash,","    xpubkey: data.xpubkey,","    xprivkey: data.xprivkey","  });","","  if (data.networkMagic) {","    JSUtil.defineImmutable(network, {","      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)","    });","  }","","  if (data.port) {","    JSUtil.defineImmutable(network, {","      port: data.port","    });","  }","","  if (data.dnsSeeds) {","    JSUtil.defineImmutable(network, {","      dnsSeeds: data.dnsSeeds","    });","  }","  _.each(network, function(value) {","    if (!_.isUndefined(value) && !_.isObject(value)) {","      networkMaps[value] = network;","    }","  });","","  networks.push(network);","","  return network;","","}","","/**"," * @function"," * @member Networks#remove"," * Will remove a custom network"," * @param {Network} network"," */","function removeNetwork(network) {","  for (var i = 0; i < networks.length; i++) {","    if (networks[i] === network) {","      networks.splice(i, 1);","    }","  }","  for (var key in networkMaps) {","    if (networkMaps[key] === network) {","      delete networkMaps[key];","    }","  }","}","","addNetwork({","  name: 'livenet',","  alias: 'mainnet',","  pubkeyhash: 0x00,","  privatekey: 0x80,","  scripthash: 0x05,","  xpubkey: 0x0488b21e,","  xprivkey: 0x0488ade4,","  networkMagic: 0xf9beb4d9,","  port: 8333,","  dnsSeeds: [","    'seed.bitcoin.sipa.be',","    'dnsseed.bluematt.me',","    'dnsseed.bitcoin.dashjr.org',","    'seed.bitcoinstats.com',","    'seed.bitnodes.io',","    'bitseed.xf2.org'","  ]","});","","/**"," * @instance"," * @member Networks#livenet"," */","var livenet = get('livenet');","","addNetwork({","  name: 'testnet',","  alias: 'regtest',","  pubkeyhash: 0x6f,","  privatekey: 0xef,","  scripthash: 0xc4,","  xpubkey: 0x043587cf,","  xprivkey: 0x04358394","});","","/**"," * @instance"," * @member Networks#testnet"," */","var testnet = get('testnet');","","// Add configurable values for testnet/regtest","","var TESTNET = {","  PORT: 18333,","  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0x0b110907),","  DNS_SEEDS: [","    'testnet-seed.bitcoin.petertodd.org',","    'testnet-seed.bluematt.me',","    'testnet-seed.alexykot.me',","    'testnet-seed.bitcoin.schildbach.de'","  ]","};","","for (var key in TESTNET) {","  if (!_.isObject(TESTNET[key])) {","    networkMaps[TESTNET[key]] = testnet;","  }","}","","var REGTEST = {","  PORT: 18444,","  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0xfabfb5da),","  DNS_SEEDS: []","};","","for (var key in REGTEST) {","  if (!_.isObject(REGTEST[key])) {","    networkMaps[REGTEST[key]] = testnet;","  }","}","","Object.defineProperty(testnet, 'port', {","  enumerable: true,","  configurable: false,","  get: function() {","    if (this.regtestEnabled) {","      return REGTEST.PORT;","    } else {","      return TESTNET.PORT;","    }","  }","});","","Object.defineProperty(testnet, 'networkMagic', {","  enumerable: true,","  configurable: false,","  get: function() {","    if (this.regtestEnabled) {","      return REGTEST.NETWORK_MAGIC;","    } else {","      return TESTNET.NETWORK_MAGIC;","    }","  }","});","","Object.defineProperty(testnet, 'dnsSeeds', {","  enumerable: true,","  configurable: false,","  get: function() {","    if (this.regtestEnabled) {","      return REGTEST.DNS_SEEDS;","    } else {","      return TESTNET.DNS_SEEDS;","    }","  }","});","","/**"," * @function"," * @member Networks#enableRegtest"," * Will enable regtest features for testnet"," */","function enableRegtest() {","  testnet.regtestEnabled = true;","}","","/**"," * @function"," * @member Networks#disableRegtest"," * Will disable regtest features for testnet"," */","function disableRegtest() {","  testnet.regtestEnabled = false;","}","","/**"," * @namespace Networks"," */","module.exports = {","  add: addNetwork,","  remove: removeNetwork,","  defaultNetwork: livenet,","  livenet: livenet,","  mainnet: livenet,","  testnet: testnet,","  get: get,","  enableRegtest: enableRegtest,","  disableRegtest: disableRegtest","};",""],"l":{"2":1,"4":1,"5":1,"6":1,"7":1,"15":1,"17":1,"18":0,"29":1,"30":2,"31":0,"33":2,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"42":0,"45":0,"47":2,"67":1,"69":2,"71":2,"81":2,"82":1,"87":2,"88":1,"93":2,"94":1,"98":2,"99":17,"100":15,"104":2,"106":2,"116":1,"117":0,"118":0,"119":0,"122":0,"123":0,"124":0,"129":1,"153":1,"155":1,"169":1,"173":1,"184":1,"185":3,"186":1,"190":1,"196":1,"197":3,"198":1,"202":1,"206":2,"207":0,"209":2,"214":1,"218":2,"219":0,"221":2,"226":1,"230":2,"231":0,"233":2,"243":1,"244":0,"252":1,"253":0,"259":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/random.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/crypto/random.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Random","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":18}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":25},"end":{"line":7,"column":40}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":29},"end":{"line":14,"column":44}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":32},"end":{"line":19,"column":47}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":1}},"2":{"start":{"line":7,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":11,"column":44}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":47}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"6":{"start":{"line":14,"column":0},"end":{"line":17,"column":2}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":33}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":34}},"9":{"start":{"line":19,"column":0},"end":{"line":35,"column":2}},"10":{"start":{"line":20,"column":2},"end":{"line":21,"column":51}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":51}},"12":{"start":{"line":23,"column":2},"end":{"line":28,"column":67}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":31}},"14":{"start":{"line":25,"column":7},"end":{"line":28,"column":67}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},"16":{"start":{"line":28,"column":4},"end":{"line":28,"column":67}},"17":{"start":{"line":30,"column":2},"end":{"line":30,"column":34}},"18":{"start":{"line":31,"column":2},"end":{"line":31,"column":31}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":29}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":13}},"21":{"start":{"line":38,"column":0},"end":{"line":55,"column":2}},"22":{"start":{"line":39,"column":2},"end":{"line":39,"column":24}},"23":{"start":{"line":40,"column":2},"end":{"line":40,"column":27}},"24":{"start":{"line":41,"column":2},"end":{"line":41,"column":8}},"25":{"start":{"line":43,"column":2},"end":{"line":52,"column":3}},"26":{"start":{"line":44,"column":4},"end":{"line":44,"column":30}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":22}},"28":{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},"29":{"start":{"line":47,"column":6},"end":{"line":47,"column":30}},"30":{"start":{"line":48,"column":6},"end":{"line":48,"column":22}},"31":{"start":{"line":50,"column":6},"end":{"line":50,"column":34}},"32":{"start":{"line":54,"column":2},"end":{"line":54,"column":11}},"33":{"start":{"line":57,"column":0},"end":{"line":57,"column":24}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"3":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":20}},{"start":{"line":20,"column":24},"end":{"line":20,"column":40}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"5":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":19}},{"start":{"line":23,"column":23},"end":{"line":23,"column":52}}]},"6":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":7},"end":{"line":25,"column":7}},{"start":{"line":25,"column":7},"end":{"line":25,"column":7}}]},"7":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":11},"end":{"line":25,"column":26}},{"start":{"line":25,"column":30},"end":{"line":25,"column":61}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]}},"code":["'use strict';","","function Random() {","}","","/* secure random bytes that sometimes throws an error due to lack of entropy */","Random.getRandomBuffer = function(size) {","  if (process.browser)","    return Random.getRandomBufferBrowser(size);","  else","    return Random.getRandomBufferNode(size);","};","","Random.getRandomBufferNode = function(size) {","  var crypto = require('crypto');","  return crypto.randomBytes(size);","};","","Random.getRandomBufferBrowser = function(size) {","  if (!window.crypto && !window.msCrypto)","    throw new Error('window.crypto not available');","","  if (window.crypto && window.crypto.getRandomValues)","    var crypto = window.crypto;","  else if (window.msCrypto && window.msCrypto.getRandomValues) //internet explorer","    var crypto = window.msCrypto;","  else","    throw new Error('window.crypto.getRandomValues not available');","","  var bbuf = new Uint8Array(size);","  crypto.getRandomValues(bbuf);","  var buf = new Buffer(bbuf);","","  return buf;","};","","/* insecure random bytes, but it never fails */","Random.getPseudoRandomBuffer = function(size) {","  var b32 = 0x100000000;","  var b = new Buffer(size);","  var r;","","  for (var i = 0; i <= size; i++) {","    var j = Math.floor(i / 4);","    var k = i - j * 4;","    if (k === 0) {","      r = Math.random() * b32;","      b[i] = r & 0xff;","    } else {","      b[i] = (r = r >>> 8) & 0xff;","    }","  }","","  return b;","};","","module.exports = Random;",""],"l":{"3":1,"7":1,"8":0,"9":0,"11":0,"14":1,"15":0,"16":0,"19":1,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"28":0,"30":0,"31":0,"32":0,"34":0,"38":1,"39":0,"40":0,"41":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0,"54":0,"57":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/base58.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/base58.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":0,"43":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Base58","line":9,"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":34}}},"2":{"name":"validCharacters","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":57}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":28},"end":{"line":29,"column":43}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":23},"end":{"line":32,"column":37}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":16},"end":{"line":37,"column":30}}},"6":{"name":"(anonymous_6)","line":44,"loc":{"start":{"line":44,"column":16},"end":{"line":44,"column":30}}},"7":{"name":"(anonymous_7)","line":51,"loc":{"start":{"line":51,"column":30},"end":{"line":51,"column":44}}},"8":{"name":"(anonymous_8)","line":56,"loc":{"start":{"line":56,"column":30},"end":{"line":56,"column":44}}},"9":{"name":"(anonymous_9)","line":62,"loc":{"start":{"line":62,"column":28},"end":{"line":62,"column":39}}},"10":{"name":"(anonymous_10)","line":66,"loc":{"start":{"line":66,"column":28},"end":{"line":66,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":86}},"5":{"start":{"line":9,"column":0},"end":{"line":23,"column":2}},"6":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":27}},"8":{"start":{"line":14,"column":2},"end":{"line":22,"column":3}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":18}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":25}},"11":{"start":{"line":17,"column":9},"end":{"line":22,"column":3}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":25}},"14":{"start":{"line":20,"column":9},"end":{"line":22,"column":3}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":18}},"16":{"start":{"line":25,"column":0},"end":{"line":30,"column":2}},"17":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"18":{"start":{"line":27,"column":4},"end":{"line":27,"column":29}},"19":{"start":{"line":29,"column":2},"end":{"line":29,"column":84}},"20":{"start":{"line":29,"column":45},"end":{"line":29,"column":79}},"21":{"start":{"line":32,"column":0},"end":{"line":35,"column":2}},"22":{"start":{"line":33,"column":2},"end":{"line":33,"column":46}},"23":{"start":{"line":34,"column":2},"end":{"line":34,"column":14}},"24":{"start":{"line":37,"column":0},"end":{"line":42,"column":2}},"25":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":48}},"27":{"start":{"line":41,"column":2},"end":{"line":41,"column":26}},"28":{"start":{"line":44,"column":0},"end":{"line":49,"column":2}},"29":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"30":{"start":{"line":46,"column":4},"end":{"line":46,"column":48}},"31":{"start":{"line":48,"column":2},"end":{"line":48,"column":38}},"32":{"start":{"line":51,"column":0},"end":{"line":54,"column":2}},"33":{"start":{"line":52,"column":2},"end":{"line":52,"column":17}},"34":{"start":{"line":53,"column":2},"end":{"line":53,"column":14}},"35":{"start":{"line":56,"column":0},"end":{"line":60,"column":2}},"36":{"start":{"line":57,"column":2},"end":{"line":57,"column":31}},"37":{"start":{"line":58,"column":2},"end":{"line":58,"column":17}},"38":{"start":{"line":59,"column":2},"end":{"line":59,"column":14}},"39":{"start":{"line":62,"column":0},"end":{"line":64,"column":2}},"40":{"start":{"line":63,"column":2},"end":{"line":63,"column":18}},"41":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"42":{"start":{"line":67,"column":2},"end":{"line":67,"column":33}},"43":{"start":{"line":70,"column":0},"end":{"line":70,"column":24}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":9}},{"start":{"line":17,"column":9},"end":{"line":17,"column":9}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":9},"end":{"line":20,"column":9}},{"start":{"line":20,"column":9},"end":{"line":20,"column":9}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"6":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":13},"end":{"line":33,"column":20}},{"start":{"line":33,"column":24},"end":{"line":33,"column":32}},{"start":{"line":33,"column":36},"end":{"line":33,"column":45}}]},"7":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"8":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","var bs58 = require('bs58');","var buffer = require('buffer');","","var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'.split('');","","var Base58 = function Base58(obj) {","  /* jshint maxcomplexity: 8 */","  if (!(this instanceof Base58)) {","    return new Base58(obj);","  }","  if (Buffer.isBuffer(obj)) {","    var buf = obj;","    this.fromBuffer(buf);","  } else if (typeof obj === 'string') {","    var str = obj;","    this.fromString(str);","  } else if (obj) {","    this.set(obj);","  }","};","","Base58.validCharacters = function validCharacters(chars) {","  if (buffer.Buffer.isBuffer(chars)) {","    chars = chars.toString();","  }","  return _.all(_.map(chars, function(char) { return _.contains(ALPHABET, char); }));","};","","Base58.prototype.set = function(obj) {","  this.buf = obj.buf || this.buf || undefined;","  return this;","};","","Base58.encode = function(buf) {","  if (!buffer.Buffer.isBuffer(buf)) {","    throw new Error('Input should be a buffer');","  }","  return bs58.encode(buf);","};","","Base58.decode = function(str) {","  if (typeof str !== 'string') {","    throw new Error('Input should be a string');","  }","  return new Buffer(bs58.decode(str));","};","","Base58.prototype.fromBuffer = function(buf) {","  this.buf = buf;","  return this;","};","","Base58.prototype.fromString = function(str) {","  var buf = Base58.decode(str);","  this.buf = buf;","  return this;","};","","Base58.prototype.toBuffer = function() {","  return this.buf;","};","","Base58.prototype.toString = function() {","  return Base58.encode(this.buf);","};","","module.exports = Base58;",""],"l":{"3":1,"4":1,"5":1,"7":1,"9":1,"11":0,"12":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"25":1,"26":0,"27":0,"29":0,"32":1,"33":0,"34":0,"37":1,"38":0,"39":0,"41":0,"44":1,"45":0,"46":0,"48":0,"51":1,"52":0,"53":0,"56":1,"57":0,"58":0,"59":0,"62":1,"63":0,"66":1,"67":0,"70":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/bs58/lib/bs58.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/node_modules/bs58/lib/bs58.js","s":{"1":1,"2":1,"3":1,"4":58,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"encode","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":24}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":30},"end":{"line":42,"column":46}}},"3":{"name":"decode","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":24}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":75}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":21}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":38}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":13}},"6":{"start":{"line":15,"column":0},"end":{"line":43,"column":1}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":36}},"8":{"start":{"line":16,"column":27},"end":{"line":16,"column":36}},"9":{"start":{"line":18,"column":2},"end":{"line":18,"column":24}},"10":{"start":{"line":19,"column":2},"end":{"line":37,"column":3}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":55}},"12":{"start":{"line":20,"column":40},"end":{"line":20,"column":55}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":26}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":17}},"15":{"start":{"line":25,"column":4},"end":{"line":30,"column":5}},"16":{"start":{"line":26,"column":6},"end":{"line":26,"column":24}},"17":{"start":{"line":28,"column":6},"end":{"line":28,"column":36}},"18":{"start":{"line":29,"column":6},"end":{"line":29,"column":23}},"19":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"20":{"start":{"line":33,"column":6},"end":{"line":33,"column":31}},"21":{"start":{"line":35,"column":6},"end":{"line":35,"column":32}},"22":{"start":{"line":40,"column":2},"end":{"line":40,"column":75}},"23":{"start":{"line":40,"column":61},"end":{"line":40,"column":75}},"24":{"start":{"line":42,"column":2},"end":{"line":42,"column":82}},"25":{"start":{"line":42,"column":48},"end":{"line":42,"column":71}},"26":{"start":{"line":45,"column":0},"end":{"line":75,"column":1}},"27":{"start":{"line":46,"column":2},"end":{"line":46,"column":36}},"28":{"start":{"line":46,"column":27},"end":{"line":46,"column":36}},"29":{"start":{"line":48,"column":2},"end":{"line":48,"column":23}},"30":{"start":{"line":49,"column":2},"end":{"line":69,"column":3}},"31":{"start":{"line":50,"column":4},"end":{"line":50,"column":21}},"32":{"start":{"line":51,"column":4},"end":{"line":51,"column":69}},"33":{"start":{"line":51,"column":30},"end":{"line":51,"column":69}},"34":{"start":{"line":53,"column":4},"end":{"line":53,"column":55}},"35":{"start":{"line":53,"column":39},"end":{"line":53,"column":55}},"36":{"start":{"line":54,"column":4},"end":{"line":54,"column":31}},"37":{"start":{"line":56,"column":4},"end":{"line":56,"column":17}},"38":{"start":{"line":57,"column":4},"end":{"line":62,"column":5}},"39":{"start":{"line":58,"column":6},"end":{"line":58,"column":23}},"40":{"start":{"line":60,"column":6},"end":{"line":60,"column":27}},"41":{"start":{"line":61,"column":6},"end":{"line":61,"column":22}},"42":{"start":{"line":64,"column":4},"end":{"line":68,"column":5}},"43":{"start":{"line":65,"column":6},"end":{"line":65,"column":30}},"44":{"start":{"line":67,"column":6},"end":{"line":67,"column":17}},"45":{"start":{"line":72,"column":2},"end":{"line":72,"column":76}},"46":{"start":{"line":72,"column":63},"end":{"line":72,"column":76}},"47":{"start":{"line":74,"column":2},"end":{"line":74,"column":24}},"48":{"start":{"line":77,"column":0},"end":{"line":80,"column":1}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":14},"end":{"line":40,"column":29}},{"start":{"line":40,"column":33},"end":{"line":40,"column":54}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"5":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":14},"end":{"line":72,"column":31}},{"start":{"line":72,"column":35},"end":{"line":72,"column":56}}]}},"code":["// Base58 encoding/decoding","// Originally written by Mike Hearn for BitcoinJ","// Copyright (c) 2011 Google Inc","// Ported to JavaScript by Stefan Thomas","// Merged Buffer refactorings from base58-native by Stephen Pair","// Copyright (c) 2013 BitPay Inc","","var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'","var ALPHABET_MAP = {}","for(var i = 0; i < ALPHABET.length; i++) {","  ALPHABET_MAP[ALPHABET.charAt(i)] = i","}","var BASE = 58","","function encode(buffer) {","  if (buffer.length === 0) return ''","","  var i, j, digits = [0]","  for (i = 0; i < buffer.length; i++) {","    for (j = 0; j < digits.length; j++) digits[j] <<= 8","","    digits[0] += buffer[i]","","    var carry = 0","    for (j = 0; j < digits.length; ++j) {","      digits[j] += carry","","      carry = (digits[j] / BASE) | 0","      digits[j] %= BASE","    }","","    while (carry) {","      digits.push(carry % BASE)","","      carry = (carry / BASE) | 0","    }","  }","","  // deal with leading zeros","  for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) digits.push(0)","","  return digits.reverse().map(function(digit) { return ALPHABET[digit] }).join('')","}","","function decode(string) {","  if (string.length === 0) return []","","  var i, j, bytes = [0]","  for (i = 0; i < string.length; i++) {","    var c = string[i]","    if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character')","","    for (j = 0; j < bytes.length; j++) bytes[j] *= BASE","    bytes[0] += ALPHABET_MAP[c]","","    var carry = 0","    for (j = 0; j < bytes.length; ++j) {","      bytes[j] += carry","","      carry = bytes[j] >> 8","      bytes[j] &= 0xff","    }","","    while (carry) {","      bytes.push(carry & 0xff)","","      carry >>= 8","    }","  }","","  // deal with leading zeros","  for (i = 0; string[i] === '1' && i < string.length - 1; i++) bytes.push(0)","","  return bytes.reverse()","}","","module.exports = {","  encode: encode,","  decode: decode","}",""],"l":{"8":1,"9":1,"10":1,"11":58,"13":1,"15":1,"16":0,"18":0,"19":0,"20":0,"22":0,"24":0,"25":0,"26":0,"28":0,"29":0,"32":0,"33":0,"35":0,"40":0,"42":0,"45":1,"46":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"56":0,"57":0,"58":0,"60":0,"61":0,"64":0,"65":0,"67":0,"72":0,"74":0,"77":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/base58check.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/base58check.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":1,"61":0,"62":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Base58Check","line":8,"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":44}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":28},"end":{"line":22,"column":42}}},"3":{"name":"validChecksum","line":27,"loc":{"start":{"line":27,"column":28},"end":{"line":27,"column":67}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":21},"end":{"line":41,"column":33}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":23},"end":{"line":62,"column":40}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":21},"end":{"line":66,"column":35}}},"7":{"name":"(anonymous_7)","line":76,"loc":{"start":{"line":76,"column":35},"end":{"line":76,"column":49}}},"8":{"name":"(anonymous_8)","line":81,"loc":{"start":{"line":81,"column":35},"end":{"line":81,"column":49}}},"9":{"name":"(anonymous_9)","line":87,"loc":{"start":{"line":87,"column":33},"end":{"line":87,"column":44}}},"10":{"name":"(anonymous_10)","line":91,"loc":{"start":{"line":91,"column":33},"end":{"line":91,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"5":{"start":{"line":8,"column":0},"end":{"line":20,"column":2}},"6":{"start":{"line":9,"column":2},"end":{"line":10,"column":32}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":32}},"8":{"start":{"line":11,"column":2},"end":{"line":19,"column":3}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":18}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"11":{"start":{"line":14,"column":9},"end":{"line":19,"column":3}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":18}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":25}},"14":{"start":{"line":17,"column":9},"end":{"line":19,"column":3}},"15":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"16":{"start":{"line":22,"column":0},"end":{"line":25,"column":2}},"17":{"start":{"line":23,"column":2},"end":{"line":23,"column":46}},"18":{"start":{"line":24,"column":2},"end":{"line":24,"column":14}},"19":{"start":{"line":27,"column":0},"end":{"line":39,"column":2}},"20":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"21":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"22":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"23":{"start":{"line":32,"column":4},"end":{"line":32,"column":58}},"24":{"start":{"line":34,"column":2},"end":{"line":37,"column":3}},"25":{"start":{"line":35,"column":4},"end":{"line":35,"column":30}},"26":{"start":{"line":36,"column":4},"end":{"line":36,"column":29}},"27":{"start":{"line":38,"column":2},"end":{"line":38,"column":81}},"28":{"start":{"line":41,"column":0},"end":{"line":60,"column":2}},"29":{"start":{"line":42,"column":2},"end":{"line":43,"column":46}},"30":{"start":{"line":43,"column":4},"end":{"line":43,"column":46}},"31":{"start":{"line":45,"column":2},"end":{"line":45,"column":41}},"32":{"start":{"line":47,"column":2},"end":{"line":48,"column":46}},"33":{"start":{"line":48,"column":4},"end":{"line":48,"column":46}},"34":{"start":{"line":50,"column":2},"end":{"line":50,"column":30}},"35":{"start":{"line":51,"column":2},"end":{"line":51,"column":27}},"36":{"start":{"line":53,"column":2},"end":{"line":53,"column":32}},"37":{"start":{"line":54,"column":2},"end":{"line":54,"column":31}},"38":{"start":{"line":56,"column":2},"end":{"line":57,"column":41}},"39":{"start":{"line":57,"column":4},"end":{"line":57,"column":41}},"40":{"start":{"line":59,"column":2},"end":{"line":59,"column":14}},"41":{"start":{"line":62,"column":0},"end":{"line":64,"column":2}},"42":{"start":{"line":63,"column":2},"end":{"line":63,"column":42}},"43":{"start":{"line":66,"column":0},"end":{"line":74,"column":2}},"44":{"start":{"line":67,"column":2},"end":{"line":68,"column":46}},"45":{"start":{"line":68,"column":4},"end":{"line":68,"column":46}},"46":{"start":{"line":69,"column":2},"end":{"line":69,"column":46}},"47":{"start":{"line":70,"column":2},"end":{"line":70,"column":39}},"48":{"start":{"line":71,"column":2},"end":{"line":71,"column":23}},"49":{"start":{"line":72,"column":2},"end":{"line":72,"column":36}},"50":{"start":{"line":73,"column":2},"end":{"line":73,"column":35}},"51":{"start":{"line":76,"column":0},"end":{"line":79,"column":2}},"52":{"start":{"line":77,"column":2},"end":{"line":77,"column":17}},"53":{"start":{"line":78,"column":2},"end":{"line":78,"column":14}},"54":{"start":{"line":81,"column":0},"end":{"line":85,"column":2}},"55":{"start":{"line":82,"column":2},"end":{"line":82,"column":36}},"56":{"start":{"line":83,"column":2},"end":{"line":83,"column":17}},"57":{"start":{"line":84,"column":2},"end":{"line":84,"column":14}},"58":{"start":{"line":87,"column":0},"end":{"line":89,"column":2}},"59":{"start":{"line":88,"column":2},"end":{"line":88,"column":18}},"60":{"start":{"line":91,"column":0},"end":{"line":93,"column":2}},"61":{"start":{"line":92,"column":2},"end":{"line":92,"column":38}},"62":{"start":{"line":95,"column":0},"end":{"line":95,"column":29}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"3":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":9},"end":{"line":14,"column":9}},{"start":{"line":14,"column":9},"end":{"line":14,"column":9}}]},"4":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":9}},{"start":{"line":17,"column":9},"end":{"line":17,"column":9}}]},"5":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":13},"end":{"line":23,"column":20}},{"start":{"line":23,"column":24},"end":{"line":23,"column":32}},{"start":{"line":23,"column":36},"end":{"line":23,"column":45}}]},"6":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"7":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"8":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"9":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"10":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"11":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"12":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","var Base58 = require('./base58');","var buffer = require('buffer');","var sha256sha256 = require('../crypto/hash').sha256sha256;","","var Base58Check = function Base58Check(obj) {","  if (!(this instanceof Base58Check))","    return new Base58Check(obj);","  if (Buffer.isBuffer(obj)) {","    var buf = obj;","    this.fromBuffer(buf);","  } else if (typeof obj === 'string') {","    var str = obj;","    this.fromString(str);","  } else if (obj) {","    this.set(obj);","  }","};","","Base58Check.prototype.set = function(obj) {","  this.buf = obj.buf || this.buf || undefined;","  return this;","};","","Base58Check.validChecksum = function validChecksum(data, checksum) {","  if (_.isString(data)) {","    data = new buffer.Buffer(Base58.decode(data));","  }","  if (_.isString(checksum)) {","    checksum = new buffer.Buffer(Base58.decode(checksum));","  }","  if (!checksum) {","    checksum = data.slice(-4);","    data = data.slice(0, -4);","  }","  return Base58Check.checksum(data).toString('hex') === checksum.toString('hex');","};","","Base58Check.decode = function(s) {","  if (typeof s !== 'string')","    throw new Error('Input must be a string');","","  var buf = new Buffer(Base58.decode(s));","","  if (buf.length < 4)","    throw new Error(\"Input string too short\");","","  var data = buf.slice(0, -4);","  var csum = buf.slice(-4);","","  var hash = sha256sha256(data);","  var hash4 = hash.slice(0, 4);","","  if (csum.toString('hex') !== hash4.toString('hex'))","    throw new Error(\"Checksum mismatch\");","","  return data;","};","","Base58Check.checksum = function(buffer) {","  return sha256sha256(buffer).slice(0, 4);","};","","Base58Check.encode = function(buf) {","  if (!Buffer.isBuffer(buf))","    throw new Error('Input must be a buffer');","  var checkedBuf = new Buffer(buf.length + 4);","  var hash = Base58Check.checksum(buf);","  buf.copy(checkedBuf);","  hash.copy(checkedBuf, buf.length);","  return Base58.encode(checkedBuf);","};","","Base58Check.prototype.fromBuffer = function(buf) {","  this.buf = buf;","  return this;","};","","Base58Check.prototype.fromString = function(str) {","  var buf = Base58Check.decode(str);","  this.buf = buf;","  return this;","};","","Base58Check.prototype.toBuffer = function() {","  return this.buf;","};","","Base58Check.prototype.toString = function() {","  return Base58Check.encode(this.buf);","};","","module.exports = Base58Check;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"22":1,"23":0,"24":0,"27":1,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"36":0,"38":0,"41":1,"42":0,"43":0,"45":0,"47":0,"48":0,"50":0,"51":0,"53":0,"54":0,"56":0,"57":0,"59":0,"62":1,"63":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"76":1,"77":0,"78":0,"81":1,"82":0,"83":0,"84":0,"87":1,"88":0,"91":1,"92":0,"95":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/bufferreader.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/bufferreader.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":8,"7":0,"8":8,"9":8,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":1,"23":8,"24":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1},"b":{"1":[0,8],"2":[8,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0,0,0],"13":[0,0]},"f":{"1":8,"2":0,"3":8,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"BufferReader","line":8,"loc":{"start":{"line":8,"column":19},"end":{"line":8,"column":46}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":29},"end":{"line":31,"column":43}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":29},"end":{"line":37,"column":40}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":30},"end":{"line":43,"column":44}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":33},"end":{"line":50,"column":44}}},"6":{"name":"(anonymous_6)","line":56,"loc":{"start":{"line":56,"column":35},"end":{"line":56,"column":46}}},"7":{"name":"(anonymous_7)","line":62,"loc":{"start":{"line":62,"column":38},"end":{"line":62,"column":49}}},"8":{"name":"(anonymous_8)","line":68,"loc":{"start":{"line":68,"column":38},"end":{"line":68,"column":49}}},"9":{"name":"(anonymous_9)","line":74,"loc":{"start":{"line":74,"column":38},"end":{"line":74,"column":49}}},"10":{"name":"(anonymous_10)","line":80,"loc":{"start":{"line":80,"column":38},"end":{"line":80,"column":49}}},"11":{"name":"(anonymous_11)","line":86,"loc":{"start":{"line":86,"column":40},"end":{"line":86,"column":51}}},"12":{"name":"(anonymous_12)","line":93,"loc":{"start":{"line":93,"column":40},"end":{"line":93,"column":51}}},"13":{"name":"(anonymous_13)","line":114,"loc":{"start":{"line":114,"column":39},"end":{"line":114,"column":50}}},"14":{"name":"(anonymous_14)","line":138,"loc":{"start":{"line":138,"column":45},"end":{"line":138,"column":56}}},"15":{"name":"(anonymous_15)","line":146,"loc":{"start":{"line":146,"column":39},"end":{"line":146,"column":50}}},"16":{"name":"(anonymous_16)","line":160,"loc":{"start":{"line":160,"column":38},"end":{"line":160,"column":49}}},"17":{"name":"(anonymous_17)","line":174,"loc":{"start":{"line":174,"column":33},"end":{"line":174,"column":44}}},"18":{"name":"(anonymous_18)","line":183,"loc":{"start":{"line":183,"column":37},"end":{"line":183,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"5":{"start":{"line":8,"column":0},"end":{"line":29,"column":2}},"6":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"8":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":11}},"10":{"start":{"line":15,"column":2},"end":{"line":28,"column":3}},"11":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"12":{"start":{"line":19,"column":9},"end":{"line":28,"column":3}},"13":{"start":{"line":20,"column":4},"end":{"line":22,"column":7}},"14":{"start":{"line":23,"column":9},"end":{"line":28,"column":3}},"15":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":18}},"17":{"start":{"line":27,"column":4},"end":{"line":27,"column":66}},"18":{"start":{"line":31,"column":0},"end":{"line":35,"column":2}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":46}},"20":{"start":{"line":33,"column":2},"end":{"line":33,"column":38}},"21":{"start":{"line":34,"column":2},"end":{"line":34,"column":14}},"22":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"23":{"start":{"line":38,"column":2},"end":{"line":38,"column":37}},"24":{"start":{"line":41,"column":0},"end":{"line":41,"column":61}},"25":{"start":{"line":43,"column":0},"end":{"line":48,"column":2}},"26":{"start":{"line":44,"column":2},"end":{"line":44,"column":64}},"27":{"start":{"line":45,"column":2},"end":{"line":45,"column":53}},"28":{"start":{"line":46,"column":2},"end":{"line":46,"column":28}},"29":{"start":{"line":47,"column":2},"end":{"line":47,"column":13}},"30":{"start":{"line":50,"column":0},"end":{"line":54,"column":2}},"31":{"start":{"line":51,"column":2},"end":{"line":51,"column":54}},"32":{"start":{"line":52,"column":2},"end":{"line":52,"column":29}},"33":{"start":{"line":53,"column":2},"end":{"line":53,"column":13}},"34":{"start":{"line":56,"column":0},"end":{"line":60,"column":2}},"35":{"start":{"line":57,"column":2},"end":{"line":57,"column":41}},"36":{"start":{"line":58,"column":2},"end":{"line":58,"column":26}},"37":{"start":{"line":59,"column":2},"end":{"line":59,"column":13}},"38":{"start":{"line":62,"column":0},"end":{"line":66,"column":2}},"39":{"start":{"line":63,"column":2},"end":{"line":63,"column":44}},"40":{"start":{"line":64,"column":2},"end":{"line":64,"column":26}},"41":{"start":{"line":65,"column":2},"end":{"line":65,"column":13}},"42":{"start":{"line":68,"column":0},"end":{"line":72,"column":2}},"43":{"start":{"line":69,"column":2},"end":{"line":69,"column":44}},"44":{"start":{"line":70,"column":2},"end":{"line":70,"column":26}},"45":{"start":{"line":71,"column":2},"end":{"line":71,"column":13}},"46":{"start":{"line":74,"column":0},"end":{"line":78,"column":2}},"47":{"start":{"line":75,"column":2},"end":{"line":75,"column":44}},"48":{"start":{"line":76,"column":2},"end":{"line":76,"column":26}},"49":{"start":{"line":77,"column":2},"end":{"line":77,"column":13}},"50":{"start":{"line":80,"column":0},"end":{"line":84,"column":2}},"51":{"start":{"line":81,"column":2},"end":{"line":81,"column":44}},"52":{"start":{"line":82,"column":2},"end":{"line":82,"column":26}},"53":{"start":{"line":83,"column":2},"end":{"line":83,"column":13}},"54":{"start":{"line":86,"column":0},"end":{"line":91,"column":2}},"55":{"start":{"line":87,"column":2},"end":{"line":87,"column":51}},"56":{"start":{"line":88,"column":2},"end":{"line":88,"column":30}},"57":{"start":{"line":89,"column":2},"end":{"line":89,"column":26}},"58":{"start":{"line":90,"column":2},"end":{"line":90,"column":12}},"59":{"start":{"line":93,"column":0},"end":{"line":112,"column":2}},"60":{"start":{"line":94,"column":2},"end":{"line":94,"column":47}},"61":{"start":{"line":95,"column":2},"end":{"line":95,"column":50}},"62":{"start":{"line":96,"column":2},"end":{"line":96,"column":48}},"63":{"start":{"line":103,"column":2},"end":{"line":103,"column":9}},"64":{"start":{"line":104,"column":2},"end":{"line":109,"column":3}},"65":{"start":{"line":105,"column":4},"end":{"line":105,"column":26}},"66":{"start":{"line":107,"column":4},"end":{"line":107,"column":76}},"67":{"start":{"line":108,"column":4},"end":{"line":108,"column":32}},"68":{"start":{"line":110,"column":2},"end":{"line":110,"column":26}},"69":{"start":{"line":111,"column":2},"end":{"line":111,"column":12}},"70":{"start":{"line":114,"column":0},"end":{"line":133,"column":2}},"71":{"start":{"line":115,"column":2},"end":{"line":115,"column":31}},"72":{"start":{"line":116,"column":2},"end":{"line":132,"column":3}},"73":{"start":{"line":118,"column":6},"end":{"line":118,"column":33}},"74":{"start":{"line":120,"column":6},"end":{"line":120,"column":33}},"75":{"start":{"line":122,"column":6},"end":{"line":122,"column":37}},"76":{"start":{"line":123,"column":6},"end":{"line":123,"column":28}},"77":{"start":{"line":124,"column":6},"end":{"line":128,"column":7}},"78":{"start":{"line":125,"column":8},"end":{"line":125,"column":17}},"79":{"start":{"line":127,"column":8},"end":{"line":127,"column":83}},"80":{"start":{"line":129,"column":6},"end":{"line":129,"column":12}},"81":{"start":{"line":131,"column":6},"end":{"line":131,"column":19}},"82":{"start":{"line":138,"column":0},"end":{"line":144,"column":2}},"83":{"start":{"line":139,"column":2},"end":{"line":139,"column":33}},"84":{"start":{"line":140,"column":2},"end":{"line":140,"column":27}},"85":{"start":{"line":141,"column":2},"end":{"line":142,"column":60}},"86":{"start":{"line":143,"column":2},"end":{"line":143,"column":13}},"87":{"start":{"line":146,"column":0},"end":{"line":158,"column":2}},"88":{"start":{"line":147,"column":2},"end":{"line":147,"column":43}},"89":{"start":{"line":148,"column":2},"end":{"line":157,"column":3}},"90":{"start":{"line":150,"column":6},"end":{"line":150,"column":30}},"91":{"start":{"line":152,"column":6},"end":{"line":152,"column":30}},"92":{"start":{"line":154,"column":6},"end":{"line":154,"column":30}},"93":{"start":{"line":156,"column":6},"end":{"line":156,"column":26}},"94":{"start":{"line":160,"column":0},"end":{"line":172,"column":2}},"95":{"start":{"line":161,"column":2},"end":{"line":161,"column":31}},"96":{"start":{"line":162,"column":2},"end":{"line":171,"column":3}},"97":{"start":{"line":164,"column":6},"end":{"line":164,"column":41}},"98":{"start":{"line":166,"column":6},"end":{"line":166,"column":41}},"99":{"start":{"line":168,"column":6},"end":{"line":168,"column":35}},"100":{"start":{"line":170,"column":6},"end":{"line":170,"column":27}},"101":{"start":{"line":174,"column":0},"end":{"line":181,"column":2}},"102":{"start":{"line":175,"column":2},"end":{"line":175,"column":40}},"103":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"104":{"start":{"line":177,"column":4},"end":{"line":177,"column":47}},"105":{"start":{"line":179,"column":2},"end":{"line":179,"column":17}},"106":{"start":{"line":180,"column":2},"end":{"line":180,"column":14}},"107":{"start":{"line":183,"column":0},"end":{"line":190,"column":2}},"108":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"109":{"start":{"line":185,"column":4},"end":{"line":185,"column":26}},"110":{"start":{"line":187,"column":2},"end":{"line":187,"column":53}},"111":{"start":{"line":188,"column":2},"end":{"line":188,"column":28}},"112":{"start":{"line":189,"column":2},"end":{"line":189,"column":33}},"113":{"start":{"line":192,"column":0},"end":{"line":192,"column":30}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":9},"end":{"line":19,"column":9}},{"start":{"line":19,"column":9},"end":{"line":19,"column":9}}]},"5":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":9},"end":{"line":23,"column":9}},{"start":{"line":23,"column":9},"end":{"line":23,"column":9}}]},"6":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":13},"end":{"line":32,"column":20}},{"start":{"line":32,"column":24},"end":{"line":32,"column":32}},{"start":{"line":32,"column":36},"end":{"line":32,"column":45}}]},"7":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":13},"end":{"line":33,"column":20}},{"start":{"line":33,"column":24},"end":{"line":33,"column":32}},{"start":{"line":33,"column":36},"end":{"line":33,"column":37}}]},"8":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"9":{"line":116,"type":"switch","locations":[{"start":{"line":117,"column":4},"end":{"line":118,"column":33}},{"start":{"line":119,"column":4},"end":{"line":120,"column":33}},{"start":{"line":121,"column":4},"end":{"line":129,"column":12}},{"start":{"line":130,"column":4},"end":{"line":131,"column":19}}]},"10":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":6}},{"start":{"line":124,"column":6},"end":{"line":124,"column":6}}]},"11":{"line":148,"type":"switch","locations":[{"start":{"line":149,"column":4},"end":{"line":150,"column":30}},{"start":{"line":151,"column":4},"end":{"line":152,"column":30}},{"start":{"line":153,"column":4},"end":{"line":154,"column":30}},{"start":{"line":155,"column":4},"end":{"line":156,"column":26}}]},"12":{"line":162,"type":"switch","locations":[{"start":{"line":163,"column":4},"end":{"line":164,"column":41}},{"start":{"line":165,"column":4},"end":{"line":166,"column":41}},{"start":{"line":167,"column":4},"end":{"line":168,"column":35}},{"start":{"line":169,"column":4},"end":{"line":170,"column":27}}]},"13":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","var $ = require('../util/preconditions');","var BufferUtil = require('../util/buffer');","var BN = require('../crypto/bn');","","var BufferReader = function BufferReader(buf) {","  if (!(this instanceof BufferReader)) {","    return new BufferReader(buf);","  }","  if (_.isUndefined(buf)) {","    return;","  }","  if (Buffer.isBuffer(buf)) {","    this.set({","      buf: buf","    });","  } else if (_.isString(buf)) {","    this.set({","      buf: new Buffer(buf, 'hex'),","    });","  } else if (_.isObject(buf)) {","    var obj = buf;","    this.set(obj);","  } else {","    throw new TypeError('Unrecognized argument for BufferReader');","  }","};","","BufferReader.prototype.set = function(obj) {","  this.buf = obj.buf || this.buf || undefined;","  this.pos = obj.pos || this.pos || 0;","  return this;","};","","BufferReader.prototype.eof = function() {","  return this.pos >= this.buf.length;","};","","BufferReader.prototype.finished = BufferReader.prototype.eof;","","BufferReader.prototype.read = function(len) {","  $.checkArgument(!_.isUndefined(len), 'Must specify a length');","  var buf = this.buf.slice(this.pos, this.pos + len);","  this.pos = this.pos + len;","  return buf;","};","","BufferReader.prototype.readAll = function() {","  var buf = this.buf.slice(this.pos, this.buf.length);","  this.pos = this.buf.length;","  return buf;","};","","BufferReader.prototype.readUInt8 = function() {","  var val = this.buf.readUInt8(this.pos);","  this.pos = this.pos + 1;","  return val;","};","","BufferReader.prototype.readUInt16BE = function() {","  var val = this.buf.readUInt16BE(this.pos);","  this.pos = this.pos + 2;","  return val;","};","","BufferReader.prototype.readUInt16LE = function() {","  var val = this.buf.readUInt16LE(this.pos);","  this.pos = this.pos + 2;","  return val;","};","","BufferReader.prototype.readUInt32BE = function() {","  var val = this.buf.readUInt32BE(this.pos);","  this.pos = this.pos + 4;","  return val;","};","","BufferReader.prototype.readUInt32LE = function() {","  var val = this.buf.readUInt32LE(this.pos);","  this.pos = this.pos + 4;","  return val;","};","","BufferReader.prototype.readUInt64BEBN = function() {","  var buf = this.buf.slice(this.pos, this.pos + 8);","  var bn = BN.fromBuffer(buf);","  this.pos = this.pos + 8;","  return bn;","};","","BufferReader.prototype.readUInt64LEBN = function() {","  var second = this.buf.readUInt32LE(this.pos);","  var first = this.buf.readUInt32LE(this.pos + 4);","  var combined = (first * 0x100000000) + second;","  // Instantiating an instance of BN with a number is faster than with an","  // array or string. However, the maximum safe number for a double precision","  // floating point is 2 ^ 52 - 1 (0x1fffffffffffff), thus we can safely use","  // non-floating point numbers less than this amount (52 bits). And in the case","  // that the number is larger, we can instatiate an instance of BN by passing","  // an array from the buffer (slower) and specifying the endianness.","  var bn;","  if (combined <= 0x1fffffffffffff) {","    bn = new BN(combined);","  } else {","    var data = Array.prototype.slice.call(this.buf, this.pos, this.pos + 8);","    bn = new BN(data, 10, 'le');","  }","  this.pos = this.pos + 8;","  return bn;","};","","BufferReader.prototype.readVarintNum = function() {","  var first = this.readUInt8();","  switch (first) {","    case 0xFD:","      return this.readUInt16LE();","    case 0xFE:","      return this.readUInt32LE();","    case 0xFF:","      var bn = this.readUInt64LEBN();","      var n = bn.toNumber();","      if (n <= Math.pow(2, 53)) {","        return n;","      } else {","        throw new Error('number too large to retain precision - use readVarintBN');","      }","      break;","    default:","      return first;","  }","};","","/**"," * reads a length prepended buffer"," */","BufferReader.prototype.readVarLengthBuffer = function() {","  var len = this.readVarintNum();","  var buf = this.read(len);","  $.checkState(buf.length === len, 'Invalid length while reading varlength buffer. ' +","    'Expected to read: ' + len + ' and read ' + buf.length);","  return buf;","};","","BufferReader.prototype.readVarintBuf = function() {","  var first = this.buf.readUInt8(this.pos);","  switch (first) {","    case 0xFD:","      return this.read(1 + 2);","    case 0xFE:","      return this.read(1 + 4);","    case 0xFF:","      return this.read(1 + 8);","    default:","      return this.read(1);","  }","};","","BufferReader.prototype.readVarintBN = function() {","  var first = this.readUInt8();","  switch (first) {","    case 0xFD:","      return new BN(this.readUInt16LE());","    case 0xFE:","      return new BN(this.readUInt32LE());","    case 0xFF:","      return this.readUInt64LEBN();","    default:","      return new BN(first);","  }","};","","BufferReader.prototype.reverse = function() {","  var buf = new Buffer(this.buf.length);","  for (var i = 0; i < buf.length; i++) {","    buf[i] = this.buf[this.buf.length - 1 - i];","  }","  this.buf = buf;","  return this;","};","","BufferReader.prototype.readReverse = function(len) {","  if (_.isUndefined(len)) {","    len = this.buf.length;","  }","  var buf = this.buf.slice(this.pos, this.pos + len);","  this.pos = this.pos + len;","  return BufferUtil.reverse(buf);","};","","module.exports = BufferReader;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":8,"10":0,"12":8,"13":8,"15":0,"16":0,"19":0,"20":0,"23":0,"24":0,"25":0,"27":0,"31":1,"32":0,"33":0,"34":0,"37":1,"38":8,"41":1,"43":1,"44":0,"45":0,"46":0,"47":0,"50":1,"51":0,"52":0,"53":0,"56":1,"57":0,"58":0,"59":0,"62":1,"63":0,"64":0,"65":0,"68":1,"69":0,"70":0,"71":0,"74":1,"75":0,"76":0,"77":0,"80":1,"81":0,"82":0,"83":0,"86":1,"87":0,"88":0,"89":0,"90":0,"93":1,"94":0,"95":0,"96":0,"103":0,"104":0,"105":0,"107":0,"108":0,"110":0,"111":0,"114":1,"115":0,"116":0,"118":0,"120":0,"122":0,"123":0,"124":0,"125":0,"127":0,"129":0,"131":0,"138":1,"139":0,"140":0,"141":0,"143":0,"146":1,"147":0,"148":0,"150":0,"152":0,"154":0,"156":0,"160":1,"161":0,"162":0,"164":0,"166":0,"168":0,"170":0,"174":1,"175":0,"176":0,"177":0,"179":0,"180":0,"183":1,"184":0,"185":0,"187":0,"188":0,"189":0,"192":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/bufferwriter.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/bufferwriter.js","s":{"1":1,"2":1,"3":1,"4":28,"5":0,"6":28,"7":0,"8":28,"9":1,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":1,"17":40,"18":28,"19":28,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1,"50":28,"51":28,"52":28,"53":28,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1},"b":{"1":[0,28],"2":[0,28],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":28,"2":0,"3":0,"4":0,"5":40,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":28,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"BufferWriter","line":6,"loc":{"start":{"line":6,"column":19},"end":{"line":6,"column":46}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":29},"end":{"line":15,"column":43}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":34},"end":{"line":20,"column":45}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":32},"end":{"line":24,"column":43}}},"5":{"name":"(anonymous_5)","line":28,"loc":{"start":{"line":28,"column":31},"end":{"line":28,"column":45}}},"6":{"name":"(anonymous_6)","line":34,"loc":{"start":{"line":34,"column":38},"end":{"line":34,"column":52}}},"7":{"name":"(anonymous_7)","line":40,"loc":{"start":{"line":40,"column":36},"end":{"line":40,"column":48}}},"8":{"name":"(anonymous_8)","line":47,"loc":{"start":{"line":47,"column":39},"end":{"line":47,"column":51}}},"9":{"name":"(anonymous_9)","line":54,"loc":{"start":{"line":54,"column":39},"end":{"line":54,"column":51}}},"10":{"name":"(anonymous_10)","line":61,"loc":{"start":{"line":61,"column":39},"end":{"line":61,"column":51}}},"11":{"name":"(anonymous_11)","line":68,"loc":{"start":{"line":68,"column":38},"end":{"line":68,"column":50}}},"12":{"name":"(anonymous_12)","line":75,"loc":{"start":{"line":75,"column":39},"end":{"line":75,"column":51}}},"13":{"name":"(anonymous_13)","line":82,"loc":{"start":{"line":82,"column":41},"end":{"line":82,"column":54}}},"14":{"name":"(anonymous_14)","line":88,"loc":{"start":{"line":88,"column":41},"end":{"line":88,"column":54}}},"15":{"name":"(anonymous_15)","line":94,"loc":{"start":{"line":94,"column":40},"end":{"line":94,"column":52}}},"16":{"name":"(anonymous_16)","line":100,"loc":{"start":{"line":100,"column":39},"end":{"line":100,"column":52}}},"17":{"name":"(anonymous_17)","line":106,"loc":{"start":{"line":106,"column":28},"end":{"line":106,"column":40}}},"18":{"name":"(anonymous_18)","line":128,"loc":{"start":{"line":128,"column":27},"end":{"line":128,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":6,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":7,"column":2},"end":{"line":8,"column":33}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":33}},"6":{"start":{"line":9,"column":2},"end":{"line":12,"column":19}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":18}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":19}},"9":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}},"10":{"start":{"line":16,"column":2},"end":{"line":16,"column":42}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":14}},"12":{"start":{"line":20,"column":0},"end":{"line":22,"column":2}},"13":{"start":{"line":21,"column":2},"end":{"line":21,"column":23}},"14":{"start":{"line":24,"column":0},"end":{"line":26,"column":2}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":34}},"16":{"start":{"line":28,"column":0},"end":{"line":32,"column":2}},"17":{"start":{"line":29,"column":2},"end":{"line":29,"column":35}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":22}},"19":{"start":{"line":31,"column":2},"end":{"line":31,"column":14}},"20":{"start":{"line":34,"column":0},"end":{"line":38,"column":2}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":35}},"22":{"start":{"line":36,"column":2},"end":{"line":36,"column":42}},"23":{"start":{"line":37,"column":2},"end":{"line":37,"column":14}},"24":{"start":{"line":40,"column":0},"end":{"line":45,"column":2}},"25":{"start":{"line":41,"column":2},"end":{"line":41,"column":26}},"26":{"start":{"line":42,"column":2},"end":{"line":42,"column":23}},"27":{"start":{"line":43,"column":2},"end":{"line":43,"column":18}},"28":{"start":{"line":44,"column":2},"end":{"line":44,"column":14}},"29":{"start":{"line":47,"column":0},"end":{"line":52,"column":2}},"30":{"start":{"line":48,"column":2},"end":{"line":48,"column":26}},"31":{"start":{"line":49,"column":2},"end":{"line":49,"column":26}},"32":{"start":{"line":50,"column":2},"end":{"line":50,"column":18}},"33":{"start":{"line":51,"column":2},"end":{"line":51,"column":14}},"34":{"start":{"line":54,"column":0},"end":{"line":59,"column":2}},"35":{"start":{"line":55,"column":2},"end":{"line":55,"column":26}},"36":{"start":{"line":56,"column":2},"end":{"line":56,"column":26}},"37":{"start":{"line":57,"column":2},"end":{"line":57,"column":18}},"38":{"start":{"line":58,"column":2},"end":{"line":58,"column":14}},"39":{"start":{"line":61,"column":0},"end":{"line":66,"column":2}},"40":{"start":{"line":62,"column":2},"end":{"line":62,"column":26}},"41":{"start":{"line":63,"column":2},"end":{"line":63,"column":26}},"42":{"start":{"line":64,"column":2},"end":{"line":64,"column":18}},"43":{"start":{"line":65,"column":2},"end":{"line":65,"column":14}},"44":{"start":{"line":68,"column":0},"end":{"line":73,"column":2}},"45":{"start":{"line":69,"column":2},"end":{"line":69,"column":26}},"46":{"start":{"line":70,"column":2},"end":{"line":70,"column":25}},"47":{"start":{"line":71,"column":2},"end":{"line":71,"column":18}},"48":{"start":{"line":72,"column":2},"end":{"line":72,"column":14}},"49":{"start":{"line":75,"column":0},"end":{"line":80,"column":2}},"50":{"start":{"line":76,"column":2},"end":{"line":76,"column":26}},"51":{"start":{"line":77,"column":2},"end":{"line":77,"column":26}},"52":{"start":{"line":78,"column":2},"end":{"line":78,"column":18}},"53":{"start":{"line":79,"column":2},"end":{"line":79,"column":14}},"54":{"start":{"line":82,"column":0},"end":{"line":86,"column":2}},"55":{"start":{"line":83,"column":2},"end":{"line":83,"column":35}},"56":{"start":{"line":84,"column":2},"end":{"line":84,"column":18}},"57":{"start":{"line":85,"column":2},"end":{"line":85,"column":14}},"58":{"start":{"line":88,"column":0},"end":{"line":92,"column":2}},"59":{"start":{"line":89,"column":2},"end":{"line":89,"column":35}},"60":{"start":{"line":90,"column":2},"end":{"line":90,"column":25}},"61":{"start":{"line":91,"column":2},"end":{"line":91,"column":14}},"62":{"start":{"line":94,"column":0},"end":{"line":98,"column":2}},"63":{"start":{"line":95,"column":2},"end":{"line":95,"column":41}},"64":{"start":{"line":96,"column":2},"end":{"line":96,"column":18}},"65":{"start":{"line":97,"column":2},"end":{"line":97,"column":14}},"66":{"start":{"line":100,"column":0},"end":{"line":104,"column":2}},"67":{"start":{"line":101,"column":2},"end":{"line":101,"column":41}},"68":{"start":{"line":102,"column":2},"end":{"line":102,"column":18}},"69":{"start":{"line":103,"column":2},"end":{"line":103,"column":14}},"70":{"start":{"line":106,"column":0},"end":{"line":126,"column":2}},"71":{"start":{"line":107,"column":2},"end":{"line":107,"column":22}},"72":{"start":{"line":108,"column":2},"end":{"line":124,"column":3}},"73":{"start":{"line":109,"column":4},"end":{"line":109,"column":24}},"74":{"start":{"line":110,"column":4},"end":{"line":110,"column":25}},"75":{"start":{"line":111,"column":9},"end":{"line":124,"column":3}},"76":{"start":{"line":112,"column":4},"end":{"line":112,"column":28}},"77":{"start":{"line":113,"column":4},"end":{"line":113,"column":27}},"78":{"start":{"line":114,"column":4},"end":{"line":114,"column":28}},"79":{"start":{"line":115,"column":9},"end":{"line":124,"column":3}},"80":{"start":{"line":116,"column":4},"end":{"line":116,"column":28}},"81":{"start":{"line":117,"column":4},"end":{"line":117,"column":27}},"82":{"start":{"line":118,"column":4},"end":{"line":118,"column":28}},"83":{"start":{"line":120,"column":4},"end":{"line":120,"column":28}},"84":{"start":{"line":121,"column":4},"end":{"line":121,"column":27}},"85":{"start":{"line":122,"column":4},"end":{"line":122,"column":32}},"86":{"start":{"line":123,"column":4},"end":{"line":123,"column":54}},"87":{"start":{"line":125,"column":2},"end":{"line":125,"column":13}},"88":{"start":{"line":128,"column":0},"end":{"line":149,"column":2}},"89":{"start":{"line":129,"column":2},"end":{"line":129,"column":22}},"90":{"start":{"line":130,"column":2},"end":{"line":130,"column":24}},"91":{"start":{"line":131,"column":2},"end":{"line":147,"column":3}},"92":{"start":{"line":132,"column":4},"end":{"line":132,"column":24}},"93":{"start":{"line":133,"column":4},"end":{"line":133,"column":25}},"94":{"start":{"line":134,"column":9},"end":{"line":147,"column":3}},"95":{"start":{"line":135,"column":4},"end":{"line":135,"column":28}},"96":{"start":{"line":136,"column":4},"end":{"line":136,"column":27}},"97":{"start":{"line":137,"column":4},"end":{"line":137,"column":28}},"98":{"start":{"line":138,"column":9},"end":{"line":147,"column":3}},"99":{"start":{"line":139,"column":4},"end":{"line":139,"column":28}},"100":{"start":{"line":140,"column":4},"end":{"line":140,"column":27}},"101":{"start":{"line":141,"column":4},"end":{"line":141,"column":28}},"102":{"start":{"line":143,"column":4},"end":{"line":143,"column":32}},"103":{"start":{"line":144,"column":4},"end":{"line":144,"column":23}},"104":{"start":{"line":145,"column":4},"end":{"line":145,"column":27}},"105":{"start":{"line":146,"column":4},"end":{"line":146,"column":26}},"106":{"start":{"line":148,"column":2},"end":{"line":148,"column":13}},"107":{"start":{"line":151,"column":0},"end":{"line":151,"column":30}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"2":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":14},"end":{"line":16,"column":22}},{"start":{"line":16,"column":26},"end":{"line":16,"column":35}},{"start":{"line":16,"column":39},"end":{"line":16,"column":41}}]},"4":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"5":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":9},"end":{"line":111,"column":9}},{"start":{"line":111,"column":9},"end":{"line":111,"column":9}}]},"6":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":9},"end":{"line":115,"column":9}},{"start":{"line":115,"column":9},"end":{"line":115,"column":9}}]},"7":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"8":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":9},"end":{"line":134,"column":9}},{"start":{"line":134,"column":9},"end":{"line":134,"column":9}}]},"9":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":9},"end":{"line":138,"column":9}},{"start":{"line":138,"column":9},"end":{"line":138,"column":9}}]}},"code":["'use strict';","","var bufferUtil = require('../util/buffer');","var assert = require('assert');","","var BufferWriter = function BufferWriter(obj) {","  if (!(this instanceof BufferWriter))","    return new BufferWriter(obj);","  if (obj)","    this.set(obj);","  else","    this.bufs = [];","};","","BufferWriter.prototype.set = function(obj) {","  this.bufs = obj.bufs || this.bufs || [];","  return this;","};","","BufferWriter.prototype.toBuffer = function() {","  return this.concat();","};","","BufferWriter.prototype.concat = function() {","  return Buffer.concat(this.bufs);","};","","BufferWriter.prototype.write = function(buf) {","  assert(bufferUtil.isBuffer(buf));","  this.bufs.push(buf);","  return this;","};","","BufferWriter.prototype.writeReverse = function(buf) {","  assert(bufferUtil.isBuffer(buf));","  this.bufs.push(bufferUtil.reverse(buf));","  return this;","};","","BufferWriter.prototype.writeUInt8 = function(n) {","  var buf = new Buffer(1);","  buf.writeUInt8(n, 0);","  this.write(buf);","  return this;","};","","BufferWriter.prototype.writeUInt16BE = function(n) {","  var buf = new Buffer(2);","  buf.writeUInt16BE(n, 0);","  this.write(buf);","  return this;","};","","BufferWriter.prototype.writeUInt16LE = function(n) {","  var buf = new Buffer(2);","  buf.writeUInt16LE(n, 0);","  this.write(buf);","  return this;","};","","BufferWriter.prototype.writeUInt32BE = function(n) {","  var buf = new Buffer(4);","  buf.writeUInt32BE(n, 0);","  this.write(buf);","  return this;","};","","BufferWriter.prototype.writeInt32LE = function(n) {","  var buf = new Buffer(4);","  buf.writeInt32LE(n, 0);","  this.write(buf);","  return this;","};","","BufferWriter.prototype.writeUInt32LE = function(n) {","  var buf = new Buffer(4);","  buf.writeUInt32LE(n, 0);","  this.write(buf);","  return this;","};","","BufferWriter.prototype.writeUInt64BEBN = function(bn) {","  var buf = bn.toBuffer({size: 8});","  this.write(buf);","  return this;","};","","BufferWriter.prototype.writeUInt64LEBN = function(bn) {","  var buf = bn.toBuffer({size: 8});","  this.writeReverse(buf);","  return this;","};","","BufferWriter.prototype.writeVarintNum = function(n) {","  var buf = BufferWriter.varintBufNum(n);","  this.write(buf);","  return this;","};","","BufferWriter.prototype.writeVarintBN = function(bn) {","  var buf = BufferWriter.varintBufBN(bn);","  this.write(buf);","  return this;","};","","BufferWriter.varintBufNum = function(n) {","  var buf = undefined;","  if (n < 253) {","    buf = new Buffer(1);","    buf.writeUInt8(n, 0);","  } else if (n < 0x10000) {","    buf = new Buffer(1 + 2);","    buf.writeUInt8(253, 0);","    buf.writeUInt16LE(n, 1);","  } else if (n < 0x100000000) {","    buf = new Buffer(1 + 4);","    buf.writeUInt8(254, 0);","    buf.writeUInt32LE(n, 1);","  } else {","    buf = new Buffer(1 + 8);","    buf.writeUInt8(255, 0);","    buf.writeInt32LE(n & -1, 1);","    buf.writeUInt32LE(Math.floor(n / 0x100000000), 5);","  }","  return buf;","};","","BufferWriter.varintBufBN = function(bn) {","  var buf = undefined;","  var n = bn.toNumber();","  if (n < 253) {","    buf = new Buffer(1);","    buf.writeUInt8(n, 0);","  } else if (n < 0x10000) {","    buf = new Buffer(1 + 2);","    buf.writeUInt8(253, 0);","    buf.writeUInt16LE(n, 1);","  } else if (n < 0x100000000) {","    buf = new Buffer(1 + 4);","    buf.writeUInt8(254, 0);","    buf.writeUInt32LE(n, 1);","  } else {","    var bw = new BufferWriter();","    bw.writeUInt8(255);","    bw.writeUInt64LEBN(bn);","    var buf = bw.concat();","  }","  return buf;","};","","module.exports = BufferWriter;",""],"l":{"3":1,"4":1,"6":1,"7":28,"8":0,"9":28,"10":0,"12":28,"15":1,"16":0,"17":0,"20":1,"21":0,"24":1,"25":0,"28":1,"29":40,"30":28,"31":28,"34":1,"35":0,"36":0,"37":0,"40":1,"41":0,"42":0,"43":0,"44":0,"47":1,"48":0,"49":0,"50":0,"51":0,"54":1,"55":0,"56":0,"57":0,"58":0,"61":1,"62":0,"63":0,"64":0,"65":0,"68":1,"69":0,"70":0,"71":0,"72":0,"75":1,"76":28,"77":28,"78":28,"79":28,"82":1,"83":0,"84":0,"85":0,"88":1,"89":0,"90":0,"91":0,"94":1,"95":0,"96":0,"97":0,"100":1,"101":0,"102":0,"103":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"120":0,"121":0,"122":0,"123":0,"125":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"143":0,"144":0,"145":0,"146":0,"148":0,"151":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/varint.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/encoding/varint.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":1,"43":0,"44":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"Varint","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":34}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":23},"end":{"line":24,"column":37}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":30},"end":{"line":29,"column":44}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":28},"end":{"line":36,"column":39}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":30},"end":{"line":40,"column":44}}},"6":{"name":"(anonymous_6)","line":45,"loc":{"start":{"line":45,"column":36},"end":{"line":45,"column":49}}},"7":{"name":"(anonymous_7)","line":50,"loc":{"start":{"line":50,"column":26},"end":{"line":50,"column":39}}},"8":{"name":"(anonymous_8)","line":55,"loc":{"start":{"line":55,"column":30},"end":{"line":55,"column":44}}},"9":{"name":"(anonymous_9)","line":60,"loc":{"start":{"line":60,"column":28},"end":{"line":60,"column":39}}},"10":{"name":"(anonymous_10)","line":64,"loc":{"start":{"line":64,"column":24},"end":{"line":64,"column":35}}},"11":{"name":"(anonymous_11)","line":68,"loc":{"start":{"line":68,"column":28},"end":{"line":68,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":7,"column":0},"end":{"line":22,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":9,"column":27}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":27}},"7":{"start":{"line":10,"column":2},"end":{"line":21,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":19}},"9":{"start":{"line":12,"column":9},"end":{"line":21,"column":3}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":18}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":25}},"12":{"start":{"line":15,"column":9},"end":{"line":21,"column":3}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":17}},"14":{"start":{"line":17,"column":4},"end":{"line":17,"column":20}},"15":{"start":{"line":18,"column":9},"end":{"line":21,"column":3}},"16":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"17":{"start":{"line":20,"column":4},"end":{"line":20,"column":18}},"18":{"start":{"line":24,"column":0},"end":{"line":27,"column":2}},"19":{"start":{"line":25,"column":2},"end":{"line":25,"column":33}},"20":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"21":{"start":{"line":29,"column":0},"end":{"line":34,"column":2}},"22":{"start":{"line":30,"column":2},"end":{"line":32,"column":5}},"23":{"start":{"line":33,"column":2},"end":{"line":33,"column":14}},"24":{"start":{"line":36,"column":0},"end":{"line":38,"column":2}},"25":{"start":{"line":37,"column":2},"end":{"line":37,"column":34}},"26":{"start":{"line":40,"column":0},"end":{"line":43,"column":2}},"27":{"start":{"line":41,"column":2},"end":{"line":41,"column":17}},"28":{"start":{"line":42,"column":2},"end":{"line":42,"column":14}},"29":{"start":{"line":45,"column":0},"end":{"line":48,"column":2}},"30":{"start":{"line":46,"column":2},"end":{"line":46,"column":32}},"31":{"start":{"line":47,"column":2},"end":{"line":47,"column":14}},"32":{"start":{"line":50,"column":0},"end":{"line":53,"column":2}},"33":{"start":{"line":51,"column":2},"end":{"line":51,"column":55}},"34":{"start":{"line":52,"column":2},"end":{"line":52,"column":14}},"35":{"start":{"line":55,"column":0},"end":{"line":58,"column":2}},"36":{"start":{"line":56,"column":2},"end":{"line":56,"column":57}},"37":{"start":{"line":57,"column":2},"end":{"line":57,"column":14}},"38":{"start":{"line":60,"column":0},"end":{"line":62,"column":2}},"39":{"start":{"line":61,"column":2},"end":{"line":61,"column":18}},"40":{"start":{"line":64,"column":0},"end":{"line":66,"column":2}},"41":{"start":{"line":65,"column":2},"end":{"line":65,"column":47}},"42":{"start":{"line":68,"column":0},"end":{"line":70,"column":2}},"43":{"start":{"line":69,"column":2},"end":{"line":69,"column":48}},"44":{"start":{"line":72,"column":0},"end":{"line":72,"column":24}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"3":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":9},"end":{"line":12,"column":9}},{"start":{"line":12,"column":9},"end":{"line":12,"column":9}}]},"4":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":9},"end":{"line":15,"column":9}},{"start":{"line":15,"column":9},"end":{"line":15,"column":9}}]},"5":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":9},"end":{"line":18,"column":9}},{"start":{"line":18,"column":9},"end":{"line":18,"column":9}}]},"6":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":13},"end":{"line":25,"column":20}},{"start":{"line":25,"column":24},"end":{"line":25,"column":32}}]}},"code":["'use strict';","","var BufferWriter = require('./bufferwriter');","var BufferReader = require('./bufferreader');","var BN = require('../crypto/bn');","","var Varint = function Varint(buf) {","  if (!(this instanceof Varint))","    return new Varint(buf);","  if (Buffer.isBuffer(buf)) {","    this.buf = buf;","  } else if (typeof buf === 'number') {","    var num = buf;","    this.fromNumber(num);","  } else if (buf instanceof BN) {","    var bn = buf;","    this.fromBN(bn);","  } else if (buf) {","    var obj = buf;","    this.set(obj);","  }","};","","Varint.prototype.set = function(obj) {","  this.buf = obj.buf || this.buf;","  return this;","};","","Varint.prototype.fromString = function(str) {","  this.set({","    buf: new Buffer(str, 'hex')","  });","  return this;","};","","Varint.prototype.toString = function() {","  return this.buf.toString('hex');","};","","Varint.prototype.fromBuffer = function(buf) {","  this.buf = buf;","  return this;","};","","Varint.prototype.fromBufferReader = function(br) {","  this.buf = br.readVarintBuf();","  return this;","};","","Varint.prototype.fromBN = function(bn) {","  this.buf = BufferWriter().writeVarintBN(bn).concat();","  return this;","};","","Varint.prototype.fromNumber = function(num) {","  this.buf = BufferWriter().writeVarintNum(num).concat();","  return this;","};","","Varint.prototype.toBuffer = function() {","  return this.buf;","};","","Varint.prototype.toBN = function() {","  return BufferReader(this.buf).readVarintBN();","};","","Varint.prototype.toNumber = function() {","  return BufferReader(this.buf).readVarintNum();","};","","module.exports = Varint;",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"24":1,"25":0,"26":0,"29":1,"30":0,"33":0,"36":1,"37":0,"40":1,"41":0,"42":0,"45":1,"46":0,"47":0,"50":1,"51":0,"52":0,"55":1,"56":0,"57":0,"60":1,"61":0,"64":1,"65":0,"68":1,"69":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/address.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/address.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":1,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":1,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":1,"142":0,"143":1,"144":0,"145":1,"146":0,"147":0,"148":0,"149":1,"150":0,"151":1,"152":0,"153":1,"154":0,"155":1,"156":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0,0],"10":[0,0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"Address","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":38}}},"2":{"name":"(anonymous_2)","line":95,"loc":{"start":{"line":95,"column":39},"end":{"line":95,"column":69}}},"3":{"name":"(anonymous_3)","line":125,"loc":{"start":{"line":125,"column":25},"end":{"line":125,"column":40}}},"4":{"name":"(anonymous_4)","line":145,"loc":{"start":{"line":145,"column":27},"end":{"line":145,"column":42}}},"5":{"name":"(anonymous_5)","line":162,"loc":{"start":{"line":162,"column":31},"end":{"line":162,"column":48}}},"6":{"name":"(anonymous_6)","line":188,"loc":{"start":{"line":188,"column":27},"end":{"line":188,"column":59}}},"7":{"name":"(anonymous_7)","line":222,"loc":{"start":{"line":222,"column":30},"end":{"line":222,"column":47}}},"8":{"name":"(anonymous_8)","line":239,"loc":{"start":{"line":239,"column":27},"end":{"line":239,"column":53}}},"9":{"name":"(anonymous_9)","line":260,"loc":{"start":{"line":260,"column":25},"end":{"line":260,"column":66}}},"10":{"name":"(anonymous_10)","line":274,"loc":{"start":{"line":274,"column":27},"end":{"line":274,"column":57}}},"11":{"name":"(anonymous_11)","line":291,"loc":{"start":{"line":291,"column":24},"end":{"line":291,"column":48}}},"12":{"name":"(anonymous_12)","line":304,"loc":{"start":{"line":304,"column":28},"end":{"line":304,"column":52}}},"13":{"name":"(anonymous_13)","line":316,"loc":{"start":{"line":316,"column":25},"end":{"line":316,"column":49}}},"14":{"name":"(anonymous_14)","line":332,"loc":{"start":{"line":332,"column":19},"end":{"line":332,"column":45}}},"15":{"name":"(anonymous_15)","line":351,"loc":{"start":{"line":351,"column":21},"end":{"line":351,"column":47}}},"16":{"name":"(anonymous_16)","line":365,"loc":{"start":{"line":365,"column":21},"end":{"line":365,"column":53}}},"17":{"name":"(anonymous_17)","line":378,"loc":{"start":{"line":378,"column":21},"end":{"line":378,"column":50}}},"18":{"name":"fromObject","line":389,"loc":{"start":{"line":389,"column":21},"end":{"line":389,"column":46}}},"19":{"name":"(anonymous_19)","line":412,"loc":{"start":{"line":412,"column":29},"end":{"line":412,"column":59}}},"20":{"name":"(anonymous_20)","line":436,"loc":{"start":{"line":436,"column":18},"end":{"line":436,"column":48}}},"21":{"name":"(anonymous_21)","line":444,"loc":{"start":{"line":444,"column":41},"end":{"line":444,"column":52}}},"22":{"name":"(anonymous_22)","line":452,"loc":{"start":{"line":452,"column":38},"end":{"line":452,"column":49}}},"23":{"name":"(anonymous_23)","line":461,"loc":{"start":{"line":461,"column":29},"end":{"line":461,"column":40}}},"24":{"name":"toObject","line":470,"loc":{"start":{"line":470,"column":56},"end":{"line":470,"column":76}}},"25":{"name":"(anonymous_25)","line":483,"loc":{"start":{"line":483,"column":29},"end":{"line":483,"column":40}}},"26":{"name":"(anonymous_26)","line":492,"loc":{"start":{"line":492,"column":28},"end":{"line":492,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"9":{"start":{"line":46,"column":0},"end":{"line":86,"column":1}},"10":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"11":{"start":{"line":51,"column":4},"end":{"line":51,"column":44}},"12":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"13":{"start":{"line":55,"column":4},"end":{"line":55,"column":55}},"14":{"start":{"line":58,"column":2},"end":{"line":61,"column":3}},"15":{"start":{"line":60,"column":4},"end":{"line":60,"column":16}},"16":{"start":{"line":63,"column":2},"end":{"line":63,"column":106}},"17":{"start":{"line":65,"column":2},"end":{"line":67,"column":3}},"18":{"start":{"line":66,"column":4},"end":{"line":66,"column":75}},"19":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"20":{"start":{"line":70,"column":4},"end":{"line":70,"column":80}},"21":{"start":{"line":73,"column":2},"end":{"line":73,"column":58}},"22":{"start":{"line":76,"column":2},"end":{"line":76,"column":82}},"23":{"start":{"line":77,"column":2},"end":{"line":77,"column":62}},"24":{"start":{"line":79,"column":2},"end":{"line":83,"column":5}},"25":{"start":{"line":85,"column":2},"end":{"line":85,"column":14}},"26":{"start":{"line":95,"column":0},"end":{"line":113,"column":2}},"27":{"start":{"line":98,"column":2},"end":{"line":112,"column":3}},"28":{"start":{"line":99,"column":4},"end":{"line":99,"column":40}},"29":{"start":{"line":100,"column":9},"end":{"line":112,"column":3}},"30":{"start":{"line":101,"column":4},"end":{"line":101,"column":57}},"31":{"start":{"line":102,"column":9},"end":{"line":112,"column":3}},"32":{"start":{"line":103,"column":4},"end":{"line":103,"column":45}},"33":{"start":{"line":104,"column":9},"end":{"line":112,"column":3}},"34":{"start":{"line":105,"column":4},"end":{"line":105,"column":51}},"35":{"start":{"line":106,"column":9},"end":{"line":112,"column":3}},"36":{"start":{"line":107,"column":4},"end":{"line":107,"column":57}},"37":{"start":{"line":108,"column":9},"end":{"line":112,"column":3}},"38":{"start":{"line":109,"column":4},"end":{"line":109,"column":42}},"39":{"start":{"line":111,"column":4},"end":{"line":111,"column":74}},"40":{"start":{"line":116,"column":0},"end":{"line":116,"column":42}},"41":{"start":{"line":118,"column":0},"end":{"line":118,"column":39}},"42":{"start":{"line":125,"column":0},"end":{"line":135,"column":2}},"43":{"start":{"line":126,"column":2},"end":{"line":126,"column":16}},"44":{"start":{"line":127,"column":2},"end":{"line":129,"column":3}},"45":{"start":{"line":128,"column":4},"end":{"line":128,"column":61}},"46":{"start":{"line":130,"column":2},"end":{"line":132,"column":3}},"47":{"start":{"line":131,"column":4},"end":{"line":131,"column":73}},"48":{"start":{"line":133,"column":2},"end":{"line":133,"column":25}},"49":{"start":{"line":134,"column":2},"end":{"line":134,"column":14}},"50":{"start":{"line":145,"column":0},"end":{"line":153,"column":2}},"51":{"start":{"line":146,"column":2},"end":{"line":146,"column":98}},"52":{"start":{"line":147,"column":2},"end":{"line":147,"column":63}},"53":{"start":{"line":148,"column":2},"end":{"line":152,"column":4}},"54":{"start":{"line":162,"column":0},"end":{"line":177,"column":2}},"55":{"start":{"line":163,"column":2},"end":{"line":163,"column":19}},"56":{"start":{"line":165,"column":2},"end":{"line":165,"column":64}},"57":{"start":{"line":166,"column":2},"end":{"line":166,"column":64}},"58":{"start":{"line":168,"column":2},"end":{"line":174,"column":3}},"59":{"start":{"line":169,"column":4},"end":{"line":169,"column":40}},"60":{"start":{"line":170,"column":4},"end":{"line":170,"column":46}},"61":{"start":{"line":171,"column":9},"end":{"line":174,"column":3}},"62":{"start":{"line":172,"column":4},"end":{"line":172,"column":40}},"63":{"start":{"line":173,"column":4},"end":{"line":173,"column":43}},"64":{"start":{"line":176,"column":2},"end":{"line":176,"column":17}},"65":{"start":{"line":188,"column":0},"end":{"line":213,"column":2}},"66":{"start":{"line":190,"column":2},"end":{"line":190,"column":16}},"67":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"68":{"start":{"line":192,"column":4},"end":{"line":192,"column":61}},"69":{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},"70":{"start":{"line":195,"column":4},"end":{"line":195,"column":69}},"71":{"start":{"line":198,"column":2},"end":{"line":198,"column":34}},"72":{"start":{"line":199,"column":2},"end":{"line":199,"column":59}},"73":{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},"74":{"start":{"line":202,"column":4},"end":{"line":202,"column":64}},"75":{"start":{"line":205,"column":2},"end":{"line":207,"column":3}},"76":{"start":{"line":206,"column":4},"end":{"line":206,"column":56}},"77":{"start":{"line":209,"column":2},"end":{"line":209,"column":36}},"78":{"start":{"line":210,"column":2},"end":{"line":210,"column":39}},"79":{"start":{"line":211,"column":2},"end":{"line":211,"column":33}},"80":{"start":{"line":212,"column":2},"end":{"line":212,"column":14}},"81":{"start":{"line":222,"column":0},"end":{"line":230,"column":2}},"82":{"start":{"line":223,"column":2},"end":{"line":223,"column":16}},"83":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"84":{"start":{"line":225,"column":4},"end":{"line":225,"column":69}},"85":{"start":{"line":227,"column":2},"end":{"line":227,"column":60}},"86":{"start":{"line":228,"column":2},"end":{"line":228,"column":41}},"87":{"start":{"line":229,"column":2},"end":{"line":229,"column":14}},"88":{"start":{"line":239,"column":0},"end":{"line":246,"column":2}},"89":{"start":{"line":240,"column":2},"end":{"line":240,"column":80}},"90":{"start":{"line":241,"column":2},"end":{"line":241,"column":44}},"91":{"start":{"line":242,"column":2},"end":{"line":244,"column":3}},"92":{"start":{"line":243,"column":4},"end":{"line":243,"column":54}},"93":{"start":{"line":245,"column":2},"end":{"line":245,"column":14}},"94":{"start":{"line":260,"column":0},"end":{"line":263,"column":2}},"95":{"start":{"line":261,"column":2},"end":{"line":261,"column":72}},"96":{"start":{"line":262,"column":2},"end":{"line":262,"column":83}},"97":{"start":{"line":274,"column":0},"end":{"line":282,"column":2}},"98":{"start":{"line":275,"column":2},"end":{"line":277,"column":3}},"99":{"start":{"line":276,"column":4},"end":{"line":276,"column":68}},"100":{"start":{"line":278,"column":2},"end":{"line":278,"column":21}},"101":{"start":{"line":279,"column":2},"end":{"line":279,"column":47}},"102":{"start":{"line":280,"column":2},"end":{"line":280,"column":68}},"103":{"start":{"line":281,"column":2},"end":{"line":281,"column":14}},"104":{"start":{"line":291,"column":0},"end":{"line":295,"column":2}},"105":{"start":{"line":292,"column":2},"end":{"line":292,"column":47}},"106":{"start":{"line":293,"column":2},"end":{"line":293,"column":47}},"107":{"start":{"line":294,"column":2},"end":{"line":294,"column":58}},"108":{"start":{"line":304,"column":0},"end":{"line":307,"column":2}},"109":{"start":{"line":305,"column":2},"end":{"line":305,"column":42}},"110":{"start":{"line":306,"column":2},"end":{"line":306,"column":75}},"111":{"start":{"line":316,"column":0},"end":{"line":320,"column":2}},"112":{"start":{"line":317,"column":2},"end":{"line":317,"column":54}},"113":{"start":{"line":318,"column":2},"end":{"line":318,"column":42}},"114":{"start":{"line":319,"column":2},"end":{"line":319,"column":72}},"115":{"start":{"line":332,"column":0},"end":{"line":337,"column":2}},"116":{"start":{"line":333,"column":2},"end":{"line":333,"column":48}},"117":{"start":{"line":334,"column":2},"end":{"line":334,"column":81}},"118":{"start":{"line":336,"column":2},"end":{"line":336,"column":82}},"119":{"start":{"line":351,"column":0},"end":{"line":355,"column":2}},"120":{"start":{"line":352,"column":2},"end":{"line":352,"column":80}},"121":{"start":{"line":353,"column":2},"end":{"line":353,"column":55}},"122":{"start":{"line":354,"column":2},"end":{"line":354,"column":58}},"123":{"start":{"line":365,"column":0},"end":{"line":368,"column":2}},"124":{"start":{"line":366,"column":2},"end":{"line":366,"column":61}},"125":{"start":{"line":367,"column":2},"end":{"line":367,"column":63}},"126":{"start":{"line":378,"column":0},"end":{"line":381,"column":2}},"127":{"start":{"line":379,"column":2},"end":{"line":379,"column":58}},"128":{"start":{"line":380,"column":2},"end":{"line":380,"column":63}},"129":{"start":{"line":389,"column":0},"end":{"line":396,"column":2}},"130":{"start":{"line":390,"column":2},"end":{"line":393,"column":4}},"131":{"start":{"line":394,"column":2},"end":{"line":394,"column":47}},"132":{"start":{"line":395,"column":2},"end":{"line":395,"column":56}},"133":{"start":{"line":412,"column":0},"end":{"line":421,"column":2}},"134":{"start":{"line":413,"column":2},"end":{"line":413,"column":12}},"135":{"start":{"line":414,"column":2},"end":{"line":419,"column":3}},"136":{"start":{"line":416,"column":4},"end":{"line":416,"column":37}},"137":{"start":{"line":418,"column":4},"end":{"line":418,"column":14}},"138":{"start":{"line":420,"column":2},"end":{"line":420,"column":15}},"139":{"start":{"line":436,"column":0},"end":{"line":438,"column":2}},"140":{"start":{"line":437,"column":2},"end":{"line":437,"column":58}},"141":{"start":{"line":444,"column":0},"end":{"line":446,"column":2}},"142":{"start":{"line":445,"column":2},"end":{"line":445,"column":50}},"143":{"start":{"line":452,"column":0},"end":{"line":454,"column":2}},"144":{"start":{"line":453,"column":2},"end":{"line":453,"column":47}},"145":{"start":{"line":461,"column":0},"end":{"line":465,"column":2}},"146":{"start":{"line":462,"column":2},"end":{"line":462,"column":54}},"147":{"start":{"line":463,"column":2},"end":{"line":463,"column":54}},"148":{"start":{"line":464,"column":2},"end":{"line":464,"column":13}},"149":{"start":{"line":470,"column":0},"end":{"line":476,"column":2}},"150":{"start":{"line":471,"column":2},"end":{"line":475,"column":4}},"151":{"start":{"line":483,"column":0},"end":{"line":485,"column":2}},"152":{"start":{"line":484,"column":2},"end":{"line":484,"column":45}},"153":{"start":{"line":492,"column":0},"end":{"line":494,"column":2}},"154":{"start":{"line":493,"column":2},"end":{"line":493,"column":102}},"155":{"start":{"line":496,"column":0},"end":{"line":496,"column":25}},"156":{"start":{"line":498,"column":0},"end":{"line":498,"column":33}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"2":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"3":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":21}},{"start":{"line":54,"column":25},"end":{"line":54,"column":44}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"6":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":13}},{"start":{"line":65,"column":17},"end":{"line":65,"column":39}}]},"7":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"8":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":10}},{"start":{"line":69,"column":15},"end":{"line":69,"column":50}},{"start":{"line":69,"column":54},"end":{"line":69,"column":86}}]},"9":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":17},"end":{"line":76,"column":29}},{"start":{"line":76,"column":33},"end":{"line":76,"column":54}},{"start":{"line":76,"column":58},"end":{"line":76,"column":81}}]},"10":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":14},"end":{"line":77,"column":23}},{"start":{"line":77,"column":27},"end":{"line":77,"column":31}},{"start":{"line":77,"column":35},"end":{"line":77,"column":61}}]},"11":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"12":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":7},"end":{"line":98,"column":29}},{"start":{"line":98,"column":33},"end":{"line":98,"column":59}},{"start":{"line":98,"column":64},"end":{"line":98,"column":82}}]},"13":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":9},"end":{"line":100,"column":9}},{"start":{"line":100,"column":9},"end":{"line":100,"column":9}}]},"14":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":14},"end":{"line":100,"column":36}},{"start":{"line":100,"column":40},"end":{"line":100,"column":66}},{"start":{"line":100,"column":71},"end":{"line":100,"column":89}}]},"15":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":9},"end":{"line":102,"column":9}},{"start":{"line":102,"column":9},"end":{"line":102,"column":9}}]},"16":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":9},"end":{"line":104,"column":9}},{"start":{"line":104,"column":9},"end":{"line":104,"column":9}}]},"17":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":9},"end":{"line":106,"column":9}},{"start":{"line":106,"column":9},"end":{"line":106,"column":9}}]},"18":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":9},"end":{"line":108,"column":9}},{"start":{"line":108,"column":9},"end":{"line":108,"column":9}}]},"19":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"20":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":31}},{"start":{"line":127,"column":35},"end":{"line":127,"column":64}}]},"21":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"22":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":18},"end":{"line":146,"column":27}},{"start":{"line":146,"column":31},"end":{"line":146,"column":46}}]},"23":{"line":149,"type":"cond-expr","locations":[{"start":{"line":149,"column":28},"end":{"line":149,"column":56}},{"start":{"line":149,"column":59},"end":{"line":149,"column":74}}]},"24":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":13},"end":{"line":150,"column":39}},{"start":{"line":150,"column":43},"end":{"line":150,"column":66}}]},"25":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"26":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":9},"end":{"line":171,"column":9}},{"start":{"line":171,"column":9},"end":{"line":171,"column":9}}]},"27":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"28":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":33}},{"start":{"line":191,"column":37},"end":{"line":191,"column":68}}]},"29":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"30":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"31":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":28}},{"start":{"line":201,"column":33},"end":{"line":201,"column":40}},{"start":{"line":201,"column":44},"end":{"line":201,"column":77}}]},"32":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"33":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":25}},{"start":{"line":205,"column":30},"end":{"line":205,"column":34}},{"start":{"line":205,"column":38},"end":{"line":205,"column":65}}]},"34":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":224,"column":2}},{"start":{"line":224,"column":2},"end":{"line":224,"column":2}}]},"35":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":2},"end":{"line":242,"column":2}},{"start":{"line":242,"column":2},"end":{"line":242,"column":2}}]},"36":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":12},"end":{"line":261,"column":19}},{"start":{"line":261,"column":23},"end":{"line":261,"column":44}},{"start":{"line":261,"column":48},"end":{"line":261,"column":71}}]},"37":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"38":{"line":293,"type":"binary-expr","locations":[{"start":{"line":293,"column":12},"end":{"line":293,"column":19}},{"start":{"line":293,"column":23},"end":{"line":293,"column":46}}]}},"code":["'use strict';","","var _ = require('lodash');","var $ = require('./util/preconditions');","var errors = require('./errors');","var Base58Check = require('./encoding/base58check');","var Networks = require('./networks');","var Hash = require('./crypto/hash');","var JSUtil = require('./util/js');","var PublicKey = require('./publickey');","","/**"," * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,"," * or an instance of {@link PublicKey} or {@link Script}."," *"," * This is an immutable class, and if the first parameter provided to this constructor is an"," * `Address` instance, the same argument will be returned."," *"," * An address has two key properties: `network` and `type`. The type is either"," * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)"," * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}."," * You can quickly check whether an address is of a given kind by using the methods"," * `isPayToPublicKeyHash` and `isPayToScriptHash`"," *"," * @example"," * ```javascript"," * // validate that an input field is valid"," * var error = Address.getValidationError(input, 'testnet');"," * if (!error) {"," *   var address = Address(input, 'testnet');"," * } else {"," *   // invalid network or checksum (typo?)"," *   var message = error.messsage;"," * }"," *"," * // get an address from a public key"," * var address = Address(publicKey, 'testnet').toString();"," * ```"," *"," * @param {*} data - The encoded data in various formats"," * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'"," * @param {string=} type - The type of address: 'script' or 'pubkey'"," * @returns {Address} A new valid and frozen instance of an Address"," * @constructor"," */","function Address(data, network, type) {","  /* jshint maxcomplexity: 12 */","  /* jshint maxstatements: 20 */","","  if (!(this instanceof Address)) {","    return new Address(data, network, type);","  }","","  if (_.isArray(data) && _.isNumber(network)) {","    return Address.createMultisig(data, network, type);","  }","","  if (data instanceof Address) {","    // Immutable instance","    return data;","  }","","  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');","","  if (network && !Networks.get(network)) {","    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');","  }","","  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {","    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".');","  }","","  var info = this._classifyArguments(data, network, type);","","  // set defaults if not set","  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;","  info.type = info.type || type || Address.PayToPublicKeyHash;","","  JSUtil.defineImmutable(this, {","    hashBuffer: info.hashBuffer,","    network: info.network,","    type: info.type","  });","","  return this;","}","","/**"," * Internal function used to split different kinds of arguments of the constructor"," * @param {*} data - The encoded data in various formats"," * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'"," * @param {string=} type - The type of address: 'script' or 'pubkey'"," * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\""," */","Address.prototype._classifyArguments = function(data, network, type) {","  /* jshint maxcomplexity: 10 */","  // transform and validate input data","  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {","    return Address._transformHash(data);","  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {","    return Address._transformBuffer(data, network, type);","  } else if (data instanceof PublicKey) {","    return Address._transformPublicKey(data);","  } else if (data instanceof Script) {","    return Address._transformScript(data, network);","  } else if (typeof(data) === 'string') {","    return Address._transformString(data, network, type);","  } else if (_.isObject(data)) {","    return Address._transformObject(data);","  } else {","    throw new TypeError('First argument is an unrecognized data format.');","  }","};","","/** @static */","Address.PayToPublicKeyHash = 'pubkeyhash';","/** @static */","Address.PayToScriptHash = 'scripthash';","","/**"," * @param {Buffer} hash - An instance of a hash Buffer"," * @returns {Object} An object with keys: hashBuffer"," * @private"," */","Address._transformHash = function(hash) {","  var info = {};","  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {","    throw new TypeError('Address supplied is not a buffer.');","  }","  if (hash.length !== 20) {","    throw new TypeError('Address hashbuffers must be exactly 20 bytes.');","  }","  info.hashBuffer = hash;","  return info;","};","","/**"," * Deserializes an address serialized through `Address#toObject()`"," * @param {Object} data"," * @param {string} data.hash - the hash that this address encodes"," * @param {string} data.type - either 'pubkeyhash' or 'scripthash'"," * @param {Network=} data.network - the name of the network associated"," * @return {Address}"," */","Address._transformObject = function(data) {","  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');","  $.checkArgument(data.type, 'Must provide a `type` property');","  return {","    hashBuffer: data.hash ? new Buffer(data.hash, 'hex') : data.hashBuffer,","    network: Networks.get(data.network) || Networks.defaultNetwork,","    type: data.type","  };","};","","/**"," * Internal function to discover the network and type based on the first data byte"," *"," * @param {Buffer} buffer - An instance of a hex encoded address Buffer"," * @returns {Object} An object with keys: network and type"," * @private"," */","Address._classifyFromVersion = function(buffer) {","  var version = {};","","  var pubkeyhashNetwork = Networks.get(buffer[0], 'pubkeyhash');","  var scripthashNetwork = Networks.get(buffer[0], 'scripthash');","","  if (pubkeyhashNetwork) {","    version.network = pubkeyhashNetwork;","    version.type = Address.PayToPublicKeyHash;","  } else if (scripthashNetwork) {","    version.network = scripthashNetwork;","    version.type = Address.PayToScriptHash;","  }","","  return version;","};","","/**"," * Internal function to transform a bitcoin address buffer"," *"," * @param {Buffer} buffer - An instance of a hex encoded address Buffer"," * @param {string=} network - The network: 'livenet' or 'testnet'"," * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'"," * @returns {Object} An object with keys: hashBuffer, network and type"," * @private"," */","Address._transformBuffer = function(buffer, network, type) {","  /* jshint maxcomplexity: 9 */","  var info = {};","  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {","    throw new TypeError('Address supplied is not a buffer.');","  }","  if (buffer.length !== 1 + 20) {","    throw new TypeError('Address buffers must be exactly 21 bytes.');","  }","","  network = Networks.get(network);","  var bufferVersion = Address._classifyFromVersion(buffer);","","  if (!bufferVersion.network || (network && network !== bufferVersion.network)) {","    throw new TypeError('Address has mismatched network type.');","  }","","  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {","    throw new TypeError('Address has mismatched type.');","  }","","  info.hashBuffer = buffer.slice(1);","  info.network = bufferVersion.network;","  info.type = bufferVersion.type;","  return info;","};","","/**"," * Internal function to transform a {@link PublicKey}"," *"," * @param {PublicKey} pubkey - An instance of PublicKey"," * @returns {Object} An object with keys: hashBuffer, type"," * @private"," */","Address._transformPublicKey = function(pubkey) {","  var info = {};","  if (!(pubkey instanceof PublicKey)) {","    throw new TypeError('Address must be an instance of PublicKey.');","  }","  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());","  info.type = Address.PayToPublicKeyHash;","  return info;","};","","/**"," * Internal function to transform a {@link Script} into a `info` object."," *"," * @param {Script} script - An instance of Script"," * @returns {Object} An object with keys: hashBuffer, type"," * @private"," */","Address._transformScript = function(script, network) {","  $.checkArgument(script instanceof Script, 'script must be a Script instance');","  var info = script.getAddressInfo(network);","  if (!info) {","    throw new errors.Script.CantDeriveAddress(script);","  }","  return info;","};","","/**"," * Creates a P2SH address from a set of public keys and a threshold."," *"," * The addresses will be sorted lexicographically, as that is the trend in bitcoin."," * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}"," * interface."," *"," * @param {Array} publicKeys - a set of public keys to create an address"," * @param {number} threshold - the number of signatures needed to release the funds"," * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'"," * @return {Address}"," */","Address.createMultisig = function(publicKeys, threshold, network) {","  network = network || publicKeys[0].network || Networks.defaultNetwork;","  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network);","};","","/**"," * Internal function to transform a bitcoin address string"," *"," * @param {string} data"," * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'"," * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'"," * @returns {Object} An object with keys: hashBuffer, network and type"," * @private"," */","Address._transformString = function(data, network, type) {","  if (typeof(data) !== 'string') {","    throw new TypeError('data parameter supplied is not a string.');","  }","  data = data.trim();","  var addressBuffer = Base58Check.decode(data);","  var info = Address._transformBuffer(addressBuffer, network, type);","  return info;","};","","/**"," * Instantiate an address from a PublicKey instance"," *"," * @param {PublicKey} data"," * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'"," * @returns {Address} A new valid and frozen instance of an Address"," */","Address.fromPublicKey = function(data, network) {","  var info = Address._transformPublicKey(data);","  network = network || Networks.defaultNetwork;","  return new Address(info.hashBuffer, network, info.type);","};","","/**"," * Instantiate an address from a ripemd160 public key hash"," *"," * @param {Buffer} hash - An instance of buffer of the hash"," * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'"," * @returns {Address} A new valid and frozen instance of an Address"," */","Address.fromPublicKeyHash = function(hash, network) {","  var info = Address._transformHash(hash);","  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);","};","","/**"," * Instantiate an address from a ripemd160 script hash"," *"," * @param {Buffer} hash - An instance of buffer of the hash"," * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'"," * @returns {Address} A new valid and frozen instance of an Address"," */","Address.fromScriptHash = function(hash, network) {","  $.checkArgument(hash, 'hash parameter is required');","  var info = Address._transformHash(hash);","  return new Address(info.hashBuffer, network, Address.PayToScriptHash);","};","","/**"," * Builds a p2sh address paying to script. This will hash the script and"," * use that to create the address."," * If you want to extract an address associated with a script instead,"," * see {{Address#fromScript}}"," *"," * @param {Script} script - An instance of Script"," * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'"," * @returns {Address} A new valid and frozen instance of an Address"," */","Address.payingTo = function(script, network) {","  $.checkArgument(script, 'script is required');","  $.checkArgument(script instanceof Script, 'script must be instance of Script');","","  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network);","};","","/**"," * Extract address from a Script. The script must be of one"," * of the following types: p2pkh input, p2pkh output, p2sh input"," * or p2sh output."," * This will analyze the script and extract address information from it."," * If you want to transform any script to a p2sh Address paying"," * to that script's hash instead, use {{Address#payingTo}}"," *"," * @param {Script} script - An instance of Script"," * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'"," * @returns {Address} A new valid and frozen instance of an Address"," */","Address.fromScript = function(script, network) {","  $.checkArgument(script instanceof Script, 'script must be a Script instance');","  var info = Address._transformScript(script, network);","  return new Address(info.hashBuffer, network, info.type);","};","","/**"," * Instantiate an address from a buffer of the address"," *"," * @param {Buffer} buffer - An instance of buffer of the address"," * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'"," * @param {string=} type - The type of address: 'script' or 'pubkey'"," * @returns {Address} A new valid and frozen instance of an Address"," */","Address.fromBuffer = function(buffer, network, type) {","  var info = Address._transformBuffer(buffer, network, type);","  return new Address(info.hashBuffer, info.network, info.type);","};","","/**"," * Instantiate an address from an address string"," *"," * @param {string} str - An string of the bitcoin address"," * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'"," * @param {string=} type - The type of address: 'script' or 'pubkey'"," * @returns {Address} A new valid and frozen instance of an Address"," */","Address.fromString = function(str, network, type) {","  var info = Address._transformString(str, network, type);","  return new Address(info.hashBuffer, info.network, info.type);","};","","/**"," * Instantiate an address from an Object"," *"," * @param {string} json - An JSON string or Object with keys: hash, network and type"," * @returns {Address} A new valid instance of an Address"," */","Address.fromObject = function fromObject(obj) {","  $.checkState(","    JSUtil.isHexa(obj.hash),","    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'","  );","  var hashBuffer = new Buffer(obj.hash, 'hex');","  return new Address(hashBuffer, obj.network, obj.type);","};","","/**"," * Will return a validation error if exists"," *"," * @example"," * ```javascript"," * // a network mismatch error"," * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');"," * ```"," *"," * @param {string} data - The encoded data"," * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'"," * @param {string} type - The type of address: 'script' or 'pubkey'"," * @returns {null|Error} The corresponding error message"," */","Address.getValidationError = function(data, network, type) {","  var error;","  try {","    /* jshint nonew: false */","    new Address(data, network, type);","  } catch (e) {","    error = e;","  }","  return error;","};","","/**"," * Will return a boolean if an address is valid"," *"," * @example"," * ```javascript"," * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));"," * ```"," *"," * @param {string} data - The encoded data"," * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'"," * @param {string} type - The type of address: 'script' or 'pubkey'"," * @returns {boolean} The corresponding error message"," */","Address.isValid = function(data, network, type) {","  return !Address.getValidationError(data, network, type);","};","","/**"," * Returns true if an address is of pay to public key hash type"," * @return boolean"," */","Address.prototype.isPayToPublicKeyHash = function() {","  return this.type === Address.PayToPublicKeyHash;","};","","/**"," * Returns true if an address is of pay to script hash type"," * @return boolean"," */","Address.prototype.isPayToScriptHash = function() {","  return this.type === Address.PayToScriptHash;","};","","/**"," * Will return a buffer representation of the address"," *"," * @returns {Buffer} Bitcoin address buffer"," */","Address.prototype.toBuffer = function() {","  var version = new Buffer([this.network[this.type]]);","  var buf = Buffer.concat([version, this.hashBuffer]);","  return buf;","};","","/**"," * @returns {Object} A plain object with the address information"," */","Address.prototype.toObject = Address.prototype.toJSON = function toObject() {","  return {","    hash: this.hashBuffer.toString('hex'),","    type: this.type,","    network: this.network.toString()","  };","};","","/**"," * Will return a the string representation of the address"," *"," * @returns {string} Bitcoin address"," */","Address.prototype.toString = function() {","  return Base58Check.encode(this.toBuffer());","};","","/**"," * Will return a string formatted for the console"," *"," * @returns {string} Bitcoin address"," */","Address.prototype.inspect = function() {","  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';","};","","module.exports = Address;","","var Script = require('./script');",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"46":1,"50":0,"51":0,"54":0,"55":0,"58":0,"60":0,"63":0,"65":0,"66":0,"69":0,"70":0,"73":0,"76":0,"77":0,"79":0,"85":0,"95":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"111":0,"116":1,"118":1,"125":1,"126":0,"127":0,"128":0,"130":0,"131":0,"133":0,"134":0,"145":1,"146":0,"147":0,"148":0,"162":1,"163":0,"165":0,"166":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"176":0,"188":1,"190":0,"191":0,"192":0,"194":0,"195":0,"198":0,"199":0,"201":0,"202":0,"205":0,"206":0,"209":0,"210":0,"211":0,"212":0,"222":1,"223":0,"224":0,"225":0,"227":0,"228":0,"229":0,"239":1,"240":0,"241":0,"242":0,"243":0,"245":0,"260":1,"261":0,"262":0,"274":1,"275":0,"276":0,"278":0,"279":0,"280":0,"281":0,"291":1,"292":0,"293":0,"294":0,"304":1,"305":0,"306":0,"316":1,"317":0,"318":0,"319":0,"332":1,"333":0,"334":0,"336":0,"351":1,"352":0,"353":0,"354":0,"365":1,"366":0,"367":0,"378":1,"379":0,"380":0,"389":1,"390":0,"394":0,"395":0,"412":1,"413":0,"414":0,"416":0,"418":0,"420":0,"436":1,"437":0,"444":1,"445":0,"452":1,"453":0,"461":1,"462":0,"463":0,"464":0,"470":1,"471":0,"483":1,"484":0,"492":1,"493":0,"496":1,"498":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/script/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/script/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}}},"branchMap":{},"code":["module.exports = require('./script');","","module.exports.Interpreter = require('./interpreter');",""],"l":{"1":1,"3":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/script/script.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/script/script.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":8,"17":0,"18":8,"19":8,"20":0,"21":8,"22":0,"23":8,"24":0,"25":8,"26":0,"27":8,"28":0,"29":1,"30":0,"31":0,"32":1,"33":8,"34":8,"35":8,"36":8,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":1,"160":0,"161":1,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":1,"175":0,"176":0,"177":1,"178":0,"179":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":1,"199":0,"200":0,"201":1,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":0,"218":0,"219":1,"220":0,"221":0,"222":1,"223":0,"224":1,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":0,"262":0,"263":0,"264":0,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":0,"272":0,"273":0,"274":0,"275":1,"276":0,"277":1,"278":0,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":1,"294":0,"295":0,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":1,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":1,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":1,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":1,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":1,"395":0,"396":0,"397":0,"398":0,"399":1,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":1,"409":0,"410":0,"411":0,"412":0,"413":0,"414":1,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":1,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":1,"430":0,"431":1,"432":0,"433":1,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":1,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":1,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":1,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":1,"470":0,"471":0,"472":0,"473":0,"474":0,"475":1,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":1,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":1,"505":0,"506":0,"507":0,"508":0,"509":0,"510":1,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":1},"b":{"1":[0,8],"2":[0,8],"3":[0,8],"4":[0,8],"5":[0,8],"6":[0,8],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0,0,0,0,0,0],"39":[0,0],"40":[0,0],"41":[0,0,0,0,0],"42":[0,0],"43":[0,0,0,0],"44":[0,0],"45":[0,0,0],"46":[0,0],"47":[0,0,0,0],"48":[0,0],"49":[0,0,0,0],"50":[0,0],"51":[0,0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0,0],"56":[0,0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0,0,0],"61":[0,0],"62":[0,0,0],"63":[0,0,0],"64":[0,0,0,0,0,0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0,0],"101":[0,0],"102":[0,0],"103":[0,0,0],"104":[0,0],"105":[0,0],"106":[0,0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0,0]},"f":{"1":8,"2":0,"3":8,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0},"fnMap":{"1":{"name":"Script","line":27,"loc":{"start":{"line":27,"column":13},"end":{"line":27,"column":35}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":23},"end":{"line":46,"column":37}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":20},"end":{"line":51,"column":37}}},"4":{"name":"(anonymous_4)","line":108,"loc":{"start":{"line":108,"column":28},"end":{"line":108,"column":39}}},"5":{"name":"(anonymous_5)","line":134,"loc":{"start":{"line":134,"column":17},"end":{"line":134,"column":31}}},"6":{"name":"(anonymous_6)","line":172,"loc":{"start":{"line":172,"column":17},"end":{"line":172,"column":31}}},"7":{"name":"(anonymous_7)","line":176,"loc":{"start":{"line":176,"column":20},"end":{"line":176,"column":34}}},"8":{"name":"(anonymous_8)","line":224,"loc":{"start":{"line":224,"column":34},"end":{"line":224,"column":56}}},"9":{"name":"(anonymous_9)","line":261,"loc":{"start":{"line":261,"column":25},"end":{"line":261,"column":36}}},"10":{"name":"(anonymous_10)","line":271,"loc":{"start":{"line":271,"column":28},"end":{"line":271,"column":39}}},"11":{"name":"(anonymous_11)","line":281,"loc":{"start":{"line":281,"column":25},"end":{"line":281,"column":36}}},"12":{"name":"(anonymous_12)","line":285,"loc":{"start":{"line":285,"column":27},"end":{"line":285,"column":38}}},"13":{"name":"(anonymous_13)","line":294,"loc":{"start":{"line":294,"column":38},"end":{"line":294,"column":49}}},"14":{"name":"(anonymous_14)","line":307,"loc":{"start":{"line":307,"column":37},"end":{"line":307,"column":48}}},"15":{"name":"(anonymous_15)","line":330,"loc":{"start":{"line":330,"column":32},"end":{"line":330,"column":43}}},"16":{"name":"(anonymous_16)","line":335,"loc":{"start":{"line":335,"column":36},"end":{"line":335,"column":47}}},"17":{"name":"(anonymous_17)","line":343,"loc":{"start":{"line":343,"column":34},"end":{"line":343,"column":45}}},"18":{"name":"(anonymous_18)","line":368,"loc":{"start":{"line":368,"column":33},"end":{"line":368,"column":44}}},"19":{"name":"(anonymous_19)","line":383,"loc":{"start":{"line":383,"column":35},"end":{"line":383,"column":46}}},"20":{"name":"(anonymous_20)","line":395,"loc":{"start":{"line":395,"column":34},"end":{"line":395,"column":45}}},"21":{"name":"(anonymous_21)","line":421,"loc":{"start":{"line":421,"column":33},"end":{"line":421,"column":44}}},"22":{"name":"(anonymous_22)","line":424,"loc":{"start":{"line":424,"column":55},"end":{"line":424,"column":69}}},"23":{"name":"(anonymous_23)","line":435,"loc":{"start":{"line":435,"column":32},"end":{"line":435,"column":43}}},"24":{"name":"(anonymous_24)","line":438,"loc":{"start":{"line":438,"column":51},"end":{"line":438,"column":65}}},"25":{"name":"(anonymous_25)","line":448,"loc":{"start":{"line":448,"column":29},"end":{"line":448,"column":40}}},"26":{"name":"(anonymous_26)","line":464,"loc":{"start":{"line":464,"column":27},"end":{"line":464,"column":38}}},"27":{"name":"(anonymous_27)","line":482,"loc":{"start":{"line":482,"column":30},"end":{"line":482,"column":41}}},"28":{"name":"(anonymous_28)","line":483,"loc":{"start":{"line":483,"column":30},"end":{"line":483,"column":46}}},"29":{"name":"(anonymous_29)","line":507,"loc":{"start":{"line":507,"column":28},"end":{"line":507,"column":39}}},"30":{"name":"(anonymous_30)","line":529,"loc":{"start":{"line":529,"column":34},"end":{"line":529,"column":45}}},"31":{"name":"(anonymous_31)","line":548,"loc":{"start":{"line":548,"column":33},"end":{"line":548,"column":44}}},"32":{"name":"(anonymous_32)","line":561,"loc":{"start":{"line":561,"column":30},"end":{"line":561,"column":41}}},"33":{"name":"(anonymous_33)","line":574,"loc":{"start":{"line":574,"column":27},"end":{"line":574,"column":41}}},"34":{"name":"(anonymous_34)","line":582,"loc":{"start":{"line":582,"column":26},"end":{"line":582,"column":43}}},"35":{"name":"(anonymous_35)","line":608,"loc":{"start":{"line":608,"column":23},"end":{"line":608,"column":37}}},"36":{"name":"(anonymous_36)","line":613,"loc":{"start":{"line":613,"column":30},"end":{"line":613,"column":53}}},"37":{"name":"(anonymous_37)","line":631,"loc":{"start":{"line":631,"column":37},"end":{"line":631,"column":59}}},"38":{"name":"(anonymous_38)","line":639,"loc":{"start":{"line":639,"column":30},"end":{"line":639,"column":56}}},"39":{"name":"(anonymous_39)","line":654,"loc":{"start":{"line":654,"column":30},"end":{"line":654,"column":53}}},"40":{"name":"(anonymous_40)","line":676,"loc":{"start":{"line":676,"column":40},"end":{"line":676,"column":51}}},"41":{"name":"(anonymous_41)","line":698,"loc":{"start":{"line":698,"column":26},"end":{"line":698,"column":64}}},"42":{"name":"(anonymous_42)","line":707,"loc":{"start":{"line":707,"column":34},"end":{"line":707,"column":54}}},"43":{"name":"(anonymous_43)","line":732,"loc":{"start":{"line":732,"column":25},"end":{"line":732,"column":72}}},"44":{"name":"(anonymous_44)","line":739,"loc":{"start":{"line":739,"column":21},"end":{"line":739,"column":41}}},"45":{"name":"(anonymous_45)","line":759,"loc":{"start":{"line":759,"column":29},"end":{"line":759,"column":76}}},"46":{"name":"(anonymous_46)","line":766,"loc":{"start":{"line":766,"column":21},"end":{"line":766,"column":41}}},"47":{"name":"(anonymous_47)","line":780,"loc":{"start":{"line":780,"column":31},"end":{"line":780,"column":44}}},"48":{"name":"(anonymous_48)","line":802,"loc":{"start":{"line":802,"column":27},"end":{"line":802,"column":44}}},"49":{"name":"(anonymous_49)","line":815,"loc":{"start":{"line":815,"column":22},"end":{"line":815,"column":47}}},"50":{"name":"(anonymous_50)","line":833,"loc":{"start":{"line":833,"column":28},"end":{"line":833,"column":45}}},"51":{"name":"(anonymous_51)","line":851,"loc":{"start":{"line":851,"column":26},"end":{"line":851,"column":55}}},"52":{"name":"(anonymous_52)","line":873,"loc":{"start":{"line":873,"column":30},"end":{"line":873,"column":70}}},"53":{"name":"(anonymous_53)","line":891,"loc":{"start":{"line":891,"column":15},"end":{"line":891,"column":26}}},"54":{"name":"(anonymous_54)","line":898,"loc":{"start":{"line":898,"column":35},"end":{"line":898,"column":46}}},"55":{"name":"(anonymous_55)","line":905,"loc":{"start":{"line":905,"column":21},"end":{"line":905,"column":39}}},"56":{"name":"(anonymous_56)","line":919,"loc":{"start":{"line":919,"column":34},"end":{"line":919,"column":49}}},"57":{"name":"(anonymous_57)","line":938,"loc":{"start":{"line":938,"column":41},"end":{"line":938,"column":52}}},"58":{"name":"(anonymous_58)","line":957,"loc":{"start":{"line":957,"column":40},"end":{"line":957,"column":51}}},"59":{"name":"(anonymous_59)","line":977,"loc":{"start":{"line":977,"column":29},"end":{"line":977,"column":47}}},"60":{"name":"(anonymous_60)","line":994,"loc":{"start":{"line":994,"column":33},"end":{"line":994,"column":50}}},"61":{"name":"(anonymous_61)","line":1014,"loc":{"start":{"line":1014,"column":36},"end":{"line":1014,"column":48}}},"62":{"name":"(anonymous_62)","line":1048,"loc":{"start":{"line":1048,"column":31},"end":{"line":1048,"column":48}}},"63":{"name":"(anonymous_63)","line":1063,"loc":{"start":{"line":1063,"column":47},"end":{"line":1063,"column":66}}},"64":{"name":"getChunk","line":1068,"loc":{"start":{"line":1068,"column":22},"end":{"line":1068,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":26}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"15":{"start":{"line":27,"column":0},"end":{"line":44,"column":2}},"16":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":28}},"18":{"start":{"line":31,"column":2},"end":{"line":31,"column":19}},"19":{"start":{"line":33,"column":2},"end":{"line":43,"column":3}},"20":{"start":{"line":34,"column":4},"end":{"line":34,"column":35}},"21":{"start":{"line":35,"column":9},"end":{"line":43,"column":3}},"22":{"start":{"line":36,"column":4},"end":{"line":36,"column":36}},"23":{"start":{"line":37,"column":9},"end":{"line":43,"column":3}},"24":{"start":{"line":38,"column":4},"end":{"line":38,"column":46}},"25":{"start":{"line":39,"column":9},"end":{"line":43,"column":3}},"26":{"start":{"line":40,"column":4},"end":{"line":40,"column":35}},"27":{"start":{"line":41,"column":9},"end":{"line":43,"column":3}},"28":{"start":{"line":42,"column":4},"end":{"line":42,"column":19}},"29":{"start":{"line":46,"column":0},"end":{"line":49,"column":2}},"30":{"start":{"line":47,"column":2},"end":{"line":47,"column":42}},"31":{"start":{"line":48,"column":2},"end":{"line":48,"column":14}},"32":{"start":{"line":51,"column":0},"end":{"line":106,"column":2}},"33":{"start":{"line":52,"column":2},"end":{"line":52,"column":28}},"34":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"35":{"start":{"line":55,"column":2},"end":{"line":55,"column":36}},"36":{"start":{"line":56,"column":2},"end":{"line":103,"column":3}},"37":{"start":{"line":57,"column":4},"end":{"line":102,"column":5}},"38":{"start":{"line":58,"column":6},"end":{"line":58,"column":37}},"39":{"start":{"line":60,"column":6},"end":{"line":60,"column":19}},"40":{"start":{"line":61,"column":6},"end":{"line":96,"column":7}},"41":{"start":{"line":62,"column":8},"end":{"line":62,"column":24}},"42":{"start":{"line":63,"column":8},"end":{"line":67,"column":11}},"43":{"start":{"line":68,"column":13},"end":{"line":96,"column":7}},"44":{"start":{"line":69,"column":8},"end":{"line":69,"column":29}},"45":{"start":{"line":70,"column":8},"end":{"line":70,"column":27}},"46":{"start":{"line":71,"column":8},"end":{"line":75,"column":11}},"47":{"start":{"line":76,"column":13},"end":{"line":96,"column":7}},"48":{"start":{"line":77,"column":8},"end":{"line":77,"column":32}},"49":{"start":{"line":78,"column":8},"end":{"line":78,"column":27}},"50":{"start":{"line":79,"column":8},"end":{"line":83,"column":11}},"51":{"start":{"line":84,"column":13},"end":{"line":96,"column":7}},"52":{"start":{"line":85,"column":8},"end":{"line":85,"column":32}},"53":{"start":{"line":86,"column":8},"end":{"line":86,"column":27}},"54":{"start":{"line":87,"column":8},"end":{"line":91,"column":11}},"55":{"start":{"line":93,"column":8},"end":{"line":95,"column":11}},"56":{"start":{"line":98,"column":6},"end":{"line":100,"column":7}},"57":{"start":{"line":99,"column":8},"end":{"line":99,"column":70}},"58":{"start":{"line":101,"column":6},"end":{"line":101,"column":14}},"59":{"start":{"line":105,"column":2},"end":{"line":105,"column":16}},"60":{"start":{"line":108,"column":0},"end":{"line":132,"column":2}},"61":{"start":{"line":109,"column":2},"end":{"line":109,"column":30}},"62":{"start":{"line":111,"column":2},"end":{"line":129,"column":3}},"63":{"start":{"line":112,"column":4},"end":{"line":112,"column":31}},"64":{"start":{"line":113,"column":4},"end":{"line":113,"column":36}},"65":{"start":{"line":114,"column":4},"end":{"line":114,"column":35}},"66":{"start":{"line":115,"column":4},"end":{"line":128,"column":5}},"67":{"start":{"line":116,"column":6},"end":{"line":127,"column":7}},"68":{"start":{"line":117,"column":8},"end":{"line":117,"column":28}},"69":{"start":{"line":118,"column":13},"end":{"line":127,"column":7}},"70":{"start":{"line":119,"column":8},"end":{"line":119,"column":33}},"71":{"start":{"line":120,"column":8},"end":{"line":120,"column":28}},"72":{"start":{"line":121,"column":13},"end":{"line":127,"column":7}},"73":{"start":{"line":122,"column":8},"end":{"line":122,"column":36}},"74":{"start":{"line":123,"column":8},"end":{"line":123,"column":28}},"75":{"start":{"line":124,"column":13},"end":{"line":127,"column":7}},"76":{"start":{"line":125,"column":8},"end":{"line":125,"column":36}},"77":{"start":{"line":126,"column":8},"end":{"line":126,"column":28}},"78":{"start":{"line":131,"column":2},"end":{"line":131,"column":21}},"79":{"start":{"line":134,"column":0},"end":{"line":170,"column":2}},"80":{"start":{"line":135,"column":2},"end":{"line":135,"column":28}},"81":{"start":{"line":136,"column":2},"end":{"line":136,"column":21}},"82":{"start":{"line":138,"column":2},"end":{"line":138,"column":30}},"83":{"start":{"line":139,"column":2},"end":{"line":139,"column":12}},"84":{"start":{"line":140,"column":2},"end":{"line":168,"column":3}},"85":{"start":{"line":141,"column":4},"end":{"line":141,"column":26}},"86":{"start":{"line":142,"column":4},"end":{"line":142,"column":31}},"87":{"start":{"line":143,"column":4},"end":{"line":143,"column":38}},"88":{"start":{"line":145,"column":4},"end":{"line":167,"column":5}},"89":{"start":{"line":146,"column":6},"end":{"line":146,"column":45}},"90":{"start":{"line":147,"column":6},"end":{"line":151,"column":9}},"91":{"start":{"line":152,"column":6},"end":{"line":152,"column":16}},"92":{"start":{"line":153,"column":11},"end":{"line":167,"column":5}},"93":{"start":{"line":156,"column":6},"end":{"line":160,"column":9}},"94":{"start":{"line":161,"column":6},"end":{"line":161,"column":16}},"95":{"start":{"line":163,"column":6},"end":{"line":165,"column":9}},"96":{"start":{"line":166,"column":6},"end":{"line":166,"column":16}},"97":{"start":{"line":169,"column":2},"end":{"line":169,"column":16}},"98":{"start":{"line":172,"column":0},"end":{"line":174,"column":2}},"99":{"start":{"line":173,"column":2},"end":{"line":173,"column":51}},"100":{"start":{"line":176,"column":0},"end":{"line":222,"column":2}},"101":{"start":{"line":177,"column":2},"end":{"line":179,"column":3}},"102":{"start":{"line":178,"column":4},"end":{"line":178,"column":53}},"103":{"start":{"line":180,"column":2},"end":{"line":180,"column":28}},"104":{"start":{"line":181,"column":2},"end":{"line":181,"column":21}},"105":{"start":{"line":183,"column":2},"end":{"line":183,"column":30}},"106":{"start":{"line":184,"column":2},"end":{"line":184,"column":12}},"107":{"start":{"line":185,"column":2},"end":{"line":220,"column":3}},"108":{"start":{"line":186,"column":4},"end":{"line":186,"column":26}},"109":{"start":{"line":187,"column":4},"end":{"line":187,"column":31}},"110":{"start":{"line":188,"column":4},"end":{"line":188,"column":38}},"111":{"start":{"line":190,"column":4},"end":{"line":219,"column":5}},"112":{"start":{"line":191,"column":6},"end":{"line":191,"column":34}},"113":{"start":{"line":192,"column":6},"end":{"line":201,"column":7}},"114":{"start":{"line":193,"column":8},"end":{"line":197,"column":11}},"115":{"start":{"line":198,"column":8},"end":{"line":198,"column":18}},"116":{"start":{"line":200,"column":8},"end":{"line":200,"column":66}},"117":{"start":{"line":202,"column":11},"end":{"line":219,"column":5}},"118":{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},"119":{"start":{"line":206,"column":8},"end":{"line":206,"column":60}},"120":{"start":{"line":208,"column":6},"end":{"line":212,"column":9}},"121":{"start":{"line":213,"column":6},"end":{"line":213,"column":16}},"122":{"start":{"line":215,"column":6},"end":{"line":217,"column":9}},"123":{"start":{"line":218,"column":6},"end":{"line":218,"column":16}},"124":{"start":{"line":221,"column":2},"end":{"line":221,"column":16}},"125":{"start":{"line":224,"column":0},"end":{"line":259,"column":2}},"126":{"start":{"line":225,"column":2},"end":{"line":225,"column":34}},"127":{"start":{"line":226,"column":2},"end":{"line":226,"column":29}},"128":{"start":{"line":227,"column":2},"end":{"line":227,"column":15}},"129":{"start":{"line":228,"column":2},"end":{"line":257,"column":3}},"130":{"start":{"line":230,"column":4},"end":{"line":242,"column":5}},"131":{"start":{"line":231,"column":6},"end":{"line":231,"column":53}},"132":{"start":{"line":233,"column":6},"end":{"line":233,"column":42}},"133":{"start":{"line":234,"column":6},"end":{"line":236,"column":7}},"134":{"start":{"line":235,"column":8},"end":{"line":235,"column":30}},"135":{"start":{"line":237,"column":6},"end":{"line":241,"column":7}},"136":{"start":{"line":238,"column":8},"end":{"line":238,"column":33}},"137":{"start":{"line":240,"column":8},"end":{"line":240,"column":40}},"138":{"start":{"line":245,"column":4},"end":{"line":249,"column":5}},"139":{"start":{"line":248,"column":6},"end":{"line":248,"column":53}},"140":{"start":{"line":250,"column":4},"end":{"line":256,"column":5}},"141":{"start":{"line":251,"column":6},"end":{"line":255,"column":7}},"142":{"start":{"line":252,"column":8},"end":{"line":252,"column":52}},"143":{"start":{"line":254,"column":8},"end":{"line":254,"column":77}},"144":{"start":{"line":258,"column":2},"end":{"line":258,"column":13}},"145":{"start":{"line":261,"column":0},"end":{"line":269,"column":2}},"146":{"start":{"line":262,"column":2},"end":{"line":262,"column":15}},"147":{"start":{"line":263,"column":2},"end":{"line":266,"column":3}},"148":{"start":{"line":264,"column":4},"end":{"line":264,"column":31}},"149":{"start":{"line":265,"column":4},"end":{"line":265,"column":45}},"150":{"start":{"line":268,"column":2},"end":{"line":268,"column":23}},"151":{"start":{"line":271,"column":0},"end":{"line":279,"column":2}},"152":{"start":{"line":272,"column":2},"end":{"line":272,"column":15}},"153":{"start":{"line":273,"column":2},"end":{"line":276,"column":3}},"154":{"start":{"line":274,"column":4},"end":{"line":274,"column":31}},"155":{"start":{"line":275,"column":4},"end":{"line":275,"column":38}},"156":{"start":{"line":278,"column":2},"end":{"line":278,"column":23}},"157":{"start":{"line":281,"column":0},"end":{"line":283,"column":2}},"158":{"start":{"line":282,"column":2},"end":{"line":282,"column":41}},"159":{"start":{"line":285,"column":0},"end":{"line":287,"column":2}},"160":{"start":{"line":286,"column":2},"end":{"line":286,"column":45}},"161":{"start":{"line":294,"column":0},"end":{"line":302,"column":2}},"162":{"start":{"line":295,"column":2},"end":{"line":301,"column":53}},"163":{"start":{"line":307,"column":0},"end":{"line":328,"column":2}},"164":{"start":{"line":308,"column":2},"end":{"line":326,"column":3}},"165":{"start":{"line":309,"column":4},"end":{"line":309,"column":42}},"166":{"start":{"line":310,"column":4},"end":{"line":310,"column":39}},"167":{"start":{"line":311,"column":4},"end":{"line":325,"column":5}},"168":{"start":{"line":317,"column":6},"end":{"line":317,"column":33}},"169":{"start":{"line":318,"column":6},"end":{"line":324,"column":7}},"170":{"start":{"line":321,"column":8},"end":{"line":321,"column":20}},"171":{"start":{"line":322,"column":13},"end":{"line":324,"column":7}},"172":{"start":{"line":323,"column":8},"end":{"line":323,"column":20}},"173":{"start":{"line":327,"column":2},"end":{"line":327,"column":15}},"174":{"start":{"line":330,"column":0},"end":{"line":333,"column":2}},"175":{"start":{"line":331,"column":2},"end":{"line":331,"column":88}},"176":{"start":{"line":332,"column":2},"end":{"line":332,"column":28}},"177":{"start":{"line":335,"column":0},"end":{"line":338,"column":2}},"178":{"start":{"line":336,"column":2},"end":{"line":336,"column":97}},"179":{"start":{"line":337,"column":2},"end":{"line":337,"column":28}},"180":{"start":{"line":343,"column":0},"end":{"line":363,"column":2}},"181":{"start":{"line":344,"column":2},"end":{"line":361,"column":3}},"182":{"start":{"line":348,"column":4},"end":{"line":348,"column":39}},"183":{"start":{"line":349,"column":4},"end":{"line":349,"column":31}},"184":{"start":{"line":350,"column":4},"end":{"line":350,"column":26}},"185":{"start":{"line":351,"column":4},"end":{"line":357,"column":5}},"186":{"start":{"line":354,"column":6},"end":{"line":354,"column":23}},"187":{"start":{"line":355,"column":11},"end":{"line":357,"column":5}},"188":{"start":{"line":356,"column":6},"end":{"line":356,"column":23}},"189":{"start":{"line":358,"column":4},"end":{"line":360,"column":5}},"190":{"start":{"line":359,"column":6},"end":{"line":359,"column":42}},"191":{"start":{"line":362,"column":2},"end":{"line":362,"column":15}},"192":{"start":{"line":368,"column":0},"end":{"line":378,"column":2}},"193":{"start":{"line":369,"column":2},"end":{"line":376,"column":3}},"194":{"start":{"line":370,"column":4},"end":{"line":370,"column":42}},"195":{"start":{"line":371,"column":4},"end":{"line":375,"column":5}},"196":{"start":{"line":374,"column":6},"end":{"line":374,"column":18}},"197":{"start":{"line":377,"column":2},"end":{"line":377,"column":15}},"198":{"start":{"line":383,"column":0},"end":{"line":389,"column":2}},"199":{"start":{"line":384,"column":2},"end":{"line":384,"column":28}},"200":{"start":{"line":385,"column":2},"end":{"line":388,"column":45}},"201":{"start":{"line":395,"column":0},"end":{"line":416,"column":2}},"202":{"start":{"line":396,"column":2},"end":{"line":398,"column":3}},"203":{"start":{"line":397,"column":4},"end":{"line":397,"column":17}},"204":{"start":{"line":399,"column":2},"end":{"line":399,"column":56}},"205":{"start":{"line":400,"column":2},"end":{"line":400,"column":34}},"206":{"start":{"line":401,"column":2},"end":{"line":403,"column":3}},"207":{"start":{"line":402,"column":4},"end":{"line":402,"column":17}},"208":{"start":{"line":405,"column":2},"end":{"line":405,"column":19}},"209":{"start":{"line":406,"column":2},"end":{"line":413,"column":3}},"210":{"start":{"line":407,"column":4},"end":{"line":407,"column":48}},"211":{"start":{"line":409,"column":4},"end":{"line":411,"column":5}},"212":{"start":{"line":410,"column":6},"end":{"line":410,"column":19}},"213":{"start":{"line":412,"column":4},"end":{"line":412,"column":12}},"214":{"start":{"line":414,"column":2},"end":{"line":414,"column":37}},"215":{"start":{"line":415,"column":2},"end":{"line":415,"column":39}},"216":{"start":{"line":421,"column":0},"end":{"line":429,"column":2}},"217":{"start":{"line":422,"column":2},"end":{"line":428,"column":79}},"218":{"start":{"line":425,"column":6},"end":{"line":425,"column":53}},"219":{"start":{"line":435,"column":0},"end":{"line":443,"column":2}},"220":{"start":{"line":436,"column":2},"end":{"line":442,"column":7}},"221":{"start":{"line":439,"column":6},"end":{"line":441,"column":35}},"222":{"start":{"line":448,"column":0},"end":{"line":456,"column":2}},"223":{"start":{"line":449,"column":2},"end":{"line":455,"column":52}},"224":{"start":{"line":464,"column":0},"end":{"line":476,"column":2}},"225":{"start":{"line":465,"column":2},"end":{"line":471,"column":3}},"226":{"start":{"line":466,"column":4},"end":{"line":470,"column":5}},"227":{"start":{"line":467,"column":6},"end":{"line":467,"column":27}},"228":{"start":{"line":469,"column":6},"end":{"line":469,"column":44}},"229":{"start":{"line":472,"column":2},"end":{"line":474,"column":3}},"230":{"start":{"line":473,"column":4},"end":{"line":473,"column":42}},"231":{"start":{"line":475,"column":2},"end":{"line":475,"column":63}},"232":{"start":{"line":482,"column":0},"end":{"line":486,"column":2}},"233":{"start":{"line":483,"column":2},"end":{"line":485,"column":5}},"234":{"start":{"line":484,"column":4},"end":{"line":484,"column":43}},"235":{"start":{"line":489,"column":0},"end":{"line":489,"column":18}},"236":{"start":{"line":490,"column":0},"end":{"line":490,"column":33}},"237":{"start":{"line":491,"column":0},"end":{"line":491,"column":46}},"238":{"start":{"line":492,"column":0},"end":{"line":492,"column":49}},"239":{"start":{"line":493,"column":0},"end":{"line":493,"column":55}},"240":{"start":{"line":494,"column":0},"end":{"line":494,"column":58}},"241":{"start":{"line":495,"column":0},"end":{"line":495,"column":51}},"242":{"start":{"line":496,"column":0},"end":{"line":496,"column":54}},"243":{"start":{"line":497,"column":0},"end":{"line":497,"column":46}},"244":{"start":{"line":498,"column":0},"end":{"line":498,"column":49}},"245":{"start":{"line":499,"column":0},"end":{"line":499,"column":36}},"246":{"start":{"line":501,"column":0},"end":{"line":501,"column":36}},"247":{"start":{"line":507,"column":0},"end":{"line":516,"column":2}},"248":{"start":{"line":508,"column":2},"end":{"line":515,"column":3}},"249":{"start":{"line":509,"column":4},"end":{"line":509,"column":32}},"250":{"start":{"line":510,"column":9},"end":{"line":515,"column":3}},"251":{"start":{"line":511,"column":4},"end":{"line":511,"column":33}},"252":{"start":{"line":513,"column":4},"end":{"line":513,"column":43}},"253":{"start":{"line":514,"column":4},"end":{"line":514,"column":82}},"254":{"start":{"line":518,"column":0},"end":{"line":518,"column":30}},"255":{"start":{"line":519,"column":0},"end":{"line":519,"column":70}},"256":{"start":{"line":520,"column":0},"end":{"line":520,"column":78}},"257":{"start":{"line":521,"column":0},"end":{"line":521,"column":71}},"258":{"start":{"line":522,"column":0},"end":{"line":522,"column":75}},"259":{"start":{"line":523,"column":0},"end":{"line":523,"column":63}},"260":{"start":{"line":529,"column":0},"end":{"line":536,"column":2}},"261":{"start":{"line":530,"column":2},"end":{"line":534,"column":3}},"262":{"start":{"line":531,"column":4},"end":{"line":533,"column":5}},"263":{"start":{"line":532,"column":6},"end":{"line":532,"column":32}},"264":{"start":{"line":535,"column":2},"end":{"line":535,"column":30}},"265":{"start":{"line":538,"column":0},"end":{"line":538,"column":29}},"266":{"start":{"line":539,"column":0},"end":{"line":539,"column":67}},"267":{"start":{"line":540,"column":0},"end":{"line":540,"column":75}},"268":{"start":{"line":541,"column":0},"end":{"line":541,"column":68}},"269":{"start":{"line":542,"column":0},"end":{"line":542,"column":72}},"270":{"start":{"line":548,"column":0},"end":{"line":555,"column":2}},"271":{"start":{"line":549,"column":2},"end":{"line":553,"column":3}},"272":{"start":{"line":550,"column":4},"end":{"line":552,"column":5}},"273":{"start":{"line":551,"column":6},"end":{"line":551,"column":32}},"274":{"start":{"line":554,"column":2},"end":{"line":554,"column":30}},"275":{"start":{"line":561,"column":0},"end":{"line":564,"column":2}},"276":{"start":{"line":563,"column":2},"end":{"line":563,"column":50}},"277":{"start":{"line":574,"column":0},"end":{"line":577,"column":2}},"278":{"start":{"line":575,"column":2},"end":{"line":575,"column":29}},"279":{"start":{"line":576,"column":2},"end":{"line":576,"column":14}},"280":{"start":{"line":582,"column":0},"end":{"line":599,"column":2}},"281":{"start":{"line":583,"column":2},"end":{"line":583,"column":72}},"282":{"start":{"line":584,"column":2},"end":{"line":586,"column":3}},"283":{"start":{"line":585,"column":4},"end":{"line":585,"column":17}},"284":{"start":{"line":587,"column":2},"end":{"line":587,"column":8}},"285":{"start":{"line":588,"column":2},"end":{"line":597,"column":3}},"286":{"start":{"line":589,"column":4},"end":{"line":591,"column":5}},"287":{"start":{"line":590,"column":6},"end":{"line":590,"column":19}},"288":{"start":{"line":592,"column":4},"end":{"line":596,"column":5}},"289":{"start":{"line":593,"column":6},"end":{"line":593,"column":19}},"290":{"start":{"line":594,"column":11},"end":{"line":596,"column":5}},"291":{"start":{"line":595,"column":6},"end":{"line":595,"column":19}},"292":{"start":{"line":598,"column":2},"end":{"line":598,"column":14}},"293":{"start":{"line":608,"column":0},"end":{"line":611,"column":2}},"294":{"start":{"line":609,"column":2},"end":{"line":609,"column":30}},"295":{"start":{"line":610,"column":2},"end":{"line":610,"column":14}},"296":{"start":{"line":613,"column":0},"end":{"line":629,"column":2}},"297":{"start":{"line":614,"column":2},"end":{"line":628,"column":3}},"298":{"start":{"line":615,"column":4},"end":{"line":615,"column":34}},"299":{"start":{"line":616,"column":9},"end":{"line":628,"column":3}},"300":{"start":{"line":617,"column":4},"end":{"line":617,"column":34}},"301":{"start":{"line":618,"column":9},"end":{"line":628,"column":3}},"302":{"start":{"line":619,"column":4},"end":{"line":619,"column":34}},"303":{"start":{"line":620,"column":9},"end":{"line":628,"column":3}},"304":{"start":{"line":621,"column":4},"end":{"line":621,"column":34}},"305":{"start":{"line":622,"column":9},"end":{"line":628,"column":3}},"306":{"start":{"line":623,"column":4},"end":{"line":623,"column":49}},"307":{"start":{"line":624,"column":9},"end":{"line":628,"column":3}},"308":{"start":{"line":625,"column":4},"end":{"line":625,"column":41}},"309":{"start":{"line":627,"column":4},"end":{"line":627,"column":44}},"310":{"start":{"line":631,"column":0},"end":{"line":637,"column":2}},"311":{"start":{"line":632,"column":2},"end":{"line":636,"column":3}},"312":{"start":{"line":633,"column":4},"end":{"line":633,"column":28}},"313":{"start":{"line":635,"column":4},"end":{"line":635,"column":25}},"314":{"start":{"line":639,"column":0},"end":{"line":652,"column":2}},"315":{"start":{"line":640,"column":2},"end":{"line":640,"column":9}},"316":{"start":{"line":641,"column":2},"end":{"line":647,"column":3}},"317":{"start":{"line":642,"column":4},"end":{"line":642,"column":16}},"318":{"start":{"line":643,"column":9},"end":{"line":647,"column":3}},"319":{"start":{"line":644,"column":4},"end":{"line":644,"column":27}},"320":{"start":{"line":646,"column":4},"end":{"line":646,"column":35}},"321":{"start":{"line":648,"column":2},"end":{"line":650,"column":14}},"322":{"start":{"line":651,"column":2},"end":{"line":651,"column":14}},"323":{"start":{"line":654,"column":0},"end":{"line":674,"column":2}},"324":{"start":{"line":655,"column":2},"end":{"line":655,"column":16}},"325":{"start":{"line":656,"column":2},"end":{"line":656,"column":23}},"326":{"start":{"line":657,"column":2},"end":{"line":667,"column":3}},"327":{"start":{"line":658,"column":4},"end":{"line":658,"column":20}},"328":{"start":{"line":659,"column":9},"end":{"line":667,"column":3}},"329":{"start":{"line":660,"column":4},"end":{"line":660,"column":36}},"330":{"start":{"line":661,"column":9},"end":{"line":667,"column":3}},"331":{"start":{"line":662,"column":4},"end":{"line":662,"column":36}},"332":{"start":{"line":663,"column":9},"end":{"line":667,"column":3}},"333":{"start":{"line":664,"column":4},"end":{"line":664,"column":36}},"334":{"start":{"line":666,"column":4},"end":{"line":666,"column":54}},"335":{"start":{"line":668,"column":2},"end":{"line":672,"column":14}},"336":{"start":{"line":673,"column":2},"end":{"line":673,"column":14}},"337":{"start":{"line":676,"column":0},"end":{"line":685,"column":2}},"338":{"start":{"line":677,"column":2},"end":{"line":677,"column":18}},"339":{"start":{"line":678,"column":2},"end":{"line":682,"column":3}},"340":{"start":{"line":679,"column":4},"end":{"line":681,"column":5}},"341":{"start":{"line":680,"column":6},"end":{"line":680,"column":34}},"342":{"start":{"line":683,"column":2},"end":{"line":683,"column":23}},"343":{"start":{"line":684,"column":2},"end":{"line":684,"column":14}},"344":{"start":{"line":698,"column":0},"end":{"line":718,"column":2}},"345":{"start":{"line":699,"column":2},"end":{"line":700,"column":93}},"346":{"start":{"line":701,"column":2},"end":{"line":701,"column":20}},"347":{"start":{"line":702,"column":2},"end":{"line":702,"column":28}},"348":{"start":{"line":703,"column":2},"end":{"line":703,"column":41}},"349":{"start":{"line":704,"column":2},"end":{"line":704,"column":44}},"350":{"start":{"line":705,"column":2},"end":{"line":705,"column":26}},"351":{"start":{"line":706,"column":2},"end":{"line":710,"column":3}},"352":{"start":{"line":707,"column":4},"end":{"line":709,"column":7}},"353":{"start":{"line":708,"column":6},"end":{"line":708,"column":39}},"354":{"start":{"line":711,"column":2},"end":{"line":714,"column":3}},"355":{"start":{"line":712,"column":4},"end":{"line":712,"column":30}},"356":{"start":{"line":713,"column":4},"end":{"line":713,"column":37}},"357":{"start":{"line":715,"column":2},"end":{"line":715,"column":49}},"358":{"start":{"line":716,"column":2},"end":{"line":716,"column":38}},"359":{"start":{"line":717,"column":2},"end":{"line":717,"column":16}},"360":{"start":{"line":732,"column":0},"end":{"line":745,"column":2}},"361":{"start":{"line":733,"column":2},"end":{"line":733,"column":38}},"362":{"start":{"line":734,"column":2},"end":{"line":734,"column":41}},"363":{"start":{"line":735,"column":2},"end":{"line":735,"column":41}},"364":{"start":{"line":736,"column":2},"end":{"line":736,"column":20}},"365":{"start":{"line":737,"column":2},"end":{"line":737,"column":23}},"366":{"start":{"line":738,"column":2},"end":{"line":738,"column":21}},"367":{"start":{"line":739,"column":2},"end":{"line":743,"column":5}},"368":{"start":{"line":740,"column":4},"end":{"line":740,"column":94}},"369":{"start":{"line":742,"column":4},"end":{"line":742,"column":21}},"370":{"start":{"line":744,"column":2},"end":{"line":744,"column":11}},"371":{"start":{"line":759,"column":0},"end":{"line":773,"column":2}},"372":{"start":{"line":760,"column":2},"end":{"line":760,"column":38}},"373":{"start":{"line":761,"column":2},"end":{"line":761,"column":41}},"374":{"start":{"line":762,"column":2},"end":{"line":762,"column":41}},"375":{"start":{"line":763,"column":2},"end":{"line":763,"column":20}},"376":{"start":{"line":764,"column":2},"end":{"line":764,"column":23}},"377":{"start":{"line":765,"column":2},"end":{"line":765,"column":21}},"378":{"start":{"line":766,"column":2},"end":{"line":770,"column":5}},"379":{"start":{"line":767,"column":4},"end":{"line":767,"column":94}},"380":{"start":{"line":769,"column":4},"end":{"line":769,"column":21}},"381":{"start":{"line":771,"column":2},"end":{"line":771,"column":95}},"382":{"start":{"line":772,"column":2},"end":{"line":772,"column":11}},"383":{"start":{"line":780,"column":0},"end":{"line":796,"column":2}},"384":{"start":{"line":781,"column":2},"end":{"line":781,"column":38}},"385":{"start":{"line":782,"column":2},"end":{"line":782,"column":86}},"386":{"start":{"line":783,"column":2},"end":{"line":787,"column":3}},"387":{"start":{"line":784,"column":4},"end":{"line":784,"column":24}},"388":{"start":{"line":785,"column":9},"end":{"line":787,"column":3}},"389":{"start":{"line":786,"column":4},"end":{"line":786,"column":25}},"390":{"start":{"line":788,"column":2},"end":{"line":788,"column":23}},"391":{"start":{"line":789,"column":2},"end":{"line":793,"column":29}},"392":{"start":{"line":794,"column":2},"end":{"line":794,"column":26}},"393":{"start":{"line":795,"column":2},"end":{"line":795,"column":11}},"394":{"start":{"line":802,"column":0},"end":{"line":808,"column":2}},"395":{"start":{"line":803,"column":2},"end":{"line":803,"column":47}},"396":{"start":{"line":804,"column":2},"end":{"line":804,"column":23}},"397":{"start":{"line":805,"column":2},"end":{"line":806,"column":29}},"398":{"start":{"line":807,"column":2},"end":{"line":807,"column":11}},"399":{"start":{"line":815,"column":0},"end":{"line":826,"column":2}},"400":{"start":{"line":816,"column":2},"end":{"line":816,"column":88}},"401":{"start":{"line":817,"column":2},"end":{"line":819,"column":3}},"402":{"start":{"line":818,"column":4},"end":{"line":818,"column":38}},"403":{"start":{"line":820,"column":2},"end":{"line":820,"column":23}},"404":{"start":{"line":821,"column":2},"end":{"line":821,"column":26}},"405":{"start":{"line":822,"column":2},"end":{"line":824,"column":3}},"406":{"start":{"line":823,"column":4},"end":{"line":823,"column":16}},"407":{"start":{"line":825,"column":2},"end":{"line":825,"column":11}},"408":{"start":{"line":833,"column":0},"end":{"line":843,"column":2}},"409":{"start":{"line":834,"column":2},"end":{"line":835,"column":63}},"410":{"start":{"line":836,"column":2},"end":{"line":836,"column":23}},"411":{"start":{"line":837,"column":2},"end":{"line":839,"column":26}},"412":{"start":{"line":841,"column":2},"end":{"line":841,"column":49}},"413":{"start":{"line":842,"column":2},"end":{"line":842,"column":11}},"414":{"start":{"line":851,"column":0},"end":{"line":863,"column":2}},"415":{"start":{"line":852,"column":2},"end":{"line":852,"column":84}},"416":{"start":{"line":853,"column":2},"end":{"line":853,"column":65}},"417":{"start":{"line":854,"column":2},"end":{"line":856,"column":3}},"418":{"start":{"line":855,"column":4},"end":{"line":855,"column":37}},"419":{"start":{"line":857,"column":2},"end":{"line":857,"column":28}},"420":{"start":{"line":858,"column":2},"end":{"line":861,"column":6}},"421":{"start":{"line":862,"column":2},"end":{"line":862,"column":16}},"422":{"start":{"line":873,"column":0},"end":{"line":886,"column":2}},"423":{"start":{"line":874,"column":2},"end":{"line":874,"column":84}},"424":{"start":{"line":875,"column":2},"end":{"line":875,"column":65}},"425":{"start":{"line":876,"column":2},"end":{"line":878,"column":3}},"426":{"start":{"line":877,"column":4},"end":{"line":877,"column":37}},"427":{"start":{"line":879,"column":2},"end":{"line":884,"column":46}},"428":{"start":{"line":885,"column":2},"end":{"line":885,"column":16}},"429":{"start":{"line":891,"column":0},"end":{"line":893,"column":2}},"430":{"start":{"line":892,"column":2},"end":{"line":892,"column":22}},"431":{"start":{"line":898,"column":0},"end":{"line":900,"column":2}},"432":{"start":{"line":899,"column":2},"end":{"line":899,"column":41}},"433":{"start":{"line":905,"column":0},"end":{"line":913,"column":2}},"434":{"start":{"line":906,"column":2},"end":{"line":906,"column":29}},"435":{"start":{"line":907,"column":2},"end":{"line":911,"column":3}},"436":{"start":{"line":908,"column":4},"end":{"line":908,"column":46}},"437":{"start":{"line":909,"column":9},"end":{"line":911,"column":3}},"438":{"start":{"line":910,"column":4},"end":{"line":910,"column":49}},"439":{"start":{"line":912,"column":2},"end":{"line":912,"column":55}},"440":{"start":{"line":919,"column":0},"end":{"line":931,"column":2}},"441":{"start":{"line":920,"column":2},"end":{"line":930,"column":3}},"442":{"start":{"line":921,"column":4},"end":{"line":921,"column":39}},"443":{"start":{"line":922,"column":9},"end":{"line":930,"column":3}},"444":{"start":{"line":923,"column":4},"end":{"line":923,"column":40}},"445":{"start":{"line":925,"column":4},"end":{"line":925,"column":44}},"446":{"start":{"line":926,"column":4},"end":{"line":928,"column":5}},"447":{"start":{"line":927,"column":6},"end":{"line":927,"column":41}},"448":{"start":{"line":929,"column":4},"end":{"line":929,"column":16}},"449":{"start":{"line":938,"column":0},"end":{"line":950,"column":2}},"450":{"start":{"line":939,"column":2},"end":{"line":939,"column":16}},"451":{"start":{"line":940,"column":2},"end":{"line":948,"column":3}},"452":{"start":{"line":941,"column":4},"end":{"line":941,"column":37}},"453":{"start":{"line":942,"column":4},"end":{"line":942,"column":40}},"454":{"start":{"line":943,"column":9},"end":{"line":948,"column":3}},"455":{"start":{"line":944,"column":4},"end":{"line":944,"column":37}},"456":{"start":{"line":945,"column":4},"end":{"line":945,"column":43}},"457":{"start":{"line":947,"column":4},"end":{"line":947,"column":17}},"458":{"start":{"line":949,"column":2},"end":{"line":949,"column":14}},"459":{"start":{"line":957,"column":0},"end":{"line":971,"column":2}},"460":{"start":{"line":958,"column":2},"end":{"line":958,"column":16}},"461":{"start":{"line":959,"column":2},"end":{"line":969,"column":3}},"462":{"start":{"line":961,"column":4},"end":{"line":961,"column":63}},"463":{"start":{"line":962,"column":4},"end":{"line":962,"column":43}},"464":{"start":{"line":963,"column":9},"end":{"line":969,"column":3}},"465":{"start":{"line":965,"column":4},"end":{"line":965,"column":84}},"466":{"start":{"line":966,"column":4},"end":{"line":966,"column":40}},"467":{"start":{"line":968,"column":4},"end":{"line":968,"column":17}},"468":{"start":{"line":970,"column":2},"end":{"line":970,"column":14}},"469":{"start":{"line":977,"column":0},"end":{"line":984,"column":2}},"470":{"start":{"line":978,"column":2},"end":{"line":978,"column":35}},"471":{"start":{"line":979,"column":2},"end":{"line":981,"column":3}},"472":{"start":{"line":980,"column":4},"end":{"line":980,"column":17}},"473":{"start":{"line":982,"column":2},"end":{"line":982,"column":83}},"474":{"start":{"line":983,"column":2},"end":{"line":983,"column":27}},"475":{"start":{"line":994,"column":0},"end":{"line":1008,"column":2}},"476":{"start":{"line":995,"column":2},"end":{"line":995,"column":30}},"477":{"start":{"line":996,"column":2},"end":{"line":996,"column":32}},"478":{"start":{"line":997,"column":2},"end":{"line":1006,"column":3}},"479":{"start":{"line":998,"column":4},"end":{"line":1000,"column":7}},"480":{"start":{"line":1001,"column":4},"end":{"line":1001,"column":34}},"481":{"start":{"line":1002,"column":4},"end":{"line":1002,"column":36}},"482":{"start":{"line":1003,"column":4},"end":{"line":1005,"column":5}},"483":{"start":{"line":1004,"column":6},"end":{"line":1004,"column":31}},"484":{"start":{"line":1007,"column":2},"end":{"line":1007,"column":14}},"485":{"start":{"line":1014,"column":0},"end":{"line":1041,"column":2}},"486":{"start":{"line":1015,"column":2},"end":{"line":1015,"column":29}},"487":{"start":{"line":1016,"column":2},"end":{"line":1016,"column":22}},"488":{"start":{"line":1017,"column":2},"end":{"line":1017,"column":34}},"489":{"start":{"line":1018,"column":2},"end":{"line":1020,"column":3}},"490":{"start":{"line":1019,"column":4},"end":{"line":1019,"column":16}},"491":{"start":{"line":1021,"column":2},"end":{"line":1039,"column":3}},"492":{"start":{"line":1023,"column":4},"end":{"line":1023,"column":37}},"493":{"start":{"line":1024,"column":9},"end":{"line":1039,"column":3}},"494":{"start":{"line":1026,"column":4},"end":{"line":1026,"column":52}},"495":{"start":{"line":1027,"column":9},"end":{"line":1039,"column":3}},"496":{"start":{"line":1029,"column":4},"end":{"line":1029,"column":43}},"497":{"start":{"line":1030,"column":9},"end":{"line":1039,"column":3}},"498":{"start":{"line":1032,"column":4},"end":{"line":1032,"column":36}},"499":{"start":{"line":1033,"column":9},"end":{"line":1039,"column":3}},"500":{"start":{"line":1035,"column":4},"end":{"line":1035,"column":45}},"501":{"start":{"line":1036,"column":9},"end":{"line":1039,"column":3}},"502":{"start":{"line":1038,"column":4},"end":{"line":1038,"column":45}},"503":{"start":{"line":1040,"column":2},"end":{"line":1040,"column":14}},"504":{"start":{"line":1048,"column":0},"end":{"line":1056,"column":2}},"505":{"start":{"line":1049,"column":2},"end":{"line":1055,"column":3}},"506":{"start":{"line":1050,"column":4},"end":{"line":1050,"column":13}},"507":{"start":{"line":1051,"column":9},"end":{"line":1055,"column":3}},"508":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":38}},"509":{"start":{"line":1054,"column":4},"end":{"line":1054,"column":65}},"510":{"start":{"line":1063,"column":0},"end":{"line":1082,"column":2}},"511":{"start":{"line":1064,"column":2},"end":{"line":1064,"column":57}},"512":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":18}},"513":{"start":{"line":1066,"column":2},"end":{"line":1066,"column":12}},"514":{"start":{"line":1067,"column":2},"end":{"line":1067,"column":43}},"515":{"start":{"line":1068,"column":2},"end":{"line":1080,"column":5}},"516":{"start":{"line":1069,"column":4},"end":{"line":1069,"column":33}},"517":{"start":{"line":1070,"column":4},"end":{"line":1078,"column":5}},"518":{"start":{"line":1071,"column":6},"end":{"line":1071,"column":10}},"519":{"start":{"line":1072,"column":11},"end":{"line":1078,"column":5}},"520":{"start":{"line":1073,"column":6},"end":{"line":1077,"column":7}},"521":{"start":{"line":1074,"column":8},"end":{"line":1074,"column":42}},"522":{"start":{"line":1076,"column":8},"end":{"line":1076,"column":16}},"523":{"start":{"line":1079,"column":4},"end":{"line":1079,"column":24}},"524":{"start":{"line":1081,"column":2},"end":{"line":1081,"column":11}},"525":{"start":{"line":1084,"column":0},"end":{"line":1084,"column":24}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":9},"end":{"line":35,"column":9}},{"start":{"line":35,"column":9},"end":{"line":35,"column":9}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":9},"end":{"line":37,"column":9}},{"start":{"line":37,"column":9},"end":{"line":37,"column":9}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":9}},{"start":{"line":39,"column":9},"end":{"line":39,"column":9}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":9},"end":{"line":41,"column":9}},{"start":{"line":41,"column":9},"end":{"line":41,"column":9}}]},"7":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":16},"end":{"line":47,"column":26}},{"start":{"line":47,"column":30},"end":{"line":47,"column":41}}]},"8":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"9":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":10},"end":{"line":61,"column":23}},{"start":{"line":61,"column":27},"end":{"line":61,"column":58}}]},"10":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":13},"end":{"line":68,"column":13}},{"start":{"line":68,"column":13},"end":{"line":68,"column":13}}]},"11":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":13},"end":{"line":76,"column":13}},{"start":{"line":76,"column":13},"end":{"line":76,"column":13}}]},"12":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":13},"end":{"line":84,"column":13}},{"start":{"line":84,"column":13},"end":{"line":84,"column":13}}]},"13":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":6},"end":{"line":98,"column":6}},{"start":{"line":98,"column":6},"end":{"line":98,"column":6}}]},"14":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"15":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":6},"end":{"line":116,"column":6}},{"start":{"line":116,"column":6},"end":{"line":116,"column":6}}]},"16":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":13},"end":{"line":118,"column":13}},{"start":{"line":118,"column":13},"end":{"line":118,"column":13}}]},"17":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":13},"end":{"line":121,"column":13}},{"start":{"line":121,"column":13},"end":{"line":121,"column":13}}]},"18":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":13},"end":{"line":124,"column":13}},{"start":{"line":124,"column":13},"end":{"line":124,"column":13}}]},"19":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"20":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":11},"end":{"line":153,"column":11}},{"start":{"line":153,"column":11},"end":{"line":153,"column":11}}]},"21":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":15},"end":{"line":153,"column":48}},{"start":{"line":154,"column":6},"end":{"line":154,"column":39}},{"start":{"line":155,"column":6},"end":{"line":155,"column":39}}]},"22":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"23":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":6},"end":{"line":177,"column":24}},{"start":{"line":177,"column":28},"end":{"line":177,"column":44}}]},"24":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":4}},{"start":{"line":190,"column":4},"end":{"line":190,"column":4}}]},"25":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":6},"end":{"line":192,"column":6}},{"start":{"line":192,"column":6},"end":{"line":192,"column":6}}]},"26":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":10},"end":{"line":192,"column":23}},{"start":{"line":192,"column":27},"end":{"line":192,"column":58}}]},"27":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":11},"end":{"line":202,"column":11}},{"start":{"line":202,"column":11},"end":{"line":202,"column":11}}]},"28":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":15},"end":{"line":202,"column":48}},{"start":{"line":203,"column":6},"end":{"line":203,"column":39}},{"start":{"line":204,"column":6},"end":{"line":204,"column":39}}]},"29":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":6}},{"start":{"line":205,"column":6},"end":{"line":205,"column":6}}]},"30":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":228,"column":2}},{"start":{"line":228,"column":2},"end":{"line":228,"column":2}}]},"31":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"32":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":6},"end":{"line":234,"column":6}},{"start":{"line":234,"column":6},"end":{"line":234,"column":6}}]},"33":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":6},"end":{"line":237,"column":6}},{"start":{"line":237,"column":6},"end":{"line":237,"column":6}}]},"34":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"35":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":41}},{"start":{"line":246,"column":6},"end":{"line":246,"column":39}},{"start":{"line":247,"column":6},"end":{"line":247,"column":39}}]},"36":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"37":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":6},"end":{"line":251,"column":6}},{"start":{"line":251,"column":6},"end":{"line":251,"column":6}}]},"38":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":36}},{"start":{"line":296,"column":4},"end":{"line":296,"column":46}},{"start":{"line":297,"column":4},"end":{"line":297,"column":50}},{"start":{"line":298,"column":4},"end":{"line":298,"column":22}},{"start":{"line":299,"column":4},"end":{"line":299,"column":36}},{"start":{"line":300,"column":4},"end":{"line":300,"column":54}},{"start":{"line":301,"column":4},"end":{"line":301,"column":51}}]},"39":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":308,"column":2}},{"start":{"line":308,"column":2},"end":{"line":308,"column":2}}]},"40":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]},"41":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":8},"end":{"line":311,"column":20}},{"start":{"line":312,"column":8},"end":{"line":312,"column":27}},{"start":{"line":313,"column":8},"end":{"line":313,"column":32}},{"start":{"line":314,"column":8},"end":{"line":314,"column":17}},{"start":{"line":315,"column":8},"end":{"line":315,"column":24}}]},"42":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":6},"end":{"line":318,"column":6}},{"start":{"line":318,"column":6},"end":{"line":318,"column":6}}]},"43":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":11},"end":{"line":318,"column":27}},{"start":{"line":319,"column":11},"end":{"line":319,"column":27}},{"start":{"line":320,"column":11},"end":{"line":320,"column":27}},{"start":{"line":320,"column":32},"end":{"line":320,"column":55}}]},"44":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":13},"end":{"line":322,"column":13}},{"start":{"line":322,"column":13},"end":{"line":322,"column":13}}]},"45":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":18},"end":{"line":322,"column":34}},{"start":{"line":322,"column":38},"end":{"line":322,"column":54}},{"start":{"line":322,"column":59},"end":{"line":322,"column":82}}]},"46":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":2},"end":{"line":344,"column":2}},{"start":{"line":344,"column":2},"end":{"line":344,"column":2}}]},"47":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":6},"end":{"line":344,"column":30}},{"start":{"line":345,"column":6},"end":{"line":345,"column":24}},{"start":{"line":346,"column":6},"end":{"line":346,"column":31}},{"start":{"line":347,"column":6},"end":{"line":347,"column":53}}]},"48":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"49":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":9},"end":{"line":351,"column":25}},{"start":{"line":352,"column":9},"end":{"line":352,"column":25}},{"start":{"line":353,"column":9},"end":{"line":353,"column":25}},{"start":{"line":353,"column":30},"end":{"line":353,"column":53}}]},"50":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":11},"end":{"line":355,"column":11}},{"start":{"line":355,"column":11},"end":{"line":355,"column":11}}]},"51":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":16},"end":{"line":355,"column":32}},{"start":{"line":355,"column":36},"end":{"line":355,"column":52}},{"start":{"line":355,"column":57},"end":{"line":355,"column":80}}]},"52":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":358,"column":4}},{"start":{"line":358,"column":4},"end":{"line":358,"column":4}}]},"53":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":2},"end":{"line":369,"column":2}},{"start":{"line":369,"column":2},"end":{"line":369,"column":2}}]},"54":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":4},"end":{"line":371,"column":4}},{"start":{"line":371,"column":4},"end":{"line":371,"column":4}}]},"55":{"line":371,"type":"binary-expr","locations":[{"start":{"line":371,"column":8},"end":{"line":371,"column":20}},{"start":{"line":372,"column":8},"end":{"line":372,"column":27}},{"start":{"line":373,"column":8},"end":{"line":373,"column":32}}]},"56":{"line":385,"type":"binary-expr","locations":[{"start":{"line":385,"column":10},"end":{"line":385,"column":27}},{"start":{"line":386,"column":4},"end":{"line":386,"column":32}},{"start":{"line":387,"column":4},"end":{"line":387,"column":19}},{"start":{"line":388,"column":4},"end":{"line":388,"column":43}}]},"57":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":2},"end":{"line":396,"column":2}},{"start":{"line":396,"column":2},"end":{"line":396,"column":2}}]},"58":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":2},"end":{"line":401,"column":2}},{"start":{"line":401,"column":2},"end":{"line":401,"column":2}}]},"59":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":4},"end":{"line":409,"column":4}},{"start":{"line":409,"column":4},"end":{"line":409,"column":4}}]},"60":{"line":422,"type":"binary-expr","locations":[{"start":{"line":422,"column":10},"end":{"line":422,"column":32}},{"start":{"line":423,"column":4},"end":{"line":423,"column":49}},{"start":{"line":424,"column":4},"end":{"line":426,"column":6}},{"start":{"line":427,"column":4},"end":{"line":427,"column":70}},{"start":{"line":428,"column":4},"end":{"line":428,"column":77}}]},"61":{"line":425,"type":"binary-expr","locations":[{"start":{"line":425,"column":13},"end":{"line":425,"column":20}},{"start":{"line":425,"column":24},"end":{"line":425,"column":52}}]},"62":{"line":436,"type":"binary-expr","locations":[{"start":{"line":436,"column":9},"end":{"line":436,"column":32}},{"start":{"line":437,"column":4},"end":{"line":437,"column":34}},{"start":{"line":438,"column":4},"end":{"line":442,"column":6}}]},"63":{"line":439,"type":"binary-expr","locations":[{"start":{"line":439,"column":13},"end":{"line":439,"column":20}},{"start":{"line":440,"column":8},"end":{"line":440,"column":36}},{"start":{"line":441,"column":8},"end":{"line":441,"column":34}}]},"64":{"line":449,"type":"binary-expr","locations":[{"start":{"line":449,"column":9},"end":{"line":449,"column":32}},{"start":{"line":450,"column":4},"end":{"line":450,"column":49}},{"start":{"line":451,"column":5},"end":{"line":451,"column":29}},{"start":{"line":452,"column":7},"end":{"line":452,"column":31}},{"start":{"line":453,"column":8},"end":{"line":453,"column":26}},{"start":{"line":454,"column":8},"end":{"line":454,"column":67}},{"start":{"line":455,"column":8},"end":{"line":455,"column":49}}]},"65":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":465,"column":2}},{"start":{"line":465,"column":2},"end":{"line":465,"column":2}}]},"66":{"line":465,"type":"binary-expr","locations":[{"start":{"line":465,"column":6},"end":{"line":465,"column":22}},{"start":{"line":465,"column":26},"end":{"line":465,"column":48}}]},"67":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":4},"end":{"line":466,"column":4}},{"start":{"line":466,"column":4},"end":{"line":466,"column":4}}]},"68":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":2},"end":{"line":472,"column":2}},{"start":{"line":472,"column":2},"end":{"line":472,"column":2}}]},"69":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":2},"end":{"line":508,"column":2}},{"start":{"line":508,"column":2},"end":{"line":508,"column":2}}]},"70":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":9},"end":{"line":510,"column":9}},{"start":{"line":510,"column":9},"end":{"line":510,"column":9}}]},"71":{"line":514,"type":"cond-expr","locations":[{"start":{"line":514,"column":48},"end":{"line":514,"column":58}},{"start":{"line":514,"column":61},"end":{"line":514,"column":81}}]},"72":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":4},"end":{"line":531,"column":4}},{"start":{"line":531,"column":4},"end":{"line":531,"column":4}}]},"73":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":4},"end":{"line":550,"column":4}},{"start":{"line":550,"column":4},"end":{"line":550,"column":4}}]},"74":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":2},"end":{"line":584,"column":2}},{"start":{"line":584,"column":2},"end":{"line":584,"column":2}}]},"75":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":4},"end":{"line":589,"column":4}},{"start":{"line":589,"column":4},"end":{"line":589,"column":4}}]},"76":{"line":589,"type":"binary-expr","locations":[{"start":{"line":589,"column":8},"end":{"line":589,"column":47}},{"start":{"line":589,"column":51},"end":{"line":589,"column":93}}]},"77":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":4},"end":{"line":592,"column":4}},{"start":{"line":592,"column":4},"end":{"line":592,"column":4}}]},"78":{"line":592,"type":"binary-expr","locations":[{"start":{"line":592,"column":8},"end":{"line":592,"column":47}},{"start":{"line":592,"column":51},"end":{"line":592,"column":111}}]},"79":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":11},"end":{"line":594,"column":11}},{"start":{"line":594,"column":11},"end":{"line":594,"column":11}}]},"80":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":2},"end":{"line":614,"column":2}},{"start":{"line":614,"column":2},"end":{"line":614,"column":2}}]},"81":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":9},"end":{"line":616,"column":9}},{"start":{"line":616,"column":9},"end":{"line":616,"column":9}}]},"82":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":9},"end":{"line":618,"column":9}},{"start":{"line":618,"column":9},"end":{"line":618,"column":9}}]},"83":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":9},"end":{"line":620,"column":9}},{"start":{"line":620,"column":9},"end":{"line":620,"column":9}}]},"84":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":9},"end":{"line":622,"column":9}},{"start":{"line":622,"column":9},"end":{"line":622,"column":9}}]},"85":{"line":624,"type":"if","locations":[{"start":{"line":624,"column":9},"end":{"line":624,"column":9}},{"start":{"line":624,"column":9},"end":{"line":624,"column":9}}]},"86":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":2},"end":{"line":632,"column":2}},{"start":{"line":632,"column":2},"end":{"line":632,"column":2}}]},"87":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":2},"end":{"line":641,"column":2}},{"start":{"line":641,"column":2},"end":{"line":641,"column":2}}]},"88":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":9},"end":{"line":643,"column":9}},{"start":{"line":643,"column":9},"end":{"line":643,"column":9}}]},"89":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":2},"end":{"line":657,"column":2}},{"start":{"line":657,"column":2},"end":{"line":657,"column":2}}]},"90":{"line":657,"type":"binary-expr","locations":[{"start":{"line":657,"column":6},"end":{"line":657,"column":14}},{"start":{"line":657,"column":18},"end":{"line":657,"column":43}}]},"91":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":9},"end":{"line":659,"column":9}},{"start":{"line":659,"column":9},"end":{"line":659,"column":9}}]},"92":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":9},"end":{"line":661,"column":9}},{"start":{"line":661,"column":9},"end":{"line":661,"column":9}}]},"93":{"line":663,"type":"if","locations":[{"start":{"line":663,"column":9},"end":{"line":663,"column":9}},{"start":{"line":663,"column":9},"end":{"line":663,"column":9}}]},"94":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":4},"end":{"line":679,"column":4}},{"start":{"line":679,"column":4},"end":{"line":679,"column":4}}]},"95":{"line":701,"type":"binary-expr","locations":[{"start":{"line":701,"column":9},"end":{"line":701,"column":13}},{"start":{"line":701,"column":17},"end":{"line":701,"column":19}}]},"96":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":2},"end":{"line":706,"column":2}},{"start":{"line":706,"column":2},"end":{"line":706,"column":2}}]},"97":{"line":736,"type":"binary-expr","locations":[{"start":{"line":736,"column":9},"end":{"line":736,"column":13}},{"start":{"line":736,"column":17},"end":{"line":736,"column":19}}]},"98":{"line":763,"type":"binary-expr","locations":[{"start":{"line":763,"column":9},"end":{"line":763,"column":13}},{"start":{"line":763,"column":17},"end":{"line":763,"column":19}}]},"99":{"line":771,"type":"binary-expr","locations":[{"start":{"line":771,"column":9},"end":{"line":771,"column":28}},{"start":{"line":771,"column":32},"end":{"line":771,"column":81}}]},"100":{"line":782,"type":"binary-expr","locations":[{"start":{"line":782,"column":18},"end":{"line":782,"column":41}},{"start":{"line":782,"column":45},"end":{"line":782,"column":66}},{"start":{"line":782,"column":70},"end":{"line":782,"column":84}}]},"101":{"line":783,"type":"if","locations":[{"start":{"line":783,"column":2},"end":{"line":783,"column":2}},{"start":{"line":783,"column":2},"end":{"line":783,"column":2}}]},"102":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":9},"end":{"line":785,"column":9}},{"start":{"line":785,"column":9},"end":{"line":785,"column":9}}]},"103":{"line":816,"type":"binary-expr","locations":[{"start":{"line":816,"column":18},"end":{"line":816,"column":37}},{"start":{"line":816,"column":41},"end":{"line":816,"column":57}},{"start":{"line":816,"column":61},"end":{"line":816,"column":86}}]},"104":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":2},"end":{"line":817,"column":2}},{"start":{"line":817,"column":2},"end":{"line":817,"column":2}}]},"105":{"line":822,"type":"if","locations":[{"start":{"line":822,"column":2},"end":{"line":822,"column":2}},{"start":{"line":822,"column":2},"end":{"line":822,"column":2}}]},"106":{"line":834,"type":"binary-expr","locations":[{"start":{"line":834,"column":18},"end":{"line":834,"column":42}},{"start":{"line":835,"column":5},"end":{"line":835,"column":30}},{"start":{"line":835,"column":34},"end":{"line":835,"column":60}}]},"107":{"line":838,"type":"cond-expr","locations":[{"start":{"line":838,"column":37},"end":{"line":838,"column":54}},{"start":{"line":838,"column":57},"end":{"line":838,"column":96}}]},"108":{"line":841,"type":"binary-expr","locations":[{"start":{"line":841,"column":15},"end":{"line":841,"column":30}},{"start":{"line":841,"column":34},"end":{"line":841,"column":48}}]},"109":{"line":852,"type":"binary-expr","locations":[{"start":{"line":852,"column":18},"end":{"line":852,"column":48}},{"start":{"line":852,"column":52},"end":{"line":852,"column":82}}]},"110":{"line":853,"type":"binary-expr","locations":[{"start":{"line":853,"column":18},"end":{"line":853,"column":40}},{"start":{"line":853,"column":44},"end":{"line":853,"column":63}}]},"111":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":2},"end":{"line":854,"column":2}},{"start":{"line":854,"column":2},"end":{"line":854,"column":2}}]},"112":{"line":860,"type":"binary-expr","locations":[{"start":{"line":860,"column":41},"end":{"line":860,"column":48}},{"start":{"line":860,"column":52},"end":{"line":860,"column":73}}]},"113":{"line":874,"type":"binary-expr","locations":[{"start":{"line":874,"column":18},"end":{"line":874,"column":48}},{"start":{"line":874,"column":52},"end":{"line":874,"column":82}}]},"114":{"line":875,"type":"binary-expr","locations":[{"start":{"line":875,"column":18},"end":{"line":875,"column":40}},{"start":{"line":875,"column":44},"end":{"line":875,"column":63}}]},"115":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":2},"end":{"line":876,"column":2}},{"start":{"line":876,"column":2},"end":{"line":876,"column":2}}]},"116":{"line":882,"type":"binary-expr","locations":[{"start":{"line":882,"column":43},"end":{"line":882,"column":50}},{"start":{"line":882,"column":54},"end":{"line":882,"column":75}}]},"117":{"line":907,"type":"if","locations":[{"start":{"line":907,"column":2},"end":{"line":907,"column":2}},{"start":{"line":907,"column":2},"end":{"line":907,"column":2}}]},"118":{"line":909,"type":"if","locations":[{"start":{"line":909,"column":9},"end":{"line":909,"column":9}},{"start":{"line":909,"column":9},"end":{"line":909,"column":9}}]},"119":{"line":920,"type":"if","locations":[{"start":{"line":920,"column":2},"end":{"line":920,"column":2}},{"start":{"line":920,"column":2},"end":{"line":920,"column":2}}]},"120":{"line":922,"type":"if","locations":[{"start":{"line":922,"column":9},"end":{"line":922,"column":9}},{"start":{"line":922,"column":9},"end":{"line":922,"column":9}}]},"121":{"line":926,"type":"if","locations":[{"start":{"line":926,"column":4},"end":{"line":926,"column":4}},{"start":{"line":926,"column":4},"end":{"line":926,"column":4}}]},"122":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":2},"end":{"line":940,"column":2}},{"start":{"line":940,"column":2},"end":{"line":940,"column":2}}]},"123":{"line":943,"type":"if","locations":[{"start":{"line":943,"column":9},"end":{"line":943,"column":9}},{"start":{"line":943,"column":9},"end":{"line":943,"column":9}}]},"124":{"line":959,"type":"if","locations":[{"start":{"line":959,"column":2},"end":{"line":959,"column":2}},{"start":{"line":959,"column":2},"end":{"line":959,"column":2}}]},"125":{"line":963,"type":"if","locations":[{"start":{"line":963,"column":9},"end":{"line":963,"column":9}},{"start":{"line":963,"column":9},"end":{"line":963,"column":9}}]},"126":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":2},"end":{"line":979,"column":2}},{"start":{"line":979,"column":2},"end":{"line":979,"column":2}}]},"127":{"line":982,"type":"binary-expr","locations":[{"start":{"line":982,"column":17},"end":{"line":982,"column":38}},{"start":{"line":982,"column":42},"end":{"line":982,"column":55}},{"start":{"line":982,"column":59},"end":{"line":982,"column":82}}]},"128":{"line":1003,"type":"if","locations":[{"start":{"line":1003,"column":4},"end":{"line":1003,"column":4}},{"start":{"line":1003,"column":4},"end":{"line":1003,"column":4}}]},"129":{"line":1018,"type":"if","locations":[{"start":{"line":1018,"column":2},"end":{"line":1018,"column":2}},{"start":{"line":1018,"column":2},"end":{"line":1018,"column":2}}]},"130":{"line":1021,"type":"if","locations":[{"start":{"line":1021,"column":2},"end":{"line":1021,"column":2}},{"start":{"line":1021,"column":2},"end":{"line":1021,"column":2}}]},"131":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":9},"end":{"line":1024,"column":9}},{"start":{"line":1024,"column":9},"end":{"line":1024,"column":9}}]},"132":{"line":1024,"type":"binary-expr","locations":[{"start":{"line":1024,"column":13},"end":{"line":1024,"column":29}},{"start":{"line":1024,"column":33},"end":{"line":1024,"column":44}},{"start":{"line":1024,"column":48},"end":{"line":1024,"column":60}}]},"133":{"line":1027,"type":"if","locations":[{"start":{"line":1027,"column":9},"end":{"line":1027,"column":9}},{"start":{"line":1027,"column":9},"end":{"line":1027,"column":9}}]},"134":{"line":1027,"type":"binary-expr","locations":[{"start":{"line":1027,"column":13},"end":{"line":1027,"column":29}},{"start":{"line":1027,"column":33},"end":{"line":1027,"column":48}}]},"135":{"line":1030,"type":"if","locations":[{"start":{"line":1030,"column":9},"end":{"line":1030,"column":9}},{"start":{"line":1030,"column":9},"end":{"line":1030,"column":9}}]},"136":{"line":1033,"type":"if","locations":[{"start":{"line":1033,"column":9},"end":{"line":1033,"column":9}},{"start":{"line":1033,"column":9},"end":{"line":1033,"column":9}}]},"137":{"line":1036,"type":"if","locations":[{"start":{"line":1036,"column":9},"end":{"line":1036,"column":9}},{"start":{"line":1036,"column":9},"end":{"line":1036,"column":9}}]},"138":{"line":1049,"type":"if","locations":[{"start":{"line":1049,"column":2},"end":{"line":1049,"column":2}},{"start":{"line":1049,"column":2},"end":{"line":1049,"column":2}}]},"139":{"line":1051,"type":"if","locations":[{"start":{"line":1051,"column":9},"end":{"line":1051,"column":9}},{"start":{"line":1051,"column":9},"end":{"line":1051,"column":9}}]},"140":{"line":1051,"type":"binary-expr","locations":[{"start":{"line":1051,"column":13},"end":{"line":1051,"column":34}},{"start":{"line":1051,"column":38},"end":{"line":1051,"column":60}}]},"141":{"line":1064,"type":"cond-expr","locations":[{"start":{"line":1064,"column":40},"end":{"line":1064,"column":44}},{"start":{"line":1064,"column":47},"end":{"line":1064,"column":55}}]},"142":{"line":1070,"type":"if","locations":[{"start":{"line":1070,"column":4},"end":{"line":1070,"column":4}},{"start":{"line":1070,"column":4},"end":{"line":1070,"column":4}}]},"143":{"line":1070,"type":"binary-expr","locations":[{"start":{"line":1070,"column":8},"end":{"line":1070,"column":36}},{"start":{"line":1070,"column":40},"end":{"line":1070,"column":74}}]},"144":{"line":1072,"type":"if","locations":[{"start":{"line":1072,"column":11},"end":{"line":1072,"column":11}},{"start":{"line":1072,"column":11},"end":{"line":1072,"column":11}}]},"145":{"line":1072,"type":"binary-expr","locations":[{"start":{"line":1072,"column":15},"end":{"line":1072,"column":48}},{"start":{"line":1072,"column":52},"end":{"line":1072,"column":91}}]},"146":{"line":1073,"type":"if","locations":[{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}},{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}}]},"147":{"line":1073,"type":"binary-expr","locations":[{"start":{"line":1073,"column":10},"end":{"line":1073,"column":18}},{"start":{"line":1073,"column":22},"end":{"line":1073,"column":47}},{"start":{"line":1073,"column":51},"end":{"line":1073,"column":77}}]}},"code":["'use strict';","","var Address = require('../address');","var BufferReader = require('../encoding/bufferreader');","var BufferWriter = require('../encoding/bufferwriter');","var Hash = require('../crypto/hash');","var Opcode = require('../opcode');","var PublicKey = require('../publickey');","var Signature = require('../crypto/signature');","var Networks = require('../networks');","var $ = require('../util/preconditions');","var _ = require('lodash');","var errors = require('../errors');","var buffer = require('buffer');","var BufferUtil = require('../util/buffer');","var JSUtil = require('../util/js');","","/**"," * A bitcoin transaction script. Each transaction's inputs and outputs"," * has a script that is evaluated to validate it's spending."," *"," * See https://en.bitcoin.it/wiki/Script"," *"," * @constructor"," * @param {Object|string|Buffer=} from optional data to populate script"," */","var Script = function Script(from) {","  if (!(this instanceof Script)) {","    return new Script(from);","  }","  this.chunks = [];","","  if (BufferUtil.isBuffer(from)) {","    return Script.fromBuffer(from);","  } else if (from instanceof Address) {","    return Script.fromAddress(from);","  } else if (from instanceof Script) {","    return Script.fromBuffer(from.toBuffer());","  } else if (typeof from === 'string') {","    return Script.fromString(from);","  } else if (typeof from !== 'undefined') {","    this.set(from);","  }","};","","Script.prototype.set = function(obj) {","  this.chunks = obj.chunks || this.chunks;","  return this;","};","","Script.fromBuffer = function(buffer) {","  var script = new Script();","  script.chunks = [];","","  var br = new BufferReader(buffer);","  while (!br.finished()) {","    try {","      var opcodenum = br.readUInt8();","","      var len, buf;","      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {","        len = opcodenum;","        script.chunks.push({","          buf: br.read(len),","          len: len,","          opcodenum: opcodenum","        });","      } else if (opcodenum === Opcode.OP_PUSHDATA1) {","        len = br.readUInt8();","        buf = br.read(len);","        script.chunks.push({","          buf: buf,","          len: len,","          opcodenum: opcodenum","        });","      } else if (opcodenum === Opcode.OP_PUSHDATA2) {","        len = br.readUInt16LE();","        buf = br.read(len);","        script.chunks.push({","          buf: buf,","          len: len,","          opcodenum: opcodenum","        });","      } else if (opcodenum === Opcode.OP_PUSHDATA4) {","        len = br.readUInt32LE();","        buf = br.read(len);","        script.chunks.push({","          buf: buf,","          len: len,","          opcodenum: opcodenum","        });","      } else {","        script.chunks.push({","          opcodenum: opcodenum","        });","      }","    } catch (e) {","      if (e instanceof RangeError) {","        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));","      }","      throw e;","    }","  }","","  return script;","};","","Script.prototype.toBuffer = function() {","  var bw = new BufferWriter();","","  for (var i = 0; i < this.chunks.length; i++) {","    var chunk = this.chunks[i];","    var opcodenum = chunk.opcodenum;","    bw.writeUInt8(chunk.opcodenum);","    if (chunk.buf) {","      if (opcodenum < Opcode.OP_PUSHDATA1) {","        bw.write(chunk.buf);","      } else if (opcodenum === Opcode.OP_PUSHDATA1) {","        bw.writeUInt8(chunk.len);","        bw.write(chunk.buf);","      } else if (opcodenum === Opcode.OP_PUSHDATA2) {","        bw.writeUInt16LE(chunk.len);","        bw.write(chunk.buf);","      } else if (opcodenum === Opcode.OP_PUSHDATA4) {","        bw.writeUInt32LE(chunk.len);","        bw.write(chunk.buf);","      }","    }","  }","","  return bw.concat();","};","","Script.fromASM = function(str) {","  var script = new Script();","  script.chunks = [];","","  var tokens = str.split(' ');","  var i = 0;","  while (i < tokens.length) {","    var token = tokens[i];","    var opcode = Opcode(token);","    var opcodenum = opcode.toNumber();","","    if (_.isUndefined(opcodenum)) {","      var buf = new Buffer(tokens[i], 'hex');","      script.chunks.push({","        buf: buf,","        len: buf.length,","        opcodenum: buf.length","      });","      i = i + 1;","    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||","      opcodenum === Opcode.OP_PUSHDATA2 ||","      opcodenum === Opcode.OP_PUSHDATA4) {","      script.chunks.push({","        buf: new Buffer(tokens[i + 2], 'hex'),","        len: parseInt(tokens[i + 1]),","        opcodenum: opcodenum","      });","      i = i + 3;","    } else {","      script.chunks.push({","        opcodenum: opcodenum","      });","      i = i + 1;","    }","  }","  return script;","};","","Script.fromHex = function(str) {","  return new Script(new buffer.Buffer(str, 'hex'));","};","","Script.fromString = function(str) {","  if (JSUtil.isHexa(str) || str.length === 0) {","    return new Script(new buffer.Buffer(str, 'hex'));","  }","  var script = new Script();","  script.chunks = [];","","  var tokens = str.split(' ');","  var i = 0;","  while (i < tokens.length) {","    var token = tokens[i];","    var opcode = Opcode(token);","    var opcodenum = opcode.toNumber();","","    if (_.isUndefined(opcodenum)) {","      opcodenum = parseInt(token);","      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {","        script.chunks.push({","          buf: new Buffer(tokens[i + 1].slice(2), 'hex'),","          len: opcodenum,","          opcodenum: opcodenum","        });","        i = i + 2;","      } else {","        throw new Error('Invalid script: ' + JSON.stringify(str));","      }","    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||","      opcodenum === Opcode.OP_PUSHDATA2 ||","      opcodenum === Opcode.OP_PUSHDATA4) {","      if (tokens[i + 2].slice(0, 2) !== '0x') {","        throw new Error('Pushdata data must start with 0x');","      }","      script.chunks.push({","        buf: new Buffer(tokens[i + 2].slice(2), 'hex'),","        len: parseInt(tokens[i + 1]),","        opcodenum: opcodenum","      });","      i = i + 3;","    } else {","      script.chunks.push({","        opcodenum: opcodenum","      });","      i = i + 1;","    }","  }","  return script;","};","","Script.prototype._chunkToString = function(chunk, type) {","  var opcodenum = chunk.opcodenum;","  var asm = (type === 'asm');","  var str = '';","  if (!chunk.buf) {","    // no data chunk","    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {","      str = str + ' ' + Opcode(opcodenum).toString();","    } else {","      var numstr = opcodenum.toString(16);","      if (numstr.length % 2 !== 0) {","        numstr = '0' + numstr;","      }","      if (asm) {","        str = str + ' ' + numstr;","      } else {","        str = str + ' ' + '0x' + numstr;","      }","    }","  } else {","    // data chunk","    if (opcodenum === Opcode.OP_PUSHDATA1 ||","      opcodenum === Opcode.OP_PUSHDATA2 ||","      opcodenum === Opcode.OP_PUSHDATA4) {","      str = str + ' ' + Opcode(opcodenum).toString();","    }","    if (chunk.len > 0) {","      if (asm) {","        str = str + ' ' + chunk.buf.toString('hex');","      } else {","        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');","      }","    }","  }","  return str;","};","","Script.prototype.toASM = function() {","  var str = '';","  for (var i = 0; i < this.chunks.length; i++) {","    var chunk = this.chunks[i];","    str += this._chunkToString(chunk, 'asm');","  }","","  return str.substr(1);","};","","Script.prototype.toString = function() {","  var str = '';","  for (var i = 0; i < this.chunks.length; i++) {","    var chunk = this.chunks[i];","    str += this._chunkToString(chunk);","  }","","  return str.substr(1);","};","","Script.prototype.toHex = function() {","  return this.toBuffer().toString('hex');","};","","Script.prototype.inspect = function() {","  return '<Script: ' + this.toString() + '>';","};","","// script classification methods","","/**"," * @returns {boolean} if this is a pay to pubkey hash output script"," */","Script.prototype.isPublicKeyHashOut = function() {","  return !!(this.chunks.length === 5 &&","    this.chunks[0].opcodenum === Opcode.OP_DUP &&","    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&","    this.chunks[2].buf &&","    this.chunks[2].buf.length === 20 &&","    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&","    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);","};","","/**"," * @returns {boolean} if this is a pay to public key hash input script"," */","Script.prototype.isPublicKeyHashIn = function() {","  if (this.chunks.length === 2) {","    var signatureBuf = this.chunks[0].buf;","    var pubkeyBuf = this.chunks[1].buf;","    if (signatureBuf &&","        signatureBuf.length &&","        signatureBuf[0] === 0x30 &&","        pubkeyBuf &&","        pubkeyBuf.length","       ) {","      var version = pubkeyBuf[0];","      if ((version === 0x04 ||","           version === 0x06 ||","           version === 0x07) && pubkeyBuf.length === 65) {","        return true;","      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {","        return true;","      }","    }","  }","  return false;","};","","Script.prototype.getPublicKey = function() {","  $.checkState(this.isPublicKeyOut(), 'Can\\'t retreive PublicKey from a non-PK output');","  return this.chunks[0].buf;","};","","Script.prototype.getPublicKeyHash = function() {","  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output');","  return this.chunks[2].buf;","};","","/**"," * @returns {boolean} if this is a public key output script"," */","Script.prototype.isPublicKeyOut = function() {","  if (this.chunks.length === 2 &&","      this.chunks[0].buf &&","      this.chunks[0].buf.length &&","      this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {","    var pubkeyBuf = this.chunks[0].buf;","    var version = pubkeyBuf[0];","    var isVersion = false;","    if ((version === 0x04 ||","         version === 0x06 ||","         version === 0x07) && pubkeyBuf.length === 65) {","      isVersion = true;","    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {","      isVersion = true;","    }","    if (isVersion) {","      return PublicKey.isValid(pubkeyBuf);","    }","  }","  return false;","};","","/**"," * @returns {boolean} if this is a pay to public key input script"," */","Script.prototype.isPublicKeyIn = function() {","  if (this.chunks.length === 1) {","    var signatureBuf = this.chunks[0].buf;","    if (signatureBuf &&","        signatureBuf.length &&","        signatureBuf[0] === 0x30) {","      return true;","    }","  }","  return false;","};","","/**"," * @returns {boolean} if this is a p2sh output script"," */","Script.prototype.isScriptHashOut = function() {","  var buf = this.toBuffer();","  return (buf.length === 23 &&","    buf[0] === Opcode.OP_HASH160 &&","    buf[1] === 0x14 &&","    buf[buf.length - 1] === Opcode.OP_EQUAL);","};","","/**"," * @returns {boolean} if this is a p2sh input script"," * Note that these are frequently indistinguishable from pubkeyhashin"," */","Script.prototype.isScriptHashIn = function() {","  if (this.chunks.length <= 1) {","    return false;","  }","  var redeemChunk = this.chunks[this.chunks.length - 1];","  var redeemBuf = redeemChunk.buf;","  if (!redeemBuf) {","    return false;","  }","","  var redeemScript;","  try {","    redeemScript = Script.fromBuffer(redeemBuf);","  } catch (e) {","    if (e instanceof errors.Script.InvalidBuffer) {","      return false;","    }","    throw e;","  }","  var type = redeemScript.classify();","  return type !== Script.types.UNKNOWN;","};","","/**"," * @returns {boolean} if this is a mutlsig output script"," */","Script.prototype.isMultisigOut = function() {","  return (this.chunks.length > 3 &&","    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&","    this.chunks.slice(1, this.chunks.length - 2).every(function(obj) {","      return obj.buf && BufferUtil.isBuffer(obj.buf);","    }) &&","    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&","    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG);","};","","","/**"," * @returns {boolean} if this is a multisig input script"," */","Script.prototype.isMultisigIn = function() {","  return this.chunks.length >= 2 &&","    this.chunks[0].opcodenum === 0 &&","    this.chunks.slice(1, this.chunks.length).every(function(obj) {","      return obj.buf &&","        BufferUtil.isBuffer(obj.buf) &&","        Signature.isTxDER(obj.buf);","    });","};","","/**"," * @returns {boolean} true if this is a valid standard OP_RETURN output"," */","Script.prototype.isDataOut = function() {","  return this.chunks.length >= 1 &&","    this.chunks[0].opcodenum === Opcode.OP_RETURN &&","    (this.chunks.length === 1 ||","      (this.chunks.length === 2 &&","        this.chunks[1].buf &&","        this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE &&","        this.chunks[1].length === this.chunks.len));","};","","/**"," * Retrieve the associated data for this script."," * In the case of a pay to public key hash or P2SH, return the hash."," * In the case of a standard OP_RETURN, return the data"," * @returns {Buffer}"," */","Script.prototype.getData = function() {","  if (this.isDataOut() || this.isScriptHashOut()) {","    if (_.isUndefined(this.chunks[1])) {","      return new Buffer(0);","    } else {","      return new Buffer(this.chunks[1].buf);","    }","  }","  if (this.isPublicKeyHashOut()) {","    return new Buffer(this.chunks[2].buf);","  }","  throw new Error('Unrecognized script type to get data from');","};","","/**"," * @returns {boolean} if the script is only composed of data pushing"," * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)"," */","Script.prototype.isPushOnly = function() {","  return _.every(this.chunks, function(chunk) {","    return chunk.opcodenum <= Opcode.OP_16;","  });","};","","","Script.types = {};","Script.types.UNKNOWN = 'Unknown';","Script.types.PUBKEY_OUT = 'Pay to public key';","Script.types.PUBKEY_IN = 'Spend from public key';","Script.types.PUBKEYHASH_OUT = 'Pay to public key hash';","Script.types.PUBKEYHASH_IN = 'Spend from public key hash';","Script.types.SCRIPTHASH_OUT = 'Pay to script hash';","Script.types.SCRIPTHASH_IN = 'Spend from script hash';","Script.types.MULTISIG_OUT = 'Pay to multisig';","Script.types.MULTISIG_IN = 'Spend from multisig';","Script.types.DATA_OUT = 'Data push';","","Script.OP_RETURN_STANDARD_SIZE = 80;","","/**"," * @returns {object} The Script type if it is a known form,"," * or Script.UNKNOWN if it isn't"," */","Script.prototype.classify = function() {","  if (this._isInput) {","    return this.classifyInput();","  } else if (this._isOutput) {","    return this.classifyOutput();","  } else {","    var outputType = this.classifyOutput();","    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();","  }","};","","Script.outputIdentifiers = {};","Script.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;","Script.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;","Script.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;","Script.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;","Script.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;","","/**"," * @returns {object} The Script type if it is a known form,"," * or Script.UNKNOWN if it isn't"," */","Script.prototype.classifyOutput = function() {","  for (var type in Script.outputIdentifiers) {","    if (Script.outputIdentifiers[type].bind(this)()) {","      return Script.types[type];","    }","  }","  return Script.types.UNKNOWN;","};","","Script.inputIdentifiers = {};","Script.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;","Script.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;","Script.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;","Script.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;","","/**"," * @returns {object} The Script type if it is a known form,"," * or Script.UNKNOWN if it isn't"," */","Script.prototype.classifyInput = function() {","  for (var type in Script.inputIdentifiers) {","    if (Script.inputIdentifiers[type].bind(this)()) {","      return Script.types[type];","    }","  }","  return Script.types.UNKNOWN;","};","","","/**"," * @returns {boolean} if script is one of the known types"," */","Script.prototype.isStandard = function() {","  // TODO: Add BIP62 compliance","  return this.classify() !== Script.types.UNKNOWN;","};","","","// Script construction methods","","/**"," * Adds a script element at the start of the script."," * @param {*} obj a string, number, Opcode, Buffer, or object to add"," * @returns {Script} this script instance"," */","Script.prototype.prepend = function(obj) {","  this._addByType(obj, true);","  return this;","};","","/**"," * Compares a script with another script"," */","Script.prototype.equals = function(script) {","  $.checkState(script instanceof Script, 'Must provide another script');","  if (this.chunks.length !== script.chunks.length) {","    return false;","  }","  var i;","  for (i = 0; i < this.chunks.length; i++) {","    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {","      return false;","    }","    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {","      return false;","    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {","      return false;","    }","  }","  return true;","};","","/**"," * Adds a script element to the end of the script."," *"," * @param {*} obj a string, number, Opcode, Buffer, or object to add"," * @returns {Script} this script instance"," *"," */","Script.prototype.add = function(obj) {","  this._addByType(obj, false);","  return this;","};","","Script.prototype._addByType = function(obj, prepend) {","  if (typeof obj === 'string') {","    this._addOpcode(obj, prepend);","  } else if (typeof obj === 'number') {","    this._addOpcode(obj, prepend);","  } else if (obj instanceof Opcode) {","    this._addOpcode(obj, prepend);","  } else if (BufferUtil.isBuffer(obj)) {","    this._addBuffer(obj, prepend);","  } else if (obj instanceof Script) {","    this.chunks = this.chunks.concat(obj.chunks);","  } else if (typeof obj === 'object') {","    this._insertAtPosition(obj, prepend);","  } else {","    throw new Error('Invalid script chunk');","  }","};","","Script.prototype._insertAtPosition = function(op, prepend) {","  if (prepend) {","    this.chunks.unshift(op);","  } else {","    this.chunks.push(op);","  }","};","","Script.prototype._addOpcode = function(opcode, prepend) {","  var op;","  if (typeof opcode === 'number') {","    op = opcode;","  } else if (opcode instanceof Opcode) {","    op = opcode.toNumber();","  } else {","    op = Opcode(opcode).toNumber();","  }","  this._insertAtPosition({","    opcodenum: op","  }, prepend);","  return this;","};","","Script.prototype._addBuffer = function(buf, prepend) {","  var opcodenum;","  var len = buf.length;","  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {","    opcodenum = len;","  } else if (len < Math.pow(2, 8)) {","    opcodenum = Opcode.OP_PUSHDATA1;","  } else if (len < Math.pow(2, 16)) {","    opcodenum = Opcode.OP_PUSHDATA2;","  } else if (len < Math.pow(2, 32)) {","    opcodenum = Opcode.OP_PUSHDATA4;","  } else {","    throw new Error('You can\\'t push that much data');","  }","  this._insertAtPosition({","    buf: buf,","    len: len,","    opcodenum: opcodenum","  }, prepend);","  return this;","};","","Script.prototype.removeCodeseparators = function() {","  var chunks = [];","  for (var i = 0; i < this.chunks.length; i++) {","    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {","      chunks.push(this.chunks[i]);","    }","  }","  this.chunks = chunks;","  return this;","};","","// high level script builder methods","","/**"," * @returns {Script} a new Multisig output script for given public keys,"," * requiring m of those public keys to spend"," * @param {PublicKey[]} publicKeys - list of all public keys controlling the output"," * @param {number} threshold - amount of required signatures to spend the output"," * @param {Object=} opts - Several options:"," *        - noSorting: defaults to false, if true, don't sort the given"," *                      public keys before creating the script"," */","Script.buildMultisigOut = function(publicKeys, threshold, opts) {","  $.checkArgument(threshold <= publicKeys.length,","    'Number of required signatures must be less than or equal to the number of public keys');","  opts = opts || {};","  var script = new Script();","  script.add(Opcode.smallInt(threshold));","  publicKeys = _.map(publicKeys, PublicKey);","  var sorted = publicKeys;","  if (!opts.noSorting) {","    sorted = _.sortBy(publicKeys, function(publicKey) {","      return publicKey.toString('hex');","    });","  }","  for (var i = 0; i < sorted.length; i++) {","    var publicKey = sorted[i];","    script.add(publicKey.toBuffer());","  }","  script.add(Opcode.smallInt(publicKeys.length));","  script.add(Opcode.OP_CHECKMULTISIG);","  return script;","};","","/**"," * A new Multisig input script for the given public keys, requiring m of those public keys to spend"," *"," * @param {PublicKey[]} pubkeys list of all public keys controlling the output"," * @param {number} threshold amount of required signatures to spend the output"," * @param {Array} signatures and array of signature buffers to append to the script"," * @param {Object=} opts"," * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)"," * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript"," *"," * @returns {Script}"," */","Script.buildMultisigIn = function(pubkeys, threshold, signatures, opts) {","  $.checkArgument(_.isArray(pubkeys));","  $.checkArgument(_.isNumber(threshold));","  $.checkArgument(_.isArray(signatures));","  opts = opts || {};","  var s = new Script();","  s.add(Opcode.OP_0);","  _.each(signatures, function(signature) {","    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');","    // TODO: allow signatures to be an array of Signature objects","    s.add(signature);","  });","  return s;","};","","/**"," * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend"," *"," * @param {PublicKey[]} pubkeys list of all public keys controlling the output"," * @param {number} threshold amount of required signatures to spend the output"," * @param {Array} signatures and array of signature buffers to append to the script"," * @param {Object=} opts"," * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)"," * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript"," *"," * @returns {Script}"," */","Script.buildP2SHMultisigIn = function(pubkeys, threshold, signatures, opts) {","  $.checkArgument(_.isArray(pubkeys));","  $.checkArgument(_.isNumber(threshold));","  $.checkArgument(_.isArray(signatures));","  opts = opts || {};","  var s = new Script();","  s.add(Opcode.OP_0);","  _.each(signatures, function(signature) {","    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');","    // TODO: allow signatures to be an array of Signature objects","    s.add(signature);","  });","  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());","  return s;","};","","/**"," * @returns {Script} a new pay to public key hash output for the given"," * address or public key"," * @param {(Address|PublicKey)} to - destination address or public key"," */","Script.buildPublicKeyHashOut = function(to) {","  $.checkArgument(!_.isUndefined(to));","  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));","  if (to instanceof PublicKey) {","    to = to.toAddress();","  } else if (_.isString(to)) {","    to = new Address(to);","  }","  var s = new Script();","  s.add(Opcode.OP_DUP)","    .add(Opcode.OP_HASH160)","    .add(to.hashBuffer)","    .add(Opcode.OP_EQUALVERIFY)","    .add(Opcode.OP_CHECKSIG);","  s._network = to.network;","  return s;","};","","/**"," * @returns {Script} a new pay to public key output for the given"," *  public key"," */","Script.buildPublicKeyOut = function(pubkey) {","  $.checkArgument(pubkey instanceof PublicKey);","  var s = new Script();","  s.add(pubkey.toBuffer())","    .add(Opcode.OP_CHECKSIG);","  return s;","};","","/**"," * @returns {Script} a new OP_RETURN script with data"," * @param {(string|Buffer)} data - the data to embed in the output"," * @param {(string)} encoding - the type of encoding of the string"," */","Script.buildDataOut = function(data, encoding) {","  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));","  if (_.isString(data)) {","    data = new Buffer(data, encoding);","  }","  var s = new Script();","  s.add(Opcode.OP_RETURN);","  if (!_.isUndefined(data)) {","    s.add(data);","  }","  return s;","};","","/**"," * @param {Script|Address} script - the redeemScript for the new p2sh output."," *    It can also be a p2sh address"," * @returns {Script} new pay to script hash script for given script"," */","Script.buildScriptHashOut = function(script) {","  $.checkArgument(script instanceof Script ||","    (script instanceof Address && script.isPayToScriptHash()));","  var s = new Script();","  s.add(Opcode.OP_HASH160)","    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))","    .add(Opcode.OP_EQUAL);","","  s._network = script._network || script.network;","  return s;","};","","/**"," * Builds a scriptSig (a script for an input) that signs a public key output script."," *"," * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding"," * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)"," */","Script.buildPublicKeyIn = function(signature, sigtype) {","  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));","  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));","  if (signature instanceof Signature) {","    signature = signature.toBuffer();","  }","  var script = new Script();","  script.add(BufferUtil.concat([","    signature,","    BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)","  ]));","  return script;","};","","/**"," * Builds a scriptSig (a script for an input) that signs a public key hash"," * output script."," *"," * @param {Buffer|string|PublicKey} publicKey"," * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding"," * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)"," */","Script.buildPublicKeyHashIn = function(publicKey, signature, sigtype) {","  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));","  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));","  if (signature instanceof Signature) {","    signature = signature.toBuffer();","  }","  var script = new Script()","    .add(BufferUtil.concat([","      signature,","      BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)","    ]))","    .add(new PublicKey(publicKey).toBuffer());","  return script;","};","","/**"," * @returns {Script} an empty script"," */","Script.empty = function() {","  return new Script();","};","","/**"," * @returns {Script} a new pay to script hash script that pays to this script"," */","Script.prototype.toScriptHashOut = function() {","  return Script.buildScriptHashOut(this);","};","","/**"," * @return {Script} an output script built from the address"," */","Script.fromAddress = function(address) {","  address = Address(address);","  if (address.isPayToScriptHash()) {","    return Script.buildScriptHashOut(address);","  } else if (address.isPayToPublicKeyHash()) {","    return Script.buildPublicKeyHashOut(address);","  }","  throw new errors.Script.UnrecognizedAddress(address);","};","","/**"," * Will return the associated address information object"," * @return {Address|boolean}"," */","Script.prototype.getAddressInfo = function(opts) {","  if (this._isInput) {","    return this._getInputAddressInfo();","  } else if (this._isOutput) {","    return this._getOutputAddressInfo();","  } else {","    var info = this._getOutputAddressInfo();","    if (!info) {","      return this._getInputAddressInfo();","    }","    return info;","  }","};","","/**"," * Will return the associated output scriptPubKey address information object"," * @return {Address|boolean}"," * @private"," */","Script.prototype._getOutputAddressInfo = function() {","  var info = {};","  if (this.isScriptHashOut()) {","    info.hashBuffer = this.getData();","    info.type = Address.PayToScriptHash;","  } else if (this.isPublicKeyHashOut()) {","    info.hashBuffer = this.getData();","    info.type = Address.PayToPublicKeyHash;","  } else {","    return false;","  }","  return info;","};","","/**"," * Will return the associated input scriptSig address information object"," * @return {Address|boolean}"," * @private"," */","Script.prototype._getInputAddressInfo = function() {","  var info = {};","  if (this.isPublicKeyHashIn()) {","    // hash the publickey found in the scriptSig","    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);","    info.type = Address.PayToPublicKeyHash;","  } else if (this.isScriptHashIn()) {","    // hash the redeemscript found at the end of the scriptSig","    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);","    info.type = Address.PayToScriptHash;","  } else {","    return false;","  }","  return info;","};","","/**"," * @param {Network=} network"," * @return {Address|boolean} the associated address for this script if possible, or false"," */","Script.prototype.toAddress = function(network) {","  var info = this.getAddressInfo();","  if (!info) {","    return false;","  }","  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;","  return new Address(info);","};","","/**"," * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,"," * typically used with push data chunks.  Note that this will find and delete"," * not just the same data, but the same data with the same push data op as"," * produced by default. i.e., if a pushdata in a tx does not use the minimal"," * pushdata op, then when you try to remove the data it is pushing, it will not"," * be removed, because they do not use the same pushdata op."," */","Script.prototype.findAndDelete = function(script) {","  var buf = script.toBuffer();","  var hex = buf.toString('hex');","  for (var i = 0; i < this.chunks.length; i++) {","    var script2 = Script({","      chunks: [this.chunks[i]]","    });","    var buf2 = script2.toBuffer();","    var hex2 = buf2.toString('hex');","    if (hex === hex2) {","      this.chunks.splice(i, 1);","    }","  }","  return this;","};","","/**"," * Comes from bitcoind's script interpreter CheckMinimalPush function"," * @returns {boolean} if the chunk {i} is the smallest way to push that particular data."," */","Script.prototype.checkMinimalPush = function(i) {","  var chunk = this.chunks[i];","  var buf = chunk.buf;","  var opcodenum = chunk.opcodenum;","  if (!buf) {","    return true;","  }","  if (buf.length === 0) {","    // Could have used OP_0.","    return opcodenum === Opcode.OP_0;","  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {","    // Could have used OP_1 .. OP_16.","    return opcodenum === Opcode.OP_1 + (buf[0] - 1);","  } else if (buf.length === 1 && buf[0] === 0x81) {","    // Could have used OP_1NEGATE","    return opcodenum === Opcode.OP_1NEGATE;","  } else if (buf.length <= 75) {","    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).","    return opcodenum === buf.length;","  } else if (buf.length <= 255) {","    // Could have used OP_PUSHDATA.","    return opcodenum === Opcode.OP_PUSHDATA1;","  } else if (buf.length <= 65535) {","    // Could have used OP_PUSHDATA2.","    return opcodenum === Opcode.OP_PUSHDATA2;","  }","  return true;","};","","/**"," * Comes from bitcoind's script DecodeOP_N function"," * @param {number} opcode"," * @returns {number} numeric value in range of 0 to 16"," */","Script.prototype._decodeOP_N = function(opcode) {","  if (opcode === Opcode.OP_0) {","    return 0;","  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {","    return opcode - (Opcode.OP_1 - 1);","  } else {","    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));","  }","};","","/**"," * Comes from bitcoind's script GetSigOpCount(boolean) function"," * @param {boolean} use current (true) or pre-version-0.6 (false) logic"," * @returns {number} number of signature operations required by this script"," */","Script.prototype.getSignatureOperationsCount = function(accurate) {","  accurate = (_.isUndefined(accurate) ? true : accurate);","  var self = this;","  var n = 0;","  var lastOpcode = Opcode.OP_INVALIDOPCODE;","  _.each(self.chunks, function getChunk(chunk) {","    var opcode = chunk.opcodenum;","    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {","      n++;","    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {","      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {","        n += self._decodeOP_N(lastOpcode);","      } else {","        n += 20;","      }","    }","    lastOpcode = opcode;","  });","  return n;","};","","module.exports = Script;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"27":1,"28":8,"29":0,"31":8,"33":8,"34":0,"35":8,"36":0,"37":8,"38":0,"39":8,"40":0,"41":8,"42":0,"46":1,"47":0,"48":0,"51":1,"52":8,"53":8,"55":8,"56":8,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"68":0,"69":0,"70":0,"71":0,"76":0,"77":0,"78":0,"79":0,"84":0,"85":0,"86":0,"87":0,"93":0,"98":0,"99":0,"101":0,"105":0,"108":1,"109":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"131":0,"134":1,"135":0,"136":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"145":0,"146":0,"147":0,"152":0,"153":0,"156":0,"161":0,"163":0,"166":0,"169":0,"172":1,"173":0,"176":1,"177":0,"178":0,"180":0,"181":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"190":0,"191":0,"192":0,"193":0,"198":0,"200":0,"202":0,"205":0,"206":0,"208":0,"213":0,"215":0,"218":0,"221":0,"224":1,"225":0,"226":0,"227":0,"228":0,"230":0,"231":0,"233":0,"234":0,"235":0,"237":0,"238":0,"240":0,"245":0,"248":0,"250":0,"251":0,"252":0,"254":0,"258":0,"261":1,"262":0,"263":0,"264":0,"265":0,"268":0,"271":1,"272":0,"273":0,"274":0,"275":0,"278":0,"281":1,"282":0,"285":1,"286":0,"294":1,"295":0,"307":1,"308":0,"309":0,"310":0,"311":0,"317":0,"318":0,"321":0,"322":0,"323":0,"327":0,"330":1,"331":0,"332":0,"335":1,"336":0,"337":0,"343":1,"344":0,"348":0,"349":0,"350":0,"351":0,"354":0,"355":0,"356":0,"358":0,"359":0,"362":0,"368":1,"369":0,"370":0,"371":0,"374":0,"377":0,"383":1,"384":0,"385":0,"395":1,"396":0,"397":0,"399":0,"400":0,"401":0,"402":0,"405":0,"406":0,"407":0,"409":0,"410":0,"412":0,"414":0,"415":0,"421":1,"422":0,"425":0,"435":1,"436":0,"439":0,"448":1,"449":0,"464":1,"465":0,"466":0,"467":0,"469":0,"472":0,"473":0,"475":0,"482":1,"483":0,"484":0,"489":1,"490":1,"491":1,"492":1,"493":1,"494":1,"495":1,"496":1,"497":1,"498":1,"499":1,"501":1,"507":1,"508":0,"509":0,"510":0,"511":0,"513":0,"514":0,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"529":1,"530":0,"531":0,"532":0,"535":0,"538":1,"539":1,"540":1,"541":1,"542":1,"548":1,"549":0,"550":0,"551":0,"554":0,"561":1,"563":0,"574":1,"575":0,"576":0,"582":1,"583":0,"584":0,"585":0,"587":0,"588":0,"589":0,"590":0,"592":0,"593":0,"594":0,"595":0,"598":0,"608":1,"609":0,"610":0,"613":1,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"627":0,"631":1,"632":0,"633":0,"635":0,"639":1,"640":0,"641":0,"642":0,"643":0,"644":0,"646":0,"648":0,"651":0,"654":1,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"666":0,"668":0,"673":0,"676":1,"677":0,"678":0,"679":0,"680":0,"683":0,"684":0,"698":1,"699":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"711":0,"712":0,"713":0,"715":0,"716":0,"717":0,"732":1,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"742":0,"744":0,"759":1,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"769":0,"771":0,"772":0,"780":1,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"788":0,"789":0,"794":0,"795":0,"802":1,"803":0,"804":0,"805":0,"807":0,"815":1,"816":0,"817":0,"818":0,"820":0,"821":0,"822":0,"823":0,"825":0,"833":1,"834":0,"836":0,"837":0,"841":0,"842":0,"851":1,"852":0,"853":0,"854":0,"855":0,"857":0,"858":0,"862":0,"873":1,"874":0,"875":0,"876":0,"877":0,"879":0,"885":0,"891":1,"892":0,"898":1,"899":0,"905":1,"906":0,"907":0,"908":0,"909":0,"910":0,"912":0,"919":1,"920":0,"921":0,"922":0,"923":0,"925":0,"926":0,"927":0,"929":0,"938":1,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"947":0,"949":0,"957":1,"958":0,"959":0,"961":0,"962":0,"963":0,"965":0,"966":0,"968":0,"970":0,"977":1,"978":0,"979":0,"980":0,"982":0,"983":0,"994":1,"995":0,"996":0,"997":0,"998":0,"1001":0,"1002":0,"1003":0,"1004":0,"1007":0,"1014":1,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1021":0,"1023":0,"1024":0,"1026":0,"1027":0,"1029":0,"1030":0,"1032":0,"1033":0,"1035":0,"1036":0,"1038":0,"1040":0,"1048":1,"1049":0,"1050":0,"1051":0,"1052":0,"1054":0,"1063":1,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1076":0,"1079":0,"1081":0,"1084":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/opcode.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/opcode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1,"48":117,"49":1,"50":1,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"Opcode","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":21}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":34}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":20},"end":{"line":35,"column":34}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":20},"end":{"line":40,"column":34}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":25},"end":{"line":49,"column":36}}},"6":{"name":"(anonymous_6)","line":53,"loc":{"start":{"line":53,"column":28},"end":{"line":53,"column":39}}},"7":{"name":"(anonymous_7)","line":57,"loc":{"start":{"line":57,"column":28},"end":{"line":57,"column":39}}},"8":{"name":"(anonymous_8)","line":61,"loc":{"start":{"line":61,"column":28},"end":{"line":61,"column":39}}},"9":{"name":"(anonymous_9)","line":69,"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":30}}},"10":{"name":"(anonymous_10)","line":231,"loc":{"start":{"line":231,"column":22},"end":{"line":231,"column":39}}},"11":{"name":"(anonymous_11)","line":244,"loc":{"start":{"line":244,"column":27},"end":{"line":244,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"5":{"start":{"line":8,"column":0},"end":{"line":28,"column":1}},"6":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":27}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":12}},"9":{"start":{"line":15,"column":2},"end":{"line":21,"column":3}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":16}},"11":{"start":{"line":17,"column":9},"end":{"line":21,"column":3}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":28}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":83}},"14":{"start":{"line":23,"column":2},"end":{"line":25,"column":5}},"15":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"16":{"start":{"line":30,"column":0},"end":{"line":33,"column":2}},"17":{"start":{"line":31,"column":2},"end":{"line":31,"column":44}},"18":{"start":{"line":32,"column":2},"end":{"line":32,"column":56}},"19":{"start":{"line":35,"column":0},"end":{"line":38,"column":2}},"20":{"start":{"line":36,"column":2},"end":{"line":36,"column":35}},"21":{"start":{"line":37,"column":2},"end":{"line":37,"column":25}},"22":{"start":{"line":40,"column":0},"end":{"line":47,"column":2}},"23":{"start":{"line":41,"column":2},"end":{"line":41,"column":35}},"24":{"start":{"line":42,"column":2},"end":{"line":42,"column":30}},"25":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"26":{"start":{"line":44,"column":4},"end":{"line":44,"column":45}},"27":{"start":{"line":46,"column":2},"end":{"line":46,"column":27}},"28":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"29":{"start":{"line":50,"column":2},"end":{"line":50,"column":31}},"30":{"start":{"line":53,"column":0},"end":{"line":55,"column":2}},"31":{"start":{"line":54,"column":2},"end":{"line":54,"column":41}},"32":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"33":{"start":{"line":58,"column":2},"end":{"line":58,"column":18}},"34":{"start":{"line":61,"column":0},"end":{"line":67,"column":2}},"35":{"start":{"line":62,"column":2},"end":{"line":62,"column":40}},"36":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"37":{"start":{"line":64,"column":4},"end":{"line":64,"column":68}},"38":{"start":{"line":66,"column":2},"end":{"line":66,"column":13}},"39":{"start":{"line":69,"column":0},"end":{"line":76,"column":2}},"40":{"start":{"line":70,"column":2},"end":{"line":70,"column":73}},"41":{"start":{"line":71,"column":2},"end":{"line":71,"column":85}},"42":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"43":{"start":{"line":73,"column":4},"end":{"line":73,"column":26}},"44":{"start":{"line":75,"column":2},"end":{"line":75,"column":45}},"45":{"start":{"line":78,"column":0},"end":{"line":217,"column":2}},"46":{"start":{"line":219,"column":0},"end":{"line":219,"column":23}},"47":{"start":{"line":221,"column":0},"end":{"line":223,"column":1}},"48":{"start":{"line":222,"column":2},"end":{"line":222,"column":39}},"49":{"start":{"line":226,"column":0},"end":{"line":226,"column":29}},"50":{"start":{"line":231,"column":0},"end":{"line":237,"column":2}},"51":{"start":{"line":232,"column":2},"end":{"line":234,"column":3}},"52":{"start":{"line":233,"column":4},"end":{"line":233,"column":31}},"53":{"start":{"line":235,"column":2},"end":{"line":236,"column":67}},"54":{"start":{"line":244,"column":0},"end":{"line":246,"column":2}},"55":{"start":{"line":245,"column":2},"end":{"line":245,"column":91}},"56":{"start":{"line":248,"column":0},"end":{"line":248,"column":24}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":9}},{"start":{"line":17,"column":9},"end":{"line":17,"column":9}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"6":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":18},"end":{"line":71,"column":24}},{"start":{"line":71,"column":28},"end":{"line":71,"column":35}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"8":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":2},"end":{"line":232,"column":2}},{"start":{"line":232,"column":2},"end":{"line":232,"column":2}}]},"9":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":11},"end":{"line":235,"column":37}},{"start":{"line":236,"column":6},"end":{"line":236,"column":31}},{"start":{"line":236,"column":37},"end":{"line":236,"column":63}}]}},"code":["'use strict';","","var _ = require('lodash');","var $ = require('./util/preconditions');","var BufferUtil = require('./util/buffer');","var JSUtil = require('./util/js');","","function Opcode(num) {","  if (!(this instanceof Opcode)) {","    return new Opcode(num);","  }","","  var value;","","  if (_.isNumber(num)) {","    value = num;","  } else if (_.isString(num)) {","    value = Opcode.map[num];","  } else {","    throw new TypeError('Unrecognized num type: \"' + typeof(num) + '\" for Opcode');","  }","","  JSUtil.defineImmutable(this, {","    num: value","  });","","  return this;","}","","Opcode.fromBuffer = function(buf) {","  $.checkArgument(BufferUtil.isBuffer(buf));","  return new Opcode(Number('0x' + buf.toString('hex')));","};","","Opcode.fromNumber = function(num) {","  $.checkArgument(_.isNumber(num));","  return new Opcode(num);","};","","Opcode.fromString = function(str) {","  $.checkArgument(_.isString(str));","  var value = Opcode.map[str];","  if (typeof value === 'undefined') {","    throw new TypeError('Invalid opcodestr');","  }","  return new Opcode(value);","};","","Opcode.prototype.toHex = function() {","  return this.num.toString(16);","};","","Opcode.prototype.toBuffer = function() {","  return new Buffer(this.toHex(), 'hex');","};","","Opcode.prototype.toNumber = function() {","  return this.num;","};","","Opcode.prototype.toString = function() {","  var str = Opcode.reverseMap[this.num];","  if (typeof str === 'undefined') {","    throw new Error('Opcode does not have a string representation');","  }","  return str;","};","","Opcode.smallInt = function(n) {","  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');","  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');","  if (n === 0) {","    return Opcode('OP_0');","  }","  return new Opcode(Opcode.map.OP_1 + n - 1);","};","","Opcode.map = {","  // push value","  OP_FALSE: 0,","  OP_0: 0,","  OP_PUSHDATA1: 76,","  OP_PUSHDATA2: 77,","  OP_PUSHDATA4: 78,","  OP_1NEGATE: 79,","  OP_RESERVED: 80,","  OP_TRUE: 81,","  OP_1: 81,","  OP_2: 82,","  OP_3: 83,","  OP_4: 84,","  OP_5: 85,","  OP_6: 86,","  OP_7: 87,","  OP_8: 88,","  OP_9: 89,","  OP_10: 90,","  OP_11: 91,","  OP_12: 92,","  OP_13: 93,","  OP_14: 94,","  OP_15: 95,","  OP_16: 96,","","  // control","  OP_NOP: 97,","  OP_VER: 98,","  OP_IF: 99,","  OP_NOTIF: 100,","  OP_VERIF: 101,","  OP_VERNOTIF: 102,","  OP_ELSE: 103,","  OP_ENDIF: 104,","  OP_VERIFY: 105,","  OP_RETURN: 106,","","  // stack ops","  OP_TOALTSTACK: 107,","  OP_FROMALTSTACK: 108,","  OP_2DROP: 109,","  OP_2DUP: 110,","  OP_3DUP: 111,","  OP_2OVER: 112,","  OP_2ROT: 113,","  OP_2SWAP: 114,","  OP_IFDUP: 115,","  OP_DEPTH: 116,","  OP_DROP: 117,","  OP_DUP: 118,","  OP_NIP: 119,","  OP_OVER: 120,","  OP_PICK: 121,","  OP_ROLL: 122,","  OP_ROT: 123,","  OP_SWAP: 124,","  OP_TUCK: 125,","","  // splice ops","  OP_CAT: 126,","  OP_SUBSTR: 127,","  OP_LEFT: 128,","  OP_RIGHT: 129,","  OP_SIZE: 130,","","  // bit logic","  OP_INVERT: 131,","  OP_AND: 132,","  OP_OR: 133,","  OP_XOR: 134,","  OP_EQUAL: 135,","  OP_EQUALVERIFY: 136,","  OP_RESERVED1: 137,","  OP_RESERVED2: 138,","","  // numeric","  OP_1ADD: 139,","  OP_1SUB: 140,","  OP_2MUL: 141,","  OP_2DIV: 142,","  OP_NEGATE: 143,","  OP_ABS: 144,","  OP_NOT: 145,","  OP_0NOTEQUAL: 146,","","  OP_ADD: 147,","  OP_SUB: 148,","  OP_MUL: 149,","  OP_DIV: 150,","  OP_MOD: 151,","  OP_LSHIFT: 152,","  OP_RSHIFT: 153,","","  OP_BOOLAND: 154,","  OP_BOOLOR: 155,","  OP_NUMEQUAL: 156,","  OP_NUMEQUALVERIFY: 157,","  OP_NUMNOTEQUAL: 158,","  OP_LESSTHAN: 159,","  OP_GREATERTHAN: 160,","  OP_LESSTHANOREQUAL: 161,","  OP_GREATERTHANOREQUAL: 162,","  OP_MIN: 163,","  OP_MAX: 164,","","  OP_WITHIN: 165,","","  // crypto","  OP_RIPEMD160: 166,","  OP_SHA1: 167,","  OP_SHA256: 168,","  OP_HASH160: 169,","  OP_HASH256: 170,","  OP_CODESEPARATOR: 171,","  OP_CHECKSIG: 172,","  OP_CHECKSIGVERIFY: 173,","  OP_CHECKMULTISIG: 174,","  OP_CHECKMULTISIGVERIFY: 175,","","  OP_CHECKLOCKTIMEVERIFY: 177,","","  // expansion","  OP_NOP1: 176,","  OP_NOP2: 177,","  OP_NOP3: 178,","  OP_NOP4: 179,","  OP_NOP5: 180,","  OP_NOP6: 181,","  OP_NOP7: 182,","  OP_NOP8: 183,","  OP_NOP9: 184,","  OP_NOP10: 185,","","  // template matching params","  OP_PUBKEYHASH: 253,","  OP_PUBKEY: 254,","  OP_INVALIDOPCODE: 255","};","","Opcode.reverseMap = [];","","for (var k in Opcode.map) {","  Opcode.reverseMap[Opcode.map[k]] = k;","}","","// Easier access to opcodes","_.extend(Opcode, Opcode.map);","","/**"," * @returns true if opcode is one of OP_0, OP_1, ..., OP_16"," */","Opcode.isSmallIntOp = function(opcode) {","  if (opcode instanceof Opcode) {","    opcode = opcode.toNumber();","  }","  return ((opcode === Opcode.map.OP_0) ||","    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)));","};","","/**"," * Will return a string formatted for the console"," *"," * @returns {string} Script opcode"," */","Opcode.prototype.inspect = function() {","  return '<Opcode: ' + this.toString() + ', hex: '+this.toHex()+', decimal: '+this.num+'>';","};","","module.exports = Opcode;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"13":0,"15":0,"16":0,"17":0,"18":0,"20":0,"23":0,"27":0,"30":1,"31":0,"32":0,"35":1,"36":0,"37":0,"40":1,"41":0,"42":0,"43":0,"44":0,"46":0,"49":1,"50":0,"53":1,"54":0,"57":1,"58":0,"61":1,"62":0,"63":0,"64":0,"66":0,"69":1,"70":0,"71":0,"72":0,"73":0,"75":0,"78":1,"219":1,"221":1,"222":117,"226":1,"231":1,"232":0,"233":0,"235":0,"244":1,"245":0,"248":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/script/interpreter.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/script/interpreter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"57":[0,0],"58":[0,0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0,0],"65":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0,0,0,0,0],"107":[0,0],"108":[0,0],"109":[0,0,0,0,0,0,0,0,0,0,0,0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Interpreter","line":22,"loc":{"start":{"line":22,"column":18},"end":{"line":22,"column":44}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":31},"end":{"line":47,"column":81}}},"3":{"name":"(anonymous_3)","line":157,"loc":{"start":{"line":157,"column":35},"end":{"line":157,"column":49}}},"4":{"name":"(anonymous_4)","line":168,"loc":{"start":{"line":168,"column":28},"end":{"line":168,"column":42}}},"5":{"name":"(anonymous_5)","line":235,"loc":{"start":{"line":235,"column":25},"end":{"line":235,"column":39}}},"6":{"name":"(anonymous_6)","line":251,"loc":{"start":{"line":251,"column":47},"end":{"line":251,"column":61}}},"7":{"name":"(anonymous_7)","line":275,"loc":{"start":{"line":275,"column":44},"end":{"line":275,"column":58}}},"8":{"name":"(anonymous_8)","line":288,"loc":{"start":{"line":288,"column":33},"end":{"line":288,"column":44}}},"9":{"name":"(anonymous_9)","line":332,"loc":{"start":{"line":332,"column":38},"end":{"line":332,"column":58}}},"10":{"name":"(anonymous_10)","line":371,"loc":{"start":{"line":371,"column":29},"end":{"line":371,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"8":{"start":{"line":22,"column":0},"end":{"line":32,"column":2}},"9":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":32}},"11":{"start":{"line":26,"column":2},"end":{"line":31,"column":3}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":22}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":18}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":22}},"15":{"start":{"line":47,"column":0},"end":{"line":153,"column":2}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":46}},"17":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"18":{"start":{"line":50,"column":4},"end":{"line":50,"column":27}},"19":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"20":{"start":{"line":53,"column":4},"end":{"line":53,"column":12}},"21":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"22":{"start":{"line":56,"column":4},"end":{"line":56,"column":14}},"23":{"start":{"line":58,"column":2},"end":{"line":63,"column":5}},"24":{"start":{"line":64,"column":2},"end":{"line":64,"column":16}},"25":{"start":{"line":66,"column":2},"end":{"line":69,"column":3}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":44}},"27":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"28":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"29":{"start":{"line":73,"column":4},"end":{"line":73,"column":17}},"30":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"31":{"start":{"line":77,"column":4},"end":{"line":77,"column":35}},"32":{"start":{"line":80,"column":2},"end":{"line":80,"column":25}},"33":{"start":{"line":81,"column":2},"end":{"line":81,"column":20}},"34":{"start":{"line":82,"column":2},"end":{"line":88,"column":5}},"35":{"start":{"line":91,"column":2},"end":{"line":93,"column":3}},"36":{"start":{"line":92,"column":4},"end":{"line":92,"column":17}},"37":{"start":{"line":95,"column":2},"end":{"line":98,"column":3}},"38":{"start":{"line":96,"column":4},"end":{"line":96,"column":52}},"39":{"start":{"line":97,"column":4},"end":{"line":97,"column":17}},"40":{"start":{"line":100,"column":2},"end":{"line":100,"column":46}},"41":{"start":{"line":101,"column":2},"end":{"line":104,"column":3}},"42":{"start":{"line":102,"column":4},"end":{"line":102,"column":51}},"43":{"start":{"line":103,"column":4},"end":{"line":103,"column":17}},"44":{"start":{"line":107,"column":2},"end":{"line":150,"column":3}},"45":{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},"46":{"start":{"line":110,"column":6},"end":{"line":110,"column":46}},"47":{"start":{"line":111,"column":6},"end":{"line":111,"column":19}},"48":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"49":{"start":{"line":118,"column":6},"end":{"line":118,"column":59}},"50":{"start":{"line":121,"column":4},"end":{"line":121,"column":65}},"51":{"start":{"line":122,"column":4},"end":{"line":122,"column":65}},"52":{"start":{"line":123,"column":4},"end":{"line":123,"column":20}},"53":{"start":{"line":125,"column":4},"end":{"line":125,"column":22}},"54":{"start":{"line":126,"column":4},"end":{"line":132,"column":7}},"55":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"56":{"start":{"line":136,"column":6},"end":{"line":136,"column":19}},"57":{"start":{"line":139,"column":4},"end":{"line":142,"column":5}},"58":{"start":{"line":140,"column":6},"end":{"line":140,"column":58}},"59":{"start":{"line":141,"column":6},"end":{"line":141,"column":19}},"60":{"start":{"line":144,"column":4},"end":{"line":149,"column":5}},"61":{"start":{"line":145,"column":6},"end":{"line":145,"column":58}},"62":{"start":{"line":146,"column":6},"end":{"line":146,"column":19}},"63":{"start":{"line":148,"column":6},"end":{"line":148,"column":18}},"64":{"start":{"line":152,"column":2},"end":{"line":152,"column":14}},"65":{"start":{"line":155,"column":0},"end":{"line":155,"column":29}},"66":{"start":{"line":157,"column":0},"end":{"line":166,"column":2}},"67":{"start":{"line":158,"column":2},"end":{"line":158,"column":18}},"68":{"start":{"line":159,"column":2},"end":{"line":159,"column":21}},"69":{"start":{"line":160,"column":2},"end":{"line":160,"column":14}},"70":{"start":{"line":161,"column":2},"end":{"line":161,"column":26}},"71":{"start":{"line":162,"column":2},"end":{"line":162,"column":20}},"72":{"start":{"line":163,"column":2},"end":{"line":163,"column":19}},"73":{"start":{"line":164,"column":2},"end":{"line":164,"column":19}},"74":{"start":{"line":165,"column":2},"end":{"line":165,"column":17}},"75":{"start":{"line":168,"column":0},"end":{"line":180,"column":2}},"76":{"start":{"line":169,"column":2},"end":{"line":169,"column":42}},"77":{"start":{"line":170,"column":2},"end":{"line":170,"column":30}},"78":{"start":{"line":171,"column":2},"end":{"line":171,"column":65}},"79":{"start":{"line":172,"column":2},"end":{"line":172,"column":39}},"80":{"start":{"line":173,"column":2},"end":{"line":173,"column":46}},"81":{"start":{"line":174,"column":2},"end":{"line":174,"column":61}},"82":{"start":{"line":175,"column":2},"end":{"line":175,"column":109}},"83":{"start":{"line":176,"column":2},"end":{"line":176,"column":85}},"84":{"start":{"line":177,"column":2},"end":{"line":177,"column":42}},"85":{"start":{"line":178,"column":2},"end":{"line":178,"column":42}},"86":{"start":{"line":179,"column":2},"end":{"line":179,"column":73}},"87":{"start":{"line":182,"column":0},"end":{"line":182,"column":35}},"88":{"start":{"line":183,"column":0},"end":{"line":183,"column":35}},"89":{"start":{"line":185,"column":0},"end":{"line":185,"column":42}},"90":{"start":{"line":187,"column":0},"end":{"line":187,"column":43}},"91":{"start":{"line":188,"column":0},"end":{"line":188,"column":75}},"92":{"start":{"line":192,"column":0},"end":{"line":192,"column":35}},"93":{"start":{"line":195,"column":0},"end":{"line":195,"column":42}},"94":{"start":{"line":200,"column":0},"end":{"line":200,"column":47}},"95":{"start":{"line":203,"column":0},"end":{"line":203,"column":44}},"96":{"start":{"line":207,"column":0},"end":{"line":207,"column":43}},"97":{"start":{"line":210,"column":0},"end":{"line":210,"column":47}},"98":{"start":{"line":213,"column":0},"end":{"line":213,"column":49}},"99":{"start":{"line":220,"column":0},"end":{"line":220,"column":49}},"100":{"start":{"line":230,"column":0},"end":{"line":230,"column":64}},"101":{"start":{"line":233,"column":0},"end":{"line":233,"column":57}},"102":{"start":{"line":235,"column":0},"end":{"line":246,"column":2}},"103":{"start":{"line":236,"column":2},"end":{"line":244,"column":3}},"104":{"start":{"line":237,"column":4},"end":{"line":243,"column":5}},"105":{"start":{"line":239,"column":6},"end":{"line":241,"column":7}},"106":{"start":{"line":240,"column":8},"end":{"line":240,"column":21}},"107":{"start":{"line":242,"column":6},"end":{"line":242,"column":18}},"108":{"start":{"line":245,"column":2},"end":{"line":245,"column":15}},"109":{"start":{"line":251,"column":0},"end":{"line":270,"column":2}},"110":{"start":{"line":252,"column":2},"end":{"line":252,"column":10}},"111":{"start":{"line":253,"column":2},"end":{"line":268,"column":3}},"112":{"start":{"line":254,"column":4},"end":{"line":254,"column":54}},"113":{"start":{"line":255,"column":4},"end":{"line":255,"column":17}},"114":{"start":{"line":256,"column":9},"end":{"line":268,"column":3}},"115":{"start":{"line":257,"column":4},"end":{"line":257,"column":38}},"116":{"start":{"line":258,"column":4},"end":{"line":261,"column":5}},"117":{"start":{"line":259,"column":6},"end":{"line":259,"column":48}},"118":{"start":{"line":260,"column":6},"end":{"line":260,"column":19}},"119":{"start":{"line":262,"column":9},"end":{"line":268,"column":3}},"120":{"start":{"line":263,"column":4},"end":{"line":263,"column":38}},"121":{"start":{"line":264,"column":4},"end":{"line":267,"column":5}},"122":{"start":{"line":265,"column":6},"end":{"line":265,"column":46}},"123":{"start":{"line":266,"column":6},"end":{"line":266,"column":19}},"124":{"start":{"line":269,"column":2},"end":{"line":269,"column":14}},"125":{"start":{"line":275,"column":0},"end":{"line":281,"column":2}},"126":{"start":{"line":276,"column":2},"end":{"line":279,"column":3}},"127":{"start":{"line":277,"column":4},"end":{"line":277,"column":42}},"128":{"start":{"line":278,"column":4},"end":{"line":278,"column":17}},"129":{"start":{"line":280,"column":2},"end":{"line":280,"column":14}},"130":{"start":{"line":288,"column":0},"end":{"line":318,"column":2}},"131":{"start":{"line":289,"column":2},"end":{"line":292,"column":3}},"132":{"start":{"line":290,"column":4},"end":{"line":290,"column":43}},"133":{"start":{"line":291,"column":4},"end":{"line":291,"column":17}},"134":{"start":{"line":294,"column":2},"end":{"line":310,"column":3}},"135":{"start":{"line":295,"column":4},"end":{"line":300,"column":5}},"136":{"start":{"line":296,"column":6},"end":{"line":296,"column":33}},"137":{"start":{"line":297,"column":6},"end":{"line":299,"column":7}},"138":{"start":{"line":298,"column":8},"end":{"line":298,"column":21}},"139":{"start":{"line":303,"column":4},"end":{"line":306,"column":5}},"140":{"start":{"line":304,"column":6},"end":{"line":304,"column":44}},"141":{"start":{"line":305,"column":6},"end":{"line":305,"column":19}},"142":{"start":{"line":308,"column":4},"end":{"line":308,"column":51}},"143":{"start":{"line":309,"column":4},"end":{"line":309,"column":17}},"144":{"start":{"line":312,"column":2},"end":{"line":315,"column":3}},"145":{"start":{"line":313,"column":4},"end":{"line":313,"column":54}},"146":{"start":{"line":314,"column":4},"end":{"line":314,"column":17}},"147":{"start":{"line":317,"column":2},"end":{"line":317,"column":14}},"148":{"start":{"line":332,"column":0},"end":{"line":365,"column":1}},"149":{"start":{"line":337,"column":2},"end":{"line":342,"column":3}},"150":{"start":{"line":341,"column":4},"end":{"line":341,"column":17}},"151":{"start":{"line":346,"column":2},"end":{"line":348,"column":3}},"152":{"start":{"line":347,"column":4},"end":{"line":347,"column":17}},"153":{"start":{"line":360,"column":2},"end":{"line":362,"column":3}},"154":{"start":{"line":361,"column":4},"end":{"line":361,"column":17}},"155":{"start":{"line":364,"column":2},"end":{"line":364,"column":14}},"156":{"start":{"line":371,"column":0},"end":{"line":1264,"column":2}},"157":{"start":{"line":373,"column":2},"end":{"line":373,"column":83}},"158":{"start":{"line":376,"column":2},"end":{"line":376,"column":50}},"159":{"start":{"line":377,"column":2},"end":{"line":377,"column":86}},"160":{"start":{"line":378,"column":2},"end":{"line":378,"column":18}},"161":{"start":{"line":379,"column":2},"end":{"line":379,"column":23}},"162":{"start":{"line":382,"column":2},"end":{"line":382,"column":42}},"163":{"start":{"line":383,"column":2},"end":{"line":383,"column":12}},"164":{"start":{"line":384,"column":2},"end":{"line":384,"column":34}},"165":{"start":{"line":385,"column":2},"end":{"line":388,"column":3}},"166":{"start":{"line":386,"column":4},"end":{"line":386,"column":48}},"167":{"start":{"line":387,"column":4},"end":{"line":387,"column":17}},"168":{"start":{"line":389,"column":2},"end":{"line":392,"column":3}},"169":{"start":{"line":390,"column":4},"end":{"line":390,"column":41}},"170":{"start":{"line":391,"column":4},"end":{"line":391,"column":17}},"171":{"start":{"line":395,"column":2},"end":{"line":398,"column":3}},"172":{"start":{"line":396,"column":4},"end":{"line":396,"column":40}},"173":{"start":{"line":397,"column":4},"end":{"line":397,"column":17}},"174":{"start":{"line":401,"column":2},"end":{"line":418,"column":3}},"175":{"start":{"line":416,"column":4},"end":{"line":416,"column":47}},"176":{"start":{"line":417,"column":4},"end":{"line":417,"column":17}},"177":{"start":{"line":420,"column":2},"end":{"line":1261,"column":3}},"178":{"start":{"line":421,"column":4},"end":{"line":424,"column":5}},"179":{"start":{"line":422,"column":6},"end":{"line":422,"column":45}},"180":{"start":{"line":423,"column":6},"end":{"line":423,"column":19}},"181":{"start":{"line":425,"column":4},"end":{"line":431,"column":5}},"182":{"start":{"line":426,"column":6},"end":{"line":426,"column":41}},"183":{"start":{"line":427,"column":11},"end":{"line":431,"column":5}},"184":{"start":{"line":428,"column":6},"end":{"line":428,"column":74}},"185":{"start":{"line":430,"column":6},"end":{"line":430,"column":33}},"186":{"start":{"line":432,"column":9},"end":{"line":1261,"column":3}},"187":{"start":{"line":433,"column":4},"end":{"line":1260,"column":5}},"188":{"start":{"line":455,"column":10},"end":{"line":455,"column":44}},"189":{"start":{"line":456,"column":10},"end":{"line":456,"column":46}},"190":{"start":{"line":457,"column":10},"end":{"line":457,"column":31}},"191":{"start":{"line":461,"column":8},"end":{"line":461,"column":14}},"192":{"start":{"line":468,"column":8},"end":{"line":468,"column":14}},"193":{"start":{"line":473,"column":8},"end":{"line":480,"column":9}},"194":{"start":{"line":475,"column":10},"end":{"line":478,"column":11}},"195":{"start":{"line":476,"column":12},"end":{"line":476,"column":66}},"196":{"start":{"line":477,"column":12},"end":{"line":477,"column":25}},"197":{"start":{"line":479,"column":10},"end":{"line":479,"column":16}},"198":{"start":{"line":482,"column":8},"end":{"line":485,"column":9}},"199":{"start":{"line":483,"column":10},"end":{"line":483,"column":61}},"200":{"start":{"line":484,"column":10},"end":{"line":484,"column":23}},"201":{"start":{"line":501,"column":8},"end":{"line":501,"column":102}},"202":{"start":{"line":506,"column":8},"end":{"line":509,"column":9}},"203":{"start":{"line":507,"column":10},"end":{"line":507,"column":55}},"204":{"start":{"line":508,"column":10},"end":{"line":508,"column":23}},"205":{"start":{"line":512,"column":8},"end":{"line":515,"column":9}},"206":{"start":{"line":513,"column":10},"end":{"line":513,"column":58}},"207":{"start":{"line":514,"column":10},"end":{"line":514,"column":23}},"208":{"start":{"line":516,"column":8},"end":{"line":516,"column":14}},"209":{"start":{"line":528,"column":10},"end":{"line":531,"column":11}},"210":{"start":{"line":529,"column":12},"end":{"line":529,"column":66}},"211":{"start":{"line":530,"column":12},"end":{"line":530,"column":25}},"212":{"start":{"line":533,"column":8},"end":{"line":533,"column":14}},"213":{"start":{"line":540,"column":10},"end":{"line":540,"column":25}},"214":{"start":{"line":541,"column":10},"end":{"line":551,"column":11}},"215":{"start":{"line":542,"column":12},"end":{"line":545,"column":13}},"216":{"start":{"line":543,"column":14},"end":{"line":543,"column":64}},"217":{"start":{"line":544,"column":14},"end":{"line":544,"column":27}},"218":{"start":{"line":546,"column":12},"end":{"line":546,"column":35}},"219":{"start":{"line":547,"column":12},"end":{"line":547,"column":49}},"220":{"start":{"line":548,"column":12},"end":{"line":550,"column":13}},"221":{"start":{"line":549,"column":14},"end":{"line":549,"column":31}},"222":{"start":{"line":552,"column":10},"end":{"line":552,"column":35}},"223":{"start":{"line":554,"column":8},"end":{"line":554,"column":14}},"224":{"start":{"line":558,"column":10},"end":{"line":561,"column":11}},"225":{"start":{"line":559,"column":12},"end":{"line":559,"column":62}},"226":{"start":{"line":560,"column":12},"end":{"line":560,"column":25}},"227":{"start":{"line":562,"column":10},"end":{"line":562,"column":85}},"228":{"start":{"line":564,"column":8},"end":{"line":564,"column":14}},"229":{"start":{"line":568,"column":10},"end":{"line":571,"column":11}},"230":{"start":{"line":569,"column":12},"end":{"line":569,"column":62}},"231":{"start":{"line":570,"column":12},"end":{"line":570,"column":25}},"232":{"start":{"line":572,"column":10},"end":{"line":572,"column":28}},"233":{"start":{"line":574,"column":8},"end":{"line":574,"column":14}},"234":{"start":{"line":580,"column":10},"end":{"line":583,"column":11}},"235":{"start":{"line":581,"column":12},"end":{"line":581,"column":63}},"236":{"start":{"line":582,"column":12},"end":{"line":582,"column":25}},"237":{"start":{"line":584,"column":10},"end":{"line":584,"column":50}},"238":{"start":{"line":585,"column":10},"end":{"line":585,"column":47}},"239":{"start":{"line":586,"column":10},"end":{"line":591,"column":11}},"240":{"start":{"line":587,"column":12},"end":{"line":587,"column":29}},"241":{"start":{"line":589,"column":12},"end":{"line":589,"column":46}},"242":{"start":{"line":590,"column":12},"end":{"line":590,"column":25}},"243":{"start":{"line":593,"column":8},"end":{"line":593,"column":14}},"244":{"start":{"line":597,"column":10},"end":{"line":597,"column":47}},"245":{"start":{"line":598,"column":10},"end":{"line":598,"column":23}},"246":{"start":{"line":600,"column":8},"end":{"line":600,"column":14}},"247":{"start":{"line":608,"column":10},"end":{"line":611,"column":11}},"248":{"start":{"line":609,"column":12},"end":{"line":609,"column":63}},"249":{"start":{"line":610,"column":12},"end":{"line":610,"column":25}},"250":{"start":{"line":612,"column":10},"end":{"line":612,"column":47}},"251":{"start":{"line":614,"column":8},"end":{"line":614,"column":14}},"252":{"start":{"line":618,"column":10},"end":{"line":621,"column":11}},"253":{"start":{"line":619,"column":12},"end":{"line":619,"column":66}},"254":{"start":{"line":620,"column":12},"end":{"line":620,"column":25}},"255":{"start":{"line":622,"column":10},"end":{"line":622,"column":47}},"256":{"start":{"line":624,"column":8},"end":{"line":624,"column":14}},"257":{"start":{"line":629,"column":10},"end":{"line":632,"column":11}},"258":{"start":{"line":630,"column":12},"end":{"line":630,"column":63}},"259":{"start":{"line":631,"column":12},"end":{"line":631,"column":25}},"260":{"start":{"line":633,"column":10},"end":{"line":633,"column":27}},"261":{"start":{"line":634,"column":10},"end":{"line":634,"column":27}},"262":{"start":{"line":636,"column":8},"end":{"line":636,"column":14}},"263":{"start":{"line":641,"column":10},"end":{"line":644,"column":11}},"264":{"start":{"line":642,"column":12},"end":{"line":642,"column":63}},"265":{"start":{"line":643,"column":12},"end":{"line":643,"column":25}},"266":{"start":{"line":645,"column":10},"end":{"line":645,"column":51}},"267":{"start":{"line":646,"column":10},"end":{"line":646,"column":51}},"268":{"start":{"line":647,"column":10},"end":{"line":647,"column":32}},"269":{"start":{"line":648,"column":10},"end":{"line":648,"column":32}},"270":{"start":{"line":650,"column":8},"end":{"line":650,"column":14}},"271":{"start":{"line":655,"column":10},"end":{"line":658,"column":11}},"272":{"start":{"line":656,"column":12},"end":{"line":656,"column":63}},"273":{"start":{"line":657,"column":12},"end":{"line":657,"column":25}},"274":{"start":{"line":659,"column":10},"end":{"line":659,"column":51}},"275":{"start":{"line":660,"column":10},"end":{"line":660,"column":51}},"276":{"start":{"line":661,"column":10},"end":{"line":661,"column":55}},"277":{"start":{"line":662,"column":10},"end":{"line":662,"column":32}},"278":{"start":{"line":663,"column":10},"end":{"line":663,"column":32}},"279":{"start":{"line":664,"column":10},"end":{"line":664,"column":32}},"280":{"start":{"line":666,"column":8},"end":{"line":666,"column":14}},"281":{"start":{"line":671,"column":10},"end":{"line":674,"column":11}},"282":{"start":{"line":672,"column":12},"end":{"line":672,"column":63}},"283":{"start":{"line":673,"column":12},"end":{"line":673,"column":25}},"284":{"start":{"line":675,"column":10},"end":{"line":675,"column":51}},"285":{"start":{"line":676,"column":10},"end":{"line":676,"column":51}},"286":{"start":{"line":677,"column":10},"end":{"line":677,"column":32}},"287":{"start":{"line":678,"column":10},"end":{"line":678,"column":32}},"288":{"start":{"line":680,"column":8},"end":{"line":680,"column":14}},"289":{"start":{"line":685,"column":10},"end":{"line":688,"column":11}},"290":{"start":{"line":686,"column":12},"end":{"line":686,"column":63}},"291":{"start":{"line":687,"column":12},"end":{"line":687,"column":25}},"292":{"start":{"line":689,"column":10},"end":{"line":689,"column":64}},"293":{"start":{"line":690,"column":10},"end":{"line":690,"column":38}},"294":{"start":{"line":691,"column":10},"end":{"line":691,"column":38}},"295":{"start":{"line":693,"column":8},"end":{"line":693,"column":14}},"296":{"start":{"line":698,"column":10},"end":{"line":701,"column":11}},"297":{"start":{"line":699,"column":12},"end":{"line":699,"column":63}},"298":{"start":{"line":700,"column":12},"end":{"line":700,"column":25}},"299":{"start":{"line":702,"column":10},"end":{"line":702,"column":64}},"300":{"start":{"line":703,"column":10},"end":{"line":703,"column":38}},"301":{"start":{"line":704,"column":10},"end":{"line":704,"column":38}},"302":{"start":{"line":706,"column":8},"end":{"line":706,"column":14}},"303":{"start":{"line":711,"column":10},"end":{"line":714,"column":11}},"304":{"start":{"line":712,"column":12},"end":{"line":712,"column":63}},"305":{"start":{"line":713,"column":12},"end":{"line":713,"column":25}},"306":{"start":{"line":715,"column":10},"end":{"line":715,"column":50}},"307":{"start":{"line":716,"column":10},"end":{"line":716,"column":47}},"308":{"start":{"line":717,"column":10},"end":{"line":719,"column":11}},"309":{"start":{"line":718,"column":12},"end":{"line":718,"column":33}},"310":{"start":{"line":721,"column":8},"end":{"line":721,"column":14}},"311":{"start":{"line":726,"column":10},"end":{"line":726,"column":62}},"312":{"start":{"line":727,"column":10},"end":{"line":727,"column":31}},"313":{"start":{"line":729,"column":8},"end":{"line":729,"column":14}},"314":{"start":{"line":734,"column":10},"end":{"line":737,"column":11}},"315":{"start":{"line":735,"column":12},"end":{"line":735,"column":63}},"316":{"start":{"line":736,"column":12},"end":{"line":736,"column":25}},"317":{"start":{"line":738,"column":10},"end":{"line":738,"column":27}},"318":{"start":{"line":740,"column":8},"end":{"line":740,"column":14}},"319":{"start":{"line":745,"column":10},"end":{"line":748,"column":11}},"320":{"start":{"line":746,"column":12},"end":{"line":746,"column":63}},"321":{"start":{"line":747,"column":12},"end":{"line":747,"column":25}},"322":{"start":{"line":749,"column":10},"end":{"line":749,"column":61}},"323":{"start":{"line":751,"column":8},"end":{"line":751,"column":14}},"324":{"start":{"line":756,"column":10},"end":{"line":759,"column":11}},"325":{"start":{"line":757,"column":12},"end":{"line":757,"column":63}},"326":{"start":{"line":758,"column":12},"end":{"line":758,"column":25}},"327":{"start":{"line":760,"column":10},"end":{"line":760,"column":54}},"328":{"start":{"line":762,"column":8},"end":{"line":762,"column":14}},"329":{"start":{"line":767,"column":10},"end":{"line":770,"column":11}},"330":{"start":{"line":768,"column":12},"end":{"line":768,"column":63}},"331":{"start":{"line":769,"column":12},"end":{"line":769,"column":25}},"332":{"start":{"line":771,"column":10},"end":{"line":771,"column":61}},"333":{"start":{"line":773,"column":8},"end":{"line":773,"column":14}},"334":{"start":{"line":780,"column":10},"end":{"line":783,"column":11}},"335":{"start":{"line":781,"column":12},"end":{"line":781,"column":63}},"336":{"start":{"line":782,"column":12},"end":{"line":782,"column":25}},"337":{"start":{"line":784,"column":10},"end":{"line":784,"column":50}},"338":{"start":{"line":785,"column":10},"end":{"line":785,"column":60}},"339":{"start":{"line":786,"column":10},"end":{"line":786,"column":28}},"340":{"start":{"line":787,"column":10},"end":{"line":787,"column":27}},"341":{"start":{"line":788,"column":10},"end":{"line":791,"column":11}},"342":{"start":{"line":789,"column":12},"end":{"line":789,"column":63}},"343":{"start":{"line":790,"column":12},"end":{"line":790,"column":25}},"344":{"start":{"line":792,"column":10},"end":{"line":792,"column":54}},"345":{"start":{"line":793,"column":10},"end":{"line":795,"column":11}},"346":{"start":{"line":794,"column":12},"end":{"line":794,"column":60}},"347":{"start":{"line":796,"column":10},"end":{"line":796,"column":31}},"348":{"start":{"line":798,"column":8},"end":{"line":798,"column":14}},"349":{"start":{"line":805,"column":10},"end":{"line":808,"column":11}},"350":{"start":{"line":806,"column":12},"end":{"line":806,"column":63}},"351":{"start":{"line":807,"column":12},"end":{"line":807,"column":25}},"352":{"start":{"line":809,"column":10},"end":{"line":809,"column":49}},"353":{"start":{"line":810,"column":10},"end":{"line":810,"column":49}},"354":{"start":{"line":811,"column":10},"end":{"line":811,"column":53}},"355":{"start":{"line":812,"column":10},"end":{"line":812,"column":49}},"356":{"start":{"line":813,"column":10},"end":{"line":813,"column":49}},"357":{"start":{"line":814,"column":10},"end":{"line":814,"column":49}},"358":{"start":{"line":816,"column":8},"end":{"line":816,"column":14}},"359":{"start":{"line":821,"column":10},"end":{"line":824,"column":11}},"360":{"start":{"line":822,"column":12},"end":{"line":822,"column":63}},"361":{"start":{"line":823,"column":12},"end":{"line":823,"column":25}},"362":{"start":{"line":825,"column":10},"end":{"line":825,"column":49}},"363":{"start":{"line":826,"column":10},"end":{"line":826,"column":49}},"364":{"start":{"line":827,"column":10},"end":{"line":827,"column":49}},"365":{"start":{"line":828,"column":10},"end":{"line":828,"column":49}},"366":{"start":{"line":830,"column":8},"end":{"line":830,"column":14}},"367":{"start":{"line":835,"column":10},"end":{"line":838,"column":11}},"368":{"start":{"line":836,"column":12},"end":{"line":836,"column":63}},"369":{"start":{"line":837,"column":12},"end":{"line":837,"column":25}},"370":{"start":{"line":839,"column":10},"end":{"line":839,"column":89}},"371":{"start":{"line":841,"column":8},"end":{"line":841,"column":14}},"372":{"start":{"line":847,"column":10},"end":{"line":850,"column":11}},"373":{"start":{"line":848,"column":12},"end":{"line":848,"column":63}},"374":{"start":{"line":849,"column":12},"end":{"line":849,"column":25}},"375":{"start":{"line":851,"column":10},"end":{"line":851,"column":64}},"376":{"start":{"line":852,"column":10},"end":{"line":852,"column":50}},"377":{"start":{"line":854,"column":8},"end":{"line":854,"column":14}},"378":{"start":{"line":865,"column":10},"end":{"line":868,"column":11}},"379":{"start":{"line":866,"column":12},"end":{"line":866,"column":63}},"380":{"start":{"line":867,"column":12},"end":{"line":867,"column":25}},"381":{"start":{"line":869,"column":10},"end":{"line":869,"column":51}},"382":{"start":{"line":870,"column":10},"end":{"line":870,"column":51}},"383":{"start":{"line":871,"column":10},"end":{"line":871,"column":69}},"384":{"start":{"line":872,"column":10},"end":{"line":872,"column":27}},"385":{"start":{"line":873,"column":10},"end":{"line":873,"column":27}},"386":{"start":{"line":874,"column":10},"end":{"line":874,"column":73}},"387":{"start":{"line":875,"column":10},"end":{"line":882,"column":11}},"388":{"start":{"line":876,"column":12},"end":{"line":881,"column":13}},"389":{"start":{"line":877,"column":14},"end":{"line":877,"column":31}},"390":{"start":{"line":879,"column":14},"end":{"line":879,"column":53}},"391":{"start":{"line":880,"column":14},"end":{"line":880,"column":27}},"392":{"start":{"line":884,"column":8},"end":{"line":884,"column":14}},"393":{"start":{"line":898,"column":10},"end":{"line":901,"column":11}},"394":{"start":{"line":899,"column":12},"end":{"line":899,"column":63}},"395":{"start":{"line":900,"column":12},"end":{"line":900,"column":25}},"396":{"start":{"line":902,"column":10},"end":{"line":902,"column":50}},"397":{"start":{"line":903,"column":10},"end":{"line":903,"column":60}},"398":{"start":{"line":904,"column":10},"end":{"line":926,"column":11}},"399":{"start":{"line":906,"column":14},"end":{"line":906,"column":34}},"400":{"start":{"line":907,"column":14},"end":{"line":907,"column":20}},"401":{"start":{"line":909,"column":14},"end":{"line":909,"column":34}},"402":{"start":{"line":910,"column":14},"end":{"line":910,"column":20}},"403":{"start":{"line":912,"column":14},"end":{"line":912,"column":28}},"404":{"start":{"line":913,"column":14},"end":{"line":913,"column":20}},"405":{"start":{"line":915,"column":14},"end":{"line":917,"column":15}},"406":{"start":{"line":916,"column":16},"end":{"line":916,"column":30}},"407":{"start":{"line":918,"column":14},"end":{"line":918,"column":20}},"408":{"start":{"line":920,"column":14},"end":{"line":920,"column":55}},"409":{"start":{"line":921,"column":14},"end":{"line":921,"column":20}},"410":{"start":{"line":923,"column":14},"end":{"line":923,"column":55}},"411":{"start":{"line":924,"column":14},"end":{"line":924,"column":20}},"412":{"start":{"line":927,"column":10},"end":{"line":927,"column":27}},"413":{"start":{"line":928,"column":10},"end":{"line":928,"column":50}},"414":{"start":{"line":930,"column":8},"end":{"line":930,"column":14}},"415":{"start":{"line":947,"column":10},"end":{"line":950,"column":11}},"416":{"start":{"line":948,"column":12},"end":{"line":948,"column":63}},"417":{"start":{"line":949,"column":12},"end":{"line":949,"column":25}},"418":{"start":{"line":951,"column":10},"end":{"line":951,"column":91}},"419":{"start":{"line":952,"column":10},"end":{"line":952,"column":91}},"420":{"start":{"line":953,"column":10},"end":{"line":953,"column":25}},"421":{"start":{"line":955,"column":10},"end":{"line":1007,"column":11}},"422":{"start":{"line":957,"column":14},"end":{"line":957,"column":32}},"423":{"start":{"line":958,"column":14},"end":{"line":958,"column":20}},"424":{"start":{"line":961,"column":14},"end":{"line":961,"column":32}},"425":{"start":{"line":962,"column":14},"end":{"line":962,"column":20}},"426":{"start":{"line":966,"column":14},"end":{"line":966,"column":86}},"427":{"start":{"line":967,"column":14},"end":{"line":967,"column":20}},"428":{"start":{"line":970,"column":14},"end":{"line":970,"column":86}},"429":{"start":{"line":971,"column":14},"end":{"line":971,"column":20}},"430":{"start":{"line":974,"column":14},"end":{"line":974,"column":52}},"431":{"start":{"line":975,"column":14},"end":{"line":975,"column":20}},"432":{"start":{"line":978,"column":14},"end":{"line":978,"column":52}},"433":{"start":{"line":979,"column":14},"end":{"line":979,"column":20}},"434":{"start":{"line":982,"column":14},"end":{"line":982,"column":52}},"435":{"start":{"line":983,"column":14},"end":{"line":983,"column":20}},"436":{"start":{"line":986,"column":14},"end":{"line":986,"column":50}},"437":{"start":{"line":987,"column":14},"end":{"line":987,"column":20}},"438":{"start":{"line":990,"column":14},"end":{"line":990,"column":50}},"439":{"start":{"line":991,"column":14},"end":{"line":991,"column":20}},"440":{"start":{"line":994,"column":14},"end":{"line":994,"column":51}},"441":{"start":{"line":995,"column":14},"end":{"line":995,"column":20}},"442":{"start":{"line":998,"column":14},"end":{"line":998,"column":51}},"443":{"start":{"line":999,"column":14},"end":{"line":999,"column":20}},"444":{"start":{"line":1001,"column":14},"end":{"line":1001,"column":50}},"445":{"start":{"line":1002,"column":14},"end":{"line":1002,"column":20}},"446":{"start":{"line":1004,"column":14},"end":{"line":1004,"column":50}},"447":{"start":{"line":1005,"column":14},"end":{"line":1005,"column":20}},"448":{"start":{"line":1008,"column":10},"end":{"line":1008,"column":27}},"449":{"start":{"line":1009,"column":10},"end":{"line":1009,"column":27}},"450":{"start":{"line":1010,"column":10},"end":{"line":1010,"column":50}},"451":{"start":{"line":1012,"column":10},"end":{"line":1020,"column":11}},"452":{"start":{"line":1014,"column":12},"end":{"line":1019,"column":13}},"453":{"start":{"line":1015,"column":14},"end":{"line":1015,"column":31}},"454":{"start":{"line":1017,"column":14},"end":{"line":1017,"column":56}},"455":{"start":{"line":1018,"column":14},"end":{"line":1018,"column":27}},"456":{"start":{"line":1022,"column":8},"end":{"line":1022,"column":14}},"457":{"start":{"line":1027,"column":10},"end":{"line":1030,"column":11}},"458":{"start":{"line":1028,"column":12},"end":{"line":1028,"column":63}},"459":{"start":{"line":1029,"column":12},"end":{"line":1029,"column":25}},"460":{"start":{"line":1031,"column":10},"end":{"line":1031,"column":91}},"461":{"start":{"line":1032,"column":10},"end":{"line":1032,"column":91}},"462":{"start":{"line":1033,"column":10},"end":{"line":1033,"column":95}},"463":{"start":{"line":1035,"column":10},"end":{"line":1035,"column":61}},"464":{"start":{"line":1036,"column":10},"end":{"line":1036,"column":27}},"465":{"start":{"line":1037,"column":10},"end":{"line":1037,"column":27}},"466":{"start":{"line":1038,"column":10},"end":{"line":1038,"column":27}},"467":{"start":{"line":1039,"column":10},"end":{"line":1039,"column":73}},"468":{"start":{"line":1041,"column":8},"end":{"line":1041,"column":14}},"469":{"start":{"line":1054,"column":10},"end":{"line":1057,"column":11}},"470":{"start":{"line":1055,"column":12},"end":{"line":1055,"column":63}},"471":{"start":{"line":1056,"column":12},"end":{"line":1056,"column":25}},"472":{"start":{"line":1058,"column":10},"end":{"line":1058,"column":50}},"473":{"start":{"line":1061,"column":10},"end":{"line":1061,"column":22}},"474":{"start":{"line":1062,"column":10},"end":{"line":1072,"column":11}},"475":{"start":{"line":1063,"column":12},"end":{"line":1063,"column":42}},"476":{"start":{"line":1064,"column":17},"end":{"line":1072,"column":11}},"477":{"start":{"line":1065,"column":12},"end":{"line":1065,"column":37}},"478":{"start":{"line":1066,"column":17},"end":{"line":1072,"column":11}},"479":{"start":{"line":1067,"column":12},"end":{"line":1067,"column":39}},"480":{"start":{"line":1068,"column":17},"end":{"line":1072,"column":11}},"481":{"start":{"line":1069,"column":12},"end":{"line":1069,"column":48}},"482":{"start":{"line":1070,"column":17},"end":{"line":1072,"column":11}},"483":{"start":{"line":1071,"column":12},"end":{"line":1071,"column":45}},"484":{"start":{"line":1073,"column":10},"end":{"line":1073,"column":27}},"485":{"start":{"line":1074,"column":10},"end":{"line":1074,"column":35}},"486":{"start":{"line":1076,"column":8},"end":{"line":1076,"column":14}},"487":{"start":{"line":1081,"column":10},"end":{"line":1081,"column":40}},"488":{"start":{"line":1083,"column":8},"end":{"line":1083,"column":14}},"489":{"start":{"line":1089,"column":10},"end":{"line":1092,"column":11}},"490":{"start":{"line":1090,"column":12},"end":{"line":1090,"column":63}},"491":{"start":{"line":1091,"column":12},"end":{"line":1091,"column":25}},"492":{"start":{"line":1094,"column":10},"end":{"line":1094,"column":53}},"493":{"start":{"line":1095,"column":10},"end":{"line":1095,"column":56}},"494":{"start":{"line":1099,"column":10},"end":{"line":1101,"column":13}},"495":{"start":{"line":1104,"column":10},"end":{"line":1104,"column":51}},"496":{"start":{"line":1105,"column":10},"end":{"line":1105,"column":45}},"497":{"start":{"line":1107,"column":10},"end":{"line":1109,"column":11}},"498":{"start":{"line":1108,"column":12},"end":{"line":1108,"column":25}},"499":{"start":{"line":1111,"column":10},"end":{"line":1118,"column":11}},"500":{"start":{"line":1112,"column":12},"end":{"line":1112,"column":49}},"501":{"start":{"line":1113,"column":12},"end":{"line":1113,"column":60}},"502":{"start":{"line":1114,"column":12},"end":{"line":1114,"column":81}},"503":{"start":{"line":1117,"column":12},"end":{"line":1117,"column":29}},"504":{"start":{"line":1120,"column":10},"end":{"line":1120,"column":27}},"505":{"start":{"line":1121,"column":10},"end":{"line":1121,"column":27}},"506":{"start":{"line":1123,"column":10},"end":{"line":1123,"column":75}},"507":{"start":{"line":1124,"column":10},"end":{"line":1131,"column":11}},"508":{"start":{"line":1125,"column":12},"end":{"line":1130,"column":13}},"509":{"start":{"line":1126,"column":14},"end":{"line":1126,"column":31}},"510":{"start":{"line":1128,"column":14},"end":{"line":1128,"column":56}},"511":{"start":{"line":1129,"column":14},"end":{"line":1129,"column":27}},"512":{"start":{"line":1133,"column":8},"end":{"line":1133,"column":14}},"513":{"start":{"line":1140,"column":10},"end":{"line":1140,"column":20}},"514":{"start":{"line":1141,"column":10},"end":{"line":1144,"column":11}},"515":{"start":{"line":1142,"column":12},"end":{"line":1142,"column":63}},"516":{"start":{"line":1143,"column":12},"end":{"line":1143,"column":25}},"517":{"start":{"line":1146,"column":10},"end":{"line":1146,"column":113}},"518":{"start":{"line":1147,"column":10},"end":{"line":1150,"column":11}},"519":{"start":{"line":1148,"column":12},"end":{"line":1148,"column":52}},"520":{"start":{"line":1149,"column":12},"end":{"line":1149,"column":25}},"521":{"start":{"line":1151,"column":10},"end":{"line":1151,"column":38}},"522":{"start":{"line":1152,"column":10},"end":{"line":1155,"column":11}},"523":{"start":{"line":1153,"column":12},"end":{"line":1153,"column":48}},"524":{"start":{"line":1154,"column":12},"end":{"line":1154,"column":25}},"525":{"start":{"line":1157,"column":10},"end":{"line":1157,"column":25}},"526":{"start":{"line":1158,"column":10},"end":{"line":1158,"column":26}},"527":{"start":{"line":1159,"column":10},"end":{"line":1162,"column":11}},"528":{"start":{"line":1160,"column":12},"end":{"line":1160,"column":63}},"529":{"start":{"line":1161,"column":12},"end":{"line":1161,"column":25}},"530":{"start":{"line":1164,"column":10},"end":{"line":1164,"column":113}},"531":{"start":{"line":1165,"column":10},"end":{"line":1168,"column":11}},"532":{"start":{"line":1166,"column":12},"end":{"line":1166,"column":49}},"533":{"start":{"line":1167,"column":12},"end":{"line":1167,"column":25}},"534":{"start":{"line":1170,"column":10},"end":{"line":1170,"column":25}},"535":{"start":{"line":1171,"column":10},"end":{"line":1171,"column":26}},"536":{"start":{"line":1172,"column":10},"end":{"line":1175,"column":11}},"537":{"start":{"line":1173,"column":12},"end":{"line":1173,"column":63}},"538":{"start":{"line":1174,"column":12},"end":{"line":1174,"column":25}},"539":{"start":{"line":1178,"column":10},"end":{"line":1180,"column":13}},"540":{"start":{"line":1183,"column":10},"end":{"line":1186,"column":11}},"541":{"start":{"line":1184,"column":12},"end":{"line":1184,"column":62}},"542":{"start":{"line":1185,"column":12},"end":{"line":1185,"column":62}},"543":{"start":{"line":1188,"column":10},"end":{"line":1188,"column":26}},"544":{"start":{"line":1189,"column":10},"end":{"line":1221,"column":11}},"545":{"start":{"line":1191,"column":12},"end":{"line":1191,"column":58}},"546":{"start":{"line":1193,"column":12},"end":{"line":1193,"column":61}},"547":{"start":{"line":1195,"column":12},"end":{"line":1197,"column":13}},"548":{"start":{"line":1196,"column":14},"end":{"line":1196,"column":27}},"549":{"start":{"line":1199,"column":12},"end":{"line":1199,"column":20}},"550":{"start":{"line":1200,"column":12},"end":{"line":1207,"column":13}},"551":{"start":{"line":1201,"column":14},"end":{"line":1201,"column":51}},"552":{"start":{"line":1202,"column":14},"end":{"line":1202,"column":62}},"553":{"start":{"line":1203,"column":14},"end":{"line":1203,"column":78}},"554":{"start":{"line":1206,"column":14},"end":{"line":1206,"column":26}},"555":{"start":{"line":1209,"column":12},"end":{"line":1212,"column":13}},"556":{"start":{"line":1210,"column":14},"end":{"line":1210,"column":21}},"557":{"start":{"line":1211,"column":14},"end":{"line":1211,"column":27}},"558":{"start":{"line":1213,"column":12},"end":{"line":1213,"column":19}},"559":{"start":{"line":1214,"column":12},"end":{"line":1214,"column":25}},"560":{"start":{"line":1218,"column":12},"end":{"line":1220,"column":13}},"561":{"start":{"line":1219,"column":14},"end":{"line":1219,"column":31}},"562":{"start":{"line":1224,"column":10},"end":{"line":1226,"column":11}},"563":{"start":{"line":1225,"column":12},"end":{"line":1225,"column":29}},"564":{"start":{"line":1234,"column":10},"end":{"line":1237,"column":11}},"565":{"start":{"line":1235,"column":12},"end":{"line":1235,"column":63}},"566":{"start":{"line":1236,"column":12},"end":{"line":1236,"column":25}},"567":{"start":{"line":1238,"column":10},"end":{"line":1241,"column":11}},"568":{"start":{"line":1239,"column":12},"end":{"line":1239,"column":53}},"569":{"start":{"line":1240,"column":12},"end":{"line":1240,"column":25}},"570":{"start":{"line":1242,"column":10},"end":{"line":1242,"column":27}},"571":{"start":{"line":1244,"column":10},"end":{"line":1244,"column":75}},"572":{"start":{"line":1246,"column":10},"end":{"line":1253,"column":11}},"573":{"start":{"line":1247,"column":12},"end":{"line":1252,"column":13}},"574":{"start":{"line":1248,"column":14},"end":{"line":1248,"column":31}},"575":{"start":{"line":1250,"column":14},"end":{"line":1250,"column":61}},"576":{"start":{"line":1251,"column":14},"end":{"line":1251,"column":27}},"577":{"start":{"line":1255,"column":8},"end":{"line":1255,"column":14}},"578":{"start":{"line":1258,"column":8},"end":{"line":1258,"column":46}},"579":{"start":{"line":1259,"column":8},"end":{"line":1259,"column":21}},"580":{"start":{"line":1263,"column":2},"end":{"line":1263,"column":14}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"7":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":59}},{"start":{"line":66,"column":63},"end":{"line":66,"column":86}}]},"8":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"10":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"11":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"12":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"13":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"14":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":7},"end":{"line":107,"column":45}},{"start":{"line":107,"column":50},"end":{"line":107,"column":80}}]},"15":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"16":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"17":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"18":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"19":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"20":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":16},"end":{"line":169,"column":26}},{"start":{"line":169,"column":30},"end":{"line":169,"column":41}}]},"21":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":18}},{"start":{"line":170,"column":22},"end":{"line":170,"column":29}}]},"22":{"line":171,"type":"cond-expr","locations":[{"start":{"line":171,"column":46},"end":{"line":171,"column":53}},{"start":{"line":171,"column":56},"end":{"line":171,"column":64}}]},"23":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":15},"end":{"line":172,"column":24}},{"start":{"line":172,"column":28},"end":{"line":172,"column":38}}]},"24":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":18},"end":{"line":173,"column":28}},{"start":{"line":173,"column":32},"end":{"line":173,"column":45}}]},"25":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":44},"end":{"line":174,"column":50}},{"start":{"line":174,"column":53},"end":{"line":174,"column":60}}]},"26":{"line":175,"type":"cond-expr","locations":[{"start":{"line":175,"column":68},"end":{"line":175,"column":86}},{"start":{"line":175,"column":89},"end":{"line":175,"column":108}}]},"27":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":56},"end":{"line":176,"column":68}},{"start":{"line":176,"column":71},"end":{"line":176,"column":84}}]},"28":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":16},"end":{"line":177,"column":26}},{"start":{"line":177,"column":30},"end":{"line":177,"column":41}}]},"29":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":16},"end":{"line":178,"column":26}},{"start":{"line":178,"column":30},"end":{"line":178,"column":41}}]},"30":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":50},"end":{"line":179,"column":59}},{"start":{"line":179,"column":62},"end":{"line":179,"column":72}}]},"31":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"32":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":6},"end":{"line":239,"column":6}},{"start":{"line":239,"column":6},"end":{"line":239,"column":6}}]},"33":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":10},"end":{"line":239,"column":30}},{"start":{"line":239,"column":34},"end":{"line":239,"column":49}}]},"34":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"35":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":133}},{"start":{"line":253,"column":137},"end":{"line":253,"column":160}}]},"36":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":9},"end":{"line":256,"column":9}},{"start":{"line":256,"column":9},"end":{"line":256,"column":9}}]},"37":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":4},"end":{"line":258,"column":4}},{"start":{"line":258,"column":4},"end":{"line":258,"column":4}}]},"38":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":9},"end":{"line":262,"column":9}},{"start":{"line":262,"column":9},"end":{"line":262,"column":9}}]},"39":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"40":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":2},"end":{"line":276,"column":2}},{"start":{"line":276,"column":2},"end":{"line":276,"column":2}}]},"41":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":62}},{"start":{"line":276,"column":66},"end":{"line":276,"column":89}}]},"42":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":2},"end":{"line":289,"column":2}},{"start":{"line":289,"column":2},"end":{"line":289,"column":2}}]},"43":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":6},"end":{"line":297,"column":6}},{"start":{"line":297,"column":6},"end":{"line":297,"column":6}}]},"44":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":4}},{"start":{"line":303,"column":4},"end":{"line":303,"column":4}}]},"45":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"46":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":2},"end":{"line":337,"column":2}},{"start":{"line":337,"column":2},"end":{"line":337,"column":2}}]},"47":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":5},"end":{"line":338,"column":56}},{"start":{"line":338,"column":60},"end":{"line":338,"column":107}},{"start":{"line":339,"column":5},"end":{"line":339,"column":56}},{"start":{"line":339,"column":60},"end":{"line":339,"column":108}}]},"48":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":2},"end":{"line":346,"column":2}},{"start":{"line":346,"column":2},"end":{"line":346,"column":2}}]},"49":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"50":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":2},"end":{"line":385,"column":2}},{"start":{"line":385,"column":2},"end":{"line":385,"column":2}}]},"51":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":2},"end":{"line":389,"column":2}},{"start":{"line":389,"column":2},"end":{"line":389,"column":2}}]},"52":{"line":389,"type":"binary-expr","locations":[{"start":{"line":389,"column":6},"end":{"line":389,"column":15}},{"start":{"line":389,"column":19},"end":{"line":389,"column":73}}]},"53":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"54":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":6},"end":{"line":395,"column":30}},{"start":{"line":395,"column":34},"end":{"line":395,"column":57}}]},"55":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":2},"end":{"line":401,"column":2}},{"start":{"line":401,"column":2},"end":{"line":401,"column":2}}]},"56":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":6},"end":{"line":401,"column":33}},{"start":{"line":402,"column":4},"end":{"line":402,"column":34}},{"start":{"line":403,"column":4},"end":{"line":403,"column":32}},{"start":{"line":404,"column":4},"end":{"line":404,"column":33}},{"start":{"line":405,"column":4},"end":{"line":405,"column":34}},{"start":{"line":406,"column":4},"end":{"line":406,"column":31}},{"start":{"line":407,"column":4},"end":{"line":407,"column":30}},{"start":{"line":408,"column":4},"end":{"line":408,"column":31}},{"start":{"line":409,"column":4},"end":{"line":409,"column":32}},{"start":{"line":410,"column":4},"end":{"line":410,"column":32}},{"start":{"line":411,"column":4},"end":{"line":411,"column":31}},{"start":{"line":412,"column":4},"end":{"line":412,"column":31}},{"start":{"line":413,"column":4},"end":{"line":413,"column":31}},{"start":{"line":414,"column":4},"end":{"line":414,"column":34}},{"start":{"line":415,"column":4},"end":{"line":415,"column":34}}]},"57":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":2},"end":{"line":420,"column":2}},{"start":{"line":420,"column":2},"end":{"line":420,"column":2}}]},"58":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":6},"end":{"line":420,"column":11}},{"start":{"line":420,"column":15},"end":{"line":420,"column":29}},{"start":{"line":420,"column":33},"end":{"line":420,"column":65}}]},"59":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":4},"end":{"line":421,"column":4}},{"start":{"line":421,"column":4},"end":{"line":421,"column":4}}]},"60":{"line":421,"type":"binary-expr","locations":[{"start":{"line":421,"column":8},"end":{"line":421,"column":23}},{"start":{"line":421,"column":27},"end":{"line":421,"column":69}}]},"61":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":425,"column":4}},{"start":{"line":425,"column":4},"end":{"line":425,"column":4}}]},"62":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":11},"end":{"line":427,"column":11}},{"start":{"line":427,"column":11},"end":{"line":427,"column":11}}]},"63":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":9},"end":{"line":432,"column":9}},{"start":{"line":432,"column":9},"end":{"line":432,"column":9}}]},"64":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":13},"end":{"line":432,"column":18}},{"start":{"line":432,"column":23},"end":{"line":432,"column":48}},{"start":{"line":432,"column":52},"end":{"line":432,"column":80}}]},"65":{"line":433,"type":"switch","locations":[{"start":{"line":435,"column":6},"end":{"line":435,"column":29}},{"start":{"line":436,"column":6},"end":{"line":436,"column":23}},{"start":{"line":437,"column":6},"end":{"line":437,"column":23}},{"start":{"line":438,"column":6},"end":{"line":438,"column":23}},{"start":{"line":439,"column":6},"end":{"line":439,"column":23}},{"start":{"line":440,"column":6},"end":{"line":440,"column":23}},{"start":{"line":441,"column":6},"end":{"line":441,"column":23}},{"start":{"line":442,"column":6},"end":{"line":442,"column":23}},{"start":{"line":443,"column":6},"end":{"line":443,"column":23}},{"start":{"line":444,"column":6},"end":{"line":444,"column":23}},{"start":{"line":445,"column":6},"end":{"line":445,"column":24}},{"start":{"line":446,"column":6},"end":{"line":446,"column":24}},{"start":{"line":447,"column":6},"end":{"line":447,"column":24}},{"start":{"line":448,"column":6},"end":{"line":448,"column":24}},{"start":{"line":449,"column":6},"end":{"line":449,"column":24}},{"start":{"line":450,"column":6},"end":{"line":450,"column":24}},{"start":{"line":451,"column":6},"end":{"line":461,"column":14}},{"start":{"line":467,"column":6},"end":{"line":468,"column":14}},{"start":{"line":470,"column":6},"end":{"line":470,"column":26}},{"start":{"line":471,"column":6},"end":{"line":516,"column":14}},{"start":{"line":518,"column":6},"end":{"line":518,"column":26}},{"start":{"line":519,"column":6},"end":{"line":519,"column":26}},{"start":{"line":520,"column":6},"end":{"line":520,"column":26}},{"start":{"line":521,"column":6},"end":{"line":521,"column":26}},{"start":{"line":522,"column":6},"end":{"line":522,"column":26}},{"start":{"line":523,"column":6},"end":{"line":523,"column":26}},{"start":{"line":524,"column":6},"end":{"line":524,"column":26}},{"start":{"line":525,"column":6},"end":{"line":525,"column":26}},{"start":{"line":526,"column":6},"end":{"line":533,"column":14}},{"start":{"line":535,"column":6},"end":{"line":535,"column":24}},{"start":{"line":536,"column":6},"end":{"line":554,"column":14}},{"start":{"line":556,"column":6},"end":{"line":564,"column":14}},{"start":{"line":566,"column":6},"end":{"line":574,"column":14}},{"start":{"line":576,"column":6},"end":{"line":593,"column":14}},{"start":{"line":595,"column":6},"end":{"line":600,"column":14}},{"start":{"line":606,"column":6},"end":{"line":614,"column":14}},{"start":{"line":616,"column":6},"end":{"line":624,"column":14}},{"start":{"line":626,"column":6},"end":{"line":636,"column":14}},{"start":{"line":638,"column":6},"end":{"line":650,"column":14}},{"start":{"line":652,"column":6},"end":{"line":666,"column":14}},{"start":{"line":668,"column":6},"end":{"line":680,"column":14}},{"start":{"line":682,"column":6},"end":{"line":693,"column":14}},{"start":{"line":695,"column":6},"end":{"line":706,"column":14}},{"start":{"line":708,"column":6},"end":{"line":721,"column":14}},{"start":{"line":723,"column":6},"end":{"line":729,"column":14}},{"start":{"line":731,"column":6},"end":{"line":740,"column":14}},{"start":{"line":742,"column":6},"end":{"line":751,"column":14}},{"start":{"line":753,"column":6},"end":{"line":762,"column":14}},{"start":{"line":764,"column":6},"end":{"line":773,"column":14}},{"start":{"line":775,"column":6},"end":{"line":775,"column":26}},{"start":{"line":776,"column":6},"end":{"line":798,"column":14}},{"start":{"line":800,"column":6},"end":{"line":816,"column":14}},{"start":{"line":818,"column":6},"end":{"line":830,"column":14}},{"start":{"line":832,"column":6},"end":{"line":841,"column":14}},{"start":{"line":844,"column":6},"end":{"line":854,"column":14}},{"start":{"line":860,"column":6},"end":{"line":860,"column":27}},{"start":{"line":861,"column":6},"end":{"line":884,"column":14}},{"start":{"line":890,"column":6},"end":{"line":890,"column":26}},{"start":{"line":891,"column":6},"end":{"line":891,"column":26}},{"start":{"line":892,"column":6},"end":{"line":892,"column":28}},{"start":{"line":893,"column":6},"end":{"line":893,"column":25}},{"start":{"line":894,"column":6},"end":{"line":894,"column":25}},{"start":{"line":895,"column":6},"end":{"line":930,"column":14}},{"start":{"line":932,"column":6},"end":{"line":932,"column":25}},{"start":{"line":933,"column":6},"end":{"line":933,"column":25}},{"start":{"line":934,"column":6},"end":{"line":934,"column":29}},{"start":{"line":935,"column":6},"end":{"line":935,"column":28}},{"start":{"line":936,"column":6},"end":{"line":936,"column":30}},{"start":{"line":937,"column":6},"end":{"line":937,"column":36}},{"start":{"line":938,"column":6},"end":{"line":938,"column":33}},{"start":{"line":939,"column":6},"end":{"line":939,"column":30}},{"start":{"line":940,"column":6},"end":{"line":940,"column":33}},{"start":{"line":941,"column":6},"end":{"line":941,"column":37}},{"start":{"line":942,"column":6},"end":{"line":942,"column":40}},{"start":{"line":943,"column":6},"end":{"line":943,"column":25}},{"start":{"line":944,"column":6},"end":{"line":1022,"column":14}},{"start":{"line":1024,"column":6},"end":{"line":1041,"column":14}},{"start":{"line":1047,"column":6},"end":{"line":1047,"column":31}},{"start":{"line":1048,"column":6},"end":{"line":1048,"column":26}},{"start":{"line":1049,"column":6},"end":{"line":1049,"column":28}},{"start":{"line":1050,"column":6},"end":{"line":1050,"column":29}},{"start":{"line":1051,"column":6},"end":{"line":1076,"column":14}},{"start":{"line":1078,"column":6},"end":{"line":1083,"column":14}},{"start":{"line":1085,"column":6},"end":{"line":1085,"column":30}},{"start":{"line":1086,"column":6},"end":{"line":1133,"column":14}},{"start":{"line":1135,"column":6},"end":{"line":1135,"column":35}},{"start":{"line":1136,"column":6},"end":{"line":1255,"column":14}},{"start":{"line":1257,"column":6},"end":{"line":1259,"column":21}}]},"66":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":8},"end":{"line":473,"column":8}},{"start":{"line":473,"column":8},"end":{"line":473,"column":8}}]},"67":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":10},"end":{"line":475,"column":10}},{"start":{"line":475,"column":10},"end":{"line":475,"column":10}}]},"68":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":8},"end":{"line":482,"column":8}},{"start":{"line":482,"column":8},"end":{"line":482,"column":8}}]},"69":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":8},"end":{"line":506,"column":8}},{"start":{"line":506,"column":8},"end":{"line":506,"column":8}}]},"70":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":8},"end":{"line":512,"column":8}},{"start":{"line":512,"column":8},"end":{"line":512,"column":8}}]},"71":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":10},"end":{"line":528,"column":10}},{"start":{"line":528,"column":10},"end":{"line":528,"column":10}}]},"72":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":10},"end":{"line":541,"column":10}},{"start":{"line":541,"column":10},"end":{"line":541,"column":10}}]},"73":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":12},"end":{"line":542,"column":12}},{"start":{"line":542,"column":12},"end":{"line":542,"column":12}}]},"74":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":12},"end":{"line":548,"column":12}},{"start":{"line":548,"column":12},"end":{"line":548,"column":12}}]},"75":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":10},"end":{"line":558,"column":10}},{"start":{"line":558,"column":10},"end":{"line":558,"column":10}}]},"76":{"line":568,"type":"if","locations":[{"start":{"line":568,"column":10},"end":{"line":568,"column":10}},{"start":{"line":568,"column":10},"end":{"line":568,"column":10}}]},"77":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":10},"end":{"line":580,"column":10}},{"start":{"line":580,"column":10},"end":{"line":580,"column":10}}]},"78":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":10},"end":{"line":586,"column":10}},{"start":{"line":586,"column":10},"end":{"line":586,"column":10}}]},"79":{"line":608,"type":"if","locations":[{"start":{"line":608,"column":10},"end":{"line":608,"column":10}},{"start":{"line":608,"column":10},"end":{"line":608,"column":10}}]},"80":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":10},"end":{"line":618,"column":10}},{"start":{"line":618,"column":10},"end":{"line":618,"column":10}}]},"81":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":10},"end":{"line":629,"column":10}},{"start":{"line":629,"column":10},"end":{"line":629,"column":10}}]},"82":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":10},"end":{"line":641,"column":10}},{"start":{"line":641,"column":10},"end":{"line":641,"column":10}}]},"83":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":10},"end":{"line":655,"column":10}},{"start":{"line":655,"column":10},"end":{"line":655,"column":10}}]},"84":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":10},"end":{"line":671,"column":10}},{"start":{"line":671,"column":10},"end":{"line":671,"column":10}}]},"85":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":10},"end":{"line":685,"column":10}},{"start":{"line":685,"column":10},"end":{"line":685,"column":10}}]},"86":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":10},"end":{"line":698,"column":10}},{"start":{"line":698,"column":10},"end":{"line":698,"column":10}}]},"87":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":10},"end":{"line":711,"column":10}},{"start":{"line":711,"column":10},"end":{"line":711,"column":10}}]},"88":{"line":717,"type":"if","locations":[{"start":{"line":717,"column":10},"end":{"line":717,"column":10}},{"start":{"line":717,"column":10},"end":{"line":717,"column":10}}]},"89":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":10},"end":{"line":734,"column":10}},{"start":{"line":734,"column":10},"end":{"line":734,"column":10}}]},"90":{"line":745,"type":"if","locations":[{"start":{"line":745,"column":10},"end":{"line":745,"column":10}},{"start":{"line":745,"column":10},"end":{"line":745,"column":10}}]},"91":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":10},"end":{"line":756,"column":10}},{"start":{"line":756,"column":10},"end":{"line":756,"column":10}}]},"92":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":10},"end":{"line":767,"column":10}},{"start":{"line":767,"column":10},"end":{"line":767,"column":10}}]},"93":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":10},"end":{"line":780,"column":10}},{"start":{"line":780,"column":10},"end":{"line":780,"column":10}}]},"94":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":10},"end":{"line":788,"column":10}},{"start":{"line":788,"column":10},"end":{"line":788,"column":10}}]},"95":{"line":788,"type":"binary-expr","locations":[{"start":{"line":788,"column":14},"end":{"line":788,"column":19}},{"start":{"line":788,"column":23},"end":{"line":788,"column":45}}]},"96":{"line":793,"type":"if","locations":[{"start":{"line":793,"column":10},"end":{"line":793,"column":10}},{"start":{"line":793,"column":10},"end":{"line":793,"column":10}}]},"97":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":10},"end":{"line":805,"column":10}},{"start":{"line":805,"column":10},"end":{"line":805,"column":10}}]},"98":{"line":821,"type":"if","locations":[{"start":{"line":821,"column":10},"end":{"line":821,"column":10}},{"start":{"line":821,"column":10},"end":{"line":821,"column":10}}]},"99":{"line":835,"type":"if","locations":[{"start":{"line":835,"column":10},"end":{"line":835,"column":10}},{"start":{"line":835,"column":10},"end":{"line":835,"column":10}}]},"100":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":10},"end":{"line":847,"column":10}},{"start":{"line":847,"column":10},"end":{"line":847,"column":10}}]},"101":{"line":865,"type":"if","locations":[{"start":{"line":865,"column":10},"end":{"line":865,"column":10}},{"start":{"line":865,"column":10},"end":{"line":865,"column":10}}]},"102":{"line":874,"type":"cond-expr","locations":[{"start":{"line":874,"column":35},"end":{"line":874,"column":51}},{"start":{"line":874,"column":54},"end":{"line":874,"column":71}}]},"103":{"line":875,"type":"if","locations":[{"start":{"line":875,"column":10},"end":{"line":875,"column":10}},{"start":{"line":875,"column":10},"end":{"line":875,"column":10}}]},"104":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":12},"end":{"line":876,"column":12}},{"start":{"line":876,"column":12},"end":{"line":876,"column":12}}]},"105":{"line":898,"type":"if","locations":[{"start":{"line":898,"column":10},"end":{"line":898,"column":10}},{"start":{"line":898,"column":10},"end":{"line":898,"column":10}}]},"106":{"line":904,"type":"switch","locations":[{"start":{"line":905,"column":12},"end":{"line":907,"column":20}},{"start":{"line":908,"column":12},"end":{"line":910,"column":20}},{"start":{"line":911,"column":12},"end":{"line":913,"column":20}},{"start":{"line":914,"column":12},"end":{"line":918,"column":20}},{"start":{"line":919,"column":12},"end":{"line":921,"column":20}},{"start":{"line":922,"column":12},"end":{"line":924,"column":20}}]},"107":{"line":915,"type":"if","locations":[{"start":{"line":915,"column":14},"end":{"line":915,"column":14}},{"start":{"line":915,"column":14},"end":{"line":915,"column":14}}]},"108":{"line":947,"type":"if","locations":[{"start":{"line":947,"column":10},"end":{"line":947,"column":10}},{"start":{"line":947,"column":10},"end":{"line":947,"column":10}}]},"109":{"line":955,"type":"switch","locations":[{"start":{"line":956,"column":12},"end":{"line":958,"column":20}},{"start":{"line":960,"column":12},"end":{"line":962,"column":20}},{"start":{"line":965,"column":12},"end":{"line":967,"column":20}},{"start":{"line":969,"column":12},"end":{"line":971,"column":20}},{"start":{"line":973,"column":12},"end":{"line":975,"column":20}},{"start":{"line":977,"column":12},"end":{"line":979,"column":20}},{"start":{"line":981,"column":12},"end":{"line":983,"column":20}},{"start":{"line":985,"column":12},"end":{"line":987,"column":20}},{"start":{"line":989,"column":12},"end":{"line":991,"column":20}},{"start":{"line":993,"column":12},"end":{"line":995,"column":20}},{"start":{"line":997,"column":12},"end":{"line":999,"column":20}},{"start":{"line":1000,"column":12},"end":{"line":1002,"column":20}},{"start":{"line":1003,"column":12},"end":{"line":1005,"column":20}}]},"110":{"line":966,"type":"binary-expr","locations":[{"start":{"line":966,"column":28},"end":{"line":966,"column":50}},{"start":{"line":966,"column":56},"end":{"line":966,"column":78}}]},"111":{"line":970,"type":"binary-expr","locations":[{"start":{"line":970,"column":28},"end":{"line":970,"column":50}},{"start":{"line":970,"column":56},"end":{"line":970,"column":78}}]},"112":{"line":1001,"type":"cond-expr","locations":[{"start":{"line":1001,"column":39},"end":{"line":1001,"column":42}},{"start":{"line":1001,"column":45},"end":{"line":1001,"column":48}}]},"113":{"line":1004,"type":"cond-expr","locations":[{"start":{"line":1004,"column":39},"end":{"line":1004,"column":42}},{"start":{"line":1004,"column":45},"end":{"line":1004,"column":48}}]},"114":{"line":1012,"type":"if","locations":[{"start":{"line":1012,"column":10},"end":{"line":1012,"column":10}},{"start":{"line":1012,"column":10},"end":{"line":1012,"column":10}}]},"115":{"line":1014,"type":"if","locations":[{"start":{"line":1014,"column":12},"end":{"line":1014,"column":12}},{"start":{"line":1014,"column":12},"end":{"line":1014,"column":12}}]},"116":{"line":1027,"type":"if","locations":[{"start":{"line":1027,"column":10},"end":{"line":1027,"column":10}},{"start":{"line":1027,"column":10},"end":{"line":1027,"column":10}}]},"117":{"line":1035,"type":"binary-expr","locations":[{"start":{"line":1035,"column":20},"end":{"line":1035,"column":37}},{"start":{"line":1035,"column":43},"end":{"line":1035,"column":59}}]},"118":{"line":1039,"type":"cond-expr","locations":[{"start":{"line":1039,"column":35},"end":{"line":1039,"column":51}},{"start":{"line":1039,"column":54},"end":{"line":1039,"column":71}}]},"119":{"line":1054,"type":"if","locations":[{"start":{"line":1054,"column":10},"end":{"line":1054,"column":10}},{"start":{"line":1054,"column":10},"end":{"line":1054,"column":10}}]},"120":{"line":1062,"type":"if","locations":[{"start":{"line":1062,"column":10},"end":{"line":1062,"column":10}},{"start":{"line":1062,"column":10},"end":{"line":1062,"column":10}}]},"121":{"line":1064,"type":"if","locations":[{"start":{"line":1064,"column":17},"end":{"line":1064,"column":17}},{"start":{"line":1064,"column":17},"end":{"line":1064,"column":17}}]},"122":{"line":1066,"type":"if","locations":[{"start":{"line":1066,"column":17},"end":{"line":1066,"column":17}},{"start":{"line":1066,"column":17},"end":{"line":1066,"column":17}}]},"123":{"line":1068,"type":"if","locations":[{"start":{"line":1068,"column":17},"end":{"line":1068,"column":17}},{"start":{"line":1068,"column":17},"end":{"line":1068,"column":17}}]},"124":{"line":1070,"type":"if","locations":[{"start":{"line":1070,"column":17},"end":{"line":1070,"column":17}},{"start":{"line":1070,"column":17},"end":{"line":1070,"column":17}}]},"125":{"line":1089,"type":"if","locations":[{"start":{"line":1089,"column":10},"end":{"line":1089,"column":10}},{"start":{"line":1089,"column":10},"end":{"line":1089,"column":10}}]},"126":{"line":1107,"type":"if","locations":[{"start":{"line":1107,"column":10},"end":{"line":1107,"column":10}},{"start":{"line":1107,"column":10},"end":{"line":1107,"column":10}}]},"127":{"line":1107,"type":"binary-expr","locations":[{"start":{"line":1107,"column":14},"end":{"line":1107,"column":50}},{"start":{"line":1107,"column":54},"end":{"line":1107,"column":90}}]},"128":{"line":1123,"type":"cond-expr","locations":[{"start":{"line":1123,"column":37},"end":{"line":1123,"column":53}},{"start":{"line":1123,"column":56},"end":{"line":1123,"column":73}}]},"129":{"line":1124,"type":"if","locations":[{"start":{"line":1124,"column":10},"end":{"line":1124,"column":10}},{"start":{"line":1124,"column":10},"end":{"line":1124,"column":10}}]},"130":{"line":1125,"type":"if","locations":[{"start":{"line":1125,"column":12},"end":{"line":1125,"column":12}},{"start":{"line":1125,"column":12},"end":{"line":1125,"column":12}}]},"131":{"line":1141,"type":"if","locations":[{"start":{"line":1141,"column":10},"end":{"line":1141,"column":10}},{"start":{"line":1141,"column":10},"end":{"line":1141,"column":10}}]},"132":{"line":1147,"type":"if","locations":[{"start":{"line":1147,"column":10},"end":{"line":1147,"column":10}},{"start":{"line":1147,"column":10},"end":{"line":1147,"column":10}}]},"133":{"line":1147,"type":"binary-expr","locations":[{"start":{"line":1147,"column":14},"end":{"line":1147,"column":28}},{"start":{"line":1147,"column":32},"end":{"line":1147,"column":47}}]},"134":{"line":1152,"type":"if","locations":[{"start":{"line":1152,"column":10},"end":{"line":1152,"column":10}},{"start":{"line":1152,"column":10},"end":{"line":1152,"column":10}}]},"135":{"line":1159,"type":"if","locations":[{"start":{"line":1159,"column":10},"end":{"line":1159,"column":10}},{"start":{"line":1159,"column":10},"end":{"line":1159,"column":10}}]},"136":{"line":1165,"type":"if","locations":[{"start":{"line":1165,"column":10},"end":{"line":1165,"column":10}},{"start":{"line":1165,"column":10},"end":{"line":1165,"column":10}}]},"137":{"line":1165,"type":"binary-expr","locations":[{"start":{"line":1165,"column":14},"end":{"line":1165,"column":28}},{"start":{"line":1165,"column":32},"end":{"line":1165,"column":55}}]},"138":{"line":1172,"type":"if","locations":[{"start":{"line":1172,"column":10},"end":{"line":1172,"column":10}},{"start":{"line":1172,"column":10},"end":{"line":1172,"column":10}}]},"139":{"line":1189,"type":"binary-expr","locations":[{"start":{"line":1189,"column":17},"end":{"line":1189,"column":25}},{"start":{"line":1189,"column":29},"end":{"line":1189,"column":43}}]},"140":{"line":1195,"type":"if","locations":[{"start":{"line":1195,"column":12},"end":{"line":1195,"column":12}},{"start":{"line":1195,"column":12},"end":{"line":1195,"column":12}}]},"141":{"line":1195,"type":"binary-expr","locations":[{"start":{"line":1195,"column":16},"end":{"line":1195,"column":52}},{"start":{"line":1195,"column":56},"end":{"line":1195,"column":92}}]},"142":{"line":1209,"type":"if","locations":[{"start":{"line":1209,"column":12},"end":{"line":1209,"column":12}},{"start":{"line":1209,"column":12},"end":{"line":1209,"column":12}}]},"143":{"line":1218,"type":"if","locations":[{"start":{"line":1218,"column":12},"end":{"line":1218,"column":12}},{"start":{"line":1218,"column":12},"end":{"line":1218,"column":12}}]},"144":{"line":1234,"type":"if","locations":[{"start":{"line":1234,"column":10},"end":{"line":1234,"column":10}},{"start":{"line":1234,"column":10},"end":{"line":1234,"column":10}}]},"145":{"line":1238,"type":"if","locations":[{"start":{"line":1238,"column":10},"end":{"line":1238,"column":10}},{"start":{"line":1238,"column":10},"end":{"line":1238,"column":10}}]},"146":{"line":1238,"type":"binary-expr","locations":[{"start":{"line":1238,"column":15},"end":{"line":1238,"column":63}},{"start":{"line":1238,"column":68},"end":{"line":1238,"column":108}}]},"147":{"line":1244,"type":"cond-expr","locations":[{"start":{"line":1244,"column":37},"end":{"line":1244,"column":53}},{"start":{"line":1244,"column":56},"end":{"line":1244,"column":73}}]},"148":{"line":1246,"type":"if","locations":[{"start":{"line":1246,"column":10},"end":{"line":1246,"column":10}},{"start":{"line":1246,"column":10},"end":{"line":1246,"column":10}}]},"149":{"line":1247,"type":"if","locations":[{"start":{"line":1247,"column":12},"end":{"line":1247,"column":12}},{"start":{"line":1247,"column":12},"end":{"line":1247,"column":12}}]}},"code":["'use strict';","","var _ = require('lodash');","","var Script = require('./script');","var Opcode = require('../opcode');","var BN = require('../crypto/bn');","var Hash = require('../crypto/hash');","var Signature = require('../crypto/signature');","var PublicKey = require('../publickey');","","/**"," * Bitcoin transactions contain scripts. Each input has a script called the"," * scriptSig, and each output has a script called the scriptPubkey. To validate"," * an input, the input's script is concatenated with the referenced output script,"," * and the result is executed. If at the end of execution the stack contains a"," * \"true\" value, then the transaction is valid."," *"," * The primary way to use this class is via the verify function."," * e.g., Interpreter().verify( ... );"," */","var Interpreter = function Interpreter(obj) {","  if (!(this instanceof Interpreter)) {","    return new Interpreter(obj);","  }","  if (obj) {","    this.initialize();","    this.set(obj);","  } else {","    this.initialize();","  }","};","","/**"," * Verifies a Script by executing it and returns true if it is valid."," * This function needs to be provided with the scriptSig and the scriptPubkey"," * separately."," * @param {Script} scriptSig - the script's first part (corresponding to the tx input)"," * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)"," * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used"," *    to check signature validity for some opcodes like OP_CHECKSIG)"," * @param {number} nin - index of the transaction input containing the scriptSig verified."," * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants"," *"," * Translated from bitcoind's VerifyScript"," */","Interpreter.prototype.verify = function(scriptSig, scriptPubkey, tx, nin, flags) {","  var Transaction = require('../transaction');","  if (_.isUndefined(tx)) {","    tx = new Transaction();","  }","  if (_.isUndefined(nin)) {","    nin = 0;","  }","  if (_.isUndefined(flags)) {","    flags = 0;","  }","  this.set({","    script: scriptSig,","    tx: tx,","    nin: nin,","    flags: flags","  });","  var stackCopy;","","  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {","    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';","    return false;","  }","","  // evaluate scriptSig","  if (!this.evaluate()) {","    return false;","  }","","  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {","    stackCopy = this.stack.slice();","  }","","  var stack = this.stack;","  this.initialize();","  this.set({","    script: scriptPubkey,","    stack: stack,","    tx: tx,","    nin: nin,","    flags: flags","  });","","  // evaluate scriptPubkey","  if (!this.evaluate()) {","    return false;","  }","","  if (this.stack.length === 0) {","    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';","    return false;","  }","","  var buf = this.stack[this.stack.length - 1];","  if (!Interpreter.castToBool(buf)) {","    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';","    return false;","  }","","  // Additional validation for spend-to-script-hash transactions:","  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {","    // scriptSig must be literals-only or validation fails","    if (!scriptSig.isPushOnly()) {","      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';","      return false;","    }","","    // stackCopy cannot be empty here, because if it was the","    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with","    // an empty stack and the EvalScript above would return false.","    if (stackCopy.length === 0) {","      throw new Error('internal error - stack copy empty');","    }","","    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];","    var redeemScript = Script.fromBuffer(redeemScriptSerialized);","    stackCopy.pop();","","    this.initialize();","    this.set({","      script: redeemScript,","      stack: stackCopy,","      tx: tx,","      nin: nin,","      flags: flags","    });","","    // evaluate redeemScript","    if (!this.evaluate()) {","      return false;","    }","","    if (stackCopy.length === 0) {","      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';","      return false;","    }","","    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {","      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';","      return false;","    } else {","      return true;","    }","  }","","  return true;","};","","module.exports = Interpreter;","","Interpreter.prototype.initialize = function(obj) {","  this.stack = [];","  this.altstack = [];","  this.pc = 0;","  this.pbegincodehash = 0;","  this.nOpCount = 0;","  this.vfExec = [];","  this.errstr = '';","  this.flags = 0;","};","","Interpreter.prototype.set = function(obj) {","  this.script = obj.script || this.script;","  this.tx = obj.tx || this.tx;","  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;","  this.stack = obj.stack || this.stack;","  this.altstack = obj.altack || this.altstack;","  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;","  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;","  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;","  this.vfExec = obj.vfExec || this.vfExec;","  this.errstr = obj.errstr || this.errstr;","  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;","};","","Interpreter.true = new Buffer([1]);","Interpreter.false = new Buffer([]);","","Interpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;","","Interpreter.LOCKTIME_THRESHOLD = 500000000;","Interpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD);","","// flags taken from bitcoind","// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104","Interpreter.SCRIPT_VERIFY_NONE = 0;","","// Evaluate P2SH subscripts (softfork safe, BIP16).","Interpreter.SCRIPT_VERIFY_P2SH = (1 << 0);","","// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.","// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be","// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).","Interpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1);","","// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)","Interpreter.SCRIPT_VERIFY_DERSIG = (1 << 2);","","// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure","// (softfork safe, BIP62 rule 5).","Interpreter.SCRIPT_VERIFY_LOW_S = (1 << 3);","","// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).","Interpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4);","","// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).","Interpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5);","","// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct","// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating","// any other push causes the script to fail (BIP62 rule 3).","// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).","// (softfork safe)","Interpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6);","","// Discourage use of NOPs reserved for upgrades (NOP1-10)","//","// Provided so that nodes can avoid accepting or mining transactions","// containing executed NOP's whose meaning may change after a soft-fork,","// thus rendering the script invalid; with this flag set executing","// discouraged NOPs fails the script. This verification flag will never be","// a mandatory flag applied to scripts in a block. NOPs that are not","// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.","Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7);","","// CLTV See BIP65 for details.","Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9);","","Interpreter.castToBool = function(buf) {","  for (var i = 0; i < buf.length; i++) {","    if (buf[i] !== 0) {","      // can be negative zero","      if (i === buf.length - 1 && buf[i] === 0x80) {","        return false;","      }","      return true;","    }","  }","  return false;","};","","/**"," * Translated from bitcoind's CheckSignatureEncoding"," */","Interpreter.prototype.checkSignatureEncoding = function(buf) {","  var sig;","  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {","    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';","    return false;","  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {","    sig = Signature.fromTxFormat(buf);","    if (!sig.hasLowS()) {","      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';","      return false;","    }","  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {","    sig = Signature.fromTxFormat(buf);","    if (!sig.hasDefinedHashtype()) {","      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';","      return false;","    }","  }","  return true;","};","","/**"," * Translated from bitcoind's CheckPubKeyEncoding"," */","Interpreter.prototype.checkPubkeyEncoding = function(buf) {","  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {","    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';","    return false;","  }","  return true;","};","","/**"," * Based on bitcoind's EvalScript function, with the inner loop moved to"," * Interpreter.prototype.step()"," * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104"," */","Interpreter.prototype.evaluate = function() {","  if (this.script.toBuffer().length > 10000) {","    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';","    return false;","  }","","  try {","    while (this.pc < this.script.chunks.length) {","      var fSuccess = this.step();","      if (!fSuccess) {","        return false;","      }","    }","","    // Size limits","    if (this.stack.length + this.altstack.length > 1000) {","      this.errstr = 'SCRIPT_ERR_STACK_SIZE';","      return false;","    }","  } catch (e) {","    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;","    return false;","  }","","  if (this.vfExec.length > 0) {","    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';","    return false;","  }","","  return true;","};","","/**"," * Checks a locktime parameter with the transaction's locktime."," * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,"," * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000"," *"," * See the corresponding code on bitcoin core:"," * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129"," *"," * @param {BN} nLockTime the locktime read from the script"," * @return {boolean} true if the transaction's locktime is less than or equal to"," *                   the transaction's locktime"," */","Interpreter.prototype.checkLockTime = function(nLockTime) {","","  // We want to compare apples to apples, so fail the script","  // unless the type of nLockTime being tested is the same as","  // the nLockTime in the transaction.","  if (!(","    (this.tx.nLockTime <  Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||","    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))","  )) {","    return false;","  }","","  // Now that we know we're comparing apples-to-apples, the","  // comparison is a simple numeric one.","  if (nLockTime.gt(new BN(this.tx.nLockTime))) {","    return false;","  }","","  // Finally the nLockTime feature can be disabled and thus","  // CHECKLOCKTIMEVERIFY bypassed if every txin has been","  // finalized by setting nSequence to maxint. The","  // transaction would be allowed into the blockchain, making","  // the opcode ineffective.","  //","  // Testing if this vin is not final is sufficient to","  // prevent this condition. Alternatively we could test all","  // inputs, but testing just this input minimizes the data","  // required to prove correct CHECKLOCKTIMEVERIFY execution.","  if (!this.tx.inputs[this.nin].isFinal()) {","    return false;","  }","","  return true;","}","","/** "," * Based on the inner loop of bitcoind's EvalScript function"," * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104"," */","Interpreter.prototype.step = function() {","","  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0;","","  //bool fExec = !count(vfExec.begin(), vfExec.end(), false);","  var fExec = (this.vfExec.indexOf(false) === -1);","  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;","  var sig, pubkey;","  var fValue, fSuccess;","","  // Read instruction","  var chunk = this.script.chunks[this.pc];","  this.pc++;","  var opcodenum = chunk.opcodenum;","  if (_.isUndefined(opcodenum)) {","    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';","    return false;","  }","  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {","    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';","    return false;","  }","","  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.","  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > 201) {","    this.errstr = 'SCRIPT_ERR_OP_COUNT';","    return false;","  }","","","  if (opcodenum === Opcode.OP_CAT ||","    opcodenum === Opcode.OP_SUBSTR ||","    opcodenum === Opcode.OP_LEFT ||","    opcodenum === Opcode.OP_RIGHT ||","    opcodenum === Opcode.OP_INVERT ||","    opcodenum === Opcode.OP_AND ||","    opcodenum === Opcode.OP_OR ||","    opcodenum === Opcode.OP_XOR ||","    opcodenum === Opcode.OP_2MUL ||","    opcodenum === Opcode.OP_2DIV ||","    opcodenum === Opcode.OP_MUL ||","    opcodenum === Opcode.OP_DIV ||","    opcodenum === Opcode.OP_MOD ||","    opcodenum === Opcode.OP_LSHIFT ||","    opcodenum === Opcode.OP_RSHIFT) {","    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';","    return false;","  }","","  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {","    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {","      this.errstr = 'SCRIPT_ERR_MINIMALDATA';","      return false;","    }","    if (!chunk.buf) {","      this.stack.push(Interpreter.false);","    } else if (chunk.len !== chunk.buf.length) {","      throw new Error('Length of push value not equal to length of data');","    } else {","      this.stack.push(chunk.buf);","    }","  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {","    switch (opcodenum) {","      // Push value","      case Opcode.OP_1NEGATE:","      case Opcode.OP_1:","      case Opcode.OP_2:","      case Opcode.OP_3:","      case Opcode.OP_4:","      case Opcode.OP_5:","      case Opcode.OP_6:","      case Opcode.OP_7:","      case Opcode.OP_8:","      case Opcode.OP_9:","      case Opcode.OP_10:","      case Opcode.OP_11:","      case Opcode.OP_12:","      case Opcode.OP_13:","      case Opcode.OP_14:","      case Opcode.OP_15:","      case Opcode.OP_16:","        {","          // ( -- value)","          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));","          n = opcodenum - (Opcode.OP_1 - 1);","          buf = new BN(n).toScriptNumBuffer();","          this.stack.push(buf);","          // The result of these opcodes should always be the minimal way to push the data","          // they push, so no need for a CheckMinimalPush here.","        }","        break;","","","        //","        // Control","        //","      case Opcode.OP_NOP:","        break;","","      case Opcode.OP_NOP2:","      case Opcode.OP_CHECKLOCKTIMEVERIFY:","","        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {","          // not enabled; treat as a NOP2","          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {","            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';","            return false;","          }","          break;","        }","","        if (this.stack.length < 1) {","          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","          return false;","        }","","        // Note that elsewhere numeric opcodes are limited to","        // operands in the range -2**31+1 to 2**31-1, however it is","        // legal for opcodes to produce results exceeding that","        // range. This limitation is implemented by CScriptNum's","        // default 4-byte limit.","        //","        // If we kept to that limit we'd have a year 2038 problem,","        // even though the nLockTime field in transactions","        // themselves is uint32 which only becomes meaningless","        // after the year 2106.","        //","        // Thus as a special case we tell CScriptNum to accept up","        // to 5-byte bignums, which are good until 2**39-1, well","        // beyond the 2**32-1 limit of the nLockTime field itself.","        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);","","        // In the rare event that the argument may be < 0 due to","        // some arithmetic being done first, you can always use","        // 0 MAX CHECKLOCKTIMEVERIFY.","        if (nLockTime.lt(new BN(0))) {","          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';","          return false;","        }","","        // Actually compare the specified lock time with the transaction.","        if (!this.checkLockTime(nLockTime)) {","          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';","          return false;","        }","        break;","","      case Opcode.OP_NOP1:","      case Opcode.OP_NOP3:","      case Opcode.OP_NOP4:","      case Opcode.OP_NOP5:","      case Opcode.OP_NOP6:","      case Opcode.OP_NOP7:","      case Opcode.OP_NOP8:","      case Opcode.OP_NOP9:","      case Opcode.OP_NOP10:","        {","          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {","            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';","            return false;","          }","        }","        break;","","      case Opcode.OP_IF:","      case Opcode.OP_NOTIF:","        {","          // <expression> if [statements] [else [statements]] endif","          // bool fValue = false;","          fValue = false;","          if (fExec) {","            if (this.stack.length < 1) {","              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';","              return false;","            }","            buf = this.stack.pop();","            fValue = Interpreter.castToBool(buf);","            if (opcodenum === Opcode.OP_NOTIF) {","              fValue = !fValue;","            }","          }","          this.vfExec.push(fValue);","        }","        break;","","      case Opcode.OP_ELSE:","        {","          if (this.vfExec.length === 0) {","            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';","            return false;","          }","          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];","        }","        break;","","      case Opcode.OP_ENDIF:","        {","          if (this.vfExec.length === 0) {","            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';","            return false;","          }","          this.vfExec.pop();","        }","        break;","","      case Opcode.OP_VERIFY:","        {","          // (true -- ) or","          // (false -- false) and return","          if (this.stack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf = this.stack[this.stack.length - 1];","          fValue = Interpreter.castToBool(buf);","          if (fValue) {","            this.stack.pop();","          } else {","            this.errstr = 'SCRIPT_ERR_VERIFY';","            return false;","          }","        }","        break;","","      case Opcode.OP_RETURN:","        {","          this.errstr = 'SCRIPT_ERR_OP_RETURN';","          return false;","        }","        break;","","","        //","        // Stack ops","        //","      case Opcode.OP_TOALTSTACK:","        {","          if (this.stack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          this.altstack.push(this.stack.pop());","        }","        break;","","      case Opcode.OP_FROMALTSTACK:","        {","          if (this.altstack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';","            return false;","          }","          this.stack.push(this.altstack.pop());","        }","        break;","","      case Opcode.OP_2DROP:","        {","          // (x1 x2 -- )","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          this.stack.pop();","          this.stack.pop();","        }","        break;","","      case Opcode.OP_2DUP:","        {","          // (x1 x2 -- x1 x2 x1 x2)","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf1 = this.stack[this.stack.length - 2];","          buf2 = this.stack[this.stack.length - 1];","          this.stack.push(buf1);","          this.stack.push(buf2);","        }","        break;","","      case Opcode.OP_3DUP:","        {","          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)","          if (this.stack.length < 3) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf1 = this.stack[this.stack.length - 3];","          buf2 = this.stack[this.stack.length - 2];","          var buf3 = this.stack[this.stack.length - 1];","          this.stack.push(buf1);","          this.stack.push(buf2);","          this.stack.push(buf3);","        }","        break;","","      case Opcode.OP_2OVER:","        {","          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)","          if (this.stack.length < 4) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf1 = this.stack[this.stack.length - 4];","          buf2 = this.stack[this.stack.length - 3];","          this.stack.push(buf1);","          this.stack.push(buf2);","        }","        break;","","      case Opcode.OP_2ROT:","        {","          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)","          if (this.stack.length < 6) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          spliced = this.stack.splice(this.stack.length - 6, 2);","          this.stack.push(spliced[0]);","          this.stack.push(spliced[1]);","        }","        break;","","      case Opcode.OP_2SWAP:","        {","          // (x1 x2 x3 x4 -- x3 x4 x1 x2)","          if (this.stack.length < 4) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          spliced = this.stack.splice(this.stack.length - 4, 2);","          this.stack.push(spliced[0]);","          this.stack.push(spliced[1]);","        }","        break;","","      case Opcode.OP_IFDUP:","        {","          // (x - 0 | x x)","          if (this.stack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf = this.stack[this.stack.length - 1];","          fValue = Interpreter.castToBool(buf);","          if (fValue) {","            this.stack.push(buf);","          }","        }","        break;","","      case Opcode.OP_DEPTH:","        {","          // -- stacksize","          buf = new BN(this.stack.length).toScriptNumBuffer();","          this.stack.push(buf);","        }","        break;","","      case Opcode.OP_DROP:","        {","          // (x -- )","          if (this.stack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          this.stack.pop();","        }","        break;","","      case Opcode.OP_DUP:","        {","          // (x -- x x)","          if (this.stack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          this.stack.push(this.stack[this.stack.length - 1]);","        }","        break;","","      case Opcode.OP_NIP:","        {","          // (x1 x2 -- x2)","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          this.stack.splice(this.stack.length - 2, 1);","        }","        break;","","      case Opcode.OP_OVER:","        {","          // (x1 x2 -- x1 x2 x1)","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          this.stack.push(this.stack[this.stack.length - 2]);","        }","        break;","","      case Opcode.OP_PICK:","      case Opcode.OP_ROLL:","        {","          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)","          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf = this.stack[this.stack.length - 1];","          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);","          n = bn.toNumber();","          this.stack.pop();","          if (n < 0 || n >= this.stack.length) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf = this.stack[this.stack.length - n - 1];","          if (opcodenum === Opcode.OP_ROLL) {","            this.stack.splice(this.stack.length - n - 1, 1);","          }","          this.stack.push(buf);","        }","        break;","","      case Opcode.OP_ROT:","        {","          // (x1 x2 x3 -- x2 x3 x1)","          //  x2 x1 x3  after first swap","          //  x2 x3 x1  after second swap","          if (this.stack.length < 3) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          x1 = this.stack[this.stack.length - 3];","          x2 = this.stack[this.stack.length - 2];","          var x3 = this.stack[this.stack.length - 1];","          this.stack[this.stack.length - 3] = x2;","          this.stack[this.stack.length - 2] = x3;","          this.stack[this.stack.length - 1] = x1;","        }","        break;","","      case Opcode.OP_SWAP:","        {","          // (x1 x2 -- x2 x1)","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          x1 = this.stack[this.stack.length - 2];","          x2 = this.stack[this.stack.length - 1];","          this.stack[this.stack.length - 2] = x2;","          this.stack[this.stack.length - 1] = x1;","        }","        break;","","      case Opcode.OP_TUCK:","        {","          // (x1 x2 -- x2 x1 x2)","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);","        }","        break;","","","      case Opcode.OP_SIZE:","        {","          // (in -- in size)","          if (this.stack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          bn = new BN(this.stack[this.stack.length - 1].length);","          this.stack.push(bn.toScriptNumBuffer());","        }","        break;","","","        //","        // Bitwise logic","        //","      case Opcode.OP_EQUAL:","      case Opcode.OP_EQUALVERIFY:","        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL","        {","          // (x1 x2 - bool)","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf1 = this.stack[this.stack.length - 2];","          buf2 = this.stack[this.stack.length - 1];","          var fEqual = buf1.toString('hex') === buf2.toString('hex');","          this.stack.pop();","          this.stack.pop();","          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);","          if (opcodenum === Opcode.OP_EQUALVERIFY) {","            if (fEqual) {","              this.stack.pop();","            } else {","              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';","              return false;","            }","          }","        }","        break;","","","        //","        // Numeric","        //","      case Opcode.OP_1ADD:","      case Opcode.OP_1SUB:","      case Opcode.OP_NEGATE:","      case Opcode.OP_ABS:","      case Opcode.OP_NOT:","      case Opcode.OP_0NOTEQUAL:","        {","          // (in -- out)","          if (this.stack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf = this.stack[this.stack.length - 1];","          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);","          switch (opcodenum) {","            case Opcode.OP_1ADD:","              bn = bn.add(BN.One);","              break;","            case Opcode.OP_1SUB:","              bn = bn.sub(BN.One);","              break;","            case Opcode.OP_NEGATE:","              bn = bn.neg();","              break;","            case Opcode.OP_ABS:","              if (bn.cmp(BN.Zero) < 0) {","                bn = bn.neg();","              }","              break;","            case Opcode.OP_NOT:","              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);","              break;","            case Opcode.OP_0NOTEQUAL:","              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);","              break;","              //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?","          }","          this.stack.pop();","          this.stack.push(bn.toScriptNumBuffer());","        }","        break;","","      case Opcode.OP_ADD:","      case Opcode.OP_SUB:","      case Opcode.OP_BOOLAND:","      case Opcode.OP_BOOLOR:","      case Opcode.OP_NUMEQUAL:","      case Opcode.OP_NUMEQUALVERIFY:","      case Opcode.OP_NUMNOTEQUAL:","      case Opcode.OP_LESSTHAN:","      case Opcode.OP_GREATERTHAN:","      case Opcode.OP_LESSTHANOREQUAL:","      case Opcode.OP_GREATERTHANOREQUAL:","      case Opcode.OP_MIN:","      case Opcode.OP_MAX:","        {","          // (x1 x2 -- out)","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);","          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);","          bn = new BN(0);","","          switch (opcodenum) {","            case Opcode.OP_ADD:","              bn = bn1.add(bn2);","              break;","","            case Opcode.OP_SUB:","              bn = bn1.sub(bn2);","              break;","","              // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;","            case Opcode.OP_BOOLAND:","              bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0);","              break;","              // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;","            case Opcode.OP_BOOLOR:","              bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0);","              break;","              // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;","            case Opcode.OP_NUMEQUAL:","              bn = new BN((bn1.cmp(bn2) === 0) + 0);","              break;","              // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;","            case Opcode.OP_NUMEQUALVERIFY:","              bn = new BN((bn1.cmp(bn2) === 0) + 0);","              break;","              // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;","            case Opcode.OP_NUMNOTEQUAL:","              bn = new BN((bn1.cmp(bn2) !== 0) + 0);","              break;","              // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;","            case Opcode.OP_LESSTHAN:","              bn = new BN((bn1.cmp(bn2) < 0) + 0);","              break;","              // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;","            case Opcode.OP_GREATERTHAN:","              bn = new BN((bn1.cmp(bn2) > 0) + 0);","              break;","              // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;","            case Opcode.OP_LESSTHANOREQUAL:","              bn = new BN((bn1.cmp(bn2) <= 0) + 0);","              break;","              // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;","            case Opcode.OP_GREATERTHANOREQUAL:","              bn = new BN((bn1.cmp(bn2) >= 0) + 0);","              break;","            case Opcode.OP_MIN:","              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2);","              break;","            case Opcode.OP_MAX:","              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2);","              break;","              // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?","          }","          this.stack.pop();","          this.stack.pop();","          this.stack.push(bn.toScriptNumBuffer());","","          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {","            // if (CastToBool(stacktop(-1)))","            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {","              this.stack.pop();","            } else {","              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';","              return false;","            }","          }","        }","        break;","","      case Opcode.OP_WITHIN:","        {","          // (x min max -- out)","          if (this.stack.length < 3) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);","          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);","          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);","          //bool fValue = (bn2 <= bn1 && bn1 < bn3);","          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0);","          this.stack.pop();","          this.stack.pop();","          this.stack.pop();","          this.stack.push(fValue ? Interpreter.true : Interpreter.false);","        }","        break;","","","        //","        // Crypto","        //","      case Opcode.OP_RIPEMD160:","      case Opcode.OP_SHA1:","      case Opcode.OP_SHA256:","      case Opcode.OP_HASH160:","      case Opcode.OP_HASH256:","        {","          // (in -- hash)","          if (this.stack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          buf = this.stack[this.stack.length - 1];","          //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||","          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);","          var bufHash;","          if (opcodenum === Opcode.OP_RIPEMD160) {","            bufHash = Hash.ripemd160(buf);","          } else if (opcodenum === Opcode.OP_SHA1) {","            bufHash = Hash.sha1(buf);","          } else if (opcodenum === Opcode.OP_SHA256) {","            bufHash = Hash.sha256(buf);","          } else if (opcodenum === Opcode.OP_HASH160) {","            bufHash = Hash.sha256ripemd160(buf);","          } else if (opcodenum === Opcode.OP_HASH256) {","            bufHash = Hash.sha256sha256(buf);","          }","          this.stack.pop();","          this.stack.push(bufHash);","        }","        break;","","      case Opcode.OP_CODESEPARATOR:","        {","          // Hash starts after the code separator","          this.pbegincodehash = this.pc;","        }","        break;","","      case Opcode.OP_CHECKSIG:","      case Opcode.OP_CHECKSIGVERIFY:","        {","          // (sig pubkey -- bool)","          if (this.stack.length < 2) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","","          bufSig = this.stack[this.stack.length - 2];","          bufPubkey = this.stack[this.stack.length - 1];","","          // Subset of script starting at the most recent codeseparator","          // CScript scriptCode(pbegincodehash, pend);","          subscript = new Script().set({","            chunks: this.script.chunks.slice(this.pbegincodehash)","          });","","          // Drop the signature, since there's no way for a signature to sign itself","          var tmpScript = new Script().add(bufSig);","          subscript.findAndDelete(tmpScript);","","          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {","            return false;","          }","","          try {","            sig = Signature.fromTxFormat(bufSig);","            pubkey = PublicKey.fromBuffer(bufPubkey, false);","            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript);","          } catch (e) {","            //invalid sig or pubkey","            fSuccess = false;","          }","","          this.stack.pop();","          this.stack.pop();","          // stack.push_back(fSuccess ? vchTrue : vchFalse);","          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);","          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {","            if (fSuccess) {","              this.stack.pop();","            } else {","              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';","              return false;","            }","          }","        }","        break;","","      case Opcode.OP_CHECKMULTISIG:","      case Opcode.OP_CHECKMULTISIGVERIFY:","        {","          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)","","          var i = 1;","          if (this.stack.length < i) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","","          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();","          if (nKeysCount < 0 || nKeysCount > 20) {","            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';","            return false;","          }","          this.nOpCount += nKeysCount;","          if (this.nOpCount > 201) {","            this.errstr = 'SCRIPT_ERR_OP_COUNT';","            return false;","          }","          // int ikey = ++i;","          var ikey = ++i;","          i += nKeysCount;","          if (this.stack.length < i) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","","          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();","          if (nSigsCount < 0 || nSigsCount > nKeysCount) {","            this.errstr = 'SCRIPT_ERR_SIG_COUNT';","            return false;","          }","          // int isig = ++i;","          var isig = ++i;","          i += nSigsCount;","          if (this.stack.length < i) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","","          // Subset of script starting at the most recent codeseparator","          subscript = new Script().set({","            chunks: this.script.chunks.slice(this.pbegincodehash)","          });","","          // Drop the signatures, since there's no way for a signature to sign itself","          for (var k = 0; k < nSigsCount; k++) {","            bufSig = this.stack[this.stack.length - isig - k];","            subscript.findAndDelete(new Script().add(bufSig));","          }","","          fSuccess = true;","          while (fSuccess && nSigsCount > 0) {","            // valtype& vchSig  = stacktop(-isig);","            bufSig = this.stack[this.stack.length - isig];","            // valtype& vchPubKey = stacktop(-ikey);","            bufPubkey = this.stack[this.stack.length - ikey];","","            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {","              return false;","            }","","            var fOk;","            try {","              sig = Signature.fromTxFormat(bufSig);","              pubkey = PublicKey.fromBuffer(bufPubkey, false);","              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript);","            } catch (e) {","              //invalid sig or pubkey","              fOk = false;","            }","","            if (fOk) {","              isig++;","              nSigsCount--;","            }","            ikey++;","            nKeysCount--;","","            // If there are more signatures left than keys left,","            // then too many signatures have failed","            if (nSigsCount > nKeysCount) {","              fSuccess = false;","            }","          }","","          // Clean up stack of actual arguments","          while (i-- > 1) {","            this.stack.pop();","          }","","          // A bug causes CHECKMULTISIG to consume one extra argument","          // whose contents were not checked in any way.","          //","          // Unfortunately this is a potential source of mutability,","          // so optionally verify it is exactly equal to zero prior","          // to removing it from the stack.","          if (this.stack.length < 1) {","            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';","            return false;","          }","          if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && this.stack[this.stack.length - 1].length) {","            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';","            return false;","          }","          this.stack.pop();","","          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);","","          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {","            if (fSuccess) {","              this.stack.pop();","            } else {","              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';","              return false;","            }","          }","        }","        break;","","      default:","        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';","        return false;","    }","  }","","  return true;","};","",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"22":1,"23":0,"24":0,"26":0,"27":0,"28":0,"30":0,"47":1,"48":0,"49":0,"50":0,"52":0,"53":0,"55":0,"56":0,"58":0,"64":0,"66":0,"67":0,"68":0,"72":0,"73":0,"76":0,"77":0,"80":0,"81":0,"82":0,"91":0,"92":0,"95":0,"96":0,"97":0,"100":0,"101":0,"102":0,"103":0,"107":0,"109":0,"110":0,"111":0,"117":0,"118":0,"121":0,"122":0,"123":0,"125":0,"126":0,"135":0,"136":0,"139":0,"140":0,"141":0,"144":0,"145":0,"146":0,"148":0,"152":0,"155":1,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"182":1,"183":1,"185":1,"187":1,"188":1,"192":1,"195":1,"200":1,"203":1,"207":1,"210":1,"213":1,"220":1,"230":1,"233":1,"235":1,"236":0,"237":0,"239":0,"240":0,"242":0,"245":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"262":0,"263":0,"264":0,"265":0,"266":0,"269":0,"275":1,"276":0,"277":0,"278":0,"280":0,"288":1,"289":0,"290":0,"291":0,"294":0,"295":0,"296":0,"297":0,"298":0,"303":0,"304":0,"305":0,"308":0,"309":0,"312":0,"313":0,"314":0,"317":0,"332":1,"337":0,"341":0,"346":0,"347":0,"360":0,"361":0,"364":0,"371":1,"373":0,"376":0,"377":0,"378":0,"379":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"389":0,"390":0,"391":0,"395":0,"396":0,"397":0,"401":0,"416":0,"417":0,"420":0,"421":0,"422":0,"423":0,"425":0,"426":0,"427":0,"428":0,"430":0,"432":0,"433":0,"455":0,"456":0,"457":0,"461":0,"468":0,"473":0,"475":0,"476":0,"477":0,"479":0,"482":0,"483":0,"484":0,"501":0,"506":0,"507":0,"508":0,"512":0,"513":0,"514":0,"516":0,"528":0,"529":0,"530":0,"533":0,"540":0,"541":0,"542":0,"543":0,"544":0,"546":0,"547":0,"548":0,"549":0,"552":0,"554":0,"558":0,"559":0,"560":0,"562":0,"564":0,"568":0,"569":0,"570":0,"572":0,"574":0,"580":0,"581":0,"582":0,"584":0,"585":0,"586":0,"587":0,"589":0,"590":0,"593":0,"597":0,"598":0,"600":0,"608":0,"609":0,"610":0,"612":0,"614":0,"618":0,"619":0,"620":0,"622":0,"624":0,"629":0,"630":0,"631":0,"633":0,"634":0,"636":0,"641":0,"642":0,"643":0,"645":0,"646":0,"647":0,"648":0,"650":0,"655":0,"656":0,"657":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"666":0,"671":0,"672":0,"673":0,"675":0,"676":0,"677":0,"678":0,"680":0,"685":0,"686":0,"687":0,"689":0,"690":0,"691":0,"693":0,"698":0,"699":0,"700":0,"702":0,"703":0,"704":0,"706":0,"711":0,"712":0,"713":0,"715":0,"716":0,"717":0,"718":0,"721":0,"726":0,"727":0,"729":0,"734":0,"735":0,"736":0,"738":0,"740":0,"745":0,"746":0,"747":0,"749":0,"751":0,"756":0,"757":0,"758":0,"760":0,"762":0,"767":0,"768":0,"769":0,"771":0,"773":0,"780":0,"781":0,"782":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"792":0,"793":0,"794":0,"796":0,"798":0,"805":0,"806":0,"807":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"816":0,"821":0,"822":0,"823":0,"825":0,"826":0,"827":0,"828":0,"830":0,"835":0,"836":0,"837":0,"839":0,"841":0,"847":0,"848":0,"849":0,"851":0,"852":0,"854":0,"865":0,"866":0,"867":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"879":0,"880":0,"884":0,"898":0,"899":0,"900":0,"902":0,"903":0,"904":0,"906":0,"907":0,"909":0,"910":0,"912":0,"913":0,"915":0,"916":0,"918":0,"920":0,"921":0,"923":0,"924":0,"927":0,"928":0,"930":0,"947":0,"948":0,"949":0,"951":0,"952":0,"953":0,"955":0,"957":0,"958":0,"961":0,"962":0,"966":0,"967":0,"970":0,"971":0,"974":0,"975":0,"978":0,"979":0,"982":0,"983":0,"986":0,"987":0,"990":0,"991":0,"994":0,"995":0,"998":0,"999":0,"1001":0,"1002":0,"1004":0,"1005":0,"1008":0,"1009":0,"1010":0,"1012":0,"1014":0,"1015":0,"1017":0,"1018":0,"1022":0,"1027":0,"1028":0,"1029":0,"1031":0,"1032":0,"1033":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1041":0,"1054":0,"1055":0,"1056":0,"1058":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1073":0,"1074":0,"1076":0,"1081":0,"1083":0,"1089":0,"1090":0,"1091":0,"1094":0,"1095":0,"1099":0,"1104":0,"1105":0,"1107":0,"1108":0,"1111":0,"1112":0,"1113":0,"1114":0,"1117":0,"1120":0,"1121":0,"1123":0,"1124":0,"1125":0,"1126":0,"1128":0,"1129":0,"1133":0,"1140":0,"1141":0,"1142":0,"1143":0,"1146":0,"1147":0,"1148":0,"1149":0,"1151":0,"1152":0,"1153":0,"1154":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1164":0,"1165":0,"1166":0,"1167":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1178":0,"1183":0,"1184":0,"1185":0,"1188":0,"1189":0,"1191":0,"1193":0,"1195":0,"1196":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1206":0,"1209":0,"1210":0,"1211":0,"1213":0,"1214":0,"1218":0,"1219":0,"1224":0,"1225":0,"1234":0,"1235":0,"1236":0,"1238":0,"1239":0,"1240":0,"1242":0,"1244":0,"1246":0,"1247":0,"1248":0,"1250":0,"1251":0,"1255":0,"1258":0,"1259":0,"1263":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/block/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/block/index.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":54}}},"branchMap":{},"code":["module.exports = require('./block');","","module.exports.BlockHeader = require('./blockheader');","module.exports.MerkleBlock = require('./merkleblock');",""],"l":{"1":1,"3":1,"4":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/block/block.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/block/block.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":1,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":1,"106":12,"107":12,"108":0,"109":1,"110":1,"111":1,"112":0,"113":1,"114":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[12,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":12,"22":0},"fnMap":{"1":{"name":"Block","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":20}}},"2":{"name":"_from","line":38,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":34}}},"3":{"name":"_fromObject","line":55,"loc":{"start":{"line":55,"column":20},"end":{"line":55,"column":47}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":28},"end":{"line":57,"column":41}}},"5":{"name":"fromObject","line":75,"loc":{"start":{"line":75,"column":19},"end":{"line":75,"column":44}}},"6":{"name":"_fromBufferReader","line":85,"loc":{"start":{"line":85,"column":26},"end":{"line":85,"column":57}}},"7":{"name":"fromBufferReader","line":101,"loc":{"start":{"line":101,"column":25},"end":{"line":101,"column":55}}},"8":{"name":"fromBuffer","line":111,"loc":{"start":{"line":111,"column":19},"end":{"line":111,"column":44}}},"9":{"name":"fromString","line":119,"loc":{"start":{"line":119,"column":19},"end":{"line":119,"column":44}}},"10":{"name":"fromRawBlock","line":128,"loc":{"start":{"line":128,"column":21},"end":{"line":128,"column":49}}},"11":{"name":"toObject","line":141,"loc":{"start":{"line":141,"column":52},"end":{"line":141,"column":72}}},"12":{"name":"(anonymous_12)","line":143,"loc":{"start":{"line":143,"column":28},"end":{"line":143,"column":41}}},"13":{"name":"toBuffer","line":155,"loc":{"start":{"line":155,"column":27},"end":{"line":155,"column":47}}},"14":{"name":"toString","line":162,"loc":{"start":{"line":162,"column":27},"end":{"line":162,"column":47}}},"15":{"name":"toBufferWriter","line":170,"loc":{"start":{"line":170,"column":33},"end":{"line":170,"column":61}}},"16":{"name":"getTransactionHashes","line":186,"loc":{"start":{"line":186,"column":39},"end":{"line":186,"column":71}}},"17":{"name":"getMerkleTree","line":203,"loc":{"start":{"line":203,"column":32},"end":{"line":203,"column":57}}},"18":{"name":"getMerkleRoot","line":224,"loc":{"start":{"line":224,"column":32},"end":{"line":224,"column":57}}},"19":{"name":"validMerkleRoot","line":233,"loc":{"start":{"line":233,"column":34},"end":{"line":233,"column":61}}},"20":{"name":"(anonymous_20)","line":248,"loc":{"start":{"line":248,"column":27},"end":{"line":248,"column":38}}},"21":{"name":"(anonymous_21)","line":258,"loc":{"start":{"line":258,"column":7},"end":{"line":258,"column":18}}},"22":{"name":"inspect","line":272,"loc":{"start":{"line":272,"column":26},"end":{"line":272,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"10":{"start":{"line":21,"column":0},"end":{"line":27,"column":1}},"11":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":26}},"13":{"start":{"line":25,"column":2},"end":{"line":25,"column":35}},"14":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"15":{"start":{"line":30,"column":0},"end":{"line":30,"column":31}},"16":{"start":{"line":38,"column":0},"end":{"line":48,"column":2}},"17":{"start":{"line":39,"column":2},"end":{"line":39,"column":16}},"18":{"start":{"line":40,"column":2},"end":{"line":46,"column":3}},"19":{"start":{"line":41,"column":4},"end":{"line":41,"column":54}},"20":{"start":{"line":42,"column":9},"end":{"line":46,"column":3}},"21":{"start":{"line":43,"column":4},"end":{"line":43,"column":34}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":59}},"23":{"start":{"line":47,"column":2},"end":{"line":47,"column":14}},"24":{"start":{"line":55,"column":0},"end":{"line":69,"column":2}},"25":{"start":{"line":56,"column":2},"end":{"line":56,"column":24}},"26":{"start":{"line":57,"column":2},"end":{"line":63,"column":5}},"27":{"start":{"line":58,"column":4},"end":{"line":62,"column":5}},"28":{"start":{"line":59,"column":6},"end":{"line":59,"column":28}},"29":{"start":{"line":61,"column":6},"end":{"line":61,"column":54}},"30":{"start":{"line":64,"column":2},"end":{"line":67,"column":4}},"31":{"start":{"line":68,"column":2},"end":{"line":68,"column":14}},"32":{"start":{"line":75,"column":0},"end":{"line":78,"column":2}},"33":{"start":{"line":76,"column":2},"end":{"line":76,"column":36}},"34":{"start":{"line":77,"column":2},"end":{"line":77,"column":25}},"35":{"start":{"line":85,"column":0},"end":{"line":95,"column":2}},"36":{"start":{"line":86,"column":2},"end":{"line":86,"column":16}},"37":{"start":{"line":87,"column":2},"end":{"line":87,"column":57}},"38":{"start":{"line":88,"column":2},"end":{"line":88,"column":49}},"39":{"start":{"line":89,"column":2},"end":{"line":89,"column":40}},"40":{"start":{"line":90,"column":2},"end":{"line":90,"column":25}},"41":{"start":{"line":91,"column":2},"end":{"line":93,"column":3}},"42":{"start":{"line":92,"column":4},"end":{"line":92,"column":63}},"43":{"start":{"line":94,"column":2},"end":{"line":94,"column":14}},"44":{"start":{"line":101,"column":0},"end":{"line":105,"column":2}},"45":{"start":{"line":102,"column":2},"end":{"line":102,"column":40}},"46":{"start":{"line":103,"column":2},"end":{"line":103,"column":41}},"47":{"start":{"line":104,"column":2},"end":{"line":104,"column":25}},"48":{"start":{"line":111,"column":0},"end":{"line":113,"column":2}},"49":{"start":{"line":112,"column":2},"end":{"line":112,"column":55}},"50":{"start":{"line":119,"column":0},"end":{"line":122,"column":2}},"51":{"start":{"line":120,"column":2},"end":{"line":120,"column":35}},"52":{"start":{"line":121,"column":2},"end":{"line":121,"column":31}},"53":{"start":{"line":128,"column":0},"end":{"line":136,"column":2}},"54":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"55":{"start":{"line":130,"column":4},"end":{"line":130,"column":38}},"56":{"start":{"line":132,"column":2},"end":{"line":132,"column":30}},"57":{"start":{"line":133,"column":2},"end":{"line":133,"column":39}},"58":{"start":{"line":134,"column":2},"end":{"line":134,"column":41}},"59":{"start":{"line":135,"column":2},"end":{"line":135,"column":25}},"60":{"start":{"line":141,"column":0},"end":{"line":150,"column":2}},"61":{"start":{"line":142,"column":2},"end":{"line":142,"column":24}},"62":{"start":{"line":143,"column":2},"end":{"line":145,"column":5}},"63":{"start":{"line":144,"column":4},"end":{"line":144,"column":37}},"64":{"start":{"line":146,"column":2},"end":{"line":149,"column":4}},"65":{"start":{"line":155,"column":0},"end":{"line":157,"column":2}},"66":{"start":{"line":156,"column":2},"end":{"line":156,"column":40}},"67":{"start":{"line":162,"column":0},"end":{"line":164,"column":2}},"68":{"start":{"line":163,"column":2},"end":{"line":163,"column":41}},"69":{"start":{"line":170,"column":0},"end":{"line":180,"column":2}},"70":{"start":{"line":171,"column":2},"end":{"line":173,"column":3}},"71":{"start":{"line":172,"column":4},"end":{"line":172,"column":28}},"72":{"start":{"line":174,"column":2},"end":{"line":174,"column":35}},"73":{"start":{"line":175,"column":2},"end":{"line":175,"column":46}},"74":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"75":{"start":{"line":177,"column":4},"end":{"line":177,"column":44}},"76":{"start":{"line":179,"column":2},"end":{"line":179,"column":12}},"77":{"start":{"line":186,"column":0},"end":{"line":195,"column":2}},"78":{"start":{"line":187,"column":2},"end":{"line":187,"column":18}},"79":{"start":{"line":188,"column":2},"end":{"line":190,"column":3}},"80":{"start":{"line":189,"column":4},"end":{"line":189,"column":36}},"81":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"82":{"start":{"line":192,"column":4},"end":{"line":192,"column":49}},"83":{"start":{"line":194,"column":2},"end":{"line":194,"column":16}},"84":{"start":{"line":203,"column":0},"end":{"line":218,"column":2}},"85":{"start":{"line":205,"column":2},"end":{"line":205,"column":41}},"86":{"start":{"line":207,"column":2},"end":{"line":207,"column":12}},"87":{"start":{"line":208,"column":2},"end":{"line":215,"column":3}},"88":{"start":{"line":209,"column":4},"end":{"line":213,"column":5}},"89":{"start":{"line":210,"column":6},"end":{"line":210,"column":41}},"90":{"start":{"line":211,"column":6},"end":{"line":211,"column":59}},"91":{"start":{"line":212,"column":6},"end":{"line":212,"column":40}},"92":{"start":{"line":214,"column":4},"end":{"line":214,"column":14}},"93":{"start":{"line":217,"column":2},"end":{"line":217,"column":14}},"94":{"start":{"line":224,"column":0},"end":{"line":227,"column":2}},"95":{"start":{"line":225,"column":2},"end":{"line":225,"column":34}},"96":{"start":{"line":226,"column":2},"end":{"line":226,"column":31}},"97":{"start":{"line":233,"column":0},"end":{"line":243,"column":2}},"98":{"start":{"line":235,"column":2},"end":{"line":235,"column":64}},"99":{"start":{"line":236,"column":2},"end":{"line":236,"column":62}},"100":{"start":{"line":238,"column":2},"end":{"line":240,"column":3}},"101":{"start":{"line":239,"column":4},"end":{"line":239,"column":17}},"102":{"start":{"line":242,"column":2},"end":{"line":242,"column":14}},"103":{"start":{"line":248,"column":0},"end":{"line":250,"column":2}},"104":{"start":{"line":249,"column":2},"end":{"line":249,"column":32}},"105":{"start":{"line":252,"column":0},"end":{"line":265,"column":2}},"106":{"start":{"line":259,"column":4},"end":{"line":261,"column":5}},"107":{"start":{"line":260,"column":6},"end":{"line":260,"column":32}},"108":{"start":{"line":262,"column":4},"end":{"line":262,"column":20}},"109":{"start":{"line":266,"column":0},"end":{"line":266,"column":57}},"110":{"start":{"line":267,"column":0},"end":{"line":267,"column":59}},"111":{"start":{"line":272,"column":0},"end":{"line":274,"column":2}},"112":{"start":{"line":273,"column":2},"end":{"line":273,"column":35}},"113":{"start":{"line":276,"column":0},"end":{"line":279,"column":2}},"114":{"start":{"line":281,"column":0},"end":{"line":281,"column":23}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":9},"end":{"line":42,"column":9}},{"start":{"line":42,"column":9},"end":{"line":42,"column":9}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"5":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"6":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"7":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"8":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":2},"end":{"line":238,"column":2}},{"start":{"line":238,"column":2},"end":{"line":238,"column":2}}]},"9":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":4},"end":{"line":259,"column":4}},{"start":{"line":259,"column":4},"end":{"line":259,"column":4}}]}},"code":["'use strict';","","var _ = require('lodash');","var BlockHeader = require('./blockheader');","var BN = require('../crypto/bn');","var BufferUtil = require('../util/buffer');","var BufferReader = require('../encoding/bufferreader');","var BufferWriter = require('../encoding/bufferwriter');","var Hash = require('../crypto/hash');","var Transaction = require('../transaction');","var $ = require('../util/preconditions');","","/**"," * Instantiate a Block from a Buffer, JSON object, or Object with"," * the properties of the Block"," *"," * @param {*} - A Buffer, JSON string, or Object"," * @returns {Block}"," * @constructor"," */","function Block(arg) {","  if (!(this instanceof Block)) {","    return new Block(arg);","  }","  _.extend(this, Block._from(arg));","  return this;","}","","// https://github.com/bitcoin/bitcoin/blob/b5fa132329f0377d787a4a21c1686609c2bfaece/src/primitives/block.h#L14","Block.MAX_BLOCK_SIZE = 1000000;","","/**"," * @param {*} - A Buffer, JSON string or Object"," * @returns {Object} - An object representing block data"," * @throws {TypeError} - If the argument was not recognized"," * @private"," */","Block._from = function _from(arg) {","  var info = {};","  if (BufferUtil.isBuffer(arg)) {","    info = Block._fromBufferReader(BufferReader(arg));","  } else if (_.isObject(arg)) {","    info = Block._fromObject(arg);","  } else {","    throw new TypeError('Unrecognized argument for Block');","  }","  return info;","};","","/**"," * @param {Object} - A plain JavaScript object"," * @returns {Object} - An object representing block data"," * @private"," */","Block._fromObject = function _fromObject(data) {","  var transactions = [];","  data.transactions.forEach(function(tx) {","    if (tx instanceof Transaction) {","      transactions.push(tx);","    } else {","      transactions.push(Transaction().fromObject(tx));","    }","  });","  var info = {","    header: BlockHeader.fromObject(data.header),","    transactions: transactions","  };","  return info;","};","","/**"," * @param {Object} - A plain JavaScript object"," * @returns {Block} - An instance of block"," */","Block.fromObject = function fromObject(obj) {","  var info = Block._fromObject(obj);","  return new Block(info);","};","","/**"," * @param {BufferReader} - Block data"," * @returns {Object} - An object representing the block data"," * @private"," */","Block._fromBufferReader = function _fromBufferReader(br) {","  var info = {};","  $.checkState(!br.finished(), 'No block data received');","  info.header = BlockHeader.fromBufferReader(br);","  var transactions = br.readVarintNum();","  info.transactions = [];","  for (var i = 0; i < transactions; i++) {","    info.transactions.push(Transaction().fromBufferReader(br));","  }","  return info;","};","","/**"," * @param {BufferReader} - A buffer reader of the block"," * @returns {Block} - An instance of block"," */","Block.fromBufferReader = function fromBufferReader(br) {","  $.checkArgument(br, 'br is required');","  var info = Block._fromBufferReader(br);","  return new Block(info);","};","","/**"," * @param {Buffer} - A buffer of the block"," * @returns {Block} - An instance of block"," */","Block.fromBuffer = function fromBuffer(buf) {","  return Block.fromBufferReader(new BufferReader(buf));","};","","/**"," * @param {string} - str - A hex encoded string of the block"," * @returns {Block} - A hex encoded string of the block"," */","Block.fromString = function fromString(str) {","  var buf = new Buffer(str, 'hex');","  return Block.fromBuffer(buf);","};","","/**"," * @param {Binary} - Raw block binary data or buffer"," * @returns {Block} - An instance of block"," */","Block.fromRawBlock = function fromRawBlock(data) {","  if (!BufferUtil.isBuffer(data)) {","    data = new Buffer(data, 'binary');","  }","  var br = BufferReader(data);","  br.pos = Block.Values.START_OF_BLOCK;","  var info = Block._fromBufferReader(br);","  return new Block(info);","};","","/**"," * @returns {Object} - A plain object with the block properties"," */","Block.prototype.toObject = Block.prototype.toJSON = function toObject() {","  var transactions = [];","  this.transactions.forEach(function(tx) {","    transactions.push(tx.toObject());","  });","  return {","    header: this.header.toObject(),","    transactions: transactions","  };","};","","/**"," * @returns {Buffer} - A buffer of the block"," */","Block.prototype.toBuffer = function toBuffer() {","  return this.toBufferWriter().concat();","};","","/**"," * @returns {string} - A hex encoded string of the block"," */","Block.prototype.toString = function toString() {","  return this.toBuffer().toString('hex');","};","","/**"," * @param {BufferWriter} - An existing instance of BufferWriter"," * @returns {BufferWriter} - An instance of BufferWriter representation of the Block"," */","Block.prototype.toBufferWriter = function toBufferWriter(bw) {","  if (!bw) {","    bw = new BufferWriter();","  }","  bw.write(this.header.toBuffer());","  bw.writeVarintNum(this.transactions.length);","  for (var i = 0; i < this.transactions.length; i++) {","    this.transactions[i].toBufferWriter(bw);","  }","  return bw;","};","","/**"," * Will iterate through each transaction and return an array of hashes"," * @returns {Array} - An array with transaction hashes"," */","Block.prototype.getTransactionHashes = function getTransactionHashes() {","  var hashes = [];","  if (this.transactions.length === 0) {","    return [Block.Values.NULL_HASH];","  }","  for (var t = 0; t < this.transactions.length; t++) {","    hashes.push(this.transactions[t]._getHash());","  }","  return hashes;","};","","/**"," * Will build a merkle tree of all the transactions, ultimately arriving at"," * a single point, the merkle root."," * @link https://en.bitcoin.it/wiki/Protocol_specification#Merkle_Trees"," * @returns {Array} - An array with each level of the tree after the other."," */","Block.prototype.getMerkleTree = function getMerkleTree() {","","  var tree = this.getTransactionHashes();","","  var j = 0;","  for (var size = this.transactions.length; size > 1; size = Math.floor((size + 1) / 2)) {","    for (var i = 0; i < size; i += 2) {","      var i2 = Math.min(i + 1, size - 1);","      var buf = Buffer.concat([tree[j + i], tree[j + i2]]);","      tree.push(Hash.sha256sha256(buf));","    }","    j += size;","  }","","  return tree;","};","","/**"," * Calculates the merkleRoot from the transactions."," * @returns {Buffer} - A buffer of the merkle root hash"," */","Block.prototype.getMerkleRoot = function getMerkleRoot() {","  var tree = this.getMerkleTree();","  return tree[tree.length - 1];","};","","/**"," * Verifies that the transactions in the block match the header merkle root"," * @returns {Boolean} - If the merkle roots match"," */","Block.prototype.validMerkleRoot = function validMerkleRoot() {","","  var h = new BN(this.header.merkleRoot.toString('hex'), 'hex');","  var c = new BN(this.getMerkleRoot().toString('hex'), 'hex');","","  if (h.cmp(c) !== 0) {","    return false;","  }","","  return true;","};","","/**"," * @returns {Buffer} - The little endian hash buffer of the header"," */","Block.prototype._getHash = function() {","  return this.header._getHash();","};","","var idProperty = {","  configurable: false,","  enumerable: true,","  /**","   * @returns {string} - The big endian hash buffer of the header","   */","  get: function() {","    if (!this._id) {","      this._id = this.header.id;","    }","    return this._id;","  },","  set: _.noop","};","Object.defineProperty(Block.prototype, 'id', idProperty);","Object.defineProperty(Block.prototype, 'hash', idProperty);","","/**"," * @returns {string} - A string formatted for the console"," */","Block.prototype.inspect = function inspect() {","  return '<Block ' + this.id + '>';","};","","Block.Values = {","  START_OF_BLOCK: 8, // Start of block in raw block data","  NULL_HASH: new Buffer('0000000000000000000000000000000000000000000000000000000000000000', 'hex')","};","","module.exports = Block;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"21":1,"22":0,"23":0,"25":0,"26":0,"30":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"47":0,"55":1,"56":0,"57":0,"58":0,"59":0,"61":0,"64":0,"68":0,"75":1,"76":0,"77":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"94":0,"101":1,"102":0,"103":0,"104":0,"111":1,"112":0,"119":1,"120":0,"121":0,"128":1,"129":0,"130":0,"132":0,"133":0,"134":0,"135":0,"141":1,"142":0,"143":0,"144":0,"146":0,"155":1,"156":0,"162":1,"163":0,"170":1,"171":0,"172":0,"174":0,"175":0,"176":0,"177":0,"179":0,"186":1,"187":0,"188":0,"189":0,"191":0,"192":0,"194":0,"203":1,"205":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"214":0,"217":0,"224":1,"225":0,"226":0,"233":1,"235":0,"236":0,"238":0,"239":0,"242":0,"248":1,"249":0,"252":1,"259":12,"260":12,"262":0,"266":1,"267":1,"272":1,"273":0,"276":1,"281":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/block/blockheader.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/block/blockheader.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":1,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":1,"71":0,"72":1,"73":12,"74":1,"75":0,"76":1,"77":12,"78":12,"79":12,"80":12,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":12,"102":0,"103":1,"104":12,"105":12,"106":0,"107":1,"108":1,"109":1,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":1,"123":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[12,0],"9":[0,0],"10":[12,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":12,"12":0,"13":12,"14":0,"15":0,"16":12,"17":12,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"BlockHeader","line":22,"loc":{"start":{"line":22,"column":18},"end":{"line":22,"column":44}}},"2":{"name":"_from","line":51,"loc":{"start":{"line":51,"column":20},"end":{"line":51,"column":40}}},"3":{"name":"_fromObject","line":68,"loc":{"start":{"line":68,"column":26},"end":{"line":68,"column":53}}},"4":{"name":"fromObject","line":95,"loc":{"start":{"line":95,"column":25},"end":{"line":95,"column":50}}},"5":{"name":"fromRawBlock","line":104,"loc":{"start":{"line":104,"column":27},"end":{"line":104,"column":55}}},"6":{"name":"fromBuffer","line":118,"loc":{"start":{"line":118,"column":25},"end":{"line":118,"column":50}}},"7":{"name":"fromString","line":127,"loc":{"start":{"line":127,"column":25},"end":{"line":127,"column":50}}},"8":{"name":"_fromBufferReader","line":137,"loc":{"start":{"line":137,"column":32},"end":{"line":137,"column":63}}},"9":{"name":"fromBufferReader","line":152,"loc":{"start":{"line":152,"column":31},"end":{"line":152,"column":61}}},"10":{"name":"toObject","line":160,"loc":{"start":{"line":160,"column":64},"end":{"line":160,"column":84}}},"11":{"name":"toBuffer","line":175,"loc":{"start":{"line":175,"column":33},"end":{"line":175,"column":53}}},"12":{"name":"toString","line":182,"loc":{"start":{"line":182,"column":33},"end":{"line":182,"column":53}}},"13":{"name":"toBufferWriter","line":190,"loc":{"start":{"line":190,"column":39},"end":{"line":190,"column":67}}},"14":{"name":"getTargetDifficulty","line":208,"loc":{"start":{"line":208,"column":44},"end":{"line":208,"column":79}}},"15":{"name":"getDifficulty","line":223,"loc":{"start":{"line":223,"column":38},"end":{"line":223,"column":63}}},"16":{"name":"hash","line":237,"loc":{"start":{"line":237,"column":33},"end":{"line":237,"column":49}}},"17":{"name":"(anonymous_17)","line":248,"loc":{"start":{"line":248,"column":7},"end":{"line":248,"column":18}}},"18":{"name":"validTimestamp","line":262,"loc":{"start":{"line":262,"column":39},"end":{"line":262,"column":65}}},"19":{"name":"validProofOfWork","line":273,"loc":{"start":{"line":273,"column":41},"end":{"line":273,"column":69}}},"20":{"name":"inspect","line":286,"loc":{"start":{"line":286,"column":32},"end":{"line":286,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":55}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"10":{"start":{"line":22,"column":0},"end":{"line":43,"column":2}},"11":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":32}},"13":{"start":{"line":26,"column":2},"end":{"line":26,"column":36}},"14":{"start":{"line":27,"column":2},"end":{"line":27,"column":30}},"15":{"start":{"line":28,"column":2},"end":{"line":28,"column":32}},"16":{"start":{"line":29,"column":2},"end":{"line":29,"column":36}},"17":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"18":{"start":{"line":31,"column":2},"end":{"line":31,"column":29}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"20":{"start":{"line":33,"column":2},"end":{"line":33,"column":26}},"21":{"start":{"line":35,"column":2},"end":{"line":40,"column":3}},"22":{"start":{"line":36,"column":4},"end":{"line":39,"column":6}},"23":{"start":{"line":42,"column":2},"end":{"line":42,"column":14}},"24":{"start":{"line":51,"column":0},"end":{"line":61,"column":2}},"25":{"start":{"line":52,"column":2},"end":{"line":52,"column":16}},"26":{"start":{"line":53,"column":2},"end":{"line":59,"column":3}},"27":{"start":{"line":54,"column":4},"end":{"line":54,"column":60}},"28":{"start":{"line":55,"column":9},"end":{"line":59,"column":3}},"29":{"start":{"line":56,"column":4},"end":{"line":56,"column":40}},"30":{"start":{"line":58,"column":4},"end":{"line":58,"column":65}},"31":{"start":{"line":60,"column":2},"end":{"line":60,"column":14}},"32":{"start":{"line":68,"column":0},"end":{"line":89,"column":2}},"33":{"start":{"line":69,"column":2},"end":{"line":69,"column":44}},"34":{"start":{"line":70,"column":2},"end":{"line":70,"column":31}},"35":{"start":{"line":71,"column":2},"end":{"line":71,"column":35}},"36":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"37":{"start":{"line":73,"column":4},"end":{"line":73,"column":68}},"38":{"start":{"line":75,"column":2},"end":{"line":77,"column":3}},"39":{"start":{"line":76,"column":4},"end":{"line":76,"column":72}},"40":{"start":{"line":78,"column":2},"end":{"line":87,"column":4}},"41":{"start":{"line":88,"column":2},"end":{"line":88,"column":14}},"42":{"start":{"line":95,"column":0},"end":{"line":98,"column":2}},"43":{"start":{"line":96,"column":2},"end":{"line":96,"column":42}},"44":{"start":{"line":97,"column":2},"end":{"line":97,"column":31}},"45":{"start":{"line":104,"column":0},"end":{"line":112,"column":2}},"46":{"start":{"line":105,"column":2},"end":{"line":107,"column":3}},"47":{"start":{"line":106,"column":4},"end":{"line":106,"column":38}},"48":{"start":{"line":108,"column":2},"end":{"line":108,"column":30}},"49":{"start":{"line":109,"column":2},"end":{"line":109,"column":49}},"50":{"start":{"line":110,"column":2},"end":{"line":110,"column":47}},"51":{"start":{"line":111,"column":2},"end":{"line":111,"column":31}},"52":{"start":{"line":118,"column":0},"end":{"line":121,"column":2}},"53":{"start":{"line":119,"column":2},"end":{"line":119,"column":62}},"54":{"start":{"line":120,"column":2},"end":{"line":120,"column":31}},"55":{"start":{"line":127,"column":0},"end":{"line":130,"column":2}},"56":{"start":{"line":128,"column":2},"end":{"line":128,"column":35}},"57":{"start":{"line":129,"column":2},"end":{"line":129,"column":37}},"58":{"start":{"line":137,"column":0},"end":{"line":146,"column":2}},"59":{"start":{"line":138,"column":2},"end":{"line":138,"column":16}},"60":{"start":{"line":139,"column":2},"end":{"line":139,"column":35}},"61":{"start":{"line":140,"column":2},"end":{"line":140,"column":30}},"62":{"start":{"line":141,"column":2},"end":{"line":141,"column":32}},"63":{"start":{"line":142,"column":2},"end":{"line":142,"column":32}},"64":{"start":{"line":143,"column":2},"end":{"line":143,"column":32}},"65":{"start":{"line":144,"column":2},"end":{"line":144,"column":33}},"66":{"start":{"line":145,"column":2},"end":{"line":145,"column":14}},"67":{"start":{"line":152,"column":0},"end":{"line":155,"column":2}},"68":{"start":{"line":153,"column":2},"end":{"line":153,"column":47}},"69":{"start":{"line":154,"column":2},"end":{"line":154,"column":31}},"70":{"start":{"line":160,"column":0},"end":{"line":170,"column":2}},"71":{"start":{"line":161,"column":2},"end":{"line":169,"column":4}},"72":{"start":{"line":175,"column":0},"end":{"line":177,"column":2}},"73":{"start":{"line":176,"column":2},"end":{"line":176,"column":40}},"74":{"start":{"line":182,"column":0},"end":{"line":184,"column":2}},"75":{"start":{"line":183,"column":2},"end":{"line":183,"column":41}},"76":{"start":{"line":190,"column":0},"end":{"line":201,"column":2}},"77":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"78":{"start":{"line":192,"column":4},"end":{"line":192,"column":28}},"79":{"start":{"line":194,"column":2},"end":{"line":194,"column":33}},"80":{"start":{"line":195,"column":2},"end":{"line":195,"column":26}},"81":{"start":{"line":196,"column":2},"end":{"line":196,"column":28}},"82":{"start":{"line":197,"column":2},"end":{"line":197,"column":30}},"83":{"start":{"line":198,"column":2},"end":{"line":198,"column":30}},"84":{"start":{"line":199,"column":2},"end":{"line":199,"column":31}},"85":{"start":{"line":200,"column":2},"end":{"line":200,"column":12}},"86":{"start":{"line":208,"column":0},"end":{"line":217,"column":2}},"87":{"start":{"line":209,"column":2},"end":{"line":209,"column":27}},"88":{"start":{"line":211,"column":2},"end":{"line":211,"column":39}},"89":{"start":{"line":212,"column":2},"end":{"line":212,"column":36}},"90":{"start":{"line":213,"column":2},"end":{"line":215,"column":3}},"91":{"start":{"line":214,"column":4},"end":{"line":214,"column":35}},"92":{"start":{"line":216,"column":2},"end":{"line":216,"column":16}},"93":{"start":{"line":223,"column":0},"end":{"line":232,"column":2}},"94":{"start":{"line":224,"column":2},"end":{"line":224,"column":96}},"95":{"start":{"line":225,"column":2},"end":{"line":225,"column":51}},"96":{"start":{"line":227,"column":2},"end":{"line":227,"column":79}},"97":{"start":{"line":228,"column":2},"end":{"line":228,"column":47}},"98":{"start":{"line":229,"column":2},"end":{"line":229,"column":102}},"99":{"start":{"line":231,"column":2},"end":{"line":231,"column":38}},"100":{"start":{"line":237,"column":0},"end":{"line":240,"column":2}},"101":{"start":{"line":238,"column":2},"end":{"line":238,"column":28}},"102":{"start":{"line":239,"column":2},"end":{"line":239,"column":32}},"103":{"start":{"line":242,"column":0},"end":{"line":255,"column":2}},"104":{"start":{"line":249,"column":4},"end":{"line":251,"column":5}},"105":{"start":{"line":250,"column":6},"end":{"line":250,"column":77}},"106":{"start":{"line":252,"column":4},"end":{"line":252,"column":20}},"107":{"start":{"line":256,"column":0},"end":{"line":256,"column":63}},"108":{"start":{"line":257,"column":0},"end":{"line":257,"column":65}},"109":{"start":{"line":262,"column":0},"end":{"line":268,"column":2}},"110":{"start":{"line":263,"column":2},"end":{"line":263,"column":60}},"111":{"start":{"line":264,"column":2},"end":{"line":266,"column":3}},"112":{"start":{"line":265,"column":4},"end":{"line":265,"column":17}},"113":{"start":{"line":267,"column":2},"end":{"line":267,"column":14}},"114":{"start":{"line":273,"column":0},"end":{"line":281,"column":2}},"115":{"start":{"line":274,"column":2},"end":{"line":274,"column":35}},"116":{"start":{"line":275,"column":2},"end":{"line":275,"column":42}},"117":{"start":{"line":277,"column":2},"end":{"line":279,"column":3}},"118":{"start":{"line":278,"column":4},"end":{"line":278,"column":17}},"119":{"start":{"line":280,"column":2},"end":{"line":280,"column":14}},"120":{"start":{"line":286,"column":0},"end":{"line":288,"column":2}},"121":{"start":{"line":287,"column":2},"end":{"line":287,"column":41}},"122":{"start":{"line":290,"column":0},"end":{"line":294,"column":2}},"123":{"start":{"line":296,"column":0},"end":{"line":296,"column":29}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"4":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":9}},{"start":{"line":55,"column":9},"end":{"line":55,"column":9}}]},"5":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"7":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"8":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"9":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":9},"end":{"line":209,"column":13}},{"start":{"line":209,"column":17},"end":{"line":209,"column":26}}]},"10":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":249,"column":4}},{"start":{"line":249,"column":4},"end":{"line":249,"column":4}}]},"11":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"12":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","var BN = require('../crypto/bn');","var BufferUtil = require('../util/buffer');","var BufferReader = require('../encoding/bufferreader');","var BufferWriter = require('../encoding/bufferwriter');","var Hash = require('../crypto/hash');","var JSUtil = require('../util/js');","var $ = require('../util/preconditions');","","var GENESIS_BITS = 0x1d00ffff;","","/**"," * Instantiate a BlockHeader from a Buffer, JSON object, or Object with"," * the properties of the BlockHeader"," *"," * @param {*} - A Buffer, JSON string, or Object"," * @returns {BlockHeader} - An instance of block header"," * @constructor"," */","var BlockHeader = function BlockHeader(arg) {","  if (!(this instanceof BlockHeader)) {","    return new BlockHeader(arg);","  }","  var info = BlockHeader._from(arg);","  this.version = info.version;","  this.prevHash = info.prevHash;","  this.merkleRoot = info.merkleRoot;","  this.time = info.time;","  this.timestamp = info.time;","  this.bits = info.bits;","  this.nonce = info.nonce;","","  if (info.hash) {","    $.checkState(","      this.hash === info.hash,","      'Argument object hash property does not match block hash.'","    );","  }","","  return this;","};","","/**"," * @param {*} - A Buffer, JSON string or Object"," * @returns {Object} - An object representing block header data"," * @throws {TypeError} - If the argument was not recognized"," * @private"," */","BlockHeader._from = function _from(arg) {","  var info = {};","  if (BufferUtil.isBuffer(arg)) {","    info = BlockHeader._fromBufferReader(BufferReader(arg));","  } else if (_.isObject(arg)) {","    info = BlockHeader._fromObject(arg);","  } else {","    throw new TypeError('Unrecognized argument for BlockHeader');","  }","  return info;","};","","/**"," * @param {Object} - A JSON string"," * @returns {Object} - An object representing block header data"," * @private"," */","BlockHeader._fromObject = function _fromObject(data) {","  $.checkArgument(data, 'data is required');","  var prevHash = data.prevHash;","  var merkleRoot = data.merkleRoot;","  if (_.isString(data.prevHash)) {","    prevHash = BufferUtil.reverse(new Buffer(data.prevHash, 'hex'));","  }","  if (_.isString(data.merkleRoot)) {","    merkleRoot = BufferUtil.reverse(new Buffer(data.merkleRoot, 'hex'));","  }","  var info = {","    hash: data.hash,","    version: data.version,","    prevHash: prevHash,","    merkleRoot: merkleRoot,","    time: data.time,","    timestamp: data.time,","    bits: data.bits,","    nonce: data.nonce","  };","  return info;","};","","/**"," * @param {Object} - A plain JavaScript object"," * @returns {BlockHeader} - An instance of block header"," */","BlockHeader.fromObject = function fromObject(obj) {","  var info = BlockHeader._fromObject(obj);","  return new BlockHeader(info);","};","","/**"," * @param {Binary} - Raw block binary data or buffer"," * @returns {BlockHeader} - An instance of block header"," */","BlockHeader.fromRawBlock = function fromRawBlock(data) {","  if (!BufferUtil.isBuffer(data)) {","    data = new Buffer(data, 'binary');","  }","  var br = BufferReader(data);","  br.pos = BlockHeader.Constants.START_OF_HEADER;","  var info = BlockHeader._fromBufferReader(br);","  return new BlockHeader(info);","};","","/**"," * @param {Buffer} - A buffer of the block header"," * @returns {BlockHeader} - An instance of block header"," */","BlockHeader.fromBuffer = function fromBuffer(buf) {","  var info = BlockHeader._fromBufferReader(BufferReader(buf));","  return new BlockHeader(info);","};","","/**"," * @param {string} - A hex encoded buffer of the block header"," * @returns {BlockHeader} - An instance of block header"," */","BlockHeader.fromString = function fromString(str) {","  var buf = new Buffer(str, 'hex');","  return BlockHeader.fromBuffer(buf);","};","","/**"," * @param {BufferReader} - A BufferReader of the block header"," * @returns {Object} - An object representing block header data"," * @private"," */","BlockHeader._fromBufferReader = function _fromBufferReader(br) {","  var info = {};","  info.version = br.readUInt32LE();","  info.prevHash = br.read(32);","  info.merkleRoot = br.read(32);","  info.time = br.readUInt32LE();","  info.bits = br.readUInt32LE();","  info.nonce = br.readUInt32LE();","  return info;","};","","/**"," * @param {BufferReader} - A BufferReader of the block header"," * @returns {BlockHeader} - An instance of block header"," */","BlockHeader.fromBufferReader = function fromBufferReader(br) {","  var info = BlockHeader._fromBufferReader(br);","  return new BlockHeader(info);","};","","/**"," * @returns {Object} - A plain object of the BlockHeader"," */","BlockHeader.prototype.toObject = BlockHeader.prototype.toJSON = function toObject() {","  return {","    hash: this.hash,","    version: this.version,","    prevHash: BufferUtil.reverse(this.prevHash).toString('hex'),","    merkleRoot: BufferUtil.reverse(this.merkleRoot).toString('hex'),","    time: this.time,","    bits: this.bits,","    nonce: this.nonce","  };","};","","/**"," * @returns {Buffer} - A Buffer of the BlockHeader"," */","BlockHeader.prototype.toBuffer = function toBuffer() {","  return this.toBufferWriter().concat();","};","","/**"," * @returns {string} - A hex encoded string of the BlockHeader"," */","BlockHeader.prototype.toString = function toString() {","  return this.toBuffer().toString('hex');","};","","/**"," * @param {BufferWriter} - An existing instance BufferWriter"," * @returns {BufferWriter} - An instance of BufferWriter representation of the BlockHeader"," */","BlockHeader.prototype.toBufferWriter = function toBufferWriter(bw) {","  if (!bw) {","    bw = new BufferWriter();","  }","  bw.writeUInt32LE(this.version);","  bw.write(this.prevHash);","  bw.write(this.merkleRoot);","  bw.writeUInt32LE(this.time);","  bw.writeUInt32LE(this.bits);","  bw.writeUInt32LE(this.nonce);","  return bw;","};","","/**"," * Returns the target difficulty for this block"," * @param {Number} bits"," * @returns {BN} An instance of BN with the decoded difficulty bits"," */","BlockHeader.prototype.getTargetDifficulty = function getTargetDifficulty(bits) {","  bits = bits || this.bits;","","  var target = new BN(bits & 0xffffff);","  var mov = 8 * ((bits >>> 24) - 3);","  while (mov-- > 0) {","    target = target.mul(new BN(2));","  }","  return target;","};","","/**"," * @link https://en.bitcoin.it/wiki/Difficulty"," * @return {Number}"," */","BlockHeader.prototype.getDifficulty = function getDifficulty() {","  var difficulty1TargetBN = this.getTargetDifficulty(GENESIS_BITS).mul(new BN(Math.pow(10, 8)));","  var currentTargetBN = this.getTargetDifficulty();","","  var difficultyString = difficulty1TargetBN.div(currentTargetBN).toString(10);","  var decimalPos = difficultyString.length - 8;","  difficultyString = difficultyString.slice(0, decimalPos) + '.' + difficultyString.slice(decimalPos);","","  return parseFloat(difficultyString);","};","","/**"," * @returns {Buffer} - The little endian hash buffer of the header"," */","BlockHeader.prototype._getHash = function hash() {","  var buf = this.toBuffer();","  return Hash.sha256sha256(buf);","};","","var idProperty = {","  configurable: false,","  enumerable: true,","  /**","   * @returns {string} - The big endian hash buffer of the header","   */","  get: function() {","    if (!this._id) {","      this._id = BufferReader(this._getHash()).readReverse().toString('hex');","    }","    return this._id;","  },","  set: _.noop","};","Object.defineProperty(BlockHeader.prototype, 'id', idProperty);","Object.defineProperty(BlockHeader.prototype, 'hash', idProperty);","","/**"," * @returns {Boolean} - If timestamp is not too far in the future"," */","BlockHeader.prototype.validTimestamp = function validTimestamp() {","  var currentTime = Math.round(new Date().getTime() / 1000);","  if (this.time > currentTime + BlockHeader.Constants.MAX_TIME_OFFSET) {","    return false;","  }","  return true;","};","","/**"," * @returns {Boolean} - If the proof-of-work hash satisfies the target difficulty"," */","BlockHeader.prototype.validProofOfWork = function validProofOfWork() {","  var pow = new BN(this.id, 'hex');","  var target = this.getTargetDifficulty();","","  if (pow.cmp(target) > 0) {","    return false;","  }","  return true;","};","","/**"," * @returns {string} - A string formatted for the console"," */","BlockHeader.prototype.inspect = function inspect() {","  return '<BlockHeader ' + this.id + '>';","};","","BlockHeader.Constants = {","  START_OF_HEADER: 8, // Start buffer position in raw block data","  MAX_TIME_OFFSET: 2 * 60 * 60, // The max a timestamp can be in the future","  LARGEST_HASH: new BN('10000000000000000000000000000000000000000000000000000000000000000', 'hex')","};","","module.exports = BlockHeader;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"22":1,"23":0,"24":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"42":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"60":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"75":0,"76":0,"78":0,"88":0,"95":1,"96":0,"97":0,"104":1,"105":0,"106":0,"108":0,"109":0,"110":0,"111":0,"118":1,"119":0,"120":0,"127":1,"128":0,"129":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"152":1,"153":0,"154":0,"160":1,"161":0,"175":1,"176":12,"182":1,"183":0,"190":1,"191":12,"192":12,"194":12,"195":12,"196":0,"197":0,"198":0,"199":0,"200":0,"208":1,"209":0,"211":0,"212":0,"213":0,"214":0,"216":0,"223":1,"224":0,"225":0,"227":0,"228":0,"229":0,"231":0,"237":1,"238":12,"239":0,"242":1,"249":12,"250":12,"252":0,"256":1,"257":1,"262":1,"263":0,"264":0,"265":0,"267":0,"273":1,"274":0,"275":0,"277":0,"278":0,"280":0,"286":1,"287":0,"290":1,"296":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}}},"branchMap":{},"code":["module.exports = require('./transaction');","","module.exports.Input = require('./input');","module.exports.Output = require('./output');","module.exports.UnspentOutput = require('./unspentoutput');","module.exports.Signature = require('./signature');","module.exports.Sighash = require('./sighash');",""],"l":{"1":1,"3":1,"4":1,"5":1,"6":1,"7":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/transaction.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/transaction.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":0,"55":0,"56":1,"57":16,"58":1,"59":1,"60":1,"61":8,"62":1,"63":1,"64":8,"65":1,"66":1,"67":16,"68":1,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":1,"128":16,"129":16,"130":1,"131":16,"132":16,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1,"234":0,"235":0,"236":0,"237":0,"238":0,"239":1,"240":0,"241":1,"242":0,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":1,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":1,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":1,"287":0,"288":0,"289":0,"290":0,"291":0,"292":1,"293":0,"294":0,"295":1,"296":0,"297":0,"298":0,"299":0,"300":1,"301":0,"302":0,"303":0,"304":0,"305":1,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":1,"339":0,"340":0,"341":1,"342":8,"343":1,"344":1,"345":1,"346":0,"347":8,"348":1,"349":8,"350":1,"351":1,"352":1,"353":0,"354":0,"355":0,"356":8,"357":1,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":1,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":1,"379":0,"380":0,"381":0,"382":1,"383":0,"384":1,"385":0,"386":0,"387":1,"388":0,"389":0,"390":0,"391":0,"392":1,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":1,"400":0,"401":0,"402":0,"403":1,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":1,"419":0,"420":1,"421":0,"422":0,"423":1,"424":0,"425":0,"426":0,"427":1,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":1,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":1,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":1,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":1,"469":0,"470":0,"471":1,"472":0,"473":0,"474":0,"475":0,"476":0,"477":1,"478":0,"479":0,"480":0,"481":0,"482":1,"483":0,"484":1,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":1,"518":0,"519":1,"520":0,"521":0,"522":0,"523":0,"524":0,"525":1,"526":0,"527":0,"528":0,"529":0,"530":0,"531":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0,0],"66":[0,0],"67":[0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[1,7],"72":[1,7],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0]},"f":{"1":0,"2":0,"3":16,"4":8,"5":8,"6":16,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":16,"18":16,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":8,"55":0,"56":8,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0},"fnMap":{"1":{"name":"Transaction","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":33}}},"2":{"name":"(anonymous_2)","line":96,"loc":{"start":{"line":96,"column":26},"end":{"line":96,"column":48}}},"3":{"name":"(anonymous_3)","line":104,"loc":{"start":{"line":104,"column":7},"end":{"line":104,"column":18}}},"4":{"name":"(anonymous_4)","line":114,"loc":{"start":{"line":114,"column":7},"end":{"line":114,"column":18}}},"5":{"name":"(anonymous_5)","line":119,"loc":{"start":{"line":119,"column":17},"end":{"line":119,"column":28}}},"6":{"name":"(anonymous_6)","line":128,"loc":{"start":{"line":128,"column":33},"end":{"line":128,"column":44}}},"7":{"name":"(anonymous_7)","line":146,"loc":{"start":{"line":146,"column":34},"end":{"line":146,"column":51}}},"8":{"name":"(anonymous_8)","line":154,"loc":{"start":{"line":154,"column":76},"end":{"line":154,"column":87}}},"9":{"name":"(anonymous_9)","line":165,"loc":{"start":{"line":165,"column":41},"end":{"line":165,"column":56}}},"10":{"name":"(anonymous_10)","line":175,"loc":{"start":{"line":175,"column":40},"end":{"line":175,"column":51}}},"11":{"name":"(anonymous_11)","line":192,"loc":{"start":{"line":192,"column":46},"end":{"line":192,"column":61}}},"12":{"name":"(anonymous_12)","line":214,"loc":{"start":{"line":214,"column":37},"end":{"line":214,"column":61}}},"13":{"name":"(anonymous_13)","line":246,"loc":{"start":{"line":246,"column":39},"end":{"line":246,"column":50}}},"14":{"name":"(anonymous_14)","line":250,"loc":{"start":{"line":250,"column":40},"end":{"line":250,"column":55}}},"15":{"name":"(anonymous_15)","line":263,"loc":{"start":{"line":263,"column":45},"end":{"line":263,"column":60}}},"16":{"name":"(anonymous_16)","line":272,"loc":{"start":{"line":272,"column":32},"end":{"line":272,"column":43}}},"17":{"name":"(anonymous_17)","line":276,"loc":{"start":{"line":276,"column":33},"end":{"line":276,"column":44}}},"18":{"name":"(anonymous_18)","line":281,"loc":{"start":{"line":281,"column":39},"end":{"line":281,"column":56}}},"19":{"name":"(anonymous_19)","line":284,"loc":{"start":{"line":284,"column":22},"end":{"line":284,"column":38}}},"20":{"name":"(anonymous_20)","line":288,"loc":{"start":{"line":288,"column":23},"end":{"line":288,"column":40}}},"21":{"name":"(anonymous_21)","line":295,"loc":{"start":{"line":295,"column":35},"end":{"line":295,"column":52}}},"22":{"name":"(anonymous_22)","line":300,"loc":{"start":{"line":300,"column":41},"end":{"line":300,"column":58}}},"23":{"name":"toObject","line":318,"loc":{"start":{"line":318,"column":64},"end":{"line":318,"column":84}}},"24":{"name":"(anonymous_24)","line":320,"loc":{"start":{"line":320,"column":22},"end":{"line":320,"column":38}}},"25":{"name":"(anonymous_25)","line":324,"loc":{"start":{"line":324,"column":23},"end":{"line":324,"column":40}}},"26":{"name":"fromObject","line":346,"loc":{"start":{"line":346,"column":35},"end":{"line":346,"column":60}}},"27":{"name":"(anonymous_27)","line":356,"loc":{"start":{"line":356,"column":29},"end":{"line":356,"column":45}}},"28":{"name":"(anonymous_28)","line":376,"loc":{"start":{"line":376,"column":30},"end":{"line":376,"column":47}}},"29":{"name":"(anonymous_29)","line":394,"loc":{"start":{"line":394,"column":42},"end":{"line":394,"column":56}}},"30":{"name":"(anonymous_30)","line":413,"loc":{"start":{"line":413,"column":38},"end":{"line":413,"column":53}}},"31":{"name":"(anonymous_31)","line":439,"loc":{"start":{"line":439,"column":45},"end":{"line":439,"column":62}}},"32":{"name":"(anonymous_32)","line":466,"loc":{"start":{"line":466,"column":36},"end":{"line":466,"column":47}}},"33":{"name":"(anonymous_33)","line":476,"loc":{"start":{"line":476,"column":35},"end":{"line":476,"column":52}}},"34":{"name":"(anonymous_34)","line":480,"loc":{"start":{"line":480,"column":40},"end":{"line":480,"column":51}}},"35":{"name":"(anonymous_35)","line":536,"loc":{"start":{"line":536,"column":29},"end":{"line":536,"column":64}}},"36":{"name":"(anonymous_36)","line":539,"loc":{"start":{"line":539,"column":17},"end":{"line":539,"column":32}}},"37":{"name":"(anonymous_37)","line":544,"loc":{"start":{"line":544,"column":34},"end":{"line":544,"column":50}}},"38":{"name":"(anonymous_38)","line":559,"loc":{"start":{"line":559,"column":37},"end":{"line":559,"column":52}}},"39":{"name":"(anonymous_39)","line":580,"loc":{"start":{"line":580,"column":42},"end":{"line":580,"column":77}}},"40":{"name":"(anonymous_40)","line":613,"loc":{"start":{"line":613,"column":33},"end":{"line":613,"column":73}}},"41":{"name":"(anonymous_41)","line":636,"loc":{"start":{"line":636,"column":42},"end":{"line":636,"column":58}}},"42":{"name":"(anonymous_42)","line":649,"loc":{"start":{"line":649,"column":39},"end":{"line":649,"column":50}}},"43":{"name":"(anonymous_43)","line":650,"loc":{"start":{"line":650,"column":31},"end":{"line":650,"column":47}}},"44":{"name":"(anonymous_44)","line":663,"loc":{"start":{"line":663,"column":28},"end":{"line":663,"column":45}}},"45":{"name":"(anonymous_45)","line":678,"loc":{"start":{"line":678,"column":33},"end":{"line":678,"column":50}}},"46":{"name":"(anonymous_46)","line":696,"loc":{"start":{"line":696,"column":31},"end":{"line":696,"column":49}}},"47":{"name":"(anonymous_47)","line":707,"loc":{"start":{"line":707,"column":40},"end":{"line":707,"column":51}}},"48":{"name":"(anonymous_48)","line":730,"loc":{"start":{"line":730,"column":27},"end":{"line":730,"column":53}}},"49":{"name":"(anonymous_49)","line":733,"loc":{"start":{"line":733,"column":20},"end":{"line":733,"column":33}}},"50":{"name":"(anonymous_50)","line":760,"loc":{"start":{"line":760,"column":32},"end":{"line":760,"column":48}}},"51":{"name":"(anonymous_51)","line":775,"loc":{"start":{"line":775,"column":34},"end":{"line":775,"column":51}}},"52":{"name":"(anonymous_52)","line":788,"loc":{"start":{"line":788,"column":37},"end":{"line":788,"column":48}}},"53":{"name":"(anonymous_53)","line":798,"loc":{"start":{"line":798,"column":35},"end":{"line":798,"column":52}}},"54":{"name":"(anonymous_54)","line":809,"loc":{"start":{"line":809,"column":41},"end":{"line":809,"column":52}}},"55":{"name":"(anonymous_55)","line":813,"loc":{"start":{"line":813,"column":25},"end":{"line":813,"column":42}}},"56":{"name":"(anonymous_56)","line":826,"loc":{"start":{"line":826,"column":40},"end":{"line":826,"column":51}}},"57":{"name":"(anonymous_57)","line":830,"loc":{"start":{"line":830,"column":24},"end":{"line":830,"column":40}}},"58":{"name":"(anonymous_58)","line":840,"loc":{"start":{"line":840,"column":44},"end":{"line":840,"column":55}}},"59":{"name":"(anonymous_59)","line":879,"loc":{"start":{"line":879,"column":31},"end":{"line":879,"column":42}}},"60":{"name":"(anonymous_60)","line":896,"loc":{"start":{"line":896,"column":37},"end":{"line":896,"column":48}}},"61":{"name":"(anonymous_61)","line":902,"loc":{"start":{"line":902,"column":41},"end":{"line":902,"column":52}}},"62":{"name":"(anonymous_62)","line":906,"loc":{"start":{"line":906,"column":41},"end":{"line":906,"column":52}}},"63":{"name":"(anonymous_63)","line":907,"loc":{"start":{"line":907,"column":22},"end":{"line":907,"column":38}}},"64":{"name":"(anonymous_64)","line":912,"loc":{"start":{"line":912,"column":27},"end":{"line":912,"column":69}}},"65":{"name":"(anonymous_65)","line":920,"loc":{"start":{"line":920,"column":38},"end":{"line":920,"column":49}}},"66":{"name":"(anonymous_66)","line":922,"loc":{"start":{"line":922,"column":22},"end":{"line":922,"column":38}}},"67":{"name":"(anonymous_67)","line":925,"loc":{"start":{"line":925,"column":23},"end":{"line":925,"column":40}}},"68":{"name":"(anonymous_68)","line":931,"loc":{"start":{"line":931,"column":38},"end":{"line":931,"column":54}}},"69":{"name":"(anonymous_69)","line":937,"loc":{"start":{"line":937,"column":37},"end":{"line":937,"column":53}}},"70":{"name":"(anonymous_70)","line":948,"loc":{"start":{"line":948,"column":29},"end":{"line":948,"column":40}}},"71":{"name":"(anonymous_71)","line":949,"loc":{"start":{"line":949,"column":18},"end":{"line":949,"column":35}}},"72":{"name":"(anonymous_72)","line":951,"loc":{"start":{"line":951,"column":14},"end":{"line":951,"column":38}}},"73":{"name":"(anonymous_73)","line":957,"loc":{"start":{"line":957,"column":19},"end":{"line":957,"column":37}}},"74":{"name":"(anonymous_74)","line":959,"loc":{"start":{"line":959,"column":14},"end":{"line":959,"column":38}}},"75":{"name":"(anonymous_75)","line":974,"loc":{"start":{"line":974,"column":39},"end":{"line":974,"column":50}}},"76":{"name":"(anonymous_76)","line":987,"loc":{"start":{"line":987,"column":36},"end":{"line":987,"column":62}}},"77":{"name":"(anonymous_77)","line":1000,"loc":{"start":{"line":1000,"column":35},"end":{"line":1000,"column":61}}},"78":{"name":"(anonymous_78)","line":1006,"loc":{"start":{"line":1006,"column":40},"end":{"line":1006,"column":61}}},"79":{"name":"(anonymous_79)","line":1022,"loc":{"start":{"line":1022,"column":36},"end":{"line":1022,"column":64}}},"80":{"name":"(anonymous_80)","line":1027,"loc":{"start":{"line":1027,"column":37},"end":{"line":1027,"column":53}}},"81":{"name":"(anonymous_81)","line":1052,"loc":{"start":{"line":1052,"column":29},"end":{"line":1052,"column":59}}},"82":{"name":"(anonymous_82)","line":1056,"loc":{"start":{"line":1056,"column":23},"end":{"line":1056,"column":44}}},"83":{"name":"(anonymous_83)","line":1061,"loc":{"start":{"line":1061,"column":50},"end":{"line":1061,"column":70}}},"84":{"name":"(anonymous_84)","line":1067,"loc":{"start":{"line":1067,"column":38},"end":{"line":1067,"column":65}}},"85":{"name":"forEachInput","line":1073,"loc":{"start":{"line":1073,"column":22},"end":{"line":1073,"column":58}}},"86":{"name":"(anonymous_86)","line":1074,"loc":{"start":{"line":1074,"column":80},"end":{"line":1074,"column":100}}},"87":{"name":"(anonymous_87)","line":1091,"loc":{"start":{"line":1091,"column":39},"end":{"line":1091,"column":59}}},"88":{"name":"(anonymous_88)","line":1096,"loc":{"start":{"line":1096,"column":38},"end":{"line":1096,"column":49}}},"89":{"name":"(anonymous_89)","line":1097,"loc":{"start":{"line":1097,"column":22},"end":{"line":1097,"column":38}}},"90":{"name":"(anonymous_90)","line":1105,"loc":{"start":{"line":1105,"column":34},"end":{"line":1105,"column":50}}},"91":{"name":"(anonymous_91)","line":1110,"loc":{"start":{"line":1110,"column":41},"end":{"line":1110,"column":61}}},"92":{"name":"(anonymous_92)","line":1124,"loc":{"start":{"line":1124,"column":40},"end":{"line":1124,"column":78}}},"93":{"name":"(anonymous_93)","line":1133,"loc":{"start":{"line":1133,"column":31},"end":{"line":1133,"column":42}}},"94":{"name":"(anonymous_94)","line":1196,"loc":{"start":{"line":1196,"column":35},"end":{"line":1196,"column":46}}},"95":{"name":"(anonymous_95)","line":1204,"loc":{"start":{"line":1204,"column":30},"end":{"line":1204,"column":41}}},"96":{"name":"(anonymous_96)","line":1220,"loc":{"start":{"line":1220,"column":34},"end":{"line":1220,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":47}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}},"16":{"start":{"line":20,"column":0},"end":{"line":20,"column":45}},"17":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},"18":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}},"19":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}},"20":{"start":{"line":24,"column":0},"end":{"line":24,"column":33}},"21":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"22":{"start":{"line":26,"column":0},"end":{"line":26,"column":42}},"23":{"start":{"line":27,"column":0},"end":{"line":27,"column":33}},"24":{"start":{"line":35,"column":0},"end":{"line":59,"column":1}},"25":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"26":{"start":{"line":37,"column":4},"end":{"line":37,"column":39}},"27":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"28":{"start":{"line":40,"column":2},"end":{"line":40,"column":20}},"29":{"start":{"line":41,"column":2},"end":{"line":41,"column":32}},"30":{"start":{"line":42,"column":2},"end":{"line":42,"column":33}},"31":{"start":{"line":44,"column":2},"end":{"line":58,"column":3}},"32":{"start":{"line":45,"column":4},"end":{"line":55,"column":5}},"33":{"start":{"line":46,"column":6},"end":{"line":46,"column":49}},"34":{"start":{"line":47,"column":11},"end":{"line":55,"column":5}},"35":{"start":{"line":48,"column":6},"end":{"line":48,"column":34}},"36":{"start":{"line":49,"column":11},"end":{"line":55,"column":5}},"37":{"start":{"line":50,"column":6},"end":{"line":50,"column":34}},"38":{"start":{"line":51,"column":11},"end":{"line":55,"column":5}},"39":{"start":{"line":52,"column":6},"end":{"line":52,"column":34}},"40":{"start":{"line":54,"column":6},"end":{"line":54,"column":104}},"41":{"start":{"line":57,"column":4},"end":{"line":57,"column":27}},"42":{"start":{"line":61,"column":0},"end":{"line":61,"column":24}},"43":{"start":{"line":62,"column":0},"end":{"line":62,"column":26}},"44":{"start":{"line":63,"column":0},"end":{"line":63,"column":29}},"45":{"start":{"line":66,"column":0},"end":{"line":66,"column":30}},"46":{"start":{"line":69,"column":0},"end":{"line":69,"column":37}},"47":{"start":{"line":72,"column":0},"end":{"line":72,"column":39}},"48":{"start":{"line":75,"column":0},"end":{"line":75,"column":46}},"49":{"start":{"line":78,"column":0},"end":{"line":78,"column":45}},"50":{"start":{"line":81,"column":0},"end":{"line":81,"column":31}},"51":{"start":{"line":84,"column":0},"end":{"line":84,"column":53}},"52":{"start":{"line":85,"column":0},"end":{"line":85,"column":47}},"53":{"start":{"line":96,"column":0},"end":{"line":99,"column":2}},"54":{"start":{"line":97,"column":2},"end":{"line":97,"column":53}},"55":{"start":{"line":98,"column":2},"end":{"line":98,"column":14}},"56":{"start":{"line":101,"column":0},"end":{"line":107,"column":2}},"57":{"start":{"line":105,"column":4},"end":{"line":105,"column":75}},"58":{"start":{"line":108,"column":0},"end":{"line":108,"column":67}},"59":{"start":{"line":109,"column":0},"end":{"line":109,"column":65}},"60":{"start":{"line":111,"column":0},"end":{"line":117,"column":2}},"61":{"start":{"line":115,"column":4},"end":{"line":115,"column":34}},"62":{"start":{"line":118,"column":0},"end":{"line":118,"column":72}},"63":{"start":{"line":119,"column":0},"end":{"line":121,"column":2}},"64":{"start":{"line":120,"column":2},"end":{"line":120,"column":33}},"65":{"start":{"line":122,"column":0},"end":{"line":122,"column":73}},"66":{"start":{"line":128,"column":0},"end":{"line":130,"column":2}},"67":{"start":{"line":129,"column":2},"end":{"line":129,"column":44}},"68":{"start":{"line":146,"column":0},"end":{"line":152,"column":2}},"69":{"start":{"line":147,"column":2},"end":{"line":151,"column":3}},"70":{"start":{"line":148,"column":4},"end":{"line":148,"column":37}},"71":{"start":{"line":150,"column":4},"end":{"line":150,"column":41}},"72":{"start":{"line":154,"column":0},"end":{"line":156,"column":2}},"73":{"start":{"line":155,"column":2},"end":{"line":155,"column":41}},"74":{"start":{"line":165,"column":0},"end":{"line":173,"column":2}},"75":{"start":{"line":166,"column":2},"end":{"line":166,"column":60}},"76":{"start":{"line":167,"column":2},"end":{"line":171,"column":3}},"77":{"start":{"line":168,"column":4},"end":{"line":169,"column":82}},"78":{"start":{"line":170,"column":4},"end":{"line":170,"column":29}},"79":{"start":{"line":172,"column":2},"end":{"line":172,"column":35}},"80":{"start":{"line":175,"column":0},"end":{"line":183,"column":2}},"81":{"start":{"line":176,"column":2},"end":{"line":176,"column":22}},"82":{"start":{"line":177,"column":2},"end":{"line":181,"column":3}},"83":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"84":{"start":{"line":179,"column":6},"end":{"line":179,"column":21}},"85":{"start":{"line":182,"column":2},"end":{"line":182,"column":17}},"86":{"start":{"line":192,"column":0},"end":{"line":212,"column":2}},"87":{"start":{"line":193,"column":2},"end":{"line":193,"column":20}},"88":{"start":{"line":195,"column":2},"end":{"line":197,"column":3}},"89":{"start":{"line":196,"column":4},"end":{"line":196,"column":52}},"90":{"start":{"line":199,"column":2},"end":{"line":199,"column":40}},"91":{"start":{"line":200,"column":2},"end":{"line":200,"column":19}},"92":{"start":{"line":201,"column":2},"end":{"line":207,"column":3}},"93":{"start":{"line":202,"column":4},"end":{"line":204,"column":5}},"94":{"start":{"line":203,"column":6},"end":{"line":203,"column":69}},"95":{"start":{"line":206,"column":4},"end":{"line":206,"column":52}},"96":{"start":{"line":209,"column":2},"end":{"line":211,"column":36}},"97":{"start":{"line":214,"column":0},"end":{"line":244,"column":2}},"98":{"start":{"line":216,"column":2},"end":{"line":220,"column":3}},"99":{"start":{"line":217,"column":4},"end":{"line":219,"column":6}},"100":{"start":{"line":222,"column":2},"end":{"line":234,"column":3}},"101":{"start":{"line":223,"column":4},"end":{"line":223,"column":87}},"102":{"start":{"line":224,"column":4},"end":{"line":233,"column":5}},"103":{"start":{"line":225,"column":6},"end":{"line":229,"column":7}},"104":{"start":{"line":226,"column":8},"end":{"line":228,"column":10}},"105":{"start":{"line":230,"column":6},"end":{"line":232,"column":8}},"106":{"start":{"line":236,"column":2},"end":{"line":243,"column":3}},"107":{"start":{"line":237,"column":4},"end":{"line":237,"column":86}},"108":{"start":{"line":238,"column":4},"end":{"line":242,"column":5}},"109":{"start":{"line":239,"column":6},"end":{"line":241,"column":8}},"110":{"start":{"line":246,"column":0},"end":{"line":248,"column":2}},"111":{"start":{"line":247,"column":2},"end":{"line":247,"column":29}},"112":{"start":{"line":250,"column":0},"end":{"line":261,"column":2}},"113":{"start":{"line":251,"column":2},"end":{"line":253,"column":3}},"114":{"start":{"line":252,"column":4},"end":{"line":252,"column":11}},"115":{"start":{"line":254,"column":2},"end":{"line":254,"column":20}},"116":{"start":{"line":255,"column":2},"end":{"line":260,"column":3}},"117":{"start":{"line":256,"column":4},"end":{"line":256,"column":33}},"118":{"start":{"line":257,"column":4},"end":{"line":259,"column":5}},"119":{"start":{"line":258,"column":6},"end":{"line":258,"column":50}},"120":{"start":{"line":263,"column":0},"end":{"line":270,"column":2}},"121":{"start":{"line":264,"column":2},"end":{"line":266,"column":3}},"122":{"start":{"line":265,"column":4},"end":{"line":265,"column":11}},"123":{"start":{"line":267,"column":2},"end":{"line":269,"column":3}},"124":{"start":{"line":268,"column":4},"end":{"line":268,"column":54}},"125":{"start":{"line":272,"column":0},"end":{"line":274,"column":2}},"126":{"start":{"line":273,"column":2},"end":{"line":273,"column":60}},"127":{"start":{"line":276,"column":0},"end":{"line":279,"column":2}},"128":{"start":{"line":277,"column":2},"end":{"line":277,"column":34}},"129":{"start":{"line":278,"column":2},"end":{"line":278,"column":48}},"130":{"start":{"line":281,"column":0},"end":{"line":293,"column":2}},"131":{"start":{"line":282,"column":2},"end":{"line":282,"column":37}},"132":{"start":{"line":283,"column":2},"end":{"line":283,"column":44}},"133":{"start":{"line":284,"column":2},"end":{"line":286,"column":5}},"134":{"start":{"line":285,"column":4},"end":{"line":285,"column":33}},"135":{"start":{"line":287,"column":2},"end":{"line":287,"column":45}},"136":{"start":{"line":288,"column":2},"end":{"line":290,"column":5}},"137":{"start":{"line":289,"column":4},"end":{"line":289,"column":34}},"138":{"start":{"line":291,"column":2},"end":{"line":291,"column":39}},"139":{"start":{"line":292,"column":2},"end":{"line":292,"column":16}},"140":{"start":{"line":295,"column":0},"end":{"line":298,"column":2}},"141":{"start":{"line":296,"column":2},"end":{"line":296,"column":40}},"142":{"start":{"line":297,"column":2},"end":{"line":297,"column":39}},"143":{"start":{"line":300,"column":0},"end":{"line":316,"column":2}},"144":{"start":{"line":301,"column":2},"end":{"line":301,"column":70}},"145":{"start":{"line":302,"column":2},"end":{"line":302,"column":31}},"146":{"start":{"line":304,"column":2},"end":{"line":304,"column":39}},"147":{"start":{"line":305,"column":2},"end":{"line":305,"column":37}},"148":{"start":{"line":306,"column":2},"end":{"line":309,"column":3}},"149":{"start":{"line":307,"column":4},"end":{"line":307,"column":47}},"150":{"start":{"line":308,"column":4},"end":{"line":308,"column":28}},"151":{"start":{"line":310,"column":2},"end":{"line":310,"column":38}},"152":{"start":{"line":311,"column":2},"end":{"line":313,"column":3}},"153":{"start":{"line":312,"column":4},"end":{"line":312,"column":55}},"154":{"start":{"line":314,"column":2},"end":{"line":314,"column":41}},"155":{"start":{"line":315,"column":2},"end":{"line":315,"column":14}},"156":{"start":{"line":318,"column":0},"end":{"line":344,"column":2}},"157":{"start":{"line":319,"column":2},"end":{"line":319,"column":18}},"158":{"start":{"line":320,"column":2},"end":{"line":322,"column":5}},"159":{"start":{"line":321,"column":4},"end":{"line":321,"column":34}},"160":{"start":{"line":323,"column":2},"end":{"line":323,"column":19}},"161":{"start":{"line":324,"column":2},"end":{"line":326,"column":5}},"162":{"start":{"line":325,"column":4},"end":{"line":325,"column":36}},"163":{"start":{"line":327,"column":2},"end":{"line":333,"column":4}},"164":{"start":{"line":334,"column":2},"end":{"line":336,"column":3}},"165":{"start":{"line":335,"column":4},"end":{"line":335,"column":53}},"166":{"start":{"line":337,"column":2},"end":{"line":339,"column":3}},"167":{"start":{"line":338,"column":4},"end":{"line":338,"column":40}},"168":{"start":{"line":340,"column":2},"end":{"line":342,"column":3}},"169":{"start":{"line":341,"column":4},"end":{"line":341,"column":24}},"170":{"start":{"line":343,"column":2},"end":{"line":343,"column":13}},"171":{"start":{"line":346,"column":0},"end":{"line":392,"column":2}},"172":{"start":{"line":348,"column":2},"end":{"line":348,"column":65}},"173":{"start":{"line":349,"column":2},"end":{"line":349,"column":18}},"174":{"start":{"line":350,"column":2},"end":{"line":350,"column":18}},"175":{"start":{"line":351,"column":2},"end":{"line":355,"column":3}},"176":{"start":{"line":352,"column":4},"end":{"line":352,"column":41}},"177":{"start":{"line":354,"column":4},"end":{"line":354,"column":22}},"178":{"start":{"line":356,"column":2},"end":{"line":375,"column":5}},"179":{"start":{"line":357,"column":4},"end":{"line":360,"column":5}},"180":{"start":{"line":358,"column":6},"end":{"line":358,"column":47}},"181":{"start":{"line":359,"column":6},"end":{"line":359,"column":13}},"182":{"start":{"line":361,"column":4},"end":{"line":361,"column":49}},"183":{"start":{"line":362,"column":4},"end":{"line":362,"column":13}},"184":{"start":{"line":363,"column":4},"end":{"line":373,"column":5}},"185":{"start":{"line":364,"column":6},"end":{"line":364,"column":44}},"186":{"start":{"line":365,"column":11},"end":{"line":373,"column":5}},"187":{"start":{"line":366,"column":6},"end":{"line":368,"column":8}},"188":{"start":{"line":369,"column":11},"end":{"line":373,"column":5}},"189":{"start":{"line":370,"column":6},"end":{"line":370,"column":40}},"190":{"start":{"line":372,"column":6},"end":{"line":372,"column":80}},"191":{"start":{"line":374,"column":4},"end":{"line":374,"column":24}},"192":{"start":{"line":376,"column":2},"end":{"line":378,"column":5}},"193":{"start":{"line":377,"column":4},"end":{"line":377,"column":39}},"194":{"start":{"line":379,"column":2},"end":{"line":381,"column":3}},"195":{"start":{"line":380,"column":4},"end":{"line":380,"column":48}},"196":{"start":{"line":382,"column":2},"end":{"line":384,"column":3}},"197":{"start":{"line":383,"column":4},"end":{"line":383,"column":62}},"198":{"start":{"line":385,"column":2},"end":{"line":387,"column":3}},"199":{"start":{"line":386,"column":4},"end":{"line":386,"column":32}},"200":{"start":{"line":388,"column":2},"end":{"line":388,"column":41}},"201":{"start":{"line":389,"column":2},"end":{"line":389,"column":37}},"202":{"start":{"line":390,"column":2},"end":{"line":390,"column":30}},"203":{"start":{"line":391,"column":2},"end":{"line":391,"column":14}},"204":{"start":{"line":394,"column":0},"end":{"line":404,"column":2}},"205":{"start":{"line":395,"column":2},"end":{"line":400,"column":3}},"206":{"start":{"line":396,"column":4},"end":{"line":396,"column":37}},"207":{"start":{"line":397,"column":4},"end":{"line":397,"column":50}},"208":{"start":{"line":398,"column":4},"end":{"line":399,"column":37}},"209":{"start":{"line":401,"column":2},"end":{"line":403,"column":3}},"210":{"start":{"line":402,"column":4},"end":{"line":402,"column":91}},"211":{"start":{"line":413,"column":0},"end":{"line":430,"column":2}},"212":{"start":{"line":414,"column":2},"end":{"line":414,"column":24}},"213":{"start":{"line":415,"column":2},"end":{"line":417,"column":3}},"214":{"start":{"line":416,"column":4},"end":{"line":416,"column":52}},"215":{"start":{"line":418,"column":2},"end":{"line":420,"column":3}},"216":{"start":{"line":419,"column":4},"end":{"line":419,"column":33}},"217":{"start":{"line":422,"column":2},"end":{"line":426,"column":3}},"218":{"start":{"line":423,"column":4},"end":{"line":425,"column":5}},"219":{"start":{"line":424,"column":6},"end":{"line":424,"column":71}},"220":{"start":{"line":428,"column":2},"end":{"line":428,"column":24}},"221":{"start":{"line":429,"column":2},"end":{"line":429,"column":14}},"222":{"start":{"line":439,"column":0},"end":{"line":457,"column":2}},"223":{"start":{"line":440,"column":2},"end":{"line":440,"column":38}},"224":{"start":{"line":441,"column":2},"end":{"line":443,"column":3}},"225":{"start":{"line":442,"column":4},"end":{"line":442,"column":54}},"226":{"start":{"line":444,"column":2},"end":{"line":446,"column":3}},"227":{"start":{"line":445,"column":4},"end":{"line":445,"column":55}},"228":{"start":{"line":448,"column":2},"end":{"line":452,"column":3}},"229":{"start":{"line":449,"column":4},"end":{"line":451,"column":5}},"230":{"start":{"line":450,"column":6},"end":{"line":450,"column":71}},"231":{"start":{"line":455,"column":2},"end":{"line":455,"column":26}},"232":{"start":{"line":456,"column":2},"end":{"line":456,"column":14}},"233":{"start":{"line":466,"column":0},"end":{"line":474,"column":2}},"234":{"start":{"line":467,"column":2},"end":{"line":469,"column":3}},"235":{"start":{"line":468,"column":4},"end":{"line":468,"column":16}},"236":{"start":{"line":470,"column":2},"end":{"line":472,"column":3}},"237":{"start":{"line":471,"column":4},"end":{"line":471,"column":26}},"238":{"start":{"line":473,"column":2},"end":{"line":473,"column":41}},"239":{"start":{"line":476,"column":0},"end":{"line":478,"column":2}},"240":{"start":{"line":477,"column":2},"end":{"line":477,"column":52}},"241":{"start":{"line":480,"column":0},"end":{"line":483,"column":2}},"242":{"start":{"line":481,"column":2},"end":{"line":481,"column":33}},"243":{"start":{"line":482,"column":2},"end":{"line":482,"column":37}},"244":{"start":{"line":536,"column":0},"end":{"line":557,"column":2}},"245":{"start":{"line":537,"column":2},"end":{"line":543,"column":3}},"246":{"start":{"line":538,"column":4},"end":{"line":538,"column":20}},"247":{"start":{"line":539,"column":4},"end":{"line":541,"column":7}},"248":{"start":{"line":540,"column":6},"end":{"line":540,"column":42}},"249":{"start":{"line":542,"column":4},"end":{"line":542,"column":16}},"250":{"start":{"line":544,"column":2},"end":{"line":547,"column":5}},"251":{"start":{"line":546,"column":4},"end":{"line":546,"column":98}},"252":{"start":{"line":548,"column":2},"end":{"line":550,"column":3}},"253":{"start":{"line":549,"column":4},"end":{"line":549,"column":16}},"254":{"start":{"line":551,"column":2},"end":{"line":555,"column":3}},"255":{"start":{"line":552,"column":4},"end":{"line":552,"column":53}},"256":{"start":{"line":554,"column":4},"end":{"line":554,"column":28}},"257":{"start":{"line":556,"column":2},"end":{"line":556,"column":14}},"258":{"start":{"line":559,"column":0},"end":{"line":578,"column":2}},"259":{"start":{"line":560,"column":2},"end":{"line":560,"column":12}},"260":{"start":{"line":561,"column":2},"end":{"line":561,"column":33}},"261":{"start":{"line":562,"column":2},"end":{"line":568,"column":3}},"262":{"start":{"line":563,"column":4},"end":{"line":563,"column":31}},"263":{"start":{"line":564,"column":9},"end":{"line":568,"column":3}},"264":{"start":{"line":565,"column":4},"end":{"line":565,"column":27}},"265":{"start":{"line":567,"column":4},"end":{"line":567,"column":18}},"266":{"start":{"line":569,"column":2},"end":{"line":577,"column":6}},"267":{"start":{"line":580,"column":0},"end":{"line":601,"column":2}},"268":{"start":{"line":581,"column":2},"end":{"line":582,"column":84}},"269":{"start":{"line":583,"column":2},"end":{"line":583,"column":12}},"270":{"start":{"line":584,"column":2},"end":{"line":584,"column":33}},"271":{"start":{"line":585,"column":2},"end":{"line":591,"column":3}},"272":{"start":{"line":586,"column":4},"end":{"line":586,"column":26}},"273":{"start":{"line":587,"column":9},"end":{"line":591,"column":3}},"274":{"start":{"line":588,"column":4},"end":{"line":588,"column":36}},"275":{"start":{"line":590,"column":4},"end":{"line":590,"column":29}},"276":{"start":{"line":592,"column":2},"end":{"line":600,"column":26}},"277":{"start":{"line":613,"column":0},"end":{"line":627,"column":2}},"278":{"start":{"line":614,"column":2},"end":{"line":614,"column":45}},"279":{"start":{"line":615,"column":2},"end":{"line":617,"column":3}},"280":{"start":{"line":616,"column":4},"end":{"line":616,"column":101}},"281":{"start":{"line":618,"column":2},"end":{"line":625,"column":3}},"282":{"start":{"line":619,"column":4},"end":{"line":619,"column":92}},"283":{"start":{"line":620,"column":4},"end":{"line":620,"column":56}},"284":{"start":{"line":621,"column":4},"end":{"line":624,"column":7}},"285":{"start":{"line":626,"column":2},"end":{"line":626,"column":39}},"286":{"start":{"line":636,"column":0},"end":{"line":642,"column":2}},"287":{"start":{"line":637,"column":2},"end":{"line":637,"column":45}},"288":{"start":{"line":638,"column":2},"end":{"line":638,"column":26}},"289":{"start":{"line":639,"column":2},"end":{"line":639,"column":32}},"290":{"start":{"line":640,"column":2},"end":{"line":640,"column":29}},"291":{"start":{"line":641,"column":2},"end":{"line":641,"column":14}},"292":{"start":{"line":649,"column":0},"end":{"line":653,"column":2}},"293":{"start":{"line":650,"column":2},"end":{"line":652,"column":6}},"294":{"start":{"line":651,"column":4},"end":{"line":651,"column":26}},"295":{"start":{"line":663,"column":0},"end":{"line":668,"column":2}},"296":{"start":{"line":664,"column":2},"end":{"line":664,"column":65}},"297":{"start":{"line":665,"column":2},"end":{"line":665,"column":21}},"298":{"start":{"line":666,"column":2},"end":{"line":666,"column":29}},"299":{"start":{"line":667,"column":2},"end":{"line":667,"column":14}},"300":{"start":{"line":678,"column":0},"end":{"line":683,"column":2}},"301":{"start":{"line":679,"column":2},"end":{"line":679,"column":65}},"302":{"start":{"line":680,"column":2},"end":{"line":680,"column":26}},"303":{"start":{"line":681,"column":2},"end":{"line":681,"column":29}},"304":{"start":{"line":682,"column":2},"end":{"line":682,"column":14}},"305":{"start":{"line":696,"column":0},"end":{"line":701,"column":2}},"306":{"start":{"line":697,"column":2},"end":{"line":697,"column":50}},"307":{"start":{"line":698,"column":2},"end":{"line":698,"column":51}},"308":{"start":{"line":699,"column":2},"end":{"line":699,"column":29}},"309":{"start":{"line":700,"column":2},"end":{"line":700,"column":14}},"310":{"start":{"line":707,"column":0},"end":{"line":712,"column":2}},"311":{"start":{"line":708,"column":2},"end":{"line":710,"column":3}},"312":{"start":{"line":709,"column":4},"end":{"line":709,"column":43}},"313":{"start":{"line":711,"column":2},"end":{"line":711,"column":14}},"314":{"start":{"line":730,"column":0},"end":{"line":748,"column":2}},"315":{"start":{"line":731,"column":2},"end":{"line":737,"column":3}},"316":{"start":{"line":732,"column":4},"end":{"line":732,"column":20}},"317":{"start":{"line":733,"column":4},"end":{"line":735,"column":7}},"318":{"start":{"line":734,"column":6},"end":{"line":734,"column":39}},"319":{"start":{"line":736,"column":4},"end":{"line":736,"column":16}},"320":{"start":{"line":739,"column":2},"end":{"line":742,"column":4}},"321":{"start":{"line":743,"column":2},"end":{"line":746,"column":6}},"322":{"start":{"line":747,"column":2},"end":{"line":747,"column":14}},"323":{"start":{"line":760,"column":0},"end":{"line":766,"column":2}},"324":{"start":{"line":761,"column":2},"end":{"line":764,"column":6}},"325":{"start":{"line":765,"column":2},"end":{"line":765,"column":14}},"326":{"start":{"line":775,"column":0},"end":{"line":780,"column":2}},"327":{"start":{"line":776,"column":2},"end":{"line":776,"column":48}},"328":{"start":{"line":777,"column":2},"end":{"line":777,"column":26}},"329":{"start":{"line":778,"column":2},"end":{"line":778,"column":29}},"330":{"start":{"line":779,"column":2},"end":{"line":779,"column":14}},"331":{"start":{"line":788,"column":0},"end":{"line":795,"column":2}},"332":{"start":{"line":789,"column":2},"end":{"line":789,"column":20}},"333":{"start":{"line":790,"column":2},"end":{"line":790,"column":26}},"334":{"start":{"line":791,"column":2},"end":{"line":791,"column":33}},"335":{"start":{"line":792,"column":2},"end":{"line":792,"column":32}},"336":{"start":{"line":793,"column":2},"end":{"line":793,"column":29}},"337":{"start":{"line":794,"column":2},"end":{"line":794,"column":14}},"338":{"start":{"line":798,"column":0},"end":{"line":801,"column":2}},"339":{"start":{"line":799,"column":2},"end":{"line":799,"column":28}},"340":{"start":{"line":800,"column":2},"end":{"line":800,"column":33}},"341":{"start":{"line":809,"column":0},"end":{"line":818,"column":2}},"342":{"start":{"line":810,"column":2},"end":{"line":816,"column":3}},"343":{"start":{"line":811,"column":4},"end":{"line":811,"column":20}},"344":{"start":{"line":812,"column":4},"end":{"line":812,"column":27}},"345":{"start":{"line":813,"column":4},"end":{"line":815,"column":7}},"346":{"start":{"line":814,"column":6},"end":{"line":814,"column":44}},"347":{"start":{"line":817,"column":2},"end":{"line":817,"column":28}},"348":{"start":{"line":826,"column":0},"end":{"line":838,"column":2}},"349":{"start":{"line":827,"column":2},"end":{"line":836,"column":3}},"350":{"start":{"line":828,"column":4},"end":{"line":828,"column":20}},"351":{"start":{"line":829,"column":4},"end":{"line":829,"column":26}},"352":{"start":{"line":830,"column":4},"end":{"line":835,"column":7}},"353":{"start":{"line":831,"column":6},"end":{"line":833,"column":7}},"354":{"start":{"line":832,"column":8},"end":{"line":832,"column":67}},"355":{"start":{"line":834,"column":6},"end":{"line":834,"column":49}},"356":{"start":{"line":837,"column":2},"end":{"line":837,"column":27}},"357":{"start":{"line":840,"column":0},"end":{"line":860,"column":2}},"358":{"start":{"line":841,"column":2},"end":{"line":843,"column":3}},"359":{"start":{"line":842,"column":4},"end":{"line":842,"column":11}},"360":{"start":{"line":844,"column":2},"end":{"line":844,"column":26}},"361":{"start":{"line":845,"column":2},"end":{"line":847,"column":3}},"362":{"start":{"line":846,"column":4},"end":{"line":846,"column":42}},"363":{"start":{"line":848,"column":2},"end":{"line":848,"column":42}},"364":{"start":{"line":849,"column":2},"end":{"line":849,"column":26}},"365":{"start":{"line":850,"column":2},"end":{"line":850,"column":37}},"366":{"start":{"line":851,"column":2},"end":{"line":859,"column":3}},"367":{"start":{"line":852,"column":4},"end":{"line":852,"column":44}},"368":{"start":{"line":853,"column":4},"end":{"line":856,"column":8}},"369":{"start":{"line":858,"column":4},"end":{"line":858,"column":34}},"370":{"start":{"line":879,"column":0},"end":{"line":891,"column":2}},"371":{"start":{"line":880,"column":2},"end":{"line":882,"column":3}},"372":{"start":{"line":881,"column":4},"end":{"line":881,"column":13}},"373":{"start":{"line":883,"column":2},"end":{"line":885,"column":3}},"374":{"start":{"line":884,"column":4},"end":{"line":884,"column":21}},"375":{"start":{"line":887,"column":2},"end":{"line":889,"column":3}},"376":{"start":{"line":888,"column":4},"end":{"line":888,"column":35}},"377":{"start":{"line":890,"column":2},"end":{"line":890,"column":29}},"378":{"start":{"line":896,"column":0},"end":{"line":900,"column":2}},"379":{"start":{"line":897,"column":2},"end":{"line":897,"column":43}},"380":{"start":{"line":898,"column":2},"end":{"line":898,"column":42}},"381":{"start":{"line":899,"column":2},"end":{"line":899,"column":76}},"382":{"start":{"line":902,"column":0},"end":{"line":904,"column":2}},"383":{"start":{"line":903,"column":2},"end":{"line":903,"column":58}},"384":{"start":{"line":906,"column":0},"end":{"line":910,"column":2}},"385":{"start":{"line":907,"column":2},"end":{"line":909,"column":5}},"386":{"start":{"line":908,"column":4},"end":{"line":908,"column":28}},"387":{"start":{"line":912,"column":0},"end":{"line":918,"column":2}},"388":{"start":{"line":913,"column":2},"end":{"line":913,"column":74}},"389":{"start":{"line":914,"column":2},"end":{"line":916,"column":3}},"390":{"start":{"line":915,"column":4},"end":{"line":915,"column":47}},"391":{"start":{"line":917,"column":2},"end":{"line":917,"column":71}},"392":{"start":{"line":920,"column":0},"end":{"line":929,"column":2}},"393":{"start":{"line":921,"column":2},"end":{"line":921,"column":46}},"394":{"start":{"line":922,"column":2},"end":{"line":924,"column":5}},"395":{"start":{"line":923,"column":4},"end":{"line":923,"column":36}},"396":{"start":{"line":925,"column":2},"end":{"line":927,"column":5}},"397":{"start":{"line":926,"column":4},"end":{"line":926,"column":50}},"398":{"start":{"line":928,"column":2},"end":{"line":928,"column":16}},"399":{"start":{"line":931,"column":0},"end":{"line":935,"column":2}},"400":{"start":{"line":932,"column":2},"end":{"line":932,"column":35}},"401":{"start":{"line":933,"column":2},"end":{"line":933,"column":49}},"402":{"start":{"line":934,"column":2},"end":{"line":934,"column":33}},"403":{"start":{"line":937,"column":0},"end":{"line":940,"column":2}},"404":{"start":{"line":938,"column":2},"end":{"line":938,"column":28}},"405":{"start":{"line":939,"column":2},"end":{"line":939,"column":29}},"406":{"start":{"line":948,"column":0},"end":{"line":966,"column":2}},"407":{"start":{"line":949,"column":2},"end":{"line":956,"column":5}},"408":{"start":{"line":950,"column":4},"end":{"line":950,"column":56}},"409":{"start":{"line":951,"column":4},"end":{"line":954,"column":7}},"410":{"start":{"line":952,"column":6},"end":{"line":953,"column":50}},"411":{"start":{"line":955,"column":4},"end":{"line":955,"column":16}},"412":{"start":{"line":957,"column":2},"end":{"line":964,"column":5}},"413":{"start":{"line":958,"column":4},"end":{"line":958,"column":57}},"414":{"start":{"line":959,"column":4},"end":{"line":962,"column":7}},"415":{"start":{"line":960,"column":6},"end":{"line":961,"column":70}},"416":{"start":{"line":963,"column":4},"end":{"line":963,"column":16}},"417":{"start":{"line":965,"column":2},"end":{"line":965,"column":14}},"418":{"start":{"line":974,"column":0},"end":{"line":976,"column":2}},"419":{"start":{"line":975,"column":2},"end":{"line":975,"column":37}},"420":{"start":{"line":987,"column":0},"end":{"line":990,"column":2}},"421":{"start":{"line":988,"column":2},"end":{"line":988,"column":43}},"422":{"start":{"line":989,"column":2},"end":{"line":989,"column":36}},"423":{"start":{"line":1000,"column":0},"end":{"line":1004,"column":2}},"424":{"start":{"line":1001,"column":2},"end":{"line":1001,"column":45}},"425":{"start":{"line":1002,"column":2},"end":{"line":1002,"column":26}},"426":{"start":{"line":1003,"column":2},"end":{"line":1003,"column":14}},"427":{"start":{"line":1006,"column":0},"end":{"line":1020,"column":2}},"428":{"start":{"line":1007,"column":2},"end":{"line":1008,"column":79}},"429":{"start":{"line":1009,"column":2},"end":{"line":1011,"column":3}},"430":{"start":{"line":1010,"column":4},"end":{"line":1010,"column":50}},"431":{"start":{"line":1013,"column":2},"end":{"line":1016,"column":3}},"432":{"start":{"line":1014,"column":4},"end":{"line":1014,"column":55}},"433":{"start":{"line":1015,"column":4},"end":{"line":1015,"column":62}},"434":{"start":{"line":1018,"column":2},"end":{"line":1018,"column":28}},"435":{"start":{"line":1019,"column":2},"end":{"line":1019,"column":14}},"436":{"start":{"line":1022,"column":0},"end":{"line":1038,"column":2}},"437":{"start":{"line":1023,"column":2},"end":{"line":1023,"column":12}},"438":{"start":{"line":1024,"column":2},"end":{"line":1030,"column":3}},"439":{"start":{"line":1025,"column":4},"end":{"line":1025,"column":17}},"440":{"start":{"line":1027,"column":4},"end":{"line":1029,"column":7}},"441":{"start":{"line":1028,"column":6},"end":{"line":1028,"column":90}},"442":{"start":{"line":1031,"column":2},"end":{"line":1033,"column":3}},"443":{"start":{"line":1032,"column":4},"end":{"line":1032,"column":73}},"444":{"start":{"line":1034,"column":2},"end":{"line":1034,"column":33}},"445":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":46}},"446":{"start":{"line":1036,"column":2},"end":{"line":1036,"column":32}},"447":{"start":{"line":1037,"column":2},"end":{"line":1037,"column":29}},"448":{"start":{"line":1052,"column":0},"end":{"line":1065,"column":2}},"449":{"start":{"line":1053,"column":2},"end":{"line":1053,"column":38}},"450":{"start":{"line":1054,"column":2},"end":{"line":1054,"column":18}},"451":{"start":{"line":1055,"column":2},"end":{"line":1060,"column":3}},"452":{"start":{"line":1056,"column":4},"end":{"line":1058,"column":7}},"453":{"start":{"line":1057,"column":6},"end":{"line":1057,"column":37}},"454":{"start":{"line":1059,"column":4},"end":{"line":1059,"column":16}},"455":{"start":{"line":1061,"column":2},"end":{"line":1063,"column":5}},"456":{"start":{"line":1062,"column":4},"end":{"line":1062,"column":35}},"457":{"start":{"line":1064,"column":2},"end":{"line":1064,"column":14}},"458":{"start":{"line":1067,"column":0},"end":{"line":1079,"column":2}},"459":{"start":{"line":1068,"column":2},"end":{"line":1068,"column":36}},"460":{"start":{"line":1069,"column":2},"end":{"line":1069,"column":45}},"461":{"start":{"line":1070,"column":2},"end":{"line":1070,"column":25}},"462":{"start":{"line":1071,"column":2},"end":{"line":1071,"column":19}},"463":{"start":{"line":1072,"column":2},"end":{"line":1072,"column":68}},"464":{"start":{"line":1073,"column":2},"end":{"line":1077,"column":5}},"465":{"start":{"line":1074,"column":4},"end":{"line":1076,"column":7}},"466":{"start":{"line":1075,"column":6},"end":{"line":1075,"column":30}},"467":{"start":{"line":1078,"column":2},"end":{"line":1078,"column":17}},"468":{"start":{"line":1091,"column":0},"end":{"line":1094,"column":2}},"469":{"start":{"line":1092,"column":2},"end":{"line":1092,"column":66}},"470":{"start":{"line":1093,"column":2},"end":{"line":1093,"column":14}},"471":{"start":{"line":1096,"column":0},"end":{"line":1108,"column":2}},"472":{"start":{"line":1097,"column":2},"end":{"line":1104,"column":5}},"473":{"start":{"line":1098,"column":4},"end":{"line":1103,"column":5}},"474":{"start":{"line":1099,"column":6},"end":{"line":1102,"column":8}},"475":{"start":{"line":1105,"column":2},"end":{"line":1107,"column":6}},"476":{"start":{"line":1106,"column":4},"end":{"line":1106,"column":33}},"477":{"start":{"line":1110,"column":0},"end":{"line":1119,"column":2}},"478":{"start":{"line":1111,"column":2},"end":{"line":1111,"column":18}},"479":{"start":{"line":1112,"column":2},"end":{"line":1117,"column":3}},"480":{"start":{"line":1113,"column":4},"end":{"line":1116,"column":6}},"481":{"start":{"line":1118,"column":2},"end":{"line":1118,"column":77}},"482":{"start":{"line":1124,"column":0},"end":{"line":1126,"column":2}},"483":{"start":{"line":1125,"column":2},"end":{"line":1125,"column":59}},"484":{"start":{"line":1133,"column":0},"end":{"line":1191,"column":2}},"485":{"start":{"line":1135,"column":2},"end":{"line":1137,"column":3}},"486":{"start":{"line":1136,"column":4},"end":{"line":1136,"column":37}},"487":{"start":{"line":1139,"column":2},"end":{"line":1141,"column":3}},"488":{"start":{"line":1140,"column":4},"end":{"line":1140,"column":38}},"489":{"start":{"line":1144,"column":2},"end":{"line":1144,"column":29}},"490":{"start":{"line":1145,"column":2},"end":{"line":1158,"column":3}},"491":{"start":{"line":1146,"column":4},"end":{"line":1146,"column":32}},"492":{"start":{"line":1148,"column":4},"end":{"line":1150,"column":5}},"493":{"start":{"line":1149,"column":6},"end":{"line":1149,"column":63}},"494":{"start":{"line":1151,"column":4},"end":{"line":1153,"column":5}},"495":{"start":{"line":1152,"column":6},"end":{"line":1152,"column":66}},"496":{"start":{"line":1154,"column":4},"end":{"line":1154,"column":51}},"497":{"start":{"line":1155,"column":4},"end":{"line":1157,"column":5}},"498":{"start":{"line":1156,"column":6},"end":{"line":1156,"column":79}},"499":{"start":{"line":1161,"column":2},"end":{"line":1163,"column":3}},"500":{"start":{"line":1162,"column":4},"end":{"line":1162,"column":53}},"501":{"start":{"line":1166,"column":2},"end":{"line":1166,"column":19}},"502":{"start":{"line":1167,"column":2},"end":{"line":1175,"column":3}},"503":{"start":{"line":1168,"column":4},"end":{"line":1168,"column":30}},"504":{"start":{"line":1170,"column":4},"end":{"line":1170,"column":57}},"505":{"start":{"line":1171,"column":4},"end":{"line":1173,"column":5}},"506":{"start":{"line":1172,"column":6},"end":{"line":1172,"column":59}},"507":{"start":{"line":1174,"column":4},"end":{"line":1174,"column":28}},"508":{"start":{"line":1177,"column":2},"end":{"line":1177,"column":37}},"509":{"start":{"line":1178,"column":2},"end":{"line":1189,"column":3}},"510":{"start":{"line":1179,"column":4},"end":{"line":1179,"column":43}},"511":{"start":{"line":1180,"column":4},"end":{"line":1182,"column":5}},"512":{"start":{"line":1181,"column":6},"end":{"line":1181,"column":56}},"513":{"start":{"line":1184,"column":4},"end":{"line":1188,"column":5}},"514":{"start":{"line":1185,"column":6},"end":{"line":1187,"column":7}},"515":{"start":{"line":1186,"column":8},"end":{"line":1186,"column":60}},"516":{"start":{"line":1190,"column":2},"end":{"line":1190,"column":14}},"517":{"start":{"line":1196,"column":0},"end":{"line":1198,"column":2}},"518":{"start":{"line":1197,"column":2},"end":{"line":1197,"column":63}},"519":{"start":{"line":1204,"column":0},"end":{"line":1212,"column":2}},"520":{"start":{"line":1205,"column":2},"end":{"line":1210,"column":3}},"521":{"start":{"line":1206,"column":4},"end":{"line":1206,"column":31}},"522":{"start":{"line":1207,"column":4},"end":{"line":1209,"column":5}},"523":{"start":{"line":1208,"column":6},"end":{"line":1208,"column":18}},"524":{"start":{"line":1211,"column":2},"end":{"line":1211,"column":15}},"525":{"start":{"line":1220,"column":0},"end":{"line":1228,"column":2}},"526":{"start":{"line":1221,"column":2},"end":{"line":1226,"column":3}},"527":{"start":{"line":1222,"column":4},"end":{"line":1222,"column":31}},"528":{"start":{"line":1223,"column":4},"end":{"line":1225,"column":5}},"529":{"start":{"line":1224,"column":6},"end":{"line":1224,"column":57}},"530":{"start":{"line":1227,"column":2},"end":{"line":1227,"column":14}},"531":{"start":{"line":1230,"column":0},"end":{"line":1230,"column":29}}},"branchMap":{"1":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":14},"end":{"line":6,"column":28}},{"start":{"line":6,"column":32},"end":{"line":6,"column":57}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":11},"end":{"line":47,"column":11}},{"start":{"line":47,"column":11},"end":{"line":47,"column":11}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":11},"end":{"line":49,"column":11}},{"start":{"line":49,"column":11},"end":{"line":49,"column":11}}]},"7":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":11},"end":{"line":51,"column":11}},{"start":{"line":51,"column":11},"end":{"line":51,"column":11}}]},"8":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"9":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":21}},{"start":{"line":147,"column":25},"end":{"line":147,"column":31}},{"start":{"line":147,"column":35},"end":{"line":147,"column":52}}]},"10":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"11":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]},"12":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":9},"end":{"line":193,"column":13}},{"start":{"line":193,"column":17},"end":{"line":193,"column":19}}]},"13":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"14":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"15":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"16":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":9},"end":{"line":209,"column":21}},{"start":{"line":210,"column":4},"end":{"line":210,"column":30}},{"start":{"line":211,"column":4},"end":{"line":211,"column":35}}]},"17":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":216,"column":2}},{"start":{"line":216,"column":2},"end":{"line":216,"column":2}}]},"18":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":6},"end":{"line":216,"column":31}},{"start":{"line":216,"column":35},"end":{"line":216,"column":56}}]},"19":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"20":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"21":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":6},"end":{"line":225,"column":6}},{"start":{"line":225,"column":6},"end":{"line":225,"column":6}}]},"22":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":2},"end":{"line":236,"column":2}},{"start":{"line":236,"column":2},"end":{"line":236,"column":2}}]},"23":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"24":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"25":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":4},"end":{"line":257,"column":4}},{"start":{"line":257,"column":4},"end":{"line":257,"column":4}}]},"26":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":8},"end":{"line":257,"column":49}},{"start":{"line":257,"column":53},"end":{"line":257,"column":79}}]},"27":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"28":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":2},"end":{"line":267,"column":2}},{"start":{"line":267,"column":2},"end":{"line":267,"column":2}}]},"29":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":2},"end":{"line":334,"column":2}},{"start":{"line":334,"column":2},"end":{"line":334,"column":2}}]},"30":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":2},"end":{"line":337,"column":2}},{"start":{"line":337,"column":2},"end":{"line":337,"column":2}}]},"31":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":2},"end":{"line":340,"column":2}},{"start":{"line":340,"column":2},"end":{"line":340,"column":2}}]},"32":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":18},"end":{"line":348,"column":33}},{"start":{"line":348,"column":37},"end":{"line":348,"column":63}}]},"33":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":2},"end":{"line":351,"column":2}},{"start":{"line":351,"column":2},"end":{"line":351,"column":2}}]},"34":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":4},"end":{"line":357,"column":4}},{"start":{"line":357,"column":4},"end":{"line":357,"column":4}}]},"35":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":8},"end":{"line":357,"column":21}},{"start":{"line":357,"column":25},"end":{"line":357,"column":45}}]},"36":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":363,"column":4}},{"start":{"line":363,"column":4},"end":{"line":363,"column":4}}]},"37":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":11},"end":{"line":365,"column":11}},{"start":{"line":365,"column":11},"end":{"line":365,"column":11}}]},"38":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":15},"end":{"line":365,"column":39}},{"start":{"line":365,"column":43},"end":{"line":365,"column":59}},{"start":{"line":365,"column":63},"end":{"line":365,"column":78}}]},"39":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":11},"end":{"line":369,"column":11}},{"start":{"line":369,"column":11},"end":{"line":369,"column":11}}]},"40":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":2},"end":{"line":379,"column":2}},{"start":{"line":379,"column":2},"end":{"line":379,"column":2}}]},"41":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":2},"end":{"line":382,"column":2}},{"start":{"line":382,"column":2},"end":{"line":382,"column":2}}]},"42":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":2},"end":{"line":385,"column":2}},{"start":{"line":385,"column":2},"end":{"line":385,"column":2}}]},"43":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"44":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":2},"end":{"line":401,"column":2}},{"start":{"line":401,"column":2},"end":{"line":401,"column":2}}]},"45":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":6},"end":{"line":401,"column":9}},{"start":{"line":401,"column":13},"end":{"line":401,"column":21}}]},"46":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":2},"end":{"line":415,"column":2}},{"start":{"line":415,"column":2},"end":{"line":415,"column":2}}]},"47":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":6},"end":{"line":415,"column":22}},{"start":{"line":415,"column":26},"end":{"line":415,"column":72}}]},"48":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":2},"end":{"line":418,"column":2}},{"start":{"line":418,"column":2},"end":{"line":418,"column":2}}]},"49":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":4},"end":{"line":423,"column":4}},{"start":{"line":423,"column":4},"end":{"line":423,"column":4}}]},"50":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":2},"end":{"line":441,"column":2}},{"start":{"line":441,"column":2},"end":{"line":441,"column":2}}]},"51":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":2},"end":{"line":444,"column":2}},{"start":{"line":444,"column":2},"end":{"line":444,"column":2}}]},"52":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":4},"end":{"line":449,"column":4}},{"start":{"line":449,"column":4},"end":{"line":449,"column":4}}]},"53":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":2},"end":{"line":467,"column":2}},{"start":{"line":467,"column":2},"end":{"line":467,"column":2}}]},"54":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":2},"end":{"line":470,"column":2}},{"start":{"line":470,"column":2},"end":{"line":470,"column":2}}]},"55":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":2},"end":{"line":537,"column":2}},{"start":{"line":537,"column":2},"end":{"line":537,"column":2}}]},"56":{"line":546,"type":"binary-expr","locations":[{"start":{"line":546,"column":11},"end":{"line":546,"column":55}},{"start":{"line":546,"column":59},"end":{"line":546,"column":97}}]},"57":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":2},"end":{"line":548,"column":2}},{"start":{"line":548,"column":2},"end":{"line":548,"column":2}}]},"58":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":2},"end":{"line":551,"column":2}},{"start":{"line":551,"column":2},"end":{"line":551,"column":2}}]},"59":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":6},"end":{"line":551,"column":13}},{"start":{"line":551,"column":17},"end":{"line":551,"column":26}}]},"60":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":2},"end":{"line":562,"column":2}},{"start":{"line":562,"column":2},"end":{"line":562,"column":2}}]},"61":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":9},"end":{"line":564,"column":9}},{"start":{"line":564,"column":9},"end":{"line":564,"column":9}}]},"62":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":2},"end":{"line":585,"column":2}},{"start":{"line":585,"column":2},"end":{"line":585,"column":2}}]},"63":{"line":587,"type":"if","locations":[{"start":{"line":587,"column":9},"end":{"line":587,"column":9}},{"start":{"line":587,"column":9},"end":{"line":587,"column":9}}]},"64":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":2},"end":{"line":615,"column":2}},{"start":{"line":615,"column":2},"end":{"line":615,"column":2}}]},"65":{"line":615,"type":"binary-expr","locations":[{"start":{"line":615,"column":6},"end":{"line":615,"column":19}},{"start":{"line":615,"column":24},"end":{"line":615,"column":51}},{"start":{"line":615,"column":55},"end":{"line":615,"column":78}}]},"66":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":2},"end":{"line":618,"column":2}},{"start":{"line":618,"column":2},"end":{"line":618,"column":2}}]},"67":{"line":618,"type":"binary-expr","locations":[{"start":{"line":618,"column":6},"end":{"line":618,"column":19}},{"start":{"line":618,"column":23},"end":{"line":618,"column":35}},{"start":{"line":618,"column":39},"end":{"line":618,"column":63}}]},"68":{"line":619,"type":"cond-expr","locations":[{"start":{"line":619,"column":52},"end":{"line":619,"column":64}},{"start":{"line":619,"column":67},"end":{"line":619,"column":91}}]},"69":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":2},"end":{"line":708,"column":2}},{"start":{"line":708,"column":2},"end":{"line":708,"column":2}}]},"70":{"line":731,"type":"if","locations":[{"start":{"line":731,"column":2},"end":{"line":731,"column":2}},{"start":{"line":731,"column":2},"end":{"line":731,"column":2}}]},"71":{"line":810,"type":"if","locations":[{"start":{"line":810,"column":2},"end":{"line":810,"column":2}},{"start":{"line":810,"column":2},"end":{"line":810,"column":2}}]},"72":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":2},"end":{"line":827,"column":2}},{"start":{"line":827,"column":2},"end":{"line":827,"column":2}}]},"73":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":6},"end":{"line":831,"column":6}},{"start":{"line":831,"column":6},"end":{"line":831,"column":6}}]},"74":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":2},"end":{"line":841,"column":2}},{"start":{"line":841,"column":2},"end":{"line":841,"column":2}}]},"75":{"line":845,"type":"if","locations":[{"start":{"line":845,"column":2},"end":{"line":845,"column":2}},{"start":{"line":845,"column":2},"end":{"line":845,"column":2}}]},"76":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":2},"end":{"line":851,"column":2}},{"start":{"line":851,"column":2},"end":{"line":851,"column":2}}]},"77":{"line":880,"type":"if","locations":[{"start":{"line":880,"column":2},"end":{"line":880,"column":2}},{"start":{"line":880,"column":2},"end":{"line":880,"column":2}}]},"78":{"line":883,"type":"if","locations":[{"start":{"line":883,"column":2},"end":{"line":883,"column":2}},{"start":{"line":883,"column":2},"end":{"line":883,"column":2}}]},"79":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":2},"end":{"line":887,"column":2}},{"start":{"line":887,"column":2},"end":{"line":887,"column":2}}]},"80":{"line":913,"type":"binary-expr","locations":[{"start":{"line":913,"column":38},"end":{"line":913,"column":46}},{"start":{"line":913,"column":50},"end":{"line":913,"column":72}}]},"81":{"line":914,"type":"if","locations":[{"start":{"line":914,"column":2},"end":{"line":914,"column":2}},{"start":{"line":914,"column":2},"end":{"line":914,"column":2}}]},"82":{"line":917,"type":"binary-expr","locations":[{"start":{"line":917,"column":35},"end":{"line":917,"column":43}},{"start":{"line":917,"column":47},"end":{"line":917,"column":69}}]},"83":{"line":952,"type":"binary-expr","locations":[{"start":{"line":952,"column":13},"end":{"line":952,"column":53}},{"start":{"line":953,"column":11},"end":{"line":953,"column":49}}]},"84":{"line":960,"type":"binary-expr","locations":[{"start":{"line":960,"column":13},"end":{"line":960,"column":45}},{"start":{"line":961,"column":11},"end":{"line":961,"column":69}}]},"85":{"line":1007,"type":"binary-expr","locations":[{"start":{"line":1007,"column":26},"end":{"line":1007,"column":67}},{"start":{"line":1008,"column":26},"end":{"line":1008,"column":77}}]},"86":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":2},"end":{"line":1009,"column":2}},{"start":{"line":1009,"column":2},"end":{"line":1009,"column":2}}]},"87":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":2},"end":{"line":1013,"column":2}},{"start":{"line":1013,"column":2},"end":{"line":1013,"column":2}}]},"88":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":2},"end":{"line":1024,"column":2}},{"start":{"line":1024,"column":2},"end":{"line":1024,"column":2}}]},"89":{"line":1024,"type":"binary-expr","locations":[{"start":{"line":1024,"column":6},"end":{"line":1024,"column":18}},{"start":{"line":1024,"column":22},"end":{"line":1024,"column":38}}]},"90":{"line":1028,"type":"binary-expr","locations":[{"start":{"line":1028,"column":13},"end":{"line":1028,"column":52}},{"start":{"line":1028,"column":56},"end":{"line":1028,"column":89}}]},"91":{"line":1031,"type":"if","locations":[{"start":{"line":1031,"column":2},"end":{"line":1031,"column":2}},{"start":{"line":1031,"column":2},"end":{"line":1031,"column":2}}]},"92":{"line":1031,"type":"binary-expr","locations":[{"start":{"line":1031,"column":6},"end":{"line":1031,"column":15}},{"start":{"line":1031,"column":19},"end":{"line":1031,"column":46}}]},"93":{"line":1055,"type":"if","locations":[{"start":{"line":1055,"column":2},"end":{"line":1055,"column":2}},{"start":{"line":1055,"column":2},"end":{"line":1055,"column":2}}]},"94":{"line":1069,"type":"binary-expr","locations":[{"start":{"line":1069,"column":12},"end":{"line":1069,"column":19}},{"start":{"line":1069,"column":23},"end":{"line":1069,"column":44}}]},"95":{"line":1098,"type":"if","locations":[{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}},{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}}]},"96":{"line":1112,"type":"if","locations":[{"start":{"line":1112,"column":2},"end":{"line":1112,"column":2}},{"start":{"line":1112,"column":2},"end":{"line":1112,"column":2}}]},"97":{"line":1135,"type":"if","locations":[{"start":{"line":1135,"column":2},"end":{"line":1135,"column":2}},{"start":{"line":1135,"column":2},"end":{"line":1135,"column":2}}]},"98":{"line":1139,"type":"if","locations":[{"start":{"line":1139,"column":2},"end":{"line":1139,"column":2}},{"start":{"line":1139,"column":2},"end":{"line":1139,"column":2}}]},"99":{"line":1148,"type":"if","locations":[{"start":{"line":1148,"column":4},"end":{"line":1148,"column":4}},{"start":{"line":1148,"column":4},"end":{"line":1148,"column":4}}]},"100":{"line":1151,"type":"if","locations":[{"start":{"line":1151,"column":4},"end":{"line":1151,"column":4}},{"start":{"line":1151,"column":4},"end":{"line":1151,"column":4}}]},"101":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":4},"end":{"line":1155,"column":4}},{"start":{"line":1155,"column":4},"end":{"line":1155,"column":4}}]},"102":{"line":1161,"type":"if","locations":[{"start":{"line":1161,"column":2},"end":{"line":1161,"column":2}},{"start":{"line":1161,"column":2},"end":{"line":1161,"column":2}}]},"103":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":4},"end":{"line":1171,"column":4}},{"start":{"line":1171,"column":4},"end":{"line":1171,"column":4}}]},"104":{"line":1178,"type":"if","locations":[{"start":{"line":1178,"column":2},"end":{"line":1178,"column":2}},{"start":{"line":1178,"column":2},"end":{"line":1178,"column":2}}]},"105":{"line":1180,"type":"if","locations":[{"start":{"line":1180,"column":4},"end":{"line":1180,"column":4}},{"start":{"line":1180,"column":4},"end":{"line":1180,"column":4}}]},"106":{"line":1180,"type":"binary-expr","locations":[{"start":{"line":1180,"column":8},"end":{"line":1180,"column":22}},{"start":{"line":1180,"column":26},"end":{"line":1180,"column":42}}]},"107":{"line":1185,"type":"if","locations":[{"start":{"line":1185,"column":6},"end":{"line":1185,"column":6}},{"start":{"line":1185,"column":6},"end":{"line":1185,"column":6}}]},"108":{"line":1197,"type":"binary-expr","locations":[{"start":{"line":1197,"column":10},"end":{"line":1197,"column":34}},{"start":{"line":1197,"column":38},"end":{"line":1197,"column":61}}]},"109":{"line":1207,"type":"if","locations":[{"start":{"line":1207,"column":4},"end":{"line":1207,"column":4}},{"start":{"line":1207,"column":4},"end":{"line":1207,"column":4}}]},"110":{"line":1223,"type":"if","locations":[{"start":{"line":1223,"column":4},"end":{"line":1223,"column":4}},{"start":{"line":1223,"column":4},"end":{"line":1223,"column":4}}]}},"code":["'use strict';","","var _ = require('lodash');","var $ = require('../util/preconditions');","var buffer = require('buffer');","var compare = Buffer.compare || require('buffer-compare');","","var errors = require('../errors');","var BufferUtil = require('../util/buffer');","var JSUtil = require('../util/js');","var BufferReader = require('../encoding/bufferreader');","var BufferWriter = require('../encoding/bufferwriter');","var Hash = require('../crypto/hash');","var Signature = require('../crypto/signature');","var Sighash = require('./sighash');","","var Address = require('../address');","var UnspentOutput = require('./unspentoutput');","var Input = require('./input');","var PublicKeyHashInput = Input.PublicKeyHash;","var PublicKeyInput = Input.PublicKey;","var MultiSigScriptHashInput = Input.MultiSigScriptHash;","var MultiSigInput = Input.MultiSig;","var Output = require('./output');","var Script = require('../script');","var PrivateKey = require('../privatekey');","var BN = require('../crypto/bn');","","/**"," * Represents a transaction, a set of inputs and outputs to change ownership of tokens"," *"," * @param {*} serialized"," * @constructor"," */","function Transaction(serialized) {","  if (!(this instanceof Transaction)) {","    return new Transaction(serialized);","  }","  this.inputs = [];","  this.outputs = [];","  this._inputAmount = undefined;","  this._outputAmount = undefined;","","  if (serialized) {","    if (serialized instanceof Transaction) {","      return Transaction.shallowCopy(serialized);","    } else if (JSUtil.isHexa(serialized)) {","      this.fromString(serialized);","    } else if (BufferUtil.isBuffer(serialized)) {","      this.fromBuffer(serialized);","    } else if (_.isObject(serialized)) {","      this.fromObject(serialized);","    } else {","      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');","    }","  } else {","    this._newTransaction();","  }","}","","var CURRENT_VERSION = 1;","var DEFAULT_NLOCKTIME = 0;","var MAX_BLOCK_SIZE = 1000000;","","// Minimum amount for an output for it not to be considered a dust output","Transaction.DUST_AMOUNT = 546;","","// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference","Transaction.FEE_SECURITY_MARGIN = 15;","","// max amount of satoshis in circulation","Transaction.MAX_MONEY = 21000000 * 1e8;","","// nlocktime limit to be considered block height rather than a timestamp","Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;","","// Max value for an unsigned 32 bit value","Transaction.NLOCKTIME_MAX_VALUE = 4294967295;","","// Value used for fee estimation (satoshis per kilobyte)","Transaction.FEE_PER_KB = 10000;","","// Safe upper bound for change address script size in bytes","Transaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;","Transaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;","","/* Constructors and Serialization */","","/**"," * Create a 'shallow' copy of the transaction, by serializing and deserializing"," * it dropping any additional information that inputs and outputs may have hold"," *"," * @param {Transaction} transaction"," * @return {Transaction}"," */","Transaction.shallowCopy = function(transaction) {","  var copy = new Transaction(transaction.toBuffer());","  return copy;","};","","var hashProperty = {","  configurable: false,","  enumerable: true,","  get: function() {","    return new BufferReader(this._getHash()).readReverse().toString('hex');","  }","};","Object.defineProperty(Transaction.prototype, 'hash', hashProperty);","Object.defineProperty(Transaction.prototype, 'id', hashProperty);","","var ioProperty = {","  configurable: false,","  enumerable: true,","  get: function() {","    return this._getInputAmount();","  }","};","Object.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);","ioProperty.get = function() {","  return this._getOutputAmount();","};","Object.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);","","/**"," * Retrieve the little endian hash of the transaction (used for serialization)"," * @return {Buffer}"," */","Transaction.prototype._getHash = function() {","  return Hash.sha256sha256(this.toBuffer());","};","","/**"," * Retrieve a hexa string that can be used with bitcoind's CLI interface"," * (decoderawtransaction, sendrawtransaction)"," *"," * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,"," *   it's expected to contain a set of flags to skip certain tests:"," * * `disableAll`: disable all checks"," * * `disableSmallFees`: disable checking for fees that are too small"," * * `disableLargeFees`: disable checking for fees that are too large"," * * `disableIsFullySigned`: disable checking if all inputs are fully signed"," * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts"," * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts"," * @return {string}"," */","Transaction.prototype.serialize = function(unsafe) {","  if (true === unsafe || unsafe && unsafe.disableAll) {","    return this.uncheckedSerialize();","  } else {","    return this.checkedSerialize(unsafe);","  }","};","","Transaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function() {","  return this.toBuffer().toString('hex');","};","","/**"," * Retrieve a hexa string that can be used with bitcoind's CLI interface"," * (decoderawtransaction, sendrawtransaction)"," *"," * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}"," * @return {string}"," */","Transaction.prototype.checkedSerialize = function(opts) {","  var serializationError = this.getSerializationError(opts);","  if (serializationError) {","    serializationError.message += ' Use Transaction#uncheckedSerialize if you want to skip security checks. ' +","      'See http://bitcore.io/guide/transaction.html#Serialization for more info.';","    throw serializationError;","  }","  return this.uncheckedSerialize();","};","","Transaction.prototype.invalidSatoshis = function() {","  var invalid = false;","  for (var i = 0; i < this.outputs.length; i++) {","    if (this.outputs[i].invalidSatoshis()) {","      invalid = true;","    }","  }","  return invalid;","};","","/**"," * Retrieve a possible error that could appear when trying to serialize and"," * broadcast this transaction."," *"," * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}"," * @return {bitcore.Error}"," */","Transaction.prototype.getSerializationError = function(opts) {","  opts = opts || {};","","  if (this.invalidSatoshis()) {","    return new errors.Transaction.InvalidSatoshis();","  }","","  var unspent = this._getUnspentValue();","  var unspentError;","  if (unspent < 0) {","    if (!opts.disableMoreOutputThanInput) {","      unspentError = new errors.Transaction.InvalidOutputAmountSum();","    }","  } else {","    unspentError = this._hasFeeError(opts, unspent);","  }","","  return unspentError ||","    this._hasDustOutputs(opts) ||","    this._isMissingSignatures(opts);","};","","Transaction.prototype._hasFeeError = function(opts, unspent) {","","  if (!_.isUndefined(this._fee) && this._fee !== unspent) {","    return new errors.Transaction.FeeError.Different(","      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee","    );","  }","","  if (!opts.disableLargeFees) {","    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());","    if (unspent > maximumFee) {","      if (this._missingChange()) {","        return new errors.Transaction.ChangeAddressMissing(","          'Fee is too large and no change address was provided'","        );","      }","      return new errors.Transaction.FeeError.TooLarge(","        'expected less than ' + maximumFee + ' but got ' + unspent","      );","    }","  }","","  if (!opts.disableSmallFees) {","    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);","    if (unspent < minimumFee) {","      return new errors.Transaction.FeeError.TooSmall(","        'expected more than ' + minimumFee + ' but got ' + unspent","      );","    }","  }","};","","Transaction.prototype._missingChange = function() {","  return !this._changeScript;","};","","Transaction.prototype._hasDustOutputs = function(opts) {","  if (opts.disableDustOutputs) {","    return;","  }","  var index, output;","  for (index in this.outputs) {","    output = this.outputs[index];","    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {","      return new errors.Transaction.DustOutputs();","    }","  }","};","","Transaction.prototype._isMissingSignatures = function(opts) {","  if (opts.disableIsFullySigned) {","    return;","  }","  if (!this.isFullySigned()) {","    return new errors.Transaction.MissingSignatures();","  }","};","","Transaction.prototype.inspect = function() {","  return '<Transaction: ' + this.uncheckedSerialize() + '>';","};","","Transaction.prototype.toBuffer = function() {","  var writer = new BufferWriter();","  return this.toBufferWriter(writer).toBuffer();","};","","Transaction.prototype.toBufferWriter = function(writer) {","  writer.writeUInt32LE(this.version);","  writer.writeVarintNum(this.inputs.length);","  _.each(this.inputs, function(input) {","    input.toBufferWriter(writer);","  });","  writer.writeVarintNum(this.outputs.length);","  _.each(this.outputs, function(output) {","    output.toBufferWriter(writer);","  });","  writer.writeUInt32LE(this.nLockTime);","  return writer;","};","","Transaction.prototype.fromBuffer = function(buffer) {","  var reader = new BufferReader(buffer);","  return this.fromBufferReader(reader);","};","","Transaction.prototype.fromBufferReader = function(reader) {","  $.checkArgument(!reader.finished(), 'No transaction data received');","  var i, sizeTxIns, sizeTxOuts;","","  this.version = reader.readUInt32LE();","  sizeTxIns = reader.readVarintNum();","  for (i = 0; i < sizeTxIns; i++) {","    var input = Input.fromBufferReader(reader);","    this.inputs.push(input);","  }","  sizeTxOuts = reader.readVarintNum();","  for (i = 0; i < sizeTxOuts; i++) {","    this.outputs.push(Output.fromBufferReader(reader));","  }","  this.nLockTime = reader.readUInt32LE();","  return this;","};","","Transaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {","  var inputs = [];","  this.inputs.forEach(function(input) {","    inputs.push(input.toObject());","  });","  var outputs = [];","  this.outputs.forEach(function(output) {","    outputs.push(output.toObject());","  });","  var obj = {","    hash: this.hash,","    version: this.version,","    inputs: inputs,","    outputs: outputs,","    nLockTime: this.nLockTime","  };","  if (this._changeScript) {","    obj.changeScript = this._changeScript.toString();","  }","  if (!_.isUndefined(this._changeIndex)) {","    obj.changeIndex = this._changeIndex;","  }","  if (!_.isUndefined(this._fee)) {","    obj.fee = this._fee;","  }","  return obj;","};","","Transaction.prototype.fromObject = function fromObject(arg) {","  /* jshint maxstatements: 20 */","  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);","  var self = this;","  var transaction;","  if (arg instanceof Transaction) {","    transaction = transaction.toObject();","  } else {","    transaction = arg;","  }","  _.each(transaction.inputs, function(input) {","    if (!input.output || !input.output.script) {","      self.uncheckedAddInput(new Input(input));","      return;","    }","    var script = new Script(input.output.script);","    var txin;","    if (script.isPublicKeyHashOut()) {","      txin = new Input.PublicKeyHash(input);","    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {","      txin = new Input.MultiSigScriptHash(","        input, input.publicKeys, input.threshold, input.signatures","      );","    } else if (script.isPublicKeyOut()) {","      txin = new Input.PublicKey(input);","    } else {","      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);","    }","    self.addInput(txin);","  });","  _.each(transaction.outputs, function(output) {","    self.addOutput(new Output(output));","  });","  if (transaction.changeIndex) {","    this._changeIndex = transaction.changeIndex;","  }","  if (transaction.changeScript) {","    this._changeScript = new Script(transaction.changeScript);","  }","  if (transaction.fee) {","    this._fee = transaction.fee;","  }","  this.nLockTime = transaction.nLockTime;","  this.version = transaction.version;","  this._checkConsistency(arg);","  return this;","};","","Transaction.prototype._checkConsistency = function(arg) {","  if (!_.isUndefined(this._changeIndex)) {","    $.checkState(this._changeScript);","    $.checkState(this.outputs[this._changeIndex]);","    $.checkState(this.outputs[this._changeIndex].script.toString() ===","      this._changeScript.toString());","  }","  if (arg && arg.hash) {","    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash');","  }","};","","/**"," * Sets nLockTime so that transaction is not valid until the desired date(a"," * timestamp in seconds since UNIX epoch is also accepted)"," *"," * @param {Date | Number} time"," * @return {Transaction} this"," */","Transaction.prototype.lockUntilDate = function(time) {","  $.checkArgument(time);","  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {","    throw new errors.Transaction.LockTimeTooEarly();","  }","  if (_.isDate(time)) {","    time = time.getTime() / 1000;","  }","","  for (var i = 0; i < this.inputs.length; i++) {","    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){","      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;","    }","  }","","  this.nLockTime = time;","  return this;","};","","/**"," * Sets nLockTime so that transaction is not valid until the desired block"," * height."," *"," * @param {Number} height"," * @return {Transaction} this"," */","Transaction.prototype.lockUntilBlockHeight = function(height) {","  $.checkArgument(_.isNumber(height));","  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {","    throw new errors.Transaction.BlockHeightTooHigh();","  }","  if (height < 0) {","    throw new errors.Transaction.NLockTimeOutOfRange();","  }","","  for (var i = 0; i < this.inputs.length; i++) {","    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){","      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;","    }","  }","","","  this.nLockTime = height;","  return this;","};","","/**"," *  Returns a semantic version of the transaction's nLockTime."," *  @return {Number|Date}"," *  If nLockTime is 0, it returns null,"," *  if it is < 500000000, it returns a block height (number)"," *  else it returns a Date object."," */","Transaction.prototype.getLockTime = function() {","  if (!this.nLockTime) {","    return null;","  }","  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {","    return this.nLockTime;","  }","  return new Date(1000 * this.nLockTime);","};","","Transaction.prototype.fromString = function(string) {","  this.fromBuffer(new buffer.Buffer(string, 'hex'));","};","","Transaction.prototype._newTransaction = function() {","  this.version = CURRENT_VERSION;","  this.nLockTime = DEFAULT_NLOCKTIME;","};","","/* Transaction creation interface */","","/**"," * @typedef {Object} Transaction~fromObject"," * @property {string} prevTxId"," * @property {number} outputIndex"," * @property {(Buffer|string|Script)} script"," * @property {number} satoshis"," */","","/**"," * Add an input to this transaction. This is a high level interface"," * to add an input, for more control, use @{link Transaction#addInput}."," *"," * Can receive, as output information, the output of bitcoind's `listunspent` command,"," * and a slightly fancier format recognized by bitcore:"," *"," * ```"," * {"," *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',"," *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',"," *  outputIndex: 0,"," *  script: Script.empty(),"," *  satoshis: 1020000"," * }"," * ```"," * Where `address` can be either a string or a bitcore Address object. The"," * same is true for `script`, which can be a string or a bitcore Script."," *"," * Beware that this resets all the signatures for inputs (in further versions,"," * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset)."," *"," * @example"," * ```javascript"," * var transaction = new Transaction();"," *"," * // From a pay to public key hash output from bitcoind's listunspent"," * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});"," *"," * // From a pay to public key hash output"," * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});"," *"," * // From a multisig P2SH output"," * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},"," *                  ['03000...', '02000...'], 2);"," * ```"," *"," * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo"," * @param {Array=} pubkeys"," * @param {number=} threshold"," */","Transaction.prototype.from = function(utxo, pubkeys, threshold) {","  if (_.isArray(utxo)) {","    var self = this;","    _.each(utxo, function(utxo) {","      self.from(utxo, pubkeys, threshold);","    });","    return this;","  }","  var exists = _.any(this.inputs, function(input) {","    // TODO: Maybe prevTxId should be a string? Or defined as read only property?","    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;","  });","  if (exists) {","    return this;","  }","  if (pubkeys && threshold) {","    this._fromMultisigUtxo(utxo, pubkeys, threshold);","  } else {","    this._fromNonP2SH(utxo);","  }","  return this;","};","","Transaction.prototype._fromNonP2SH = function(utxo) {","  var clazz;","  utxo = new UnspentOutput(utxo);","  if (utxo.script.isPublicKeyHashOut()) {","    clazz = PublicKeyHashInput;","  } else if (utxo.script.isPublicKeyOut()) {","    clazz = PublicKeyInput;","  } else {","    clazz = Input;","  }","  this.addInput(new clazz({","    output: new Output({","      script: utxo.script,","      satoshis: utxo.satoshis","    }),","    prevTxId: utxo.txId,","    outputIndex: utxo.outputIndex,","    script: Script.empty()","  }));","};","","Transaction.prototype._fromMultisigUtxo = function(utxo, pubkeys, threshold) {","  $.checkArgument(threshold <= pubkeys.length,","    'Number of required signatures must be greater than the number of public keys');","  var clazz;","  utxo = new UnspentOutput(utxo);","  if (utxo.script.isMultisigOut()) {","    clazz = MultiSigInput;","  } else if (utxo.script.isScriptHashOut()) {","    clazz = MultiSigScriptHashInput;","  } else {","    throw new Error(\"@TODO\");","  }","  this.addInput(new clazz({","    output: new Output({","      script: utxo.script,","      satoshis: utxo.satoshis","    }),","    prevTxId: utxo.txId,","    outputIndex: utxo.outputIndex,","    script: Script.empty()","  }, pubkeys, threshold));","};","","/**"," * Add an input to this transaction. The input must be an instance of the `Input` class."," * It should have information about the Output that it's spending, but if it's not already"," * set, two additional parameters, `outputScript` and `satoshis` can be provided."," *"," * @param {Input} input"," * @param {String|Script} outputScript"," * @param {number} satoshis"," * @return Transaction this, for chaining"," */","Transaction.prototype.addInput = function(input, outputScript, satoshis) {","  $.checkArgumentType(input, Input, 'input');","  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {","    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');","  }","  if (!input.output && outputScript && !_.isUndefined(satoshis)) {","    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);","    $.checkArgumentType(satoshis, 'number', 'satoshis');","    input.output = new Output({","      script: outputScript,","      satoshis: satoshis","    });","  }","  return this.uncheckedAddInput(input);","};","","/**"," * Add an input to this transaction, without checking that the input has information about"," * the output that it's spending."," *"," * @param {Input} input"," * @return Transaction this, for chaining"," */","Transaction.prototype.uncheckedAddInput = function(input) {","  $.checkArgumentType(input, Input, 'input');","  this.inputs.push(input);","  this._inputAmount = undefined;","  this._updateChangeOutput();","  return this;","};","","/**"," * Returns true if the transaction has enough info on all inputs to be correctly validated"," *"," * @return {boolean}"," */","Transaction.prototype.hasAllUtxoInfo = function() {","  return _.all(this.inputs.map(function(input) {","    return !!input.output;","  }));","};","","/**"," * Manually set the fee for this transaction. Beware that this resets all the signatures"," * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not"," * be reset)."," *"," * @param {number} amount satoshis to be sent"," * @return {Transaction} this, for chaining"," */","Transaction.prototype.fee = function(amount) {","  $.checkArgument(_.isNumber(amount), 'amount must be a number');","  this._fee = amount;","  this._updateChangeOutput();","  return this;","};","","/**"," * Manually set the fee per KB for this transaction. Beware that this resets all the signatures"," * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not"," * be reset)."," *"," * @param {number} amount satoshis per KB to be sent"," * @return {Transaction} this, for chaining"," */","Transaction.prototype.feePerKb = function(amount) {","  $.checkArgument(_.isNumber(amount), 'amount must be a number');","  this._feePerKb = amount;","  this._updateChangeOutput();","  return this;","};","","/* Output management */","","/**"," * Set the change address for this transaction"," *"," * Beware that this resets all the signatures for inputs (in further versions,"," * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset)."," *"," * @param {Address} address An address for change to be sent to."," * @return {Transaction} this, for chaining"," */","Transaction.prototype.change = function(address) {","  $.checkArgument(address, 'address is required');","  this._changeScript = Script.fromAddress(address);","  this._updateChangeOutput();","  return this;","};","","","/**"," * @return {Output} change output, if it exists"," */","Transaction.prototype.getChangeOutput = function() {","  if (!_.isUndefined(this._changeIndex)) {","    return this.outputs[this._changeIndex];","  }","  return null;","};","","/**"," * @typedef {Object} Transaction~toObject"," * @property {(string|Address)} address"," * @property {number} satoshis"," */","","/**"," * Add an output to the transaction."," *"," * Beware that this resets all the signatures for inputs (in further versions,"," * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset)."," *"," * @param {(string|Address|Array.<Transaction~toObject>)} address"," * @param {number} amount in satoshis"," * @return {Transaction} this, for chaining"," */","Transaction.prototype.to = function(address, amount) {","  if (_.isArray(address)) {","    var self = this;","    _.each(address, function(to) {","      self.to(to.address, to.satoshis);","    });","    return this;","  }","","  $.checkArgument(","    JSUtil.isNaturalNumber(amount),","    'Amount is expected to be a positive integer'","  );","  this.addOutput(new Output({","    script: Script(new Address(address)),","    satoshis: amount","  }));","  return this;","};","","/**"," * Add an OP_RETURN output to the transaction."," *"," * Beware that this resets all the signatures for inputs (in further versions,"," * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset)."," *"," * @param {Buffer|string} value the data to be stored in the OP_RETURN output."," *    In case of a string, the UTF-8 representation will be stored"," * @return {Transaction} this, for chaining"," */","Transaction.prototype.addData = function(value) {","  this.addOutput(new Output({","    script: Script.buildDataOut(value),","    satoshis: 0","  }));","  return this;","};","","","/**"," * Add an output to the transaction."," *"," * @param {Output} output the output to add."," * @return {Transaction} this, for chaining"," */","Transaction.prototype.addOutput = function(output) {","  $.checkArgumentType(output, Output, 'output');","  this._addOutput(output);","  this._updateChangeOutput();","  return this;","};","","","/**"," * Remove all outputs from the transaction."," *"," * @return {Transaction} this, for chaining"," */","Transaction.prototype.clearOutputs = function() {","  this.outputs = [];","  this._clearSignatures();","  this._outputAmount = undefined;","  this._changeIndex = undefined;","  this._updateChangeOutput();","  return this;","};","","","Transaction.prototype._addOutput = function(output) {","  this.outputs.push(output);","  this._outputAmount = undefined;","};","","","/**"," * Calculates or gets the total output amount in satoshis"," *"," * @return {Number} the transaction total output amount"," */","Transaction.prototype._getOutputAmount = function() {","  if (_.isUndefined(this._outputAmount)) {","    var self = this;","    this._outputAmount = 0;","    _.each(this.outputs, function(output) {","      self._outputAmount += output.satoshis;","    });","  }","  return this._outputAmount;","};","","","/**"," * Calculates or gets the total input amount in satoshis"," *"," * @return {Number} the transaction total input amount"," */","Transaction.prototype._getInputAmount = function() {","  if (_.isUndefined(this._inputAmount)) {","    var self = this;","    this._inputAmount = 0;","    _.each(this.inputs, function(input) {","      if (_.isUndefined(input.output)) {","        throw new errors.Transaction.Input.MissingPreviousOutput();","      }","      self._inputAmount += input.output.satoshis;","    });","  }","  return this._inputAmount;","};","","Transaction.prototype._updateChangeOutput = function() {","  if (!this._changeScript) {","    return;","  }","  this._clearSignatures();","  if (!_.isUndefined(this._changeIndex)) {","    this._removeOutput(this._changeIndex);","  }","  var available = this._getUnspentValue();","  var fee = this.getFee();","  var changeAmount = available - fee;","  if (changeAmount > 0) {","    this._changeIndex = this.outputs.length;","    this._addOutput(new Output({","      script: this._changeScript,","      satoshis: changeAmount","    }));","  } else {","    this._changeIndex = undefined;","  }","};","/**"," * Calculates the fee of the transaction."," *"," * If there's a fixed fee set, return that."," *"," * If there is no change output set, the fee is the"," * total value of the outputs minus inputs. Note that"," * a serialized transaction only specifies the value"," * of its outputs. (The value of inputs are recorded"," * in the previous transaction outputs being spent.)"," * This method therefore raises a \"MissingPreviousOutput\""," * error when called on a serialized transaction."," *"," * If there's no fee set and no change address,"," * estimate the fee based on size."," *"," * @return {Number} fee of this transaction in satoshis"," */","Transaction.prototype.getFee = function() {","  if (this.isCoinbase()) {","    return 0;","  }","  if (!_.isUndefined(this._fee)) {","    return this._fee;","  }","  // if no change output is set, fees should equal all the unspent amount","  if (!this._changeScript) {","    return this._getUnspentValue();","  }","  return this._estimateFee();","};","","/**"," * Estimates fee from serialized transaction size in bytes."," */","Transaction.prototype._estimateFee = function() {","  var estimatedSize = this._estimateSize();","  var available = this._getUnspentValue();","  return Transaction._estimateFee(estimatedSize, available, this._feePerKb);","};","","Transaction.prototype._getUnspentValue = function() {","  return this._getInputAmount() - this._getOutputAmount();","};","","Transaction.prototype._clearSignatures = function() {","  _.each(this.inputs, function(input) {","    input.clearSignatures();","  });","};","","Transaction._estimateFee = function(size, amountAvailable, feePerKb) {","  var fee = Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);","  if (amountAvailable > fee) {","    size += Transaction.CHANGE_OUTPUT_MAX_SIZE;","  }","  return Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);","};","","Transaction.prototype._estimateSize = function() {","  var result = Transaction.MAXIMUM_EXTRA_SIZE;","  _.each(this.inputs, function(input) {","    result += input._estimateSize();","  });","  _.each(this.outputs, function(output) {","    result += output.script.toBuffer().length + 9;","  });","  return result;","};","","Transaction.prototype._removeOutput = function(index) {","  var output = this.outputs[index];","  this.outputs = _.without(this.outputs, output);","  this._outputAmount = undefined;","};","","Transaction.prototype.removeOutput = function(index) {","  this._removeOutput(index);","  this._updateChangeOutput();","};","","/**"," * Sort a transaction's inputs and outputs according to BIP69"," *"," * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}"," * @return {Transaction} this"," */","Transaction.prototype.sort = function() {","  this.sortInputs(function(inputs) {","    var copy = Array.prototype.concat.apply([], inputs);","    copy.sort(function(first, second) {","      return compare(first.prevTxId, second.prevTxId)","        || first.outputIndex - second.outputIndex;","    });","    return copy;","  });","  this.sortOutputs(function(outputs) {","    var copy = Array.prototype.concat.apply([], outputs);","    copy.sort(function(first, second) {","      return first.satoshis - second.satoshis","        || compare(first.script.toBuffer(), second.script.toBuffer());","    });","    return copy;","  });","  return this;","};","","/**"," * Randomize this transaction's outputs ordering. The shuffling algorithm is a"," * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle()."," *"," * @return {Transaction} this"," */","Transaction.prototype.shuffleOutputs = function() {","  return this.sortOutputs(_.shuffle);","};","","/**"," * Sort this transaction's outputs, according to a given sorting function that"," * takes an array as argument and returns a new array, with the same elements"," * but with a different order. The argument function MUST NOT modify the order"," * of the original array"," *"," * @param {Function} sortingFunction"," * @return {Transaction} this"," */","Transaction.prototype.sortOutputs = function(sortingFunction) {","  var outs = sortingFunction(this.outputs);","  return this._newOutputOrder(outs);","};","","/**"," * Sort this transaction's inputs, according to a given sorting function that"," * takes an array as argument and returns a new array, with the same elements"," * but with a different order."," *"," * @param {Function} sortingFunction"," * @return {Transaction} this"," */","Transaction.prototype.sortInputs = function(sortingFunction) {","  this.inputs = sortingFunction(this.inputs);","  this._clearSignatures();","  return this;","};","","Transaction.prototype._newOutputOrder = function(newOutputs) {","  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||","                          _.difference(this.outputs, newOutputs).length !== 0);","  if (isInvalidSorting) {","    throw new errors.Transaction.InvalidSorting();","  }","","  if (!_.isUndefined(this._changeIndex)) {","    var changeOutput = this.outputs[this._changeIndex];","    this._changeIndex = _.findIndex(newOutputs, changeOutput);","  }","","  this.outputs = newOutputs;","  return this;","};","","Transaction.prototype.removeInput = function(txId, outputIndex) {","  var index;","  if (!outputIndex && _.isNumber(txId)) {","    index = txId;","  } else {","    index = _.findIndex(this.inputs, function(input) {","      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;","    });","  }","  if (index < 0 || index >= this.inputs.length) {","    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);","  }","  var input = this.inputs[index];","  this.inputs = _.without(this.inputs, input);","  this._inputAmount = undefined;","  this._updateChangeOutput();","};","","/* Signature handling */","","/**"," * Sign the transaction using one or more private keys."," *"," * It tries to sign each input, verifying that the signature will be valid"," * (matches a public key)."," *"," * @param {Array|String|PrivateKey} privateKey"," * @param {number} sigtype"," * @return {Transaction} this, for chaining"," */","Transaction.prototype.sign = function(privateKey, sigtype) {","  $.checkState(this.hasAllUtxoInfo());","  var self = this;","  if (_.isArray(privateKey)) {","    _.each(privateKey, function(privateKey) {","      self.sign(privateKey, sigtype);","    });","    return this;","  }","  _.each(this.getSignatures(privateKey, sigtype), function(signature) {","    self.applySignature(signature);","  });","  return this;","};","","Transaction.prototype.getSignatures = function(privKey, sigtype) {","  privKey = new PrivateKey(privKey);","  sigtype = sigtype || Signature.SIGHASH_ALL;","  var transaction = this;","  var results = [];","  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());","  _.each(this.inputs, function forEachInput(input, index) {","    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function(signature) {","      results.push(signature);","    });","  });","  return results;","};","","/**"," * Add a signature to the transaction"," *"," * @param {Object} signature"," * @param {number} signature.inputIndex"," * @param {number} signature.sigtype"," * @param {PublicKey} signature.publicKey"," * @param {Signature} signature.signature"," * @return {Transaction} this, for chaining"," */","Transaction.prototype.applySignature = function(signature) {","  this.inputs[signature.inputIndex].addSignature(this, signature);","  return this;","};","","Transaction.prototype.isFullySigned = function() {","  _.each(this.inputs, function(input) {","    if (input.isFullySigned === Input.prototype.isFullySigned) {","      throw new errors.Transaction.UnableToVerifySignature(","        'Unrecognized script kind, or not enough information to execute script.' +","        'This usually happens when creating a transaction from a serialized transaction'","      );","    }","  });","  return _.all(_.map(this.inputs, function(input) {","    return input.isFullySigned();","  }));","};","","Transaction.prototype.isValidSignature = function(signature) {","  var self = this;","  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {","    throw new errors.Transaction.UnableToVerifySignature(","      'Unrecognized script kind, or not enough information to execute script.' +","      'This usually happens when creating a transaction from a serialized transaction'","    );","  }","  return this.inputs[signature.inputIndex].isValidSignature(self, signature);","};","","/**"," * @returns {bool} whether the signature is valid for this transaction input"," */","Transaction.prototype.verifySignature = function(sig, pubkey, nin, subscript) {","  return Sighash.verify(this, sig, pubkey, nin, subscript);","};","","/**"," * Check that a transaction passes basic sanity tests. If not, return a string"," * describing the error. This function contains the same logic as"," * CheckTransaction in bitcoin core."," */","Transaction.prototype.verify = function() {","  // Basic checks that don't depend on any context","  if (this.inputs.length === 0) {","    return 'transaction txins empty';","  }","","  if (this.outputs.length === 0) {","    return 'transaction txouts empty';","  }","","  // Check for negative or overflow output values","  var valueoutbn = new BN(0);","  for (var i = 0; i < this.outputs.length; i++) {","    var txout = this.outputs[i];","","    if (txout.invalidSatoshis()) {","      return 'transaction txout ' + i + ' satoshis is invalid';","    }","    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {","      return 'transaction txout ' + i + ' greater than MAX_MONEY';","    }","    valueoutbn = valueoutbn.add(txout._satoshisBN);","    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {","      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';","    }","  }","","  // Size limits","  if (this.toBuffer().length > MAX_BLOCK_SIZE) {","    return 'transaction over the maximum block size';","  }","","  // Check for duplicate inputs","  var txinmap = {};","  for (i = 0; i < this.inputs.length; i++) {","    var txin = this.inputs[i];","","    var inputid = txin.prevTxId + ':' + txin.outputIndex;","    if (!_.isUndefined(txinmap[inputid])) {","      return 'transaction input ' + i + ' duplicate input';","    }","    txinmap[inputid] = true;","  }","","  var isCoinbase = this.isCoinbase();","  if (isCoinbase) {","    var buf = this.inputs[0]._scriptBuffer;","    if (buf.length < 2 || buf.length > 100) {","      return 'coinbase transaction script size invalid';","    }","  } else {","    for (i = 0; i < this.inputs.length; i++) {","      if (this.inputs[i].isNull()) {","        return 'transaction input ' + i + ' has null input';","      }","    }","  }","  return true;","};","","/**"," * Analogous to bitcoind's IsCoinBase function in transaction.h"," */","Transaction.prototype.isCoinbase = function() {","  return (this.inputs.length === 1 && this.inputs[0].isNull());","};","","/**"," * Determines if this transaction can be replaced in the mempool with another"," * transaction that provides a sufficiently higher fee (RBF)."," */","Transaction.prototype.isRBF = function() {","  for (var i = 0; i < this.inputs.length; i++) {","    var input = this.inputs[i];","    if (input.sequenceNumber < Input.MAXINT - 1) {","      return true;","    }","  }","  return false;","};","","/**"," * Enable this transaction to be replaced in the mempool (RBF) if a transaction"," * includes a sufficiently higher fee. It will set the sequenceNumber to"," * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not"," * already enable RBF."," */","Transaction.prototype.enableRBF = function() {","  for (var i = 0; i < this.inputs.length; i++) {","    var input = this.inputs[i];","    if (input.sequenceNumber >= Input.MAXINT - 1) {","      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;","    }","  }","  return this;","};","","module.exports = Transaction;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"35":1,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"57":0,"61":1,"62":1,"63":1,"66":1,"69":1,"72":1,"75":1,"78":1,"81":1,"84":1,"85":1,"96":1,"97":0,"98":0,"101":1,"105":16,"108":1,"109":1,"111":1,"115":8,"118":1,"119":1,"120":8,"122":1,"128":1,"129":16,"146":1,"147":0,"148":0,"150":0,"154":1,"155":0,"165":1,"166":0,"167":0,"168":0,"170":0,"172":0,"175":1,"176":0,"177":0,"178":0,"179":0,"182":0,"192":1,"193":0,"195":0,"196":0,"199":0,"200":0,"201":0,"202":0,"203":0,"206":0,"209":0,"214":1,"216":0,"217":0,"222":0,"223":0,"224":0,"225":0,"226":0,"230":0,"236":0,"237":0,"238":0,"239":0,"246":1,"247":0,"250":1,"251":0,"252":0,"254":0,"255":0,"256":0,"257":0,"258":0,"263":1,"264":0,"265":0,"267":0,"268":0,"272":1,"273":0,"276":1,"277":16,"278":16,"281":1,"282":16,"283":16,"284":0,"285":0,"287":0,"288":0,"289":0,"291":0,"292":0,"295":1,"296":0,"297":0,"300":1,"301":0,"302":0,"304":0,"305":0,"306":0,"307":0,"308":0,"310":0,"311":0,"312":0,"314":0,"315":0,"318":1,"319":0,"320":0,"321":0,"323":0,"324":0,"325":0,"327":0,"334":0,"335":0,"337":0,"338":0,"340":0,"341":0,"343":0,"346":1,"348":0,"349":0,"350":0,"351":0,"352":0,"354":0,"356":0,"357":0,"358":0,"359":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"369":0,"370":0,"372":0,"374":0,"376":0,"377":0,"379":0,"380":0,"382":0,"383":0,"385":0,"386":0,"388":0,"389":0,"390":0,"391":0,"394":1,"395":0,"396":0,"397":0,"398":0,"401":0,"402":0,"413":1,"414":0,"415":0,"416":0,"418":0,"419":0,"422":0,"423":0,"424":0,"428":0,"429":0,"439":1,"440":0,"441":0,"442":0,"444":0,"445":0,"448":0,"449":0,"450":0,"455":0,"456":0,"466":1,"467":0,"468":0,"470":0,"471":0,"473":0,"476":1,"477":0,"480":1,"481":0,"482":0,"536":1,"537":0,"538":0,"539":0,"540":0,"542":0,"544":0,"546":0,"548":0,"549":0,"551":0,"552":0,"554":0,"556":0,"559":1,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"567":0,"569":0,"580":1,"581":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"590":0,"592":0,"613":1,"614":0,"615":0,"616":0,"618":0,"619":0,"620":0,"621":0,"626":0,"636":1,"637":0,"638":0,"639":0,"640":0,"641":0,"649":1,"650":0,"651":0,"663":1,"664":0,"665":0,"666":0,"667":0,"678":1,"679":0,"680":0,"681":0,"682":0,"696":1,"697":0,"698":0,"699":0,"700":0,"707":1,"708":0,"709":0,"711":0,"730":1,"731":0,"732":0,"733":0,"734":0,"736":0,"739":0,"743":0,"747":0,"760":1,"761":0,"765":0,"775":1,"776":0,"777":0,"778":0,"779":0,"788":1,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"798":1,"799":0,"800":0,"809":1,"810":8,"811":1,"812":1,"813":1,"814":0,"817":8,"826":1,"827":8,"828":1,"829":1,"830":1,"831":0,"832":0,"834":0,"837":8,"840":1,"841":0,"842":0,"844":0,"845":0,"846":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"858":0,"879":1,"880":0,"881":0,"883":0,"884":0,"887":0,"888":0,"890":0,"896":1,"897":0,"898":0,"899":0,"902":1,"903":0,"906":1,"907":0,"908":0,"912":1,"913":0,"914":0,"915":0,"917":0,"920":1,"921":0,"922":0,"923":0,"925":0,"926":0,"928":0,"931":1,"932":0,"933":0,"934":0,"937":1,"938":0,"939":0,"948":1,"949":0,"950":0,"951":0,"952":0,"955":0,"957":0,"958":0,"959":0,"960":0,"963":0,"965":0,"974":1,"975":0,"987":1,"988":0,"989":0,"1000":1,"1001":0,"1002":0,"1003":0,"1006":1,"1007":0,"1009":0,"1010":0,"1013":0,"1014":0,"1015":0,"1018":0,"1019":0,"1022":1,"1023":0,"1024":0,"1025":0,"1027":0,"1028":0,"1031":0,"1032":0,"1034":0,"1035":0,"1036":0,"1037":0,"1052":1,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1059":0,"1061":0,"1062":0,"1064":0,"1067":1,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1078":0,"1091":1,"1092":0,"1093":0,"1096":1,"1097":0,"1098":0,"1099":0,"1105":0,"1106":0,"1110":1,"1111":0,"1112":0,"1113":0,"1118":0,"1124":1,"1125":0,"1133":1,"1135":0,"1136":0,"1139":0,"1140":0,"1144":0,"1145":0,"1146":0,"1148":0,"1149":0,"1151":0,"1152":0,"1154":0,"1155":0,"1156":0,"1161":0,"1162":0,"1166":0,"1167":0,"1168":0,"1170":0,"1171":0,"1172":0,"1174":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1184":0,"1185":0,"1186":0,"1190":0,"1196":1,"1197":0,"1204":1,"1205":0,"1206":0,"1207":0,"1208":0,"1211":0,"1220":1,"1221":0,"1222":0,"1223":0,"1224":0,"1227":0,"1230":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/sighash.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/sighash.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"sighash","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":81}}},"2":{"name":"sign","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":75}}},"3":{"name":"verify","line":122,"loc":{"start":{"line":122,"column":0},"end":{"line":122,"column":74}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":92}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"14":{"start":{"line":29,"column":0},"end":{"line":90,"column":2}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":45}},"16":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":8}},"18":{"start":{"line":35,"column":2},"end":{"line":35,"column":52}},"19":{"start":{"line":38,"column":2},"end":{"line":38,"column":36}},"20":{"start":{"line":39,"column":2},"end":{"line":39,"column":35}},"21":{"start":{"line":41,"column":2},"end":{"line":44,"column":3}},"22":{"start":{"line":43,"column":4},"end":{"line":43,"column":77}},"23":{"start":{"line":46,"column":2},"end":{"line":46,"column":90}},"24":{"start":{"line":48,"column":2},"end":{"line":57,"column":3}},"25":{"start":{"line":52,"column":4},"end":{"line":56,"column":5}},"26":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"27":{"start":{"line":54,"column":8},"end":{"line":54,"column":44}},"28":{"start":{"line":59,"column":2},"end":{"line":77,"column":3}},"29":{"start":{"line":60,"column":4},"end":{"line":60,"column":24}},"30":{"start":{"line":62,"column":9},"end":{"line":77,"column":3}},"31":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"32":{"start":{"line":66,"column":6},"end":{"line":66,"column":51}},"33":{"start":{"line":69,"column":4},"end":{"line":69,"column":44}},"34":{"start":{"line":71,"column":4},"end":{"line":76,"column":5}},"35":{"start":{"line":72,"column":6},"end":{"line":75,"column":9}},"36":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"37":{"start":{"line":80,"column":4},"end":{"line":80,"column":49}},"38":{"start":{"line":83,"column":2},"end":{"line":86,"column":16}},"39":{"start":{"line":87,"column":2},"end":{"line":87,"column":35}},"40":{"start":{"line":88,"column":2},"end":{"line":88,"column":44}},"41":{"start":{"line":89,"column":2},"end":{"line":89,"column":13}},"42":{"start":{"line":103,"column":0},"end":{"line":109,"column":1}},"43":{"start":{"line":104,"column":2},"end":{"line":104,"column":73}},"44":{"start":{"line":105,"column":2},"end":{"line":107,"column":5}},"45":{"start":{"line":108,"column":2},"end":{"line":108,"column":13}},"46":{"start":{"line":122,"column":0},"end":{"line":127,"column":1}},"47":{"start":{"line":123,"column":2},"end":{"line":123,"column":47}},"48":{"start":{"line":124,"column":2},"end":{"line":124,"column":84}},"49":{"start":{"line":125,"column":2},"end":{"line":125,"column":81}},"50":{"start":{"line":126,"column":2},"end":{"line":126,"column":63}},"51":{"start":{"line":132,"column":0},"end":{"line":136,"column":2}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"2":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":51}},{"start":{"line":49,"column":4},"end":{"line":49,"column":51}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":9},"end":{"line":62,"column":9}},{"start":{"line":62,"column":9},"end":{"line":62,"column":9}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"7":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"8":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":18},"end":{"line":124,"column":43}},{"start":{"line":124,"column":47},"end":{"line":124,"column":82}}]}},"code":["'use strict';","","var buffer = require('buffer');","","var Signature = require('../crypto/signature');","var Script = require('../script');","var Output = require('./output');","var BufferReader = require('../encoding/bufferreader');","var BufferWriter = require('../encoding/bufferwriter');","var BN = require('../crypto/bn');","var Hash = require('../crypto/hash');","var ECDSA = require('../crypto/ecdsa');","var $ = require('../util/preconditions');","var _ = require('lodash');","","var SIGHASH_SINGLE_BUG = '0000000000000000000000000000000000000000000000000000000000000001';","var BITS_64_ON = 'ffffffffffffffff';","","/**"," * Returns a buffer of length 32 bytes with the hash that needs to be signed"," * for OP_CHECKSIG."," *"," * @name Signing.sighash"," * @param {Transaction} transaction the transaction to sign"," * @param {number} sighashType the type of the hash"," * @param {number} inputNumber the input index for the signature"," * @param {Script} subscript the script that will be signed"," */","var sighash = function sighash(transaction, sighashType, inputNumber, subscript) {","  var Transaction = require('./transaction');","  var Input = require('./input');","","  var i;","  // Copy transaction","  var txcopy = Transaction.shallowCopy(transaction);","","  // Copy script","  subscript = new Script(subscript);","  subscript.removeCodeseparators();","","  for (i = 0; i < txcopy.inputs.length; i++) {","    // Blank signatures for other inputs","    txcopy.inputs[i] = new Input(txcopy.inputs[i]).setScript(Script.empty());","  }","","  txcopy.inputs[inputNumber] = new Input(txcopy.inputs[inputNumber]).setScript(subscript);","","  if ((sighashType & 31) === Signature.SIGHASH_NONE ||","    (sighashType & 31) === Signature.SIGHASH_SINGLE) {","","    // clear all sequenceNumbers","    for (i = 0; i < txcopy.inputs.length; i++) {","      if (i !== inputNumber) {","        txcopy.inputs[i].sequenceNumber = 0;","      }","    }","  }","","  if ((sighashType & 31) === Signature.SIGHASH_NONE) {","    txcopy.outputs = [];","","  } else if ((sighashType & 31) === Signature.SIGHASH_SINGLE) {","    // The SIGHASH_SINGLE bug.","    // https://bitcointalk.org/index.php?topic=260595.0","    if (inputNumber >= txcopy.outputs.length) {","      return new Buffer(SIGHASH_SINGLE_BUG, 'hex');","    }","","    txcopy.outputs.length = inputNumber + 1;","","    for (i = 0; i < inputNumber; i++) {","      txcopy.outputs[i] = new Output({","        satoshis: BN.fromBuffer(new buffer.Buffer(BITS_64_ON, 'hex')),","        script: Script.empty()","      });","    }","  }","","  if (sighashType & Signature.SIGHASH_ANYONECANPAY) {","    txcopy.inputs = [txcopy.inputs[inputNumber]];","  }","","  var buf = new BufferWriter()","    .write(txcopy.toBuffer())","    .writeInt32LE(sighashType)","    .toBuffer();","  var ret = Hash.sha256sha256(buf);","  ret = new BufferReader(ret).readReverse();","  return ret;","};","","/**"," * Create a signature"," *"," * @name Signing.sign"," * @param {Transaction} transaction"," * @param {PrivateKey} privateKey"," * @param {number} sighash"," * @param {number} inputIndex"," * @param {Script} subscript"," * @return {Signature}"," */","function sign(transaction, privateKey, sighashType, inputIndex, subscript) {","  var hashbuf = sighash(transaction, sighashType, inputIndex, subscript);","  var sig = ECDSA.sign(hashbuf, privateKey, 'little').set({","    nhashtype: sighashType","  });","  return sig;","}","","/**"," * Verify a signature"," *"," * @name Signing.verify"," * @param {Transaction} transaction"," * @param {Signature} signature"," * @param {PublicKey} publicKey"," * @param {number} inputIndex"," * @param {Script} subscript"," * @return {boolean}"," */","function verify(transaction, signature, publicKey, inputIndex, subscript) {","  $.checkArgument(!_.isUndefined(transaction));","  $.checkArgument(!_.isUndefined(signature) && !_.isUndefined(signature.nhashtype));","  var hashbuf = sighash(transaction, signature.nhashtype, inputIndex, subscript);","  return ECDSA.verify(hashbuf, signature, publicKey, 'little');","}","","/**"," * @namespace Signing"," */","module.exports = {","  sighash: sighash,","  sign: sign,","  verify: verify","};",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":1,"17":1,"29":1,"30":0,"31":0,"33":0,"35":0,"38":0,"39":0,"41":0,"43":0,"46":0,"48":0,"52":0,"53":0,"54":0,"59":0,"60":0,"62":0,"65":0,"66":0,"69":0,"71":0,"72":0,"79":0,"80":0,"83":0,"87":0,"88":0,"89":0,"103":1,"104":0,"105":0,"108":0,"122":1,"123":0,"124":0,"125":0,"126":0,"132":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/output.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/output.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":8,"26":0,"27":8,"28":0,"29":1,"30":8,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":1,"54":0,"55":1,"56":8,"57":8,"58":8,"59":0,"60":8,"61":0,"62":8,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,8],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,8],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":8,"3":8,"4":0,"5":0,"6":0,"7":0,"8":8,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"Output","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":7},"end":{"line":40,"column":18}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":7},"end":{"line":54,"column":18}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":7},"end":{"line":57,"column":21}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":35},"end":{"line":79,"column":46}}},"6":{"name":"toObject","line":92,"loc":{"start":{"line":92,"column":54},"end":{"line":92,"column":74}}},"7":{"name":"(anonymous_7)","line":100,"loc":{"start":{"line":100,"column":20},"end":{"line":100,"column":35}}},"8":{"name":"(anonymous_8)","line":104,"loc":{"start":{"line":104,"column":39},"end":{"line":104,"column":56}}},"9":{"name":"(anonymous_9)","line":118,"loc":{"start":{"line":118,"column":29},"end":{"line":118,"column":46}}},"10":{"name":"(anonymous_10)","line":135,"loc":{"start":{"line":135,"column":27},"end":{"line":135,"column":38}}},"11":{"name":"(anonymous_11)","line":145,"loc":{"start":{"line":145,"column":26},"end":{"line":145,"column":39}}},"12":{"name":"(anonymous_12)","line":157,"loc":{"start":{"line":157,"column":34},"end":{"line":157,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"11":{"start":{"line":15,"column":0},"end":{"line":35,"column":1}},"12":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":28}},"14":{"start":{"line":19,"column":2},"end":{"line":34,"column":3}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":34}},"16":{"start":{"line":21,"column":4},"end":{"line":31,"column":5}},"17":{"start":{"line":22,"column":6},"end":{"line":22,"column":39}},"18":{"start":{"line":24,"column":6},"end":{"line":24,"column":17}},"19":{"start":{"line":25,"column":6},"end":{"line":29,"column":7}},"20":{"start":{"line":26,"column":8},"end":{"line":26,"column":55}},"21":{"start":{"line":28,"column":8},"end":{"line":28,"column":29}},"22":{"start":{"line":30,"column":6},"end":{"line":30,"column":29}},"23":{"start":{"line":33,"column":4},"end":{"line":33,"column":60}},"24":{"start":{"line":37,"column":0},"end":{"line":49,"column":3}},"25":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"26":{"start":{"line":42,"column":6},"end":{"line":42,"column":26}},"27":{"start":{"line":44,"column":6},"end":{"line":44,"column":51}},"28":{"start":{"line":45,"column":6},"end":{"line":45,"column":26}},"29":{"start":{"line":51,"column":0},"end":{"line":77,"column":3}},"30":{"start":{"line":55,"column":4},"end":{"line":55,"column":26}},"31":{"start":{"line":58,"column":4},"end":{"line":71,"column":5}},"32":{"start":{"line":59,"column":6},"end":{"line":59,"column":29}},"33":{"start":{"line":60,"column":6},"end":{"line":60,"column":38}},"34":{"start":{"line":61,"column":11},"end":{"line":71,"column":5}},"35":{"start":{"line":62,"column":6},"end":{"line":62,"column":37}},"36":{"start":{"line":63,"column":6},"end":{"line":63,"column":55}},"37":{"start":{"line":65,"column":6},"end":{"line":68,"column":8}},"38":{"start":{"line":69,"column":6},"end":{"line":69,"column":44}},"39":{"start":{"line":70,"column":6},"end":{"line":70,"column":27}},"40":{"start":{"line":72,"column":4},"end":{"line":75,"column":6}},"41":{"start":{"line":79,"column":0},"end":{"line":90,"column":2}},"42":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"43":{"start":{"line":81,"column":4},"end":{"line":81,"column":70}},"44":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"45":{"start":{"line":84,"column":4},"end":{"line":84,"column":60}},"46":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"47":{"start":{"line":87,"column":4},"end":{"line":87,"column":40}},"48":{"start":{"line":89,"column":2},"end":{"line":89,"column":15}},"49":{"start":{"line":92,"column":0},"end":{"line":98,"column":2}},"50":{"start":{"line":93,"column":2},"end":{"line":95,"column":4}},"51":{"start":{"line":96,"column":2},"end":{"line":96,"column":50}},"52":{"start":{"line":97,"column":2},"end":{"line":97,"column":13}},"53":{"start":{"line":100,"column":0},"end":{"line":102,"column":2}},"54":{"start":{"line":101,"column":2},"end":{"line":101,"column":26}},"55":{"start":{"line":104,"column":0},"end":{"line":116,"column":2}},"56":{"start":{"line":105,"column":2},"end":{"line":105,"column":30}},"57":{"start":{"line":106,"column":2},"end":{"line":115,"column":3}},"58":{"start":{"line":107,"column":4},"end":{"line":107,"column":57}},"59":{"start":{"line":108,"column":4},"end":{"line":108,"column":34}},"60":{"start":{"line":110,"column":4},"end":{"line":114,"column":5}},"61":{"start":{"line":111,"column":6},"end":{"line":111,"column":26}},"62":{"start":{"line":113,"column":6},"end":{"line":113,"column":14}},"63":{"start":{"line":118,"column":0},"end":{"line":133,"column":2}},"64":{"start":{"line":119,"column":2},"end":{"line":131,"column":3}},"65":{"start":{"line":120,"column":4},"end":{"line":120,"column":43}},"66":{"start":{"line":121,"column":4},"end":{"line":121,"column":26}},"67":{"start":{"line":122,"column":4},"end":{"line":122,"column":34}},"68":{"start":{"line":123,"column":9},"end":{"line":131,"column":3}},"69":{"start":{"line":124,"column":4},"end":{"line":124,"column":45}},"70":{"start":{"line":125,"column":4},"end":{"line":125,"column":49}},"71":{"start":{"line":126,"column":4},"end":{"line":126,"column":34}},"72":{"start":{"line":127,"column":9},"end":{"line":131,"column":3}},"73":{"start":{"line":128,"column":4},"end":{"line":128,"column":37}},"74":{"start":{"line":130,"column":4},"end":{"line":130,"column":57}},"75":{"start":{"line":132,"column":2},"end":{"line":132,"column":14}},"76":{"start":{"line":135,"column":0},"end":{"line":143,"column":2}},"77":{"start":{"line":136,"column":2},"end":{"line":136,"column":16}},"78":{"start":{"line":137,"column":2},"end":{"line":141,"column":3}},"79":{"start":{"line":138,"column":4},"end":{"line":138,"column":38}},"80":{"start":{"line":140,"column":4},"end":{"line":140,"column":51}},"81":{"start":{"line":142,"column":2},"end":{"line":142,"column":67}},"82":{"start":{"line":145,"column":0},"end":{"line":155,"column":2}},"83":{"start":{"line":146,"column":2},"end":{"line":146,"column":15}},"84":{"start":{"line":147,"column":2},"end":{"line":147,"column":37}},"85":{"start":{"line":148,"column":2},"end":{"line":148,"column":32}},"86":{"start":{"line":149,"column":2},"end":{"line":153,"column":3}},"87":{"start":{"line":150,"column":4},"end":{"line":150,"column":31}},"88":{"start":{"line":152,"column":4},"end":{"line":152,"column":39}},"89":{"start":{"line":154,"column":2},"end":{"line":154,"column":25}},"90":{"start":{"line":157,"column":0},"end":{"line":166,"column":2}},"91":{"start":{"line":158,"column":2},"end":{"line":160,"column":3}},"92":{"start":{"line":159,"column":4},"end":{"line":159,"column":32}},"93":{"start":{"line":161,"column":2},"end":{"line":161,"column":43}},"94":{"start":{"line":162,"column":2},"end":{"line":162,"column":34}},"95":{"start":{"line":163,"column":2},"end":{"line":163,"column":39}},"96":{"start":{"line":164,"column":2},"end":{"line":164,"column":23}},"97":{"start":{"line":165,"column":2},"end":{"line":165,"column":16}},"98":{"start":{"line":168,"column":0},"end":{"line":168,"column":24}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":6}},{"start":{"line":25,"column":6},"end":{"line":25,"column":6}}]},"5":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":10},"end":{"line":25,"column":33}},{"start":{"line":25,"column":37},"end":{"line":25,"column":63}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"7":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"8":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":11},"end":{"line":61,"column":11}},{"start":{"line":61,"column":11},"end":{"line":61,"column":11}}]},"9":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"10":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"11":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"12":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"13":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"14":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":9},"end":{"line":123,"column":9}},{"start":{"line":123,"column":9},"end":{"line":123,"column":9}}]},"15":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":9},"end":{"line":127,"column":9}},{"start":{"line":127,"column":9},"end":{"line":127,"column":9}}]},"16":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"17":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"18":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","var BN = require('../crypto/bn');","var buffer = require('buffer');","var bufferUtil = require('../util/buffer');","var JSUtil = require('../util/js');","var BufferWriter = require('../encoding/bufferwriter');","var Script = require('../script');","var $ = require('../util/preconditions');","var errors = require('../errors');","","var MAX_SAFE_INTEGER = 0x1fffffffffffff;","","function Output(args) {","  if (!(this instanceof Output)) {","    return new Output(args);","  }","  if (_.isObject(args)) {","    this.satoshis = args.satoshis;","    if (bufferUtil.isBuffer(args.script)) {","      this._scriptBuffer = args.script;","    } else {","      var script;","      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {","        script = new buffer.Buffer(args.script, 'hex');","      } else {","        script = args.script;","      }","      this.setScript(script);","    }","  } else {","    throw new TypeError('Unrecognized argument for Output');","  }","}","","Object.defineProperty(Output.prototype, 'script', {","  configurable: false,","  enumerable: true,","  get: function() {","    if (this._script) {","      return this._script;","    } else {","      this.setScriptFromBuffer(this._scriptBuffer);","      return this._script;","    }","","  }","});","","Object.defineProperty(Output.prototype, 'satoshis', {","  configurable: false,","  enumerable: true,","  get: function() {","    return this._satoshis;","  },","  set: function(num) {","    if (num instanceof BN) {","      this._satoshisBN = num;","      this._satoshis = num.toNumber();","    } else if (_.isString(num)) {","      this._satoshis = parseInt(num);","      this._satoshisBN = BN.fromNumber(this._satoshis);","    } else {","      $.checkArgument(","        JSUtil.isNaturalNumber(num),","        'Output satoshis is not a natural number'","      );","      this._satoshisBN = BN.fromNumber(num);","      this._satoshis = num;","    }","    $.checkState(","      JSUtil.isNaturalNumber(this._satoshis),","      'Output satoshis is not a natural number'","    );","  }","});","","Output.prototype.invalidSatoshis = function() {","  if (this._satoshis > MAX_SAFE_INTEGER) {","    return 'transaction txout satoshis greater than max safe integer';","  }","  if (this._satoshis !== this._satoshisBN.toNumber()) {","    return 'transaction txout satoshis has corrupted value';","  }","  if (this._satoshis < 0) {","    return 'transaction txout negative';","  }","  return false;","};","","Output.prototype.toObject = Output.prototype.toJSON = function toObject() {","  var obj = {","    satoshis: this.satoshis","  };","  obj.script = this._scriptBuffer.toString('hex');","  return obj;","};","","Output.fromObject = function(data) {","  return new Output(data);","};","","Output.prototype.setScriptFromBuffer = function(buffer) {","  this._scriptBuffer = buffer;","  try {","    this._script = Script.fromBuffer(this._scriptBuffer);","    this._script._isOutput = true;","  } catch(e) {","    if (e instanceof errors.Script.InvalidBuffer) {","      this._script = null;","    } else {","      throw e;","    }","  }","};","","Output.prototype.setScript = function(script) {","  if (script instanceof Script) {","    this._scriptBuffer = script.toBuffer();","    this._script = script;","    this._script._isOutput = true;","  } else if (_.isString(script)) {","    this._script = Script.fromString(script);","    this._scriptBuffer = this._script.toBuffer();","    this._script._isOutput = true;","  } else if (bufferUtil.isBuffer(script)) {","    this.setScriptFromBuffer(script);","  } else {","    throw new TypeError('Invalid argument type: script');","  }","  return this;","};","","Output.prototype.inspect = function() {","  var scriptStr;","  if (this.script) {","    scriptStr = this.script.inspect();","  } else {","    scriptStr = this._scriptBuffer.toString('hex');","  }","  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';","};","","Output.fromBufferReader = function(br) {","  var obj = {};","  obj.satoshis = br.readUInt64LEBN();","  var size = br.readVarintNum();","  if (size !== 0) {","    obj.script = br.read(size);","  } else {","    obj.script = new buffer.Buffer([]);","  }","  return new Output(obj);","};","","Output.prototype.toBufferWriter = function(writer) {","  if (!writer) {","    writer = new BufferWriter();","  }","  writer.writeUInt64LEBN(this._satoshisBN);","  var script = this._scriptBuffer;","  writer.writeVarintNum(script.length);","  writer.write(script);","  return writer;","};","","module.exports = Output;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"15":1,"16":0,"17":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"28":0,"30":0,"33":0,"37":1,"41":8,"42":0,"44":8,"45":0,"51":1,"55":8,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"65":0,"69":0,"70":0,"72":0,"79":1,"80":0,"81":0,"83":0,"84":0,"86":0,"87":0,"89":0,"92":1,"93":0,"96":0,"97":0,"100":1,"101":0,"104":1,"105":8,"106":8,"107":8,"108":0,"110":8,"111":0,"113":8,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"130":0,"132":0,"135":1,"136":0,"137":0,"138":0,"140":0,"142":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"152":0,"154":0,"157":1,"158":0,"159":0,"161":0,"162":0,"163":0,"164":0,"165":0,"168":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/unspentoutput.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/unspentoutput.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"UnspentOutput","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":29}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":64,"column":34},"end":{"line":64,"column":45}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":35},"end":{"line":73,"column":46}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":27},"end":{"line":82,"column":42}}},"5":{"name":"toObject","line":90,"loc":{"start":{"line":90,"column":68},"end":{"line":90,"column":88}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"7":{"start":{"line":27,"column":0},"end":{"line":58,"column":1}},"8":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":35}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":89}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":69}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":47}},"13":{"start":{"line":36,"column":2},"end":{"line":39,"column":3}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":52}},"15":{"start":{"line":40,"column":2},"end":{"line":40,"column":76}},"16":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":68}},"18":{"start":{"line":44,"column":2},"end":{"line":45,"column":68}},"19":{"start":{"line":46,"column":2},"end":{"line":46,"column":60}},"20":{"start":{"line":47,"column":2},"end":{"line":48,"column":59}},"21":{"start":{"line":49,"column":2},"end":{"line":49,"column":104}},"22":{"start":{"line":50,"column":2},"end":{"line":50,"column":65}},"23":{"start":{"line":51,"column":2},"end":{"line":57,"column":5}},"24":{"start":{"line":64,"column":0},"end":{"line":67,"column":2}},"25":{"start":{"line":65,"column":2},"end":{"line":66,"column":77}},"26":{"start":{"line":73,"column":0},"end":{"line":75,"column":2}},"27":{"start":{"line":74,"column":2},"end":{"line":74,"column":44}},"28":{"start":{"line":82,"column":0},"end":{"line":84,"column":2}},"29":{"start":{"line":83,"column":2},"end":{"line":83,"column":33}},"30":{"start":{"line":90,"column":0},"end":{"line":98,"column":2}},"31":{"start":{"line":91,"column":2},"end":{"line":97,"column":4}},"32":{"start":{"line":100,"column":0},"end":{"line":100,"column":31}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":31},"end":{"line":34,"column":56}},{"start":{"line":34,"column":59},"end":{"line":34,"column":68}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":25},"end":{"line":35,"column":34}},{"start":{"line":35,"column":37},"end":{"line":35,"column":46}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"5":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":11}},{"start":{"line":36,"column":15},"end":{"line":36,"column":41}},{"start":{"line":36,"column":45},"end":{"line":36,"column":61}}]},"6":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":47},"end":{"line":40,"column":63}},{"start":{"line":40,"column":66},"end":{"line":40,"column":75}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"8":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":18},"end":{"line":44,"column":51}},{"start":{"line":44,"column":55},"end":{"line":44,"column":82}}]},"9":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":26},"end":{"line":46,"column":43}},{"start":{"line":46,"column":47},"end":{"line":46,"column":58}}]},"10":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":18},"end":{"line":47,"column":45}},{"start":{"line":47,"column":49},"end":{"line":47,"column":78}}]},"11":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":45},"end":{"line":49,"column":87}},{"start":{"line":49,"column":90},"end":{"line":49,"column":103}}]},"12":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":28},"end":{"line":92,"column":51}},{"start":{"line":92,"column":54},"end":{"line":92,"column":63}}]}},"code":["'use strict';","","var _ = require('lodash');","var $ = require('../util/preconditions');","var JSUtil = require('../util/js');","","var Script = require('../script');","var Address = require('../address');","var Unit = require('../unit');","","/**"," * Represents an unspent output information: its script, associated amount and address,"," * transaction id and output index."," *"," * @constructor"," * @param {object} data"," * @param {string} data.txid the previous transaction id"," * @param {string=} data.txId alias for `txid`"," * @param {number} data.vout the index in the transaction"," * @param {number=} data.outputIndex alias for `vout`"," * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds"," * @param {string|Script=} data.script alias for `scriptPubKey`"," * @param {number} data.amount amount of bitcoins associated"," * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BTC = 1e8 satoshis)"," * @param {string|Address=} data.address the associated address to the script, if provided"," */","function UnspentOutput(data) {","  /* jshint maxcomplexity: 20 */","  /* jshint maxstatements: 20 */","  if (!(this instanceof UnspentOutput)) {","    return new UnspentOutput(data);","  }","  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');","  var address = data.address ? new Address(data.address) : undefined;","  var txId = data.txid ? data.txid : data.txId;","  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {","    // TODO: Use the errors library","    throw new Error('Invalid TXID in object', data);","  }","  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;","  if (!_.isNumber(outputIndex)) {","    throw new Error('Invalid outputIndex, received ' + outputIndex);","  }","  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),","                  'Must provide the scriptPubKey for that output!');","  var script = new Script(data.scriptPubKey || data.script);","  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),","                  'Must provide an amount for the output');","  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTC(data.amount).toSatoshis() : data.satoshis;","  $.checkArgument(_.isNumber(amount), 'Amount must be a number');","  JSUtil.defineImmutable(this, {","    address: address,","    txId: txId,","    outputIndex: outputIndex,","    script: script,","    satoshis: amount","  });","}","","/**"," * Provide an informative output when displaying this object in the console"," * @returns string"," */","UnspentOutput.prototype.inspect = function() {","  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +","         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';","};","","/**"," * String representation: just \"txid:index\""," * @returns string"," */","UnspentOutput.prototype.toString = function() {","  return this.txId + ':' + this.outputIndex;","};","","/**"," * Deserialize an UnspentOutput from an object"," * @param {object|string} data"," * @return UnspentOutput"," */","UnspentOutput.fromObject = function(data) {","  return new UnspentOutput(data);","};","","/**"," * Returns a plain object (no prototype or methods) with the associated info for this output"," * @return {object}"," */","UnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {","  return {","    address: this.address ? this.address.toString() : undefined,","    txid: this.txId,","    vout: this.outputIndex,","    scriptPubKey: this.script.toBuffer().toString('hex'),","    amount: Unit.fromSatoshis(this.satoshis).toBTC()","  };","};","","module.exports = UnspentOutput;",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"9":1,"27":1,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"38":0,"40":0,"41":0,"42":0,"44":0,"46":0,"47":0,"49":0,"50":0,"51":0,"64":1,"65":0,"73":1,"74":0,"82":1,"83":0,"90":1,"91":0,"100":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/unit.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/unit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":5,"21":1,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":5,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"Unit","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":28}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":22},"end":{"line":57,"column":36}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":11},"end":{"line":59,"column":22}}},"4":{"name":"(anonymous_4)","line":67,"loc":{"start":{"line":67,"column":27},"end":{"line":67,"column":41}}},"5":{"name":"fromObject","line":77,"loc":{"start":{"line":77,"column":18},"end":{"line":77,"column":43}}},"6":{"name":"(anonymous_6)","line":88,"loc":{"start":{"line":88,"column":15},"end":{"line":88,"column":32}}},"7":{"name":"(anonymous_7)","line":98,"loc":{"start":{"line":98,"column":35},"end":{"line":98,"column":52}}},"8":{"name":"(anonymous_8)","line":108,"loc":{"start":{"line":108,"column":34},"end":{"line":108,"column":51}}},"9":{"name":"(anonymous_9)","line":118,"loc":{"start":{"line":118,"column":20},"end":{"line":118,"column":37}}},"10":{"name":"(anonymous_10)","line":129,"loc":{"start":{"line":129,"column":16},"end":{"line":129,"column":39}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":23},"end":{"line":133,"column":46}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":20},"end":{"line":146,"column":35}}},"13":{"name":"(anonymous_13)","line":167,"loc":{"start":{"line":167,"column":23},"end":{"line":167,"column":34}}},"14":{"name":"(anonymous_14)","line":176,"loc":{"start":{"line":176,"column":51},"end":{"line":176,"column":62}}},"15":{"name":"(anonymous_15)","line":185,"loc":{"start":{"line":185,"column":50},"end":{"line":185,"column":61}}},"16":{"name":"(anonymous_16)","line":194,"loc":{"start":{"line":194,"column":28},"end":{"line":194,"column":39}}},"17":{"name":"(anonymous_17)","line":204,"loc":{"start":{"line":204,"column":24},"end":{"line":204,"column":39}}},"18":{"name":"(anonymous_18)","line":213,"loc":{"start":{"line":213,"column":26},"end":{"line":213,"column":37}}},"19":{"name":"toObject","line":222,"loc":{"start":{"line":222,"column":50},"end":{"line":222,"column":70}}},"20":{"name":"(anonymous_20)","line":234,"loc":{"start":{"line":234,"column":25},"end":{"line":234,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":14,"column":2}},"5":{"start":{"line":40,"column":0},"end":{"line":65,"column":1}},"6":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"7":{"start":{"line":42,"column":4},"end":{"line":42,"column":34}},"8":{"start":{"line":46,"column":2},"end":{"line":52,"column":3}},"9":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"10":{"start":{"line":48,"column":6},"end":{"line":48,"column":46}},"11":{"start":{"line":50,"column":4},"end":{"line":50,"column":27}},"12":{"start":{"line":51,"column":4},"end":{"line":51,"column":20}},"13":{"start":{"line":54,"column":2},"end":{"line":54,"column":41}},"14":{"start":{"line":56,"column":2},"end":{"line":56,"column":18}},"15":{"start":{"line":57,"column":2},"end":{"line":62,"column":4}},"16":{"start":{"line":58,"column":4},"end":{"line":61,"column":7}},"17":{"start":{"line":59,"column":24},"end":{"line":59,"column":44}},"18":{"start":{"line":64,"column":2},"end":{"line":64,"column":44}},"19":{"start":{"line":67,"column":0},"end":{"line":69,"column":3}},"20":{"start":{"line":68,"column":2},"end":{"line":68,"column":18}},"21":{"start":{"line":77,"column":0},"end":{"line":80,"column":2}},"22":{"start":{"line":78,"column":2},"end":{"line":78,"column":76}},"23":{"start":{"line":79,"column":2},"end":{"line":79,"column":42}},"24":{"start":{"line":88,"column":0},"end":{"line":90,"column":2}},"25":{"start":{"line":89,"column":2},"end":{"line":89,"column":36}},"26":{"start":{"line":98,"column":0},"end":{"line":100,"column":2}},"27":{"start":{"line":99,"column":2},"end":{"line":99,"column":37}},"28":{"start":{"line":108,"column":0},"end":{"line":110,"column":2}},"29":{"start":{"line":109,"column":2},"end":{"line":109,"column":37}},"30":{"start":{"line":118,"column":0},"end":{"line":120,"column":2}},"31":{"start":{"line":119,"column":2},"end":{"line":119,"column":41}},"32":{"start":{"line":129,"column":0},"end":{"line":131,"column":2}},"33":{"start":{"line":130,"column":2},"end":{"line":130,"column":32}},"34":{"start":{"line":133,"column":0},"end":{"line":138,"column":2}},"35":{"start":{"line":134,"column":2},"end":{"line":136,"column":3}},"36":{"start":{"line":135,"column":4},"end":{"line":135,"column":44}},"37":{"start":{"line":137,"column":2},"end":{"line":137,"column":55}},"38":{"start":{"line":146,"column":0},"end":{"line":160,"column":2}},"39":{"start":{"line":147,"column":2},"end":{"line":152,"column":3}},"40":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"41":{"start":{"line":149,"column":6},"end":{"line":149,"column":46}},"42":{"start":{"line":151,"column":4},"end":{"line":151,"column":52}},"43":{"start":{"line":154,"column":2},"end":{"line":156,"column":3}},"44":{"start":{"line":155,"column":4},"end":{"line":155,"column":44}},"45":{"start":{"line":158,"column":2},"end":{"line":158,"column":43}},"46":{"start":{"line":159,"column":2},"end":{"line":159,"column":51}},"47":{"start":{"line":167,"column":0},"end":{"line":169,"column":2}},"48":{"start":{"line":168,"column":2},"end":{"line":168,"column":27}},"49":{"start":{"line":176,"column":0},"end":{"line":178,"column":2}},"50":{"start":{"line":177,"column":2},"end":{"line":177,"column":28}},"51":{"start":{"line":185,"column":0},"end":{"line":187,"column":2}},"52":{"start":{"line":186,"column":2},"end":{"line":186,"column":28}},"53":{"start":{"line":194,"column":0},"end":{"line":196,"column":2}},"54":{"start":{"line":195,"column":2},"end":{"line":195,"column":32}},"55":{"start":{"line":204,"column":0},"end":{"line":206,"column":2}},"56":{"start":{"line":205,"column":2},"end":{"line":205,"column":23}},"57":{"start":{"line":213,"column":0},"end":{"line":215,"column":2}},"58":{"start":{"line":214,"column":2},"end":{"line":214,"column":37}},"59":{"start":{"line":222,"column":0},"end":{"line":227,"column":2}},"60":{"start":{"line":223,"column":2},"end":{"line":226,"column":4}},"61":{"start":{"line":234,"column":0},"end":{"line":236,"column":2}},"62":{"start":{"line":235,"column":2},"end":{"line":235,"column":43}},"63":{"start":{"line":238,"column":0},"end":{"line":238,"column":22}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"4":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"5":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"6":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"7":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","","var errors = require('./errors');","var $ = require('./util/preconditions');","","var UNITS = {","  'BTC'      : [1e8, 8],","  'mBTC'     : [1e5, 5],","  'uBTC'     : [1e2, 2],","  'bits'     : [1e2, 2],","  'satoshis' : [1, 0]","};","","/**"," * Utility for handling and converting bitcoins units. The supported units are"," * BTC, mBTC, bits (also named uBTC) and satoshis. A unit instance can be created with an"," * amount and a unit code, or alternatively using static methods like {fromBTC}."," * It also allows to be created from a fiat amount and the exchange rate, or"," * alternatively using the {fromFiat} static method."," * You can consult for different representation of a unit instance using it's"," * {to} method, the fixed unit methods like {toSatoshis} or alternatively using"," * the unit accessors. It also can be converted to a fiat amount by providing the"," * corresponding BTC/fiat exchange rate."," *"," * @example"," * ```javascript"," * var sats = Unit.fromBTC(1.3).toSatoshis();"," * var mili = Unit.fromBits(1.3).to(Unit.mBTC);"," * var bits = Unit.fromFiat(1.3, 350).bits;"," * var btc = new Unit(1.3, Unit.bits).BTC;"," * ```"," *"," * @param {Number} amount - The amount to be represented"," * @param {String|Number} code - The unit of the amount or the exchange rate"," * @returns {Unit} A new instance of an Unit"," * @constructor"," */","function Unit(amount, code) {","  if (!(this instanceof Unit)) {","    return new Unit(amount, code);","  }","","  // convert fiat to BTC","  if (_.isNumber(code)) {","    if (code <= 0) {","      throw new errors.Unit.InvalidRate(code);","    }","    amount = amount / code;","    code = Unit.BTC;","  }","","  this._value = this._from(amount, code);","","  var self = this;","  var defineAccesor = function(key) {","    Object.defineProperty(self, key, {","      get: function() { return self.to(key); },","      enumerable: true,","    });","  };","","  Object.keys(UNITS).forEach(defineAccesor);","}","","Object.keys(UNITS).forEach(function(key) {","  Unit[key] = key;","});","","/**"," * Returns a Unit instance created from JSON string or object"," *"," * @param {String|Object} json - JSON with keys: amount and code"," * @returns {Unit} A Unit instance"," */","Unit.fromObject = function fromObject(data){","  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');","  return new Unit(data.amount, data.code);","};","","/**"," * Returns a Unit instance created from an amount in BTC"," *"," * @param {Number} amount - The amount in BTC"," * @returns {Unit} A Unit instance"," */","Unit.fromBTC = function(amount) {","  return new Unit(amount, Unit.BTC);","};","","/**"," * Returns a Unit instance created from an amount in mBTC"," *"," * @param {Number} amount - The amount in mBTC"," * @returns {Unit} A Unit instance"," */","Unit.fromMillis = Unit.fromMilis = function(amount) {","  return new Unit(amount, Unit.mBTC);","};","","/**"," * Returns a Unit instance created from an amount in bits"," *"," * @param {Number} amount - The amount in bits"," * @returns {Unit} A Unit instance"," */","Unit.fromMicros = Unit.fromBits = function(amount) {","  return new Unit(amount, Unit.bits);","};","","/**"," * Returns a Unit instance created from an amount in satoshis"," *"," * @param {Number} amount - The amount in satoshis"," * @returns {Unit} A Unit instance"," */","Unit.fromSatoshis = function(amount) {","  return new Unit(amount, Unit.satoshis);","};","","/**"," * Returns a Unit instance created from a fiat amount and exchange rate."," *"," * @param {Number} amount - The amount in fiat"," * @param {Number} rate - The exchange rate BTC/fiat"," * @returns {Unit} A Unit instance"," */","Unit.fromFiat = function(amount, rate) {","  return new Unit(amount, rate);","};","","Unit.prototype._from = function(amount, code) {","  if (!UNITS[code]) {","    throw new errors.Unit.UnknownCode(code);","  }","  return parseInt((amount * UNITS[code][0]).toFixed());","};","","/**"," * Returns the value represented in the specified unit"," *"," * @param {String|Number} code - The unit code or exchange rate"," * @returns {Number} The converted value"," */","Unit.prototype.to = function(code) {","  if (_.isNumber(code)) {","    if (code <= 0) {","      throw new errors.Unit.InvalidRate(code);","    }","    return parseFloat((this.BTC * code).toFixed(2));","  }","","  if (!UNITS[code]) {","    throw new errors.Unit.UnknownCode(code);","  }","","  var value = this._value / UNITS[code][0];","  return parseFloat(value.toFixed(UNITS[code][1]));","};","","/**"," * Returns the value represented in BTC"," *"," * @returns {Number} The value converted to BTC"," */","Unit.prototype.toBTC = function() {","  return this.to(Unit.BTC);","};","","/**"," * Returns the value represented in mBTC"," *"," * @returns {Number} The value converted to mBTC"," */","Unit.prototype.toMillis = Unit.prototype.toMilis = function() {","  return this.to(Unit.mBTC);","};","","/**"," * Returns the value represented in bits"," *"," * @returns {Number} The value converted to bits"," */","Unit.prototype.toMicros = Unit.prototype.toBits = function() {","  return this.to(Unit.bits);","};","","/**"," * Returns the value represented in satoshis"," *"," * @returns {Number} The value converted to satoshis"," */","Unit.prototype.toSatoshis = function() {","  return this.to(Unit.satoshis);","};","","/**"," * Returns the value represented in fiat"," *"," * @param {string} rate - The exchange rate between BTC/currency"," * @returns {Number} The value converted to satoshis"," */","Unit.prototype.atRate = function(rate) {","  return this.to(rate);","};","","/**"," * Returns a the string representation of the value in satoshis"," *"," * @returns {string} the value in satoshis"," */","Unit.prototype.toString = function() {","  return this.satoshis + ' satoshis';","};","","/**"," * Returns a plain object representation of the Unit"," *"," * @returns {Object} An object with the keys: amount and code"," */","Unit.prototype.toObject = Unit.prototype.toJSON = function toObject() {","  return {","    amount: this.BTC,","    code: Unit.BTC","  };","};","","/**"," * Returns a string formatted for the console"," *"," * @returns {string} the value in satoshis"," */","Unit.prototype.inspect = function() {","  return '<Unit: ' + this.toString() + '>';","};","","module.exports = Unit;",""],"l":{"3":1,"5":1,"6":1,"8":1,"40":1,"41":0,"42":0,"46":0,"47":0,"48":0,"50":0,"51":0,"54":0,"56":0,"57":0,"58":0,"59":0,"64":0,"67":1,"68":5,"77":1,"78":0,"79":0,"88":1,"89":0,"98":1,"99":0,"108":1,"109":0,"118":1,"119":0,"129":1,"130":0,"133":1,"134":0,"135":0,"137":0,"146":1,"147":0,"148":0,"149":0,"151":0,"154":0,"155":0,"158":0,"159":0,"167":1,"168":0,"176":1,"177":0,"185":1,"186":0,"194":1,"195":0,"204":1,"205":0,"213":1,"214":0,"222":1,"223":0,"234":1,"235":0,"238":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":58}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":71}}},"branchMap":{},"code":["module.exports = require('./input');","","module.exports.PublicKey = require('./publickey');","module.exports.PublicKeyHash = require('./publickeyhash');","module.exports.MultiSig = require('./multisig.js');","module.exports.MultiSigScriptHash = require('./multisigscripthash.js');",""],"l":{"1":1,"3":1,"4":1,"5":1,"6":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/input.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/input.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":1,"25":8,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":1,"91":0,"92":1,"93":0,"94":1,"95":0,"96":1,"97":0,"98":1,"99":0,"100":0,"101":1,"102":8,"103":1,"104":0,"105":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[8,0]},"f":{"1":0,"2":8,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":8,"16":0},"fnMap":{"1":{"name":"Input","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":23}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":7},"end":{"line":36,"column":18}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":19},"end":{"line":48,"column":33}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":30},"end":{"line":54,"column":47}}},"5":{"name":"toObject","line":74,"loc":{"start":{"line":74,"column":52},"end":{"line":74,"column":72}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":25},"end":{"line":91,"column":38}}},"7":{"name":"(anonymous_7)","line":102,"loc":{"start":{"line":102,"column":33},"end":{"line":102,"column":50}}},"8":{"name":"(anonymous_8)","line":115,"loc":{"start":{"line":115,"column":28},"end":{"line":115,"column":45}}},"9":{"name":"(anonymous_9)","line":149,"loc":{"start":{"line":149,"column":32},"end":{"line":149,"column":43}}},"10":{"name":"(anonymous_10)","line":156,"loc":{"start":{"line":156,"column":32},"end":{"line":156,"column":43}}},"11":{"name":"(anonymous_11)","line":160,"loc":{"start":{"line":160,"column":26},"end":{"line":160,"column":37}}},"12":{"name":"(anonymous_12)","line":164,"loc":{"start":{"line":164,"column":31},"end":{"line":164,"column":42}}},"13":{"name":"(anonymous_13)","line":168,"loc":{"start":{"line":168,"column":34},"end":{"line":168,"column":45}}},"14":{"name":"(anonymous_14)","line":172,"loc":{"start":{"line":172,"column":35},"end":{"line":172,"column":68}}},"15":{"name":"(anonymous_15)","line":187,"loc":{"start":{"line":187,"column":25},"end":{"line":187,"column":36}}},"16":{"name":"(anonymous_16)","line":192,"loc":{"start":{"line":192,"column":32},"end":{"line":192,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":24}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":44}},"15":{"start":{"line":19,"column":0},"end":{"line":26,"column":1}},"16":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"17":{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},"18":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"19":{"start":{"line":24,"column":4},"end":{"line":24,"column":36}},"20":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}},"21":{"start":{"line":29,"column":0},"end":{"line":29,"column":44}},"22":{"start":{"line":30,"column":0},"end":{"line":30,"column":62}},"23":{"start":{"line":31,"column":0},"end":{"line":31,"column":52}},"24":{"start":{"line":33,"column":0},"end":{"line":46,"column":3}},"25":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"26":{"start":{"line":38,"column":6},"end":{"line":38,"column":18}},"27":{"start":{"line":40,"column":4},"end":{"line":43,"column":5}},"28":{"start":{"line":41,"column":6},"end":{"line":41,"column":52}},"29":{"start":{"line":42,"column":6},"end":{"line":42,"column":35}},"30":{"start":{"line":44,"column":4},"end":{"line":44,"column":24}},"31":{"start":{"line":48,"column":0},"end":{"line":52,"column":2}},"32":{"start":{"line":49,"column":2},"end":{"line":49,"column":35}},"33":{"start":{"line":50,"column":2},"end":{"line":50,"column":26}},"34":{"start":{"line":51,"column":2},"end":{"line":51,"column":32}},"35":{"start":{"line":54,"column":0},"end":{"line":72,"column":2}},"36":{"start":{"line":55,"column":2},"end":{"line":55,"column":15}},"37":{"start":{"line":56,"column":2},"end":{"line":60,"column":3}},"38":{"start":{"line":57,"column":4},"end":{"line":57,"column":57}},"39":{"start":{"line":59,"column":4},"end":{"line":59,"column":31}},"40":{"start":{"line":61,"column":2},"end":{"line":62,"column":94}},"41":{"start":{"line":63,"column":2},"end":{"line":63,"column":45}},"42":{"start":{"line":64,"column":2},"end":{"line":64,"column":94}},"43":{"start":{"line":65,"column":2},"end":{"line":66,"column":95}},"44":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"45":{"start":{"line":68,"column":4},"end":{"line":68,"column":55}},"46":{"start":{"line":70,"column":2},"end":{"line":70,"column":55}},"47":{"start":{"line":71,"column":2},"end":{"line":71,"column":14}},"48":{"start":{"line":74,"column":0},"end":{"line":89,"column":2}},"49":{"start":{"line":75,"column":2},"end":{"line":80,"column":4}},"50":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"51":{"start":{"line":83,"column":4},"end":{"line":83,"column":46}},"52":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"53":{"start":{"line":86,"column":4},"end":{"line":86,"column":40}},"54":{"start":{"line":88,"column":2},"end":{"line":88,"column":13}},"55":{"start":{"line":91,"column":0},"end":{"line":100,"column":2}},"56":{"start":{"line":92,"column":2},"end":{"line":92,"column":26}},"57":{"start":{"line":93,"column":2},"end":{"line":93,"column":38}},"58":{"start":{"line":94,"column":2},"end":{"line":94,"column":40}},"59":{"start":{"line":95,"column":2},"end":{"line":95,"column":49}},"60":{"start":{"line":96,"column":2},"end":{"line":96,"column":43}},"61":{"start":{"line":99,"column":2},"end":{"line":99,"column":15}},"62":{"start":{"line":102,"column":0},"end":{"line":113,"column":2}},"63":{"start":{"line":103,"column":2},"end":{"line":105,"column":3}},"64":{"start":{"line":104,"column":4},"end":{"line":104,"column":32}},"65":{"start":{"line":106,"column":2},"end":{"line":106,"column":37}},"66":{"start":{"line":107,"column":2},"end":{"line":107,"column":41}},"67":{"start":{"line":108,"column":2},"end":{"line":108,"column":34}},"68":{"start":{"line":109,"column":2},"end":{"line":109,"column":39}},"69":{"start":{"line":110,"column":2},"end":{"line":110,"column":23}},"70":{"start":{"line":111,"column":2},"end":{"line":111,"column":44}},"71":{"start":{"line":112,"column":2},"end":{"line":112,"column":16}},"72":{"start":{"line":115,"column":0},"end":{"line":136,"column":2}},"73":{"start":{"line":116,"column":2},"end":{"line":116,"column":22}},"74":{"start":{"line":117,"column":2},"end":{"line":134,"column":3}},"75":{"start":{"line":118,"column":4},"end":{"line":118,"column":26}},"76":{"start":{"line":119,"column":4},"end":{"line":119,"column":33}},"77":{"start":{"line":120,"column":4},"end":{"line":120,"column":43}},"78":{"start":{"line":121,"column":9},"end":{"line":134,"column":3}},"79":{"start":{"line":123,"column":4},"end":{"line":123,"column":58}},"80":{"start":{"line":124,"column":9},"end":{"line":134,"column":3}},"81":{"start":{"line":126,"column":4},"end":{"line":126,"column":38}},"82":{"start":{"line":127,"column":4},"end":{"line":127,"column":33}},"83":{"start":{"line":128,"column":4},"end":{"line":128,"column":49}},"84":{"start":{"line":129,"column":9},"end":{"line":134,"column":3}},"85":{"start":{"line":131,"column":4},"end":{"line":131,"column":51}},"86":{"start":{"line":133,"column":4},"end":{"line":133,"column":57}},"87":{"start":{"line":135,"column":2},"end":{"line":135,"column":14}},"88":{"start":{"line":149,"column":0},"end":{"line":154,"column":2}},"89":{"start":{"line":150,"column":2},"end":{"line":153,"column":4}},"90":{"start":{"line":156,"column":0},"end":{"line":158,"column":2}},"91":{"start":{"line":157,"column":2},"end":{"line":157,"column":64}},"92":{"start":{"line":160,"column":0},"end":{"line":162,"column":2}},"93":{"start":{"line":161,"column":2},"end":{"line":161,"column":44}},"94":{"start":{"line":164,"column":0},"end":{"line":166,"column":2}},"95":{"start":{"line":165,"column":2},"end":{"line":165,"column":63}},"96":{"start":{"line":168,"column":0},"end":{"line":170,"column":2}},"97":{"start":{"line":169,"column":2},"end":{"line":169,"column":66}},"98":{"start":{"line":172,"column":0},"end":{"line":182,"column":2}},"99":{"start":{"line":174,"column":2},"end":{"line":174,"column":52}},"100":{"start":{"line":175,"column":2},"end":{"line":181,"column":4}},"101":{"start":{"line":187,"column":0},"end":{"line":190,"column":2}},"102":{"start":{"line":188,"column":2},"end":{"line":189,"column":36}},"103":{"start":{"line":192,"column":0},"end":{"line":194,"column":2}},"104":{"start":{"line":193,"column":2},"end":{"line":193,"column":49}},"105":{"start":{"line":196,"column":0},"end":{"line":196,"column":23}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"6":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":33}},{"start":{"line":56,"column":37},"end":{"line":56,"column":67}}]},"7":{"line":61,"type":"cond-expr","locations":[{"start":{"line":62,"column":5},"end":{"line":62,"column":80}},{"start":{"line":62,"column":84},"end":{"line":62,"column":93}}]},"8":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":39},"end":{"line":62,"column":52}},{"start":{"line":62,"column":55},"end":{"line":62,"column":80}}]},"9":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":18},"end":{"line":63,"column":26}},{"start":{"line":63,"column":30},"end":{"line":63,"column":44}}]},"10":{"line":64,"type":"cond-expr","locations":[{"start":{"line":64,"column":57},"end":{"line":64,"column":72}},{"start":{"line":64,"column":75},"end":{"line":64,"column":93}}]},"11":{"line":65,"type":"cond-expr","locations":[{"start":{"line":66,"column":5},"end":{"line":66,"column":69}},{"start":{"line":66,"column":73},"end":{"line":66,"column":94}}]},"12":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":36},"end":{"line":66,"column":53}},{"start":{"line":66,"column":56},"end":{"line":66,"column":69}}]},"13":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"14":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":34}},{"start":{"line":67,"column":38},"end":{"line":67,"column":72}}]},"15":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":17},"end":{"line":70,"column":36}},{"start":{"line":70,"column":40},"end":{"line":70,"column":53}}]},"16":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"17":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"18":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"19":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"20":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":9},"end":{"line":121,"column":9}},{"start":{"line":121,"column":9},"end":{"line":121,"column":9}}]},"21":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":9},"end":{"line":124,"column":9}},{"start":{"line":124,"column":9},"end":{"line":124,"column":9}}]},"22":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":9},"end":{"line":129,"column":9}},{"start":{"line":129,"column":9},"end":{"line":129,"column":9}}]},"23":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":9},"end":{"line":188,"column":109}},{"start":{"line":189,"column":4},"end":{"line":189,"column":35}}]}},"code":["'use strict';","","var _ = require('lodash');","var $ = require('../../util/preconditions');","var errors = require('../../errors');","var BufferWriter = require('../../encoding/bufferwriter');","var buffer = require('buffer');","var BufferUtil = require('../../util/buffer');","var JSUtil = require('../../util/js');","var Script = require('../../script');","var Sighash = require('../sighash');","var Output = require('../output');","","var MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;","var DEFAULT_RBF_SEQNUMBER = MAXINT - 2;","var DEFAULT_SEQNUMBER = MAXINT;","var DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;","","function Input(params) {","  if (!(this instanceof Input)) {","    return new Input(params);","  }","  if (params) {","    return this._fromObject(params);","  }","}","","Input.MAXINT = MAXINT;","Input.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;","Input.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;","Input.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;","","Object.defineProperty(Input.prototype, 'script', {","  configurable: false,","  enumerable: true,","  get: function() {","    if (this.isNull()) {","      return null;","    }","    if (!this._script) {","      this._script = new Script(this._scriptBuffer);","      this._script._isInput = true;","    }","    return this._script;","  }","});","","Input.fromObject = function(obj) {","  $.checkArgument(_.isObject(obj));","  var input = new Input();","  return input._fromObject(obj);","};","","Input.prototype._fromObject = function(params) {","  var prevTxId;","  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {","    prevTxId = new buffer.Buffer(params.prevTxId, 'hex');","  } else {","    prevTxId = params.prevTxId;","  }","  this.output = params.output ?","    (params.output instanceof Output ? params.output : new Output(params.output)) : undefined;","  this.prevTxId = prevTxId || params.txidbuf;","  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;","  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ?","    (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber;","  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {","    throw new errors.Transaction.Input.MissingScript();","  }","  this.setScript(params.scriptBuffer || params.script);","  return this;","};","","Input.prototype.toObject = Input.prototype.toJSON = function toObject() {","  var obj = {","    prevTxId: this.prevTxId.toString('hex'),","    outputIndex: this.outputIndex,","    sequenceNumber: this.sequenceNumber,","    script: this._scriptBuffer.toString('hex'),","  };","  // add human readable form if input contains valid script","  if (this.script) {","    obj.scriptString = this.script.toString();","  }","  if (this.output) {","    obj.output = this.output.toObject();","  }","  return obj;","};","","Input.fromBufferReader = function(br) {","  var input = new Input();","  input.prevTxId = br.readReverse(32);","  input.outputIndex = br.readUInt32LE();","  input._scriptBuffer = br.readVarLengthBuffer();","  input.sequenceNumber = br.readUInt32LE();","  // TODO: return different classes according to which input it is","  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.","  return input;","};","","Input.prototype.toBufferWriter = function(writer) {","  if (!writer) {","    writer = new BufferWriter();","  }","  writer.writeReverse(this.prevTxId);","  writer.writeUInt32LE(this.outputIndex);","  var script = this._scriptBuffer;","  writer.writeVarintNum(script.length);","  writer.write(script);","  writer.writeUInt32LE(this.sequenceNumber);","  return writer;","};","","Input.prototype.setScript = function(script) {","  this._script = null;","  if (script instanceof Script) {","    this._script = script;","    this._script._isInput = true;","    this._scriptBuffer = script.toBuffer();","  } else if (JSUtil.isHexa(script)) {","    // hex string script","    this._scriptBuffer = new buffer.Buffer(script, 'hex');","  } else if (_.isString(script)) {","    // human readable string script","    this._script = new Script(script);","    this._script._isInput = true;","    this._scriptBuffer = this._script.toBuffer();","  } else if (BufferUtil.isBuffer(script)) {","    // buffer script","    this._scriptBuffer = new buffer.Buffer(script);","  } else {","    throw new TypeError('Invalid argument type: script');","  }","  return this;","};","","/**"," * Retrieve signatures for the provided PrivateKey."," *"," * @param {Transaction} transaction - the transaction to be signed"," * @param {PrivateKey} privateKey - the private key to use when signing"," * @param {number} inputIndex - the index of this input in the provided transaction"," * @param {number} sigType - defaults to Signature.SIGHASH_ALL"," * @param {Buffer} addressHash - if provided, don't calculate the hash of the"," *     public key associated with the private key provided"," * @abstract"," */","Input.prototype.getSignatures = function() {","  throw new errors.AbstractMethodInvoked(","    'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +","    ' for input: ' + JSON.stringify(this)","  );","};","","Input.prototype.isFullySigned = function() {","  throw new errors.AbstractMethodInvoked('Input#isFullySigned');","};","","Input.prototype.isFinal = function() {","  return this.sequenceNumber !== 4294967295;","};","","Input.prototype.addSignature = function() {","  throw new errors.AbstractMethodInvoked('Input#addSignature');","};","","Input.prototype.clearSignatures = function() {","  throw new errors.AbstractMethodInvoked('Input#clearSignatures');","};","","Input.prototype.isValidSignature = function(transaction, signature) {","  // FIXME: Refactor signature so this is not necessary","  signature.signature.nhashtype = signature.sigtype;","  return Sighash.verify(","    transaction,","    signature.signature,","    signature.publicKey,","    signature.inputIndex,","    this.output.script","  );","};","","/**"," * @returns true if this is a coinbase input (represents no input)"," */","Input.prototype.isNull = function() {","  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&","    this.outputIndex === 0xffffffff;","};","","Input.prototype._estimateSize = function() {","  return this.toBufferWriter().toBuffer().length;","};","","module.exports = Input;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"14":1,"15":1,"16":1,"17":1,"19":1,"20":0,"21":0,"23":0,"24":0,"28":1,"29":1,"30":1,"31":1,"33":1,"37":8,"38":0,"40":0,"41":0,"42":0,"44":0,"48":1,"49":0,"50":0,"51":0,"54":1,"55":0,"56":0,"57":0,"59":0,"61":0,"63":0,"64":0,"65":0,"67":0,"68":0,"70":0,"71":0,"74":1,"75":0,"82":0,"83":0,"85":0,"86":0,"88":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"99":0,"102":1,"103":0,"104":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"123":0,"124":0,"126":0,"127":0,"128":0,"129":0,"131":0,"133":0,"135":0,"149":1,"150":0,"156":1,"157":0,"160":1,"161":0,"164":1,"165":0,"168":1,"169":0,"172":1,"174":0,"175":0,"187":1,"188":8,"192":1,"193":0,"196":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/publickey.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/publickey.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":0,"29":1,"30":1,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"PublicKeyInput","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":26}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":41},"end":{"line":31,"column":91}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":73}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":43},"end":{"line":70,"column":54}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":41},"end":{"line":79,"column":52}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":41},"end":{"line":85,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":51}},"10":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":31}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"13":{"start":{"line":31,"column":0},"end":{"line":46,"column":2}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":46}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":45}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":43}},"17":{"start":{"line":35,"column":2},"end":{"line":44,"column":3}},"18":{"start":{"line":36,"column":4},"end":{"line":43,"column":8}},"19":{"start":{"line":45,"column":2},"end":{"line":45,"column":12}},"20":{"start":{"line":57,"column":0},"end":{"line":64,"column":2}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":86}},"22":{"start":{"line":59,"column":2},"end":{"line":62,"column":5}},"23":{"start":{"line":63,"column":2},"end":{"line":63,"column":14}},"24":{"start":{"line":70,"column":0},"end":{"line":73,"column":2}},"25":{"start":{"line":71,"column":2},"end":{"line":71,"column":33}},"26":{"start":{"line":72,"column":2},"end":{"line":72,"column":14}},"27":{"start":{"line":79,"column":0},"end":{"line":81,"column":2}},"28":{"start":{"line":80,"column":2},"end":{"line":80,"column":37}},"29":{"start":{"line":83,"column":0},"end":{"line":83,"column":36}},"30":{"start":{"line":85,"column":0},"end":{"line":87,"column":2}},"31":{"start":{"line":86,"column":2},"end":{"line":86,"column":40}},"32":{"start":{"line":89,"column":0},"end":{"line":89,"column":32}}},"branchMap":{"1":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":19}},{"start":{"line":33,"column":23},"end":{"line":33,"column":44}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]}},"code":["'use strict';","","var inherits = require('inherits');","","var $ = require('../../util/preconditions');","var BufferUtil = require('../../util/buffer');","","var Input = require('./input');","var Output = require('../output');","var Sighash = require('../sighash');","var Script = require('../../script');","var Signature = require('../../crypto/signature');","var TransactionSignature = require('../signature');","","/**"," * Represents a special kind of input of PayToPublicKey kind."," * @constructor"," */","function PublicKeyInput() {","  Input.apply(this, arguments);","}","inherits(PublicKeyInput, Input);","","/**"," * @param {Transaction} transaction - the transaction to be signed"," * @param {PrivateKey} privateKey - the private key with which to sign the transaction"," * @param {number} index - the index of the input in the transaction input vector"," * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL"," * @return {Array} of objects that can be"," */","PublicKeyInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {","  $.checkState(this.output instanceof Output);","  sigtype = sigtype || Signature.SIGHASH_ALL;","  var publicKey = privateKey.toPublicKey();","  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {","    return [new TransactionSignature({","      publicKey: publicKey,","      prevTxId: this.prevTxId,","      outputIndex: this.outputIndex,","      inputIndex: index,","      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),","      sigtype: sigtype","    })];","  }","  return [];","};","","/**"," * Add the provided signature"," *"," * @param {Object} signature"," * @param {PublicKey} signature.publicKey"," * @param {Signature} signature.signature"," * @param {number=} signature.sigtype"," * @return {PublicKeyInput} this, for chaining"," */","PublicKeyInput.prototype.addSignature = function(transaction, signature) {","  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');","  this.setScript(Script.buildPublicKeyIn(","    signature.signature.toDER(),","    signature.sigtype","  ));","  return this;","};","","/**"," * Clear the input's signature"," * @return {PublicKeyHashInput} this, for chaining"," */","PublicKeyInput.prototype.clearSignatures = function() {","  this.setScript(Script.empty());","  return this;","};","","/**"," * Query whether the input is signed"," * @return {boolean}"," */","PublicKeyInput.prototype.isFullySigned = function() {","  return this.script.isPublicKeyIn();","};","","PublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)","","PublicKeyInput.prototype._estimateSize = function() {","  return PublicKeyInput.SCRIPT_MAX_SIZE;","};","","module.exports = PublicKeyInput;",""],"l":{"3":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"19":1,"20":0,"22":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"45":0,"57":1,"58":0,"59":0,"63":0,"70":1,"71":0,"72":0,"79":1,"80":0,"83":1,"85":1,"86":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/signature.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/signature.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":0,"43":0,"44":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"TransactionSignature","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":45},"end":{"line":34,"column":59}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":50},"end":{"line":47,"column":64}}},"4":{"name":"toObject","line":68,"loc":{"start":{"line":68,"column":82},"end":{"line":68,"column":102}}},"5":{"name":"(anonymous_5)","line":84,"loc":{"start":{"line":84,"column":34},"end":{"line":84,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":31,"column":1}},"10":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":41}},"12":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":15}},"14":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":33}},"16":{"start":{"line":30,"column":2},"end":{"line":30,"column":96}},"17":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"18":{"start":{"line":34,"column":0},"end":{"line":45,"column":2}},"19":{"start":{"line":35,"column":2},"end":{"line":35,"column":29}},"20":{"start":{"line":36,"column":2},"end":{"line":36,"column":48}},"21":{"start":{"line":37,"column":2},"end":{"line":37,"column":101}},"22":{"start":{"line":38,"column":2},"end":{"line":38,"column":37}},"23":{"start":{"line":39,"column":2},"end":{"line":39,"column":35}},"24":{"start":{"line":40,"column":2},"end":{"line":42,"column":57}},"25":{"start":{"line":43,"column":2},"end":{"line":43,"column":29}},"26":{"start":{"line":44,"column":2},"end":{"line":44,"column":14}},"27":{"start":{"line":47,"column":0},"end":{"line":62,"column":2}},"28":{"start":{"line":48,"column":2},"end":{"line":48,"column":57}},"29":{"start":{"line":49,"column":2},"end":{"line":49,"column":64}},"30":{"start":{"line":50,"column":2},"end":{"line":50,"column":66}},"31":{"start":{"line":51,"column":2},"end":{"line":51,"column":74}},"32":{"start":{"line":52,"column":2},"end":{"line":52,"column":76}},"33":{"start":{"line":53,"column":2},"end":{"line":53,"column":46}},"34":{"start":{"line":54,"column":2},"end":{"line":54,"column":44}},"35":{"start":{"line":55,"column":2},"end":{"line":57,"column":89}},"36":{"start":{"line":58,"column":2},"end":{"line":59,"column":87}},"37":{"start":{"line":60,"column":2},"end":{"line":60,"column":42}},"38":{"start":{"line":61,"column":2},"end":{"line":61,"column":68}},"39":{"start":{"line":68,"column":0},"end":{"line":77,"column":2}},"40":{"start":{"line":69,"column":2},"end":{"line":76,"column":4}},"41":{"start":{"line":84,"column":0},"end":{"line":87,"column":2}},"42":{"start":{"line":85,"column":2},"end":{"line":85,"column":26}},"43":{"start":{"line":86,"column":2},"end":{"line":86,"column":42}},"44":{"start":{"line":89,"column":0},"end":{"line":89,"column":38}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"4":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":54},"end":{"line":37,"column":66}},{"start":{"line":37,"column":69},"end":{"line":37,"column":100}}]},"5":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":58},"end":{"line":40,"column":71}},{"start":{"line":41,"column":21},"end":{"line":42,"column":56}}]},"6":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":58},"end":{"line":41,"column":93}},{"start":{"line":42,"column":21},"end":{"line":42,"column":56}}]},"7":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":15},"end":{"line":55,"column":49}},{"start":{"line":56,"column":15},"end":{"line":56,"column":49}},{"start":{"line":57,"column":15},"end":{"line":57,"column":43}}]},"8":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":15},"end":{"line":58,"column":48}},{"start":{"line":59,"column":15},"end":{"line":59,"column":42}}]}},"code":["'use strict';","","var _ = require('lodash');","var $ = require('../util/preconditions');","var inherits = require('inherits');","var BufferUtil = require('../util/buffer');","var JSUtil = require('../util/js');","","var PublicKey = require('../publickey');","var errors = require('../errors');","var Signature = require('../crypto/signature');","","/**"," * @desc"," * Wrapper around Signature with fields related to signing a transaction specifically"," *"," * @param {Object|string|TransactionSignature} arg"," * @constructor"," */","function TransactionSignature(arg) {","  if (!(this instanceof TransactionSignature)) {","    return new TransactionSignature(arg);","  }","  if (arg instanceof TransactionSignature) {","    return arg;","  }","  if (_.isObject(arg)) {","    return this._fromObject(arg);","  }","  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');","}","inherits(TransactionSignature, Signature);","","TransactionSignature.prototype._fromObject = function(arg) {","  this._checkObjectArgs(arg);","  this.publicKey = new PublicKey(arg.publicKey);","  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : new Buffer(arg.prevTxId, 'hex');","  this.outputIndex = arg.outputIndex;","  this.inputIndex = arg.inputIndex;","  this.signature = (arg.signature instanceof Signature) ? arg.signature :","                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :","                     Signature.fromString(arg.signature);","  this.sigtype = arg.sigtype;","  return this;","};","","TransactionSignature.prototype._checkObjectArgs = function(arg) {","  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');","  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');","  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');","  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');","  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');","  $.checkArgument(arg.signature, 'signature');","  $.checkArgument(arg.prevTxId, 'prevTxId');","  $.checkState(arg.signature instanceof Signature ||","               BufferUtil.isBuffer(arg.signature) ||","               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');","  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||","               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');","  $.checkArgument(arg.sigtype, 'sigtype');","  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');","};","","/**"," * Serializes a transaction to a plain JS object"," * @return {Object}"," */","TransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {","  return {","    publicKey: this.publicKey.toString(),","    prevTxId: this.prevTxId.toString('hex'),","    outputIndex: this.outputIndex,","    inputIndex: this.inputIndex,","    signature: this.signature.toString(),","    sigtype: this.sigtype","  };","};","","/**"," * Builds a TransactionSignature from an object"," * @param {Object} object"," * @return {TransactionSignature}"," */","TransactionSignature.fromObject = function(object) {","  $.checkArgument(object);","  return new TransactionSignature(object);","};","","module.exports = TransactionSignature;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"11":1,"20":1,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"30":0,"32":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"43":0,"44":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"58":0,"60":0,"61":0,"68":1,"69":0,"84":1,"85":0,"86":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/publickeyhash.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/publickeyhash.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":1,"29":0,"30":1,"31":1,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"PublicKeyHashInput","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":45},"end":{"line":34,"column":105}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":44},"end":{"line":62,"column":77}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":47},"end":{"line":76,"column":58}}},"5":{"name":"(anonymous_5)","line":85,"loc":{"start":{"line":85,"column":45},"end":{"line":85,"column":56}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":45},"end":{"line":91,"column":56}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":50}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"11":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":31}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"14":{"start":{"line":34,"column":0},"end":{"line":50,"column":2}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":46}},"16":{"start":{"line":36,"column":2},"end":{"line":36,"column":79}},"17":{"start":{"line":37,"column":2},"end":{"line":37,"column":45}},"18":{"start":{"line":39,"column":2},"end":{"line":48,"column":3}},"19":{"start":{"line":40,"column":4},"end":{"line":47,"column":8}},"20":{"start":{"line":49,"column":2},"end":{"line":49,"column":12}},"21":{"start":{"line":62,"column":0},"end":{"line":70,"column":2}},"22":{"start":{"line":63,"column":2},"end":{"line":63,"column":86}},"23":{"start":{"line":64,"column":2},"end":{"line":68,"column":5}},"24":{"start":{"line":69,"column":2},"end":{"line":69,"column":14}},"25":{"start":{"line":76,"column":0},"end":{"line":79,"column":2}},"26":{"start":{"line":77,"column":2},"end":{"line":77,"column":33}},"27":{"start":{"line":78,"column":2},"end":{"line":78,"column":14}},"28":{"start":{"line":85,"column":0},"end":{"line":87,"column":2}},"29":{"start":{"line":86,"column":2},"end":{"line":86,"column":41}},"30":{"start":{"line":89,"column":0},"end":{"line":89,"column":45}},"31":{"start":{"line":91,"column":0},"end":{"line":93,"column":2}},"32":{"start":{"line":92,"column":2},"end":{"line":92,"column":44}},"33":{"start":{"line":95,"column":0},"end":{"line":95,"column":36}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":13},"end":{"line":36,"column":21}},{"start":{"line":36,"column":25},"end":{"line":36,"column":78}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":19}},{"start":{"line":37,"column":23},"end":{"line":37,"column":44}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["'use strict';","","var inherits = require('inherits');","","var $ = require('../../util/preconditions');","var BufferUtil = require('../../util/buffer');","","var Hash = require('../../crypto/hash');","var Input = require('./input');","var Output = require('../output');","var Sighash = require('../sighash');","var Script = require('../../script');","var Signature = require('../../crypto/signature');","var TransactionSignature = require('../signature');","","/**"," * Represents a special kind of input of PayToPublicKeyHash kind."," * @constructor"," */","function PublicKeyHashInput() {","  Input.apply(this, arguments);","}","inherits(PublicKeyHashInput, Input);","","/* jshint maxparams: 5 */","/**"," * @param {Transaction} transaction - the transaction to be signed"," * @param {PrivateKey} privateKey - the private key with which to sign the transaction"," * @param {number} index - the index of the input in the transaction input vector"," * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL"," * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided"," * @return {Array} of objects that can be"," */","PublicKeyHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData) {","  $.checkState(this.output instanceof Output);","  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());","  sigtype = sigtype || Signature.SIGHASH_ALL;","","  if (BufferUtil.equals(hashData, this.output.script.getPublicKeyHash())) {","    return [new TransactionSignature({","      publicKey: privateKey.publicKey,","      prevTxId: this.prevTxId,","      outputIndex: this.outputIndex,","      inputIndex: index,","      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),","      sigtype: sigtype","    })];","  }","  return [];","};","/* jshint maxparams: 3 */","","/**"," * Add the provided signature"," *"," * @param {Object} signature"," * @param {PublicKey} signature.publicKey"," * @param {Signature} signature.signature"," * @param {number=} signature.sigtype"," * @return {PublicKeyHashInput} this, for chaining"," */","PublicKeyHashInput.prototype.addSignature = function(transaction, signature) {","  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');","  this.setScript(Script.buildPublicKeyHashIn(","    signature.publicKey,","    signature.signature.toDER(),","    signature.sigtype","  ));","  return this;","};","","/**"," * Clear the input's signature"," * @return {PublicKeyHashInput} this, for chaining"," */","PublicKeyHashInput.prototype.clearSignatures = function() {","  this.setScript(Script.empty());","  return this;","};","","/**"," * Query whether the input is signed"," * @return {boolean}"," */","PublicKeyHashInput.prototype.isFullySigned = function() {","  return this.script.isPublicKeyHashIn();","};","","PublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)","","PublicKeyHashInput.prototype._estimateSize = function() {","  return PublicKeyHashInput.SCRIPT_MAX_SIZE;","};","","module.exports = PublicKeyHashInput;",""],"l":{"3":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"20":1,"21":0,"23":1,"34":1,"35":0,"36":0,"37":0,"39":0,"40":0,"49":0,"62":1,"63":0,"64":0,"69":0,"76":1,"77":0,"78":0,"85":1,"86":0,"89":1,"91":1,"92":0,"95":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/multisig.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/multisig.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":1,"72":0,"73":1,"74":0,"75":1,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":1,"101":1,"102":0,"103":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"fnMap":{"1":{"name":"MultiSigInput","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":62}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":38},"end":{"line":26,"column":58}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":26},"end":{"line":30,"column":53}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":35},"end":{"line":39,"column":46}}},"5":{"name":"(anonymous_5)","line":42,"loc":{"start":{"line":42,"column":42},"end":{"line":42,"column":62}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":49},"end":{"line":47,"column":70}}},"7":{"name":"(anonymous_7)","line":48,"loc":{"start":{"line":48,"column":27},"end":{"line":48,"column":47}}},"8":{"name":"(anonymous_8)","line":56,"loc":{"start":{"line":56,"column":47},"end":{"line":56,"column":58}}},"9":{"name":"(anonymous_9)","line":57,"loc":{"start":{"line":57,"column":32},"end":{"line":57,"column":52}}},"10":{"name":"(anonymous_10)","line":65,"loc":{"start":{"line":65,"column":40},"end":{"line":65,"column":90}}},"11":{"name":"(anonymous_11)","line":71,"loc":{"start":{"line":71,"column":26},"end":{"line":71,"column":46}}},"12":{"name":"(anonymous_12)","line":87,"loc":{"start":{"line":87,"column":39},"end":{"line":87,"column":72}}},"13":{"name":"(anonymous_13)","line":97,"loc":{"start":{"line":97,"column":40},"end":{"line":97,"column":51}}},"14":{"name":"(anonymous_14)","line":106,"loc":{"start":{"line":106,"column":44},"end":{"line":106,"column":55}}},"15":{"name":"(anonymous_15)","line":108,"loc":{"start":{"line":108,"column":30},"end":{"line":108,"column":50}}},"16":{"name":"(anonymous_16)","line":109,"loc":{"start":{"line":109,"column":4},"end":{"line":109,"column":24}}},"17":{"name":"(anonymous_17)","line":118,"loc":{"start":{"line":118,"column":42},"end":{"line":118,"column":53}}},"18":{"name":"(anonymous_18)","line":123,"loc":{"start":{"line":123,"column":40},"end":{"line":123,"column":51}}},"19":{"name":"(anonymous_19)","line":127,"loc":{"start":{"line":127,"column":49},"end":{"line":127,"column":60}}},"20":{"name":"(anonymous_20)","line":131,"loc":{"start":{"line":131,"column":42},"end":{"line":131,"column":53}}},"21":{"name":"(anonymous_21)","line":132,"loc":{"start":{"line":132,"column":35},"end":{"line":132,"column":60}}},"22":{"name":"(anonymous_22)","line":137,"loc":{"start":{"line":137,"column":53},"end":{"line":137,"column":64}}},"23":{"name":"(anonymous_23)","line":139,"loc":{"start":{"line":139,"column":35},"end":{"line":139,"column":55}}},"24":{"name":"(anonymous_24)","line":144,"loc":{"start":{"line":144,"column":43},"end":{"line":144,"column":76}}},"25":{"name":"(anonymous_25)","line":165,"loc":{"start":{"line":165,"column":36},"end":{"line":165,"column":101}}},"26":{"name":"(anonymous_26)","line":166,"loc":{"start":{"line":166,"column":24},"end":{"line":166,"column":42}}},"27":{"name":"(anonymous_27)","line":168,"loc":{"start":{"line":168,"column":35},"end":{"line":168,"column":62}}},"28":{"name":"(anonymous_28)","line":206,"loc":{"start":{"line":206,"column":40},"end":{"line":206,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":50}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":46}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":51}},"13":{"start":{"line":20,"column":0},"end":{"line":36,"column":1}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":31}},"15":{"start":{"line":22,"column":2},"end":{"line":22,"column":18}},"16":{"start":{"line":23,"column":2},"end":{"line":23,"column":40}},"17":{"start":{"line":24,"column":2},"end":{"line":24,"column":43}},"18":{"start":{"line":25,"column":2},"end":{"line":25,"column":46}},"19":{"start":{"line":26,"column":2},"end":{"line":26,"column":97}},"20":{"start":{"line":26,"column":60},"end":{"line":26,"column":93}},"21":{"start":{"line":27,"column":2},"end":{"line":28,"column":71}},"22":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}},"23":{"start":{"line":30,"column":2},"end":{"line":32,"column":5}},"24":{"start":{"line":31,"column":4},"end":{"line":31,"column":54}},"25":{"start":{"line":33,"column":2},"end":{"line":33,"column":29}},"26":{"start":{"line":35,"column":2},"end":{"line":35,"column":109}},"27":{"start":{"line":37,"column":0},"end":{"line":37,"column":31}},"28":{"start":{"line":39,"column":0},"end":{"line":45,"column":2}},"29":{"start":{"line":40,"column":2},"end":{"line":40,"column":60}},"30":{"start":{"line":41,"column":2},"end":{"line":41,"column":33}},"31":{"start":{"line":42,"column":2},"end":{"line":42,"column":96}},"32":{"start":{"line":42,"column":64},"end":{"line":42,"column":92}},"33":{"start":{"line":43,"column":2},"end":{"line":43,"column":47}},"34":{"start":{"line":44,"column":2},"end":{"line":44,"column":13}},"35":{"start":{"line":47,"column":0},"end":{"line":54,"column":2}},"36":{"start":{"line":48,"column":2},"end":{"line":53,"column":5}},"37":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"38":{"start":{"line":50,"column":6},"end":{"line":50,"column":23}},"39":{"start":{"line":52,"column":4},"end":{"line":52,"column":47}},"40":{"start":{"line":56,"column":0},"end":{"line":63,"column":2}},"41":{"start":{"line":57,"column":2},"end":{"line":62,"column":5}},"42":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"43":{"start":{"line":59,"column":6},"end":{"line":59,"column":23}},"44":{"start":{"line":61,"column":4},"end":{"line":61,"column":32}},"45":{"start":{"line":65,"column":0},"end":{"line":85,"column":2}},"46":{"start":{"line":66,"column":2},"end":{"line":66,"column":46}},"47":{"start":{"line":67,"column":2},"end":{"line":67,"column":45}},"48":{"start":{"line":69,"column":2},"end":{"line":69,"column":18}},"49":{"start":{"line":70,"column":2},"end":{"line":70,"column":19}},"50":{"start":{"line":71,"column":2},"end":{"line":82,"column":5}},"51":{"start":{"line":72,"column":4},"end":{"line":81,"column":5}},"52":{"start":{"line":73,"column":6},"end":{"line":80,"column":10}},"53":{"start":{"line":84,"column":2},"end":{"line":84,"column":17}},"54":{"start":{"line":87,"column":0},"end":{"line":95,"column":2}},"55":{"start":{"line":88,"column":2},"end":{"line":88,"column":87}},"56":{"start":{"line":89,"column":2},"end":{"line":90,"column":44}},"57":{"start":{"line":91,"column":2},"end":{"line":91,"column":62}},"58":{"start":{"line":92,"column":2},"end":{"line":92,"column":83}},"59":{"start":{"line":93,"column":2},"end":{"line":93,"column":23}},"60":{"start":{"line":94,"column":2},"end":{"line":94,"column":14}},"61":{"start":{"line":97,"column":0},"end":{"line":104,"column":2}},"62":{"start":{"line":98,"column":2},"end":{"line":102,"column":5}},"63":{"start":{"line":103,"column":2},"end":{"line":103,"column":14}},"64":{"start":{"line":106,"column":0},"end":{"line":116,"column":2}},"65":{"start":{"line":107,"column":2},"end":{"line":115,"column":4}},"66":{"start":{"line":108,"column":52},"end":{"line":108,"column":85}},"67":{"start":{"line":110,"column":6},"end":{"line":113,"column":9}},"68":{"start":{"line":118,"column":0},"end":{"line":121,"column":2}},"69":{"start":{"line":119,"column":2},"end":{"line":119,"column":54}},"70":{"start":{"line":120,"column":2},"end":{"line":120,"column":23}},"71":{"start":{"line":123,"column":0},"end":{"line":125,"column":2}},"72":{"start":{"line":124,"column":2},"end":{"line":124,"column":51}},"73":{"start":{"line":127,"column":0},"end":{"line":129,"column":2}},"74":{"start":{"line":128,"column":2},"end":{"line":128,"column":49}},"75":{"start":{"line":131,"column":0},"end":{"line":135,"column":2}},"76":{"start":{"line":132,"column":2},"end":{"line":134,"column":8}},"77":{"start":{"line":133,"column":4},"end":{"line":133,"column":31}},"78":{"start":{"line":137,"column":0},"end":{"line":142,"column":2}},"79":{"start":{"line":138,"column":2},"end":{"line":138,"column":18}},"80":{"start":{"line":139,"column":2},"end":{"line":141,"column":5}},"81":{"start":{"line":140,"column":4},"end":{"line":140,"column":73}},"82":{"start":{"line":144,"column":0},"end":{"line":154,"column":2}},"83":{"start":{"line":146,"column":2},"end":{"line":146,"column":52}},"84":{"start":{"line":147,"column":2},"end":{"line":153,"column":4}},"85":{"start":{"line":165,"column":0},"end":{"line":201,"column":2}},"86":{"start":{"line":166,"column":2},"end":{"line":200,"column":5}},"87":{"start":{"line":167,"column":4},"end":{"line":167,"column":30}},"88":{"start":{"line":168,"column":4},"end":{"line":197,"column":7}},"89":{"start":{"line":169,"column":6},"end":{"line":171,"column":7}},"90":{"start":{"line":170,"column":8},"end":{"line":170,"column":20}},"91":{"start":{"line":173,"column":6},"end":{"line":180,"column":9}},"92":{"start":{"line":182,"column":6},"end":{"line":182,"column":56}},"93":{"start":{"line":183,"column":6},"end":{"line":189,"column":8}},"94":{"start":{"line":191,"column":6},"end":{"line":194,"column":7}},"95":{"start":{"line":192,"column":8},"end":{"line":192,"column":35}},"96":{"start":{"line":193,"column":8},"end":{"line":193,"column":21}},"97":{"start":{"line":196,"column":6},"end":{"line":196,"column":18}},"98":{"start":{"line":199,"column":4},"end":{"line":199,"column":50}},"99":{"start":{"line":203,"column":0},"end":{"line":203,"column":31}},"100":{"start":{"line":204,"column":0},"end":{"line":204,"column":34}},"101":{"start":{"line":206,"column":0},"end":{"line":209,"column":2}},"102":{"start":{"line":207,"column":2},"end":{"line":208,"column":50}},"103":{"start":{"line":211,"column":0},"end":{"line":211,"column":31}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":19}},{"start":{"line":23,"column":23},"end":{"line":23,"column":39}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":14},"end":{"line":24,"column":23}},{"start":{"line":24,"column":27},"end":{"line":24,"column":42}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":15},"end":{"line":25,"column":25}},{"start":{"line":25,"column":29},"end":{"line":25,"column":45}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":33},"end":{"line":35,"column":72}},{"start":{"line":35,"column":75},"end":{"line":35,"column":108}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"7":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":19}},{"start":{"line":67,"column":23},"end":{"line":67,"column":44}}]},"8":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"9":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":6}},{"start":{"line":169,"column":6},"end":{"line":169,"column":6}}]},"10":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"11":{"line":199,"type":"cond-expr","locations":[{"start":{"line":199,"column":28},"end":{"line":199,"column":42}},{"start":{"line":199,"column":45},"end":{"line":199,"column":49}}]}},"code":["'use strict';","","var _ = require('lodash');","var inherits = require('inherits');","var Transaction = require('../transaction');","var Input = require('./input');","var Output = require('../output');","var $ = require('../../util/preconditions');","","var Script = require('../../script');","var Signature = require('../../crypto/signature');","var Sighash = require('../sighash');","var PublicKey = require('../../publickey');","var BufferUtil = require('../../util/buffer');","var TransactionSignature = require('../signature');","","/**"," * @constructor"," */","function MultiSigInput(input, pubkeys, threshold, signatures) {","  Input.apply(this, arguments);","  var self = this;","  pubkeys = pubkeys || input.publicKeys;","  threshold = threshold || input.threshold;","  signatures = signatures || input.signatures;","  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });","  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),","    'Provided public keys don\\'t match to the provided output script');","  this.publicKeyIndex = {};","  _.each(this.publicKeys, function(publicKey, index) {","    self.publicKeyIndex[publicKey.toString()] = index;","  });","  this.threshold = threshold;","  // Empty array of signatures","  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);","}","inherits(MultiSigInput, Input);","","MultiSigInput.prototype.toObject = function() {","  var obj = Input.prototype.toObject.apply(this, arguments);","  obj.threshold = this.threshold;","  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });","  obj.signatures = this._serializeSignatures();","  return obj;","};","","MultiSigInput.prototype._deserializeSignatures = function(signatures) {","  return _.map(signatures, function(signature) {","    if (!signature) {","      return undefined;","    }","    return new TransactionSignature(signature);","  });","};","","MultiSigInput.prototype._serializeSignatures = function() {","  return _.map(this.signatures, function(signature) {","    if (!signature) {","      return undefined;","    }","    return signature.toObject();","  });","};","","MultiSigInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {","  $.checkState(this.output instanceof Output);","  sigtype = sigtype || Signature.SIGHASH_ALL;","","  var self = this;","  var results = [];","  _.each(this.publicKeys, function(publicKey) {","    if (publicKey.toString() === privateKey.publicKey.toString()) {","      results.push(new TransactionSignature({","        publicKey: privateKey.publicKey,","        prevTxId: self.prevTxId,","        outputIndex: self.outputIndex,","        inputIndex: index,","        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script),","        sigtype: sigtype","      }));","    }","  });","","  return results;","};","","MultiSigInput.prototype.addSignature = function(transaction, signature) {","  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');","  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),","    'Signature has no matching public key');","  $.checkState(this.isValidSignature(transaction, signature));","  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;","  this._updateScript();","  return this;","};","","MultiSigInput.prototype._updateScript = function() {","  this.setScript(Script.buildMultisigIn(","    this.publicKeys,","    this.threshold,","    this._createSignatures()","  ));","  return this;","};","","MultiSigInput.prototype._createSignatures = function() {","  return _.map(","    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),","    function(signature) {","      return BufferUtil.concat([","        signature.signature.toDER(),","        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)","      ]);","    }","  );","};","","MultiSigInput.prototype.clearSignatures = function() {","  this.signatures = new Array(this.publicKeys.length);","  this._updateScript();","};","","MultiSigInput.prototype.isFullySigned = function() {","  return this.countSignatures() === this.threshold;","};","","MultiSigInput.prototype.countMissingSignatures = function() {","  return this.threshold - this.countSignatures();","};","","MultiSigInput.prototype.countSignatures = function() {","  return _.reduce(this.signatures, function(sum, signature) {","    return sum + (!!signature);","  }, 0);","};","","MultiSigInput.prototype.publicKeysWithoutSignature = function() {","  var self = this;","  return _.filter(this.publicKeys, function(publicKey) {","    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);","  });","};","","MultiSigInput.prototype.isValidSignature = function(transaction, signature) {","  // FIXME: Refactor signature so this is not necessary","  signature.signature.nhashtype = signature.sigtype;","  return Sighash.verify(","    transaction,","    signature.signature,","    signature.publicKey,","    signature.inputIndex,","    this.output.script","  );","};","","/**"," *"," * @param {Buffer[]} signatures"," * @param {PublicKey[]} publicKeys"," * @param {Transaction} transaction"," * @param {Integer} inputIndex"," * @param {Input} input"," * @returns {TransactionSignature[]}"," */","MultiSigInput.normalizeSignatures = function(transaction, input, inputIndex, signatures, publicKeys) {","  return publicKeys.map(function (pubKey) {","    var signatureMatch = null;","    signatures = signatures.filter(function (signatureBuffer) {","      if (signatureMatch) {","        return true;","      }","","      var signature = new TransactionSignature({","        signature: Signature.fromTxFormat(signatureBuffer),","        publicKey: pubKey,","        prevTxId: input.prevTxId,","        outputIndex: input.outputIndex,","        inputIndex: inputIndex,","        sigtype: Signature.SIGHASH_ALL","      });","","      signature.signature.nhashtype = signature.sigtype;","      var isMatch = Sighash.verify(","          transaction,","          signature.signature,","          signature.publicKey,","          signature.inputIndex,","          input.output.script","      );","","      if (isMatch) {","        signatureMatch = signature;","        return false;","      }","","      return true;","    });","","    return signatureMatch ? signatureMatch : null;","  });","};","","MultiSigInput.OPCODES_SIZE = 1; // 0","MultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)","","MultiSigInput.prototype._estimateSize = function() {","  return MultiSigInput.OPCODES_SIZE +","    this.threshold * MultiSigInput.SIGNATURE_SIZE;","};","","module.exports = MultiSigInput;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"33":0,"35":0,"37":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"47":1,"48":0,"49":0,"50":0,"52":0,"56":1,"57":0,"58":0,"59":0,"61":0,"65":1,"66":0,"67":0,"69":0,"70":0,"71":0,"72":0,"73":0,"84":0,"87":1,"88":0,"89":0,"91":0,"92":0,"93":0,"94":0,"97":1,"98":0,"103":0,"106":1,"107":0,"108":0,"110":0,"118":1,"119":0,"120":0,"123":1,"124":0,"127":1,"128":0,"131":1,"132":0,"133":0,"137":1,"138":0,"139":0,"140":0,"144":1,"146":0,"147":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"173":0,"182":0,"183":0,"191":0,"192":0,"193":0,"196":0,"199":0,"203":1,"204":1,"206":1,"207":0,"211":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/multisigscripthash.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/transaction/input/multisigscripthash.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":1,"72":0,"73":1,"74":0,"75":1,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":1,"86":1,"87":1,"88":1,"89":0,"90":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"MultiSigScriptHashInput","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":72}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":38},"end":{"line":25,"column":58}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":26},"end":{"line":30,"column":53}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":45},"end":{"line":39,"column":56}}},"5":{"name":"(anonymous_5)","line":42,"loc":{"start":{"line":42,"column":42},"end":{"line":42,"column":62}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":59},"end":{"line":47,"column":80}}},"7":{"name":"(anonymous_7)","line":48,"loc":{"start":{"line":48,"column":27},"end":{"line":48,"column":47}}},"8":{"name":"(anonymous_8)","line":56,"loc":{"start":{"line":56,"column":57},"end":{"line":56,"column":68}}},"9":{"name":"(anonymous_9)","line":57,"loc":{"start":{"line":57,"column":32},"end":{"line":57,"column":52}}},"10":{"name":"(anonymous_10)","line":65,"loc":{"start":{"line":65,"column":50},"end":{"line":65,"column":100}}},"11":{"name":"(anonymous_11)","line":71,"loc":{"start":{"line":71,"column":26},"end":{"line":71,"column":46}}},"12":{"name":"(anonymous_12)","line":86,"loc":{"start":{"line":86,"column":49},"end":{"line":86,"column":82}}},"13":{"name":"(anonymous_13)","line":96,"loc":{"start":{"line":96,"column":50},"end":{"line":96,"column":61}}},"14":{"name":"(anonymous_14)","line":106,"loc":{"start":{"line":106,"column":54},"end":{"line":106,"column":65}}},"15":{"name":"(anonymous_15)","line":108,"loc":{"start":{"line":108,"column":30},"end":{"line":108,"column":50}}},"16":{"name":"(anonymous_16)","line":109,"loc":{"start":{"line":109,"column":4},"end":{"line":109,"column":24}}},"17":{"name":"(anonymous_17)","line":118,"loc":{"start":{"line":118,"column":52},"end":{"line":118,"column":63}}},"18":{"name":"(anonymous_18)","line":123,"loc":{"start":{"line":123,"column":50},"end":{"line":123,"column":61}}},"19":{"name":"(anonymous_19)","line":127,"loc":{"start":{"line":127,"column":59},"end":{"line":127,"column":70}}},"20":{"name":"(anonymous_20)","line":131,"loc":{"start":{"line":131,"column":52},"end":{"line":131,"column":63}}},"21":{"name":"(anonymous_21)","line":132,"loc":{"start":{"line":132,"column":35},"end":{"line":132,"column":60}}},"22":{"name":"(anonymous_22)","line":137,"loc":{"start":{"line":137,"column":63},"end":{"line":137,"column":74}}},"23":{"name":"(anonymous_23)","line":139,"loc":{"start":{"line":139,"column":35},"end":{"line":139,"column":55}}},"24":{"name":"(anonymous_24)","line":144,"loc":{"start":{"line":144,"column":53},"end":{"line":144,"column":86}}},"25":{"name":"(anonymous_25)","line":160,"loc":{"start":{"line":160,"column":50},"end":{"line":160,"column":61}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":50}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":46}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"12":{"start":{"line":19,"column":0},"end":{"line":36,"column":1}},"13":{"start":{"line":20,"column":2},"end":{"line":20,"column":31}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":18}},"15":{"start":{"line":22,"column":2},"end":{"line":22,"column":40}},"16":{"start":{"line":23,"column":2},"end":{"line":23,"column":43}},"17":{"start":{"line":24,"column":2},"end":{"line":24,"column":46}},"18":{"start":{"line":25,"column":2},"end":{"line":25,"column":97}},"19":{"start":{"line":25,"column":60},"end":{"line":25,"column":93}},"20":{"start":{"line":26,"column":2},"end":{"line":26,"column":74}},"21":{"start":{"line":27,"column":2},"end":{"line":28,"column":74}},"22":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}},"23":{"start":{"line":30,"column":2},"end":{"line":32,"column":5}},"24":{"start":{"line":31,"column":4},"end":{"line":31,"column":54}},"25":{"start":{"line":33,"column":2},"end":{"line":33,"column":29}},"26":{"start":{"line":35,"column":2},"end":{"line":35,"column":109}},"27":{"start":{"line":37,"column":0},"end":{"line":37,"column":41}},"28":{"start":{"line":39,"column":0},"end":{"line":45,"column":2}},"29":{"start":{"line":40,"column":2},"end":{"line":40,"column":60}},"30":{"start":{"line":41,"column":2},"end":{"line":41,"column":33}},"31":{"start":{"line":42,"column":2},"end":{"line":42,"column":96}},"32":{"start":{"line":42,"column":64},"end":{"line":42,"column":92}},"33":{"start":{"line":43,"column":2},"end":{"line":43,"column":47}},"34":{"start":{"line":44,"column":2},"end":{"line":44,"column":13}},"35":{"start":{"line":47,"column":0},"end":{"line":54,"column":2}},"36":{"start":{"line":48,"column":2},"end":{"line":53,"column":5}},"37":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"38":{"start":{"line":50,"column":6},"end":{"line":50,"column":23}},"39":{"start":{"line":52,"column":4},"end":{"line":52,"column":47}},"40":{"start":{"line":56,"column":0},"end":{"line":63,"column":2}},"41":{"start":{"line":57,"column":2},"end":{"line":62,"column":5}},"42":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"43":{"start":{"line":59,"column":6},"end":{"line":59,"column":23}},"44":{"start":{"line":61,"column":4},"end":{"line":61,"column":32}},"45":{"start":{"line":65,"column":0},"end":{"line":84,"column":2}},"46":{"start":{"line":66,"column":2},"end":{"line":66,"column":46}},"47":{"start":{"line":67,"column":2},"end":{"line":67,"column":45}},"48":{"start":{"line":69,"column":2},"end":{"line":69,"column":18}},"49":{"start":{"line":70,"column":2},"end":{"line":70,"column":19}},"50":{"start":{"line":71,"column":2},"end":{"line":82,"column":5}},"51":{"start":{"line":72,"column":4},"end":{"line":81,"column":5}},"52":{"start":{"line":73,"column":6},"end":{"line":80,"column":10}},"53":{"start":{"line":83,"column":2},"end":{"line":83,"column":17}},"54":{"start":{"line":86,"column":0},"end":{"line":94,"column":2}},"55":{"start":{"line":87,"column":2},"end":{"line":87,"column":87}},"56":{"start":{"line":88,"column":2},"end":{"line":89,"column":58}},"57":{"start":{"line":90,"column":2},"end":{"line":90,"column":62}},"58":{"start":{"line":91,"column":2},"end":{"line":91,"column":83}},"59":{"start":{"line":92,"column":2},"end":{"line":92,"column":23}},"60":{"start":{"line":93,"column":2},"end":{"line":93,"column":14}},"61":{"start":{"line":96,"column":0},"end":{"line":104,"column":2}},"62":{"start":{"line":97,"column":2},"end":{"line":102,"column":5}},"63":{"start":{"line":103,"column":2},"end":{"line":103,"column":14}},"64":{"start":{"line":106,"column":0},"end":{"line":116,"column":2}},"65":{"start":{"line":107,"column":2},"end":{"line":115,"column":4}},"66":{"start":{"line":108,"column":52},"end":{"line":108,"column":85}},"67":{"start":{"line":110,"column":6},"end":{"line":113,"column":9}},"68":{"start":{"line":118,"column":0},"end":{"line":121,"column":2}},"69":{"start":{"line":119,"column":2},"end":{"line":119,"column":54}},"70":{"start":{"line":120,"column":2},"end":{"line":120,"column":23}},"71":{"start":{"line":123,"column":0},"end":{"line":125,"column":2}},"72":{"start":{"line":124,"column":2},"end":{"line":124,"column":51}},"73":{"start":{"line":127,"column":0},"end":{"line":129,"column":2}},"74":{"start":{"line":128,"column":2},"end":{"line":128,"column":49}},"75":{"start":{"line":131,"column":0},"end":{"line":135,"column":2}},"76":{"start":{"line":132,"column":2},"end":{"line":134,"column":8}},"77":{"start":{"line":133,"column":4},"end":{"line":133,"column":31}},"78":{"start":{"line":137,"column":0},"end":{"line":142,"column":2}},"79":{"start":{"line":138,"column":2},"end":{"line":138,"column":18}},"80":{"start":{"line":139,"column":2},"end":{"line":141,"column":5}},"81":{"start":{"line":140,"column":4},"end":{"line":140,"column":73}},"82":{"start":{"line":144,"column":0},"end":{"line":154,"column":2}},"83":{"start":{"line":146,"column":2},"end":{"line":146,"column":52}},"84":{"start":{"line":147,"column":2},"end":{"line":153,"column":4}},"85":{"start":{"line":156,"column":0},"end":{"line":156,"column":41}},"86":{"start":{"line":157,"column":0},"end":{"line":157,"column":44}},"87":{"start":{"line":158,"column":0},"end":{"line":158,"column":41}},"88":{"start":{"line":160,"column":0},"end":{"line":164,"column":2}},"89":{"start":{"line":161,"column":2},"end":{"line":163,"column":65}},"90":{"start":{"line":166,"column":0},"end":{"line":166,"column":41}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":19}},{"start":{"line":22,"column":23},"end":{"line":22,"column":39}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":14},"end":{"line":23,"column":23}},{"start":{"line":23,"column":27},"end":{"line":23,"column":42}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":15},"end":{"line":24,"column":25}},{"start":{"line":24,"column":29},"end":{"line":24,"column":45}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":33},"end":{"line":35,"column":72}},{"start":{"line":35,"column":75},"end":{"line":35,"column":108}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"7":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":19}},{"start":{"line":67,"column":23},"end":{"line":67,"column":44}}]},"8":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]}},"code":["'use strict';","","var _ = require('lodash');","var inherits = require('inherits');","var Input = require('./input');","var Output = require('../output');","var $ = require('../../util/preconditions');","","var Script = require('../../script');","var Signature = require('../../crypto/signature');","var Sighash = require('../sighash');","var PublicKey = require('../../publickey');","var BufferUtil = require('../../util/buffer');","var TransactionSignature = require('../signature');","","/**"," * @constructor"," */","function MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {","  Input.apply(this, arguments);","  var self = this;","  pubkeys = pubkeys || input.publicKeys;","  threshold = threshold || input.threshold;","  signatures = signatures || input.signatures;","  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });","  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);","  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),","               'Provided public keys don\\'t hash to the provided output');","  this.publicKeyIndex = {};","  _.each(this.publicKeys, function(publicKey, index) {","    self.publicKeyIndex[publicKey.toString()] = index;","  });","  this.threshold = threshold;","  // Empty array of signatures","  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);","}","inherits(MultiSigScriptHashInput, Input);","","MultiSigScriptHashInput.prototype.toObject = function() {","  var obj = Input.prototype.toObject.apply(this, arguments);","  obj.threshold = this.threshold;","  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });","  obj.signatures = this._serializeSignatures();","  return obj;","};","","MultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {","  return _.map(signatures, function(signature) {","    if (!signature) {","      return undefined;","    }","    return new TransactionSignature(signature);","  });","};","","MultiSigScriptHashInput.prototype._serializeSignatures = function() {","  return _.map(this.signatures, function(signature) {","    if (!signature) {","      return undefined;","    }","    return signature.toObject();","  });","};","","MultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {","  $.checkState(this.output instanceof Output);","  sigtype = sigtype || Signature.SIGHASH_ALL;","","  var self = this;","  var results = [];","  _.each(this.publicKeys, function(publicKey) {","    if (publicKey.toString() === privateKey.publicKey.toString()) {","      results.push(new TransactionSignature({","        publicKey: privateKey.publicKey,","        prevTxId: self.prevTxId,","        outputIndex: self.outputIndex,","        inputIndex: index,","        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript),","        sigtype: sigtype","      }));","    }","  });","  return results;","};","","MultiSigScriptHashInput.prototype.addSignature = function(transaction, signature) {","  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');","  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),","                  'Signature has no matching public key');","  $.checkState(this.isValidSignature(transaction, signature));","  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;","  this._updateScript();","  return this;","};","","MultiSigScriptHashInput.prototype._updateScript = function() {","  this.setScript(Script.buildP2SHMultisigIn(","    this.publicKeys,","    this.threshold,","    this._createSignatures(),","    { cachedMultisig: this.redeemScript }","  ));","  return this;","};","","MultiSigScriptHashInput.prototype._createSignatures = function() {","  return _.map(","    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),","    function(signature) {","      return BufferUtil.concat([","        signature.signature.toDER(),","        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)","      ]);","    }","  );","};","","MultiSigScriptHashInput.prototype.clearSignatures = function() {","  this.signatures = new Array(this.publicKeys.length);","  this._updateScript();","};","","MultiSigScriptHashInput.prototype.isFullySigned = function() {","  return this.countSignatures() === this.threshold;","};","","MultiSigScriptHashInput.prototype.countMissingSignatures = function() {","  return this.threshold - this.countSignatures();","};","","MultiSigScriptHashInput.prototype.countSignatures = function() {","  return _.reduce(this.signatures, function(sum, signature) {","    return sum + (!!signature);","  }, 0);","};","","MultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {","  var self = this;","  return _.filter(this.publicKeys, function(publicKey) {","    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);","  });","};","","MultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature) {","  // FIXME: Refactor signature so this is not necessary","  signature.signature.nhashtype = signature.sigtype;","  return Sighash.verify(","      transaction,","      signature.signature,","      signature.publicKey,","      signature.inputIndex,","      this.redeemScript","  );","};","","MultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG","MultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)","MultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)","","MultiSigScriptHashInput.prototype._estimateSize = function() {","  return MultiSigScriptHashInput.OPCODES_SIZE +","    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +","    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;","};","","module.exports = MultiSigScriptHashInput;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"33":0,"35":0,"37":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"47":1,"48":0,"49":0,"50":0,"52":0,"56":1,"57":0,"58":0,"59":0,"61":0,"65":1,"66":0,"67":0,"69":0,"70":0,"71":0,"72":0,"73":0,"83":0,"86":1,"87":0,"88":0,"90":0,"91":0,"92":0,"93":0,"96":1,"97":0,"103":0,"106":1,"107":0,"108":0,"110":0,"118":1,"119":0,"120":0,"123":1,"124":0,"127":1,"128":0,"131":1,"132":0,"133":0,"137":1,"138":0,"139":0,"140":0,"144":1,"146":0,"147":0,"156":1,"157":1,"158":1,"160":1,"161":0,"166":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/privatekey.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/privatekey.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":1,"78":0,"79":1,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":1,"87":0,"88":0,"89":1,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":1,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":1,"115":0,"116":1,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":1,"124":0,"125":1,"126":0,"127":0,"128":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"PrivateKey","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":35}}},"2":{"name":"(anonymous_2)","line":85,"loc":{"start":{"line":85,"column":42},"end":{"line":85,"column":66}}},"3":{"name":"(anonymous_3)","line":122,"loc":{"start":{"line":122,"column":26},"end":{"line":122,"column":36}}},"4":{"name":"(anonymous_4)","line":141,"loc":{"start":{"line":141,"column":30},"end":{"line":141,"column":53}}},"5":{"name":"(anonymous_5)","line":180,"loc":{"start":{"line":180,"column":32},"end":{"line":180,"column":55}}},"6":{"name":"(anonymous_6)","line":195,"loc":{"start":{"line":195,"column":27},"end":{"line":195,"column":50}}},"7":{"name":"(anonymous_7)","line":206,"loc":{"start":{"line":206,"column":24},"end":{"line":206,"column":47}}},"8":{"name":"(anonymous_8)","line":218,"loc":{"start":{"line":218,"column":30},"end":{"line":218,"column":45}}},"9":{"name":"(anonymous_9)","line":234,"loc":{"start":{"line":234,"column":45},"end":{"line":234,"column":59}}},"10":{"name":"(anonymous_10)","line":244,"loc":{"start":{"line":244,"column":24},"end":{"line":244,"column":38}}},"11":{"name":"(anonymous_11)","line":255,"loc":{"start":{"line":255,"column":24},"end":{"line":255,"column":42}}},"12":{"name":"(anonymous_12)","line":268,"loc":{"start":{"line":268,"column":32},"end":{"line":268,"column":56}}},"13":{"name":"(anonymous_13)","line":286,"loc":{"start":{"line":286,"column":21},"end":{"line":286,"column":44}}},"14":{"name":"(anonymous_14)","line":298,"loc":{"start":{"line":298,"column":32},"end":{"line":298,"column":43}}},"15":{"name":"(anonymous_15)","line":307,"loc":{"start":{"line":307,"column":29},"end":{"line":307,"column":40}}},"16":{"name":"(anonymous_16)","line":329,"loc":{"start":{"line":329,"column":35},"end":{"line":329,"column":45}}},"17":{"name":"(anonymous_17)","line":338,"loc":{"start":{"line":338,"column":32},"end":{"line":338,"column":42}}},"18":{"name":"(anonymous_18)","line":347,"loc":{"start":{"line":347,"column":35},"end":{"line":347,"column":45}}},"19":{"name":"(anonymous_19)","line":361,"loc":{"start":{"line":361,"column":33},"end":{"line":361,"column":51}}},"20":{"name":"toObject","line":369,"loc":{"start":{"line":369,"column":62},"end":{"line":369,"column":82}}},"21":{"name":"(anonymous_21)","line":382,"loc":{"start":{"line":382,"column":31},"end":{"line":382,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"11":{"start":{"line":37,"column":0},"end":{"line":75,"column":1}},"12":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":41}},"14":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":16}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":52}},"17":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":85}},"19":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"20":{"start":{"line":55,"column":4},"end":{"line":55,"column":54}},"21":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":77}},"23":{"start":{"line":61,"column":2},"end":{"line":65,"column":5}},"24":{"start":{"line":67,"column":2},"end":{"line":71,"column":5}},"25":{"start":{"line":73,"column":2},"end":{"line":73,"column":14}},"26":{"start":{"line":85,"column":0},"end":{"line":114,"column":2}},"27":{"start":{"line":87,"column":2},"end":{"line":90,"column":4}},"28":{"start":{"line":93,"column":2},"end":{"line":112,"column":3}},"29":{"start":{"line":94,"column":4},"end":{"line":94,"column":40}},"30":{"start":{"line":95,"column":9},"end":{"line":112,"column":3}},"31":{"start":{"line":96,"column":4},"end":{"line":96,"column":19}},"32":{"start":{"line":97,"column":9},"end":{"line":112,"column":3}},"33":{"start":{"line":98,"column":4},"end":{"line":98,"column":54}},"34":{"start":{"line":99,"column":9},"end":{"line":112,"column":3}},"35":{"start":{"line":100,"column":4},"end":{"line":100,"column":45}},"36":{"start":{"line":101,"column":9},"end":{"line":112,"column":3}},"37":{"start":{"line":102,"column":4},"end":{"line":102,"column":40}},"38":{"start":{"line":103,"column":4},"end":{"line":103,"column":38}},"39":{"start":{"line":104,"column":9},"end":{"line":112,"column":3}},"40":{"start":{"line":105,"column":4},"end":{"line":109,"column":5}},"41":{"start":{"line":106,"column":6},"end":{"line":106,"column":48}},"42":{"start":{"line":108,"column":6},"end":{"line":108,"column":53}},"43":{"start":{"line":111,"column":4},"end":{"line":111,"column":72}},"44":{"start":{"line":113,"column":2},"end":{"line":113,"column":14}},"45":{"start":{"line":122,"column":0},"end":{"line":131,"column":2}},"46":{"start":{"line":123,"column":2},"end":{"line":123,"column":16}},"47":{"start":{"line":124,"column":2},"end":{"line":124,"column":9}},"48":{"start":{"line":125,"column":2},"end":{"line":129,"column":23}},"49":{"start":{"line":126,"column":4},"end":{"line":126,"column":45}},"50":{"start":{"line":127,"column":4},"end":{"line":127,"column":32}},"51":{"start":{"line":128,"column":4},"end":{"line":128,"column":36}},"52":{"start":{"line":130,"column":2},"end":{"line":130,"column":12}},"53":{"start":{"line":141,"column":0},"end":{"line":170,"column":2}},"54":{"start":{"line":143,"column":2},"end":{"line":143,"column":16}},"55":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"56":{"start":{"line":146,"column":4},"end":{"line":146,"column":55}},"57":{"start":{"line":149,"column":2},"end":{"line":149,"column":52}},"58":{"start":{"line":151,"column":2},"end":{"line":153,"column":3}},"59":{"start":{"line":152,"column":4},"end":{"line":152,"column":39}},"60":{"start":{"line":155,"column":2},"end":{"line":157,"column":3}},"61":{"start":{"line":156,"column":4},"end":{"line":156,"column":56}},"62":{"start":{"line":159,"column":2},"end":{"line":165,"column":3}},"63":{"start":{"line":160,"column":4},"end":{"line":160,"column":27}},"64":{"start":{"line":161,"column":9},"end":{"line":165,"column":3}},"65":{"start":{"line":162,"column":4},"end":{"line":162,"column":28}},"66":{"start":{"line":164,"column":4},"end":{"line":164,"column":85}},"67":{"start":{"line":167,"column":2},"end":{"line":167,"column":48}},"68":{"start":{"line":169,"column":2},"end":{"line":169,"column":14}},"69":{"start":{"line":180,"column":0},"end":{"line":186,"column":2}},"70":{"start":{"line":181,"column":2},"end":{"line":181,"column":16}},"71":{"start":{"line":182,"column":2},"end":{"line":182,"column":66}},"72":{"start":{"line":183,"column":2},"end":{"line":183,"column":31}},"73":{"start":{"line":184,"column":2},"end":{"line":184,"column":26}},"74":{"start":{"line":185,"column":2},"end":{"line":185,"column":14}},"75":{"start":{"line":195,"column":0},"end":{"line":197,"column":2}},"76":{"start":{"line":196,"column":2},"end":{"line":196,"column":71}},"77":{"start":{"line":206,"column":0},"end":{"line":208,"column":2}},"78":{"start":{"line":207,"column":2},"end":{"line":207,"column":38}},"79":{"start":{"line":218,"column":0},"end":{"line":226,"column":2}},"80":{"start":{"line":219,"column":2},"end":{"line":219,"column":34}},"81":{"start":{"line":220,"column":2},"end":{"line":220,"column":43}},"82":{"start":{"line":221,"column":2},"end":{"line":225,"column":4}},"83":{"start":{"line":234,"column":0},"end":{"line":237,"column":2}},"84":{"start":{"line":235,"column":2},"end":{"line":235,"column":81}},"85":{"start":{"line":236,"column":2},"end":{"line":236,"column":29}},"86":{"start":{"line":244,"column":0},"end":{"line":247,"column":2}},"87":{"start":{"line":245,"column":2},"end":{"line":245,"column":82}},"88":{"start":{"line":246,"column":2},"end":{"line":246,"column":29}},"89":{"start":{"line":255,"column":0},"end":{"line":258,"column":2}},"90":{"start":{"line":256,"column":2},"end":{"line":256,"column":37}},"91":{"start":{"line":257,"column":2},"end":{"line":257,"column":37}},"92":{"start":{"line":268,"column":0},"end":{"line":277,"column":2}},"93":{"start":{"line":269,"column":2},"end":{"line":269,"column":12}},"94":{"start":{"line":270,"column":2},"end":{"line":275,"column":3}},"95":{"start":{"line":272,"column":4},"end":{"line":272,"column":34}},"96":{"start":{"line":274,"column":4},"end":{"line":274,"column":14}},"97":{"start":{"line":276,"column":2},"end":{"line":276,"column":15}},"98":{"start":{"line":286,"column":0},"end":{"line":291,"column":2}},"99":{"start":{"line":287,"column":2},"end":{"line":289,"column":3}},"100":{"start":{"line":288,"column":4},"end":{"line":288,"column":17}},"101":{"start":{"line":290,"column":2},"end":{"line":290,"column":55}},"102":{"start":{"line":298,"column":0},"end":{"line":300,"column":2}},"103":{"start":{"line":299,"column":2},"end":{"line":299,"column":41}},"104":{"start":{"line":307,"column":0},"end":{"line":322,"column":2}},"105":{"start":{"line":308,"column":2},"end":{"line":308,"column":29}},"106":{"start":{"line":309,"column":2},"end":{"line":309,"column":35}},"107":{"start":{"line":311,"column":2},"end":{"line":311,"column":10}},"108":{"start":{"line":312,"column":2},"end":{"line":319,"column":3}},"109":{"start":{"line":313,"column":4},"end":{"line":315,"column":46}},"110":{"start":{"line":317,"column":4},"end":{"line":318,"column":56}},"111":{"start":{"line":321,"column":2},"end":{"line":321,"column":33}},"112":{"start":{"line":329,"column":0},"end":{"line":331,"column":2}},"113":{"start":{"line":330,"column":2},"end":{"line":330,"column":17}},"114":{"start":{"line":338,"column":0},"end":{"line":340,"column":2}},"115":{"start":{"line":339,"column":2},"end":{"line":339,"column":28}},"116":{"start":{"line":347,"column":0},"end":{"line":352,"column":2}},"117":{"start":{"line":348,"column":2},"end":{"line":350,"column":3}},"118":{"start":{"line":349,"column":4},"end":{"line":349,"column":50}},"119":{"start":{"line":351,"column":2},"end":{"line":351,"column":22}},"120":{"start":{"line":361,"column":0},"end":{"line":364,"column":2}},"121":{"start":{"line":362,"column":2},"end":{"line":362,"column":34}},"122":{"start":{"line":363,"column":2},"end":{"line":363,"column":64}},"123":{"start":{"line":369,"column":0},"end":{"line":375,"column":2}},"124":{"start":{"line":370,"column":2},"end":{"line":374,"column":4}},"125":{"start":{"line":382,"column":0},"end":{"line":385,"column":2}},"126":{"start":{"line":383,"column":2},"end":{"line":383,"column":62}},"127":{"start":{"line":384,"column":2},"end":{"line":384,"column":95}},"128":{"start":{"line":387,"column":0},"end":{"line":387,"column":28}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":14}},{"start":{"line":51,"column":18},"end":{"line":51,"column":46}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"7":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":23},"end":{"line":89,"column":44}},{"start":{"line":89,"column":47},"end":{"line":89,"column":70}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"9":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":25}},{"start":{"line":93,"column":29},"end":{"line":93,"column":43}}]},"10":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":9},"end":{"line":95,"column":9}},{"start":{"line":95,"column":9},"end":{"line":95,"column":9}}]},"11":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":9},"end":{"line":97,"column":9}},{"start":{"line":97,"column":9},"end":{"line":97,"column":9}}]},"12":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":13},"end":{"line":97,"column":35}},{"start":{"line":97,"column":39},"end":{"line":97,"column":65}}]},"13":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":9},"end":{"line":99,"column":9}},{"start":{"line":99,"column":9},"end":{"line":99,"column":9}}]},"14":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":13},"end":{"line":99,"column":20}},{"start":{"line":99,"column":24},"end":{"line":99,"column":36}}]},"15":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":9},"end":{"line":101,"column":9}},{"start":{"line":101,"column":9},"end":{"line":101,"column":9}}]},"16":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":13},"end":{"line":101,"column":21}},{"start":{"line":101,"column":25},"end":{"line":101,"column":43}}]},"17":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":9},"end":{"line":104,"column":9}},{"start":{"line":104,"column":9},"end":{"line":104,"column":9}}]},"18":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"19":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"20":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"21":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"22":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":13}},{"start":{"line":155,"column":17},"end":{"line":155,"column":55}}]},"23":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"24":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":6},"end":{"line":159,"column":31}},{"start":{"line":159,"column":35},"end":{"line":159,"column":60}}]},"25":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":9},"end":{"line":161,"column":9}},{"start":{"line":161,"column":9},"end":{"line":161,"column":9}}]},"26":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":17},"end":{"line":182,"column":38}},{"start":{"line":182,"column":42},"end":{"line":182,"column":65}}]},"27":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":2},"end":{"line":287,"column":2}},{"start":{"line":287,"column":2},"end":{"line":287,"column":2}}]},"28":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"29":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":2},"end":{"line":348,"column":2}},{"start":{"line":348,"column":2},"end":{"line":348,"column":2}}]},"30":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":39},"end":{"line":363,"column":46}},{"start":{"line":363,"column":50},"end":{"line":363,"column":62}}]},"31":{"line":383,"type":"cond-expr","locations":[{"start":{"line":383,"column":40},"end":{"line":383,"column":56}},{"start":{"line":383,"column":59},"end":{"line":383,"column":61}}]}},"code":["'use strict';","","var _ = require('lodash');","var Address = require('./address');","var Base58Check = require('./encoding/base58check');","var BN = require('./crypto/bn');","var JSUtil = require('./util/js');","var Networks = require('./networks');","var Point = require('./crypto/point');","var PublicKey = require('./publickey');","var Random = require('./crypto/random');","var $ = require('./util/preconditions');","","/**"," * Instantiate a PrivateKey from a BN, Buffer and WIF."," *"," * @example"," * ```javascript"," * // generate a new random key"," * var key = PrivateKey();"," *"," * // get the associated address"," * var address = key.toAddress();"," *"," * // encode into wallet export format"," * var exported = key.toWIF();"," *"," * // instantiate from the exported (and saved) private key"," * var imported = PrivateKey.fromWIF(exported);"," * ```"," *"," * @param {string} data - The encoded data in various formats"," * @param {Network|string=} network - a {@link Network} object, or a string with the network name"," * @returns {PrivateKey} A new valid instance of an PrivateKey"," * @constructor"," */","function PrivateKey(data, network) {","  /* jshint maxstatements: 20 */","  /* jshint maxcomplexity: 8 */","","  if (!(this instanceof PrivateKey)) {","    return new PrivateKey(data, network);","  }","  if (data instanceof PrivateKey) {","    return data;","  }","","  var info = this._classifyArguments(data, network);","","  // validation","  if (!info.bn || info.bn.cmp(new BN(0)) === 0){","    throw new TypeError('Number can not be equal to zero, undefined, null or false');","  }","  if (!info.bn.lt(Point.getN())) {","    throw new TypeError('Number must be less than N');","  }","  if (typeof(info.network) === 'undefined') {","    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');","  }","","  JSUtil.defineImmutable(this, {","    bn: info.bn,","    compressed: info.compressed,","    network: info.network","  });","","  Object.defineProperty(this, 'publicKey', {","    configurable: false,","    enumerable: true,","    get: this.toPublicKey.bind(this)","  });","","  return this;","","};","","/**"," * Internal helper to instantiate PrivateKey internal `info` object from"," * different kinds of arguments passed to the constructor."," *"," * @param {*} data"," * @param {Network|string=} network - a {@link Network} object, or a string with the network name"," * @return {Object}"," */","PrivateKey.prototype._classifyArguments = function(data, network) {","  /* jshint maxcomplexity: 10 */","  var info = {","    compressed: true,","    network: network ? Networks.get(network) : Networks.defaultNetwork","  };","","  // detect type of data","  if (_.isUndefined(data) || _.isNull(data)){","    info.bn = PrivateKey._getRandomBN();","  } else if (data instanceof BN) {","    info.bn = data;","  } else if (data instanceof Buffer || data instanceof Uint8Array) {","    info = PrivateKey._transformBuffer(data, network);","  } else if (data.bn && data.network){","    info = PrivateKey._transformObject(data);","  } else if (!network && Networks.get(data)) {","    info.bn = PrivateKey._getRandomBN();","    info.network = Networks.get(data);","  } else if (typeof(data) === 'string'){","    if (JSUtil.isHexa(data)) {","      info.bn = new BN(new Buffer(data, 'hex'));","    } else {","      info = PrivateKey._transformWIF(data, network);","    }","  } else {","    throw new TypeError('First argument is an unrecognized data type.');","  }","  return info;","};","","/**"," * Internal function to get a random Big Number (BN)"," *"," * @returns {BN} A new randomly generated BN"," * @private"," */","PrivateKey._getRandomBN = function(){","  var condition;","  var bn;","  do {","    var privbuf = Random.getRandomBuffer(32);","    bn = BN.fromBuffer(privbuf);","    condition = bn.lt(Point.getN());","  } while (!condition);","  return bn;","};","","/**"," * Internal function to transform a WIF Buffer into a private key"," *"," * @param {Buffer} buf - An WIF string"," * @param {Network|string=} network - a {@link Network} object, or a string with the network name"," * @returns {Object} An object with keys: bn, network and compressed"," * @private"," */","PrivateKey._transformBuffer = function(buf, network) {","","  var info = {};","","  if (buf.length === 32) {","    return PrivateKey._transformBNBuffer(buf, network);","  }","","  info.network = Networks.get(buf[0], 'privatekey');","","  if (!info.network) {","    throw new Error('Invalid network');","  }","","  if (network && info.network !== Networks.get(network)) {","    throw new TypeError('Private key network mismatch');","  }","","  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {","    info.compressed = true;","  } else if (buf.length === 1 + 32) {","    info.compressed = false;","  } else {","    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');","  }","","  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));","","  return info;","};","","/**"," * Internal function to transform a BN buffer into a private key"," *"," * @param {Buffer} buf"," * @param {Network|string=} network - a {@link Network} object, or a string with the network name"," * @returns {object} an Object with keys: bn, network, and compressed"," * @private"," */","PrivateKey._transformBNBuffer = function(buf, network) {","  var info = {};","  info.network = Networks.get(network) || Networks.defaultNetwork;","  info.bn = BN.fromBuffer(buf);","  info.compressed = false;","  return info;","};","","/**"," * Internal function to transform a WIF string into a private key"," *"," * @param {string} buf - An WIF string"," * @returns {Object} An object with keys: bn, network and compressed"," * @private"," */","PrivateKey._transformWIF = function(str, network) {","  return PrivateKey._transformBuffer(Base58Check.decode(str), network);","};","","/**"," * Instantiate a PrivateKey from a Buffer with the DER or WIF representation"," *"," * @param {Buffer} arg"," * @param {Network} network"," * @return {PrivateKey}"," */","PrivateKey.fromBuffer = function(arg, network) {","  return new PrivateKey(arg, network);","};","","/**"," * Internal function to transform a JSON string on plain object into a private key"," * return this."," *"," * @param {string} json - A JSON string or plain object"," * @returns {Object} An object with keys: bn, network and compressed"," * @private"," */","PrivateKey._transformObject = function(json) {","  var bn = new BN(json.bn, 'hex');","  var network = Networks.get(json.network);","  return {","    bn: bn,","    network: network,","    compressed: json.compressed","  };","};","","/**"," * Instantiate a PrivateKey from a WIF string"," *"," * @param {string} str - The WIF encoded private key string"," * @returns {PrivateKey} A new valid instance of PrivateKey"," */","PrivateKey.fromString = PrivateKey.fromWIF = function(str) {","  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');","  return new PrivateKey(str);","};","","/**"," * Instantiate a PrivateKey from a plain JavaScript object"," *"," * @param {Object} obj - The output from privateKey.toObject()"," */","PrivateKey.fromObject = function(obj) {","  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');","  return new PrivateKey(obj);","};","","/**"," * Instantiate a PrivateKey from random bytes"," *"," * @param {string=} network - Either \"livenet\" or \"testnet\""," * @returns {PrivateKey} A new valid instance of PrivateKey"," */","PrivateKey.fromRandom = function(network) {","  var bn = PrivateKey._getRandomBN();","  return new PrivateKey(bn, network);","};","","/**"," * Check if there would be any errors when initializing a PrivateKey"," *"," * @param {string} data - The encoded data in various formats"," * @param {string=} network - Either \"livenet\" or \"testnet\""," * @returns {null|Error} An error if exists"," */","","PrivateKey.getValidationError = function(data, network) {","  var error;","  try {","    /* jshint nonew: false */","    new PrivateKey(data, network);","  } catch (e) {","    error = e;","  }","  return error;","};","","/**"," * Check if the parameters are valid"," *"," * @param {string} data - The encoded data in various formats"," * @param {string=} network - Either \"livenet\" or \"testnet\""," * @returns {Boolean} If the private key is would be valid"," */","PrivateKey.isValid = function(data, network){","  if (!data) {","    return false;","  }","  return !PrivateKey.getValidationError(data, network);","};","","/**"," * Will output the PrivateKey encoded as hex string"," *"," * @returns {string}"," */","PrivateKey.prototype.toString = function() {","  return this.toBuffer().toString('hex');","};","","/**"," * Will output the PrivateKey to a WIF string"," *"," * @returns {string} A WIP representation of the private key"," */","PrivateKey.prototype.toWIF = function() {","  var network = this.network;","  var compressed = this.compressed;","","  var buf;","  if (compressed) {","    buf = Buffer.concat([new Buffer([network.privatekey]),","                         this.bn.toBuffer({size: 32}),","                         new Buffer([0x01])]);","  } else {","    buf = Buffer.concat([new Buffer([network.privatekey]),","                         this.bn.toBuffer({size: 32})]);","  }","","  return Base58Check.encode(buf);","};","","/**"," * Will return the private key as a BN instance"," *"," * @returns {BN} A BN instance of the private key"," */","PrivateKey.prototype.toBigNumber = function(){","  return this.bn;","};","","/**"," * Will return the private key as a BN buffer"," *"," * @returns {Buffer} A buffer of the private key"," */","PrivateKey.prototype.toBuffer = function(){","  return this.bn.toBuffer();","};","","/**"," * Will return the corresponding public key"," *"," * @returns {PublicKey} A public key generated from the private key"," */","PrivateKey.prototype.toPublicKey = function(){","  if (!this._pubkey) {","    this._pubkey = PublicKey.fromPrivateKey(this);","  }","  return this._pubkey;","};","","/**"," * Will return an address for the private key"," * @param {Network=} network - optional parameter specifying"," * the desired network for the address"," *"," * @returns {Address} An address generated from the private key"," */","PrivateKey.prototype.toAddress = function(network) {","  var pubkey = this.toPublicKey();","  return Address.fromPublicKey(pubkey, network || this.network);","};","","/**"," * @returns {Object} A plain object representation"," */","PrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {","  return {","    bn: this.bn.toString('hex'),","    compressed: this.compressed,","    network: this.network.toString()","  };","};","","/**"," * Will return a string formatted for the console"," *"," * @returns {string} Private key"," */","PrivateKey.prototype.inspect = function() {","  var uncompressed = !this.compressed ? ', uncompressed' : '';","  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';","};","","module.exports = PrivateKey;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"37":1,"41":0,"42":0,"44":0,"45":0,"48":0,"51":0,"52":0,"54":0,"55":0,"57":0,"58":0,"61":0,"67":0,"73":0,"85":1,"87":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"108":0,"111":0,"113":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"130":0,"141":1,"143":0,"145":0,"146":0,"149":0,"151":0,"152":0,"155":0,"156":0,"159":0,"160":0,"161":0,"162":0,"164":0,"167":0,"169":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"195":1,"196":0,"206":1,"207":0,"218":1,"219":0,"220":0,"221":0,"234":1,"235":0,"236":0,"244":1,"245":0,"246":0,"255":1,"256":0,"257":0,"268":1,"269":0,"270":0,"272":0,"274":0,"276":0,"286":1,"287":0,"288":0,"290":0,"298":1,"299":0,"307":1,"308":0,"309":0,"311":0,"312":0,"313":0,"317":0,"321":0,"329":1,"330":0,"338":1,"339":0,"347":1,"348":0,"349":0,"351":0,"361":1,"362":0,"363":0,"369":1,"370":0,"382":1,"383":0,"384":0,"387":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/block/merkleblock.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/block/merkleblock.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"MerkleBlock","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":26}}},"2":{"name":"fromBuffer","line":73,"loc":{"start":{"line":73,"column":25},"end":{"line":73,"column":50}}},"3":{"name":"fromBufferReader","line":81,"loc":{"start":{"line":81,"column":31},"end":{"line":81,"column":61}}},"4":{"name":"toBuffer","line":88,"loc":{"start":{"line":88,"column":33},"end":{"line":88,"column":53}}},"5":{"name":"toBufferWriter","line":96,"loc":{"start":{"line":96,"column":39},"end":{"line":96,"column":67}}},"6":{"name":"toObject","line":116,"loc":{"start":{"line":116,"column":64},"end":{"line":116,"column":84}}},"7":{"name":"validMerkleTree","line":129,"loc":{"start":{"line":129,"column":40},"end":{"line":129,"column":67}}},"8":{"name":"traverseMerkleTree","line":164,"loc":{"start":{"line":164,"column":44},"end":{"line":164,"column":90}}},"9":{"name":"calcTreeWidth","line":202,"loc":{"start":{"line":202,"column":39},"end":{"line":202,"column":70}}},"10":{"name":"calcTreeHeight","line":211,"loc":{"start":{"line":211,"column":40},"end":{"line":211,"column":66}}},"11":{"name":"hasTransaction","line":224,"loc":{"start":{"line":224,"column":39},"end":{"line":224,"column":67}}},"12":{"name":"_fromBufferReader","line":246,"loc":{"start":{"line":246,"column":32},"end":{"line":246,"column":63}}},"13":{"name":"fromObject","line":268,"loc":{"start":{"line":268,"column":25},"end":{"line":268,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":55}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"10":{"start":{"line":21,"column":0},"end":{"line":67,"column":1}},"11":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":32}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":16}},"14":{"start":{"line":29,"column":2},"end":{"line":62,"column":3}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":60}},"16":{"start":{"line":31,"column":9},"end":{"line":62,"column":3}},"17":{"start":{"line":32,"column":4},"end":{"line":32,"column":15}},"18":{"start":{"line":33,"column":4},"end":{"line":37,"column":5}},"19":{"start":{"line":34,"column":6},"end":{"line":34,"column":26}},"20":{"start":{"line":36,"column":6},"end":{"line":36,"column":50}},"21":{"start":{"line":38,"column":4},"end":{"line":59,"column":6}},"22":{"start":{"line":61,"column":4},"end":{"line":61,"column":65}},"23":{"start":{"line":63,"column":2},"end":{"line":63,"column":22}},"24":{"start":{"line":64,"column":2},"end":{"line":64,"column":25}},"25":{"start":{"line":65,"column":2},"end":{"line":65,"column":23}},"26":{"start":{"line":66,"column":2},"end":{"line":66,"column":14}},"27":{"start":{"line":73,"column":0},"end":{"line":75,"column":2}},"28":{"start":{"line":74,"column":2},"end":{"line":74,"column":57}},"29":{"start":{"line":81,"column":0},"end":{"line":83,"column":2}},"30":{"start":{"line":82,"column":2},"end":{"line":82,"column":60}},"31":{"start":{"line":88,"column":0},"end":{"line":90,"column":2}},"32":{"start":{"line":89,"column":2},"end":{"line":89,"column":40}},"33":{"start":{"line":96,"column":0},"end":{"line":111,"column":2}},"34":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"35":{"start":{"line":98,"column":4},"end":{"line":98,"column":28}},"36":{"start":{"line":100,"column":2},"end":{"line":100,"column":35}},"37":{"start":{"line":101,"column":2},"end":{"line":101,"column":41}},"38":{"start":{"line":102,"column":2},"end":{"line":102,"column":40}},"39":{"start":{"line":103,"column":2},"end":{"line":105,"column":3}},"40":{"start":{"line":104,"column":4},"end":{"line":104,"column":48}},"41":{"start":{"line":106,"column":2},"end":{"line":106,"column":39}},"42":{"start":{"line":107,"column":2},"end":{"line":109,"column":3}},"43":{"start":{"line":108,"column":4},"end":{"line":108,"column":33}},"44":{"start":{"line":110,"column":2},"end":{"line":110,"column":12}},"45":{"start":{"line":116,"column":0},"end":{"line":123,"column":2}},"46":{"start":{"line":117,"column":2},"end":{"line":122,"column":4}},"47":{"start":{"line":129,"column":0},"end":{"line":150,"column":2}},"48":{"start":{"line":130,"column":2},"end":{"line":130,"column":75}},"49":{"start":{"line":131,"column":2},"end":{"line":131,"column":77}},"50":{"start":{"line":134,"column":2},"end":{"line":136,"column":3}},"51":{"start":{"line":135,"column":4},"end":{"line":135,"column":17}},"52":{"start":{"line":139,"column":2},"end":{"line":141,"column":3}},"53":{"start":{"line":140,"column":4},"end":{"line":140,"column":17}},"54":{"start":{"line":143,"column":2},"end":{"line":143,"column":38}},"55":{"start":{"line":144,"column":2},"end":{"line":144,"column":48}},"56":{"start":{"line":145,"column":2},"end":{"line":145,"column":55}},"57":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"58":{"start":{"line":147,"column":4},"end":{"line":147,"column":17}},"59":{"start":{"line":149,"column":2},"end":{"line":149,"column":57}},"60":{"start":{"line":164,"column":0},"end":{"line":194,"column":2}},"61":{"start":{"line":168,"column":2},"end":{"line":168,"column":20}},"62":{"start":{"line":169,"column":2},"end":{"line":169,"column":28}},"63":{"start":{"line":170,"column":2},"end":{"line":170,"column":45}},"64":{"start":{"line":171,"column":2},"end":{"line":171,"column":41}},"65":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"66":{"start":{"line":174,"column":4},"end":{"line":174,"column":16}},"67":{"start":{"line":176,"column":2},"end":{"line":176,"column":95}},"68":{"start":{"line":177,"column":2},"end":{"line":193,"column":3}},"69":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"70":{"start":{"line":179,"column":6},"end":{"line":179,"column":18}},"71":{"start":{"line":181,"column":4},"end":{"line":181,"column":46}},"72":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"73":{"start":{"line":183,"column":6},"end":{"line":183,"column":26}},"74":{"start":{"line":185,"column":4},"end":{"line":185,"column":35}},"75":{"start":{"line":187,"column":4},"end":{"line":187,"column":62}},"76":{"start":{"line":188,"column":4},"end":{"line":188,"column":21}},"77":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"78":{"start":{"line":190,"column":6},"end":{"line":190,"column":63}},"79":{"start":{"line":192,"column":4},"end":{"line":192,"column":63}},"80":{"start":{"line":202,"column":0},"end":{"line":204,"column":2}},"81":{"start":{"line":203,"column":2},"end":{"line":203,"column":62}},"82":{"start":{"line":211,"column":0},"end":{"line":217,"column":2}},"83":{"start":{"line":212,"column":2},"end":{"line":212,"column":17}},"84":{"start":{"line":213,"column":2},"end":{"line":215,"column":3}},"85":{"start":{"line":214,"column":4},"end":{"line":214,"column":13}},"86":{"start":{"line":216,"column":2},"end":{"line":216,"column":16}},"87":{"start":{"line":224,"column":0},"end":{"line":239,"column":2}},"88":{"start":{"line":225,"column":2},"end":{"line":225,"column":64}},"89":{"start":{"line":226,"column":2},"end":{"line":227,"column":66}},"90":{"start":{"line":229,"column":2},"end":{"line":229,"column":16}},"91":{"start":{"line":230,"column":2},"end":{"line":233,"column":3}},"92":{"start":{"line":232,"column":4},"end":{"line":232,"column":72}},"93":{"start":{"line":235,"column":2},"end":{"line":235,"column":15}},"94":{"start":{"line":236,"column":2},"end":{"line":236,"column":38}},"95":{"start":{"line":237,"column":2},"end":{"line":237,"column":52}},"96":{"start":{"line":238,"column":2},"end":{"line":238,"column":34}},"97":{"start":{"line":246,"column":0},"end":{"line":262,"column":2}},"98":{"start":{"line":247,"column":2},"end":{"line":247,"column":63}},"99":{"start":{"line":248,"column":2},"end":{"line":248,"column":16}},"100":{"start":{"line":249,"column":2},"end":{"line":249,"column":49}},"101":{"start":{"line":250,"column":2},"end":{"line":250,"column":43}},"102":{"start":{"line":251,"column":2},"end":{"line":251,"column":37}},"103":{"start":{"line":252,"column":2},"end":{"line":252,"column":19}},"104":{"start":{"line":253,"column":2},"end":{"line":255,"column":3}},"105":{"start":{"line":254,"column":4},"end":{"line":254,"column":50}},"106":{"start":{"line":256,"column":2},"end":{"line":256,"column":36}},"107":{"start":{"line":257,"column":2},"end":{"line":257,"column":18}},"108":{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},"109":{"start":{"line":259,"column":4},"end":{"line":259,"column":36}},"110":{"start":{"line":261,"column":2},"end":{"line":261,"column":14}},"111":{"start":{"line":268,"column":0},"end":{"line":270,"column":2}},"112":{"start":{"line":269,"column":2},"end":{"line":269,"column":30}},"113":{"start":{"line":272,"column":0},"end":{"line":272,"column":29}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":9},"end":{"line":31,"column":9}},{"start":{"line":31,"column":9},"end":{"line":31,"column":9}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"5":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"6":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"7":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":2},"end":{"line":139,"column":2}},{"start":{"line":139,"column":2},"end":{"line":139,"column":2}}]},"8":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"9":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":9},"end":{"line":168,"column":13}},{"start":{"line":168,"column":17},"end":{"line":168,"column":19}}]},"10":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":13},"end":{"line":169,"column":21}},{"start":{"line":169,"column":25},"end":{"line":169,"column":27}}]},"11":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":22},"end":{"line":170,"column":39}},{"start":{"line":170,"column":43},"end":{"line":170,"column":44}}]},"12":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":20},"end":{"line":171,"column":35}},{"start":{"line":171,"column":39},"end":{"line":171,"column":40}}]},"13":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"14":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"15":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":5},"end":{"line":177,"column":16}},{"start":{"line":177,"column":20},"end":{"line":177,"column":36}}]},"16":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]},"17":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"18":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":7},"end":{"line":182,"column":18}},{"start":{"line":182,"column":22},"end":{"line":182,"column":37}}]},"19":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"20":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":18},"end":{"line":226,"column":43}},{"start":{"line":226,"column":47},"end":{"line":226,"column":69}}]},"21":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":230,"column":2}},{"start":{"line":230,"column":2},"end":{"line":230,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","var BlockHeader = require('./blockheader');","var BufferUtil = require('../util/buffer');","var BufferReader = require('../encoding/bufferreader');","var BufferWriter = require('../encoding/bufferwriter');","var Hash = require('../crypto/hash');","var JSUtil = require('../util/js');","var Transaction = require('../transaction');","var $ = require('../util/preconditions');","","/**"," * Instantiate a MerkleBlock from a Buffer, JSON object, or Object with"," * the properties of the Block"," *"," * @param {*} - A Buffer, JSON string, or Object representing a MerkleBlock"," * @returns {MerkleBlock}"," * @constructor"," */","function MerkleBlock(arg) {","  /* jshint maxstatements: 18 */","","  if (!(this instanceof MerkleBlock)) {","    return new MerkleBlock(arg);","  }","","  var info = {};","  if (BufferUtil.isBuffer(arg)) {","    info = MerkleBlock._fromBufferReader(BufferReader(arg));","  } else if (_.isObject(arg)) {","    var header;","    if(arg.header instanceof BlockHeader) {","      header = arg.header;","    } else {","      header = BlockHeader.fromObject(arg.header);","    }","    info = {","      /**","       * @name MerkleBlock#header","       * @type {BlockHeader}","       */","      header: header,","      /**","       * @name MerkleBlock#numTransactions","       * @type {Number}","       */","      numTransactions: arg.numTransactions,","      /**","       * @name MerkleBlock#hashes","       * @type {String[]}","       */","      hashes: arg.hashes,","      /**","       * @name MerkleBlock#flags","       * @type {Number[]}","       */","      flags: arg.flags","    };","  } else {","    throw new TypeError('Unrecognized argument for MerkleBlock');","  }","  _.extend(this,info);","  this._flagBitsUsed = 0;","  this._hashesUsed = 0;","  return this;","}","","/**"," * @param {Buffer} - MerkleBlock data in a Buffer object"," * @returns {MerkleBlock} - A MerkleBlock object"," */","MerkleBlock.fromBuffer = function fromBuffer(buf) {","  return MerkleBlock.fromBufferReader(BufferReader(buf));","};","","/**"," * @param {BufferReader} - MerkleBlock data in a BufferReader object"," * @returns {MerkleBlock} - A MerkleBlock object"," */","MerkleBlock.fromBufferReader = function fromBufferReader(br) {","  return new MerkleBlock(MerkleBlock._fromBufferReader(br));","};","","/**"," * @returns {Buffer} - A buffer of the block"," */","MerkleBlock.prototype.toBuffer = function toBuffer() {","  return this.toBufferWriter().concat();","};","","/**"," * @param {BufferWriter} - An existing instance of BufferWriter"," * @returns {BufferWriter} - An instance of BufferWriter representation of the MerkleBlock"," */","MerkleBlock.prototype.toBufferWriter = function toBufferWriter(bw) {","  if (!bw) {","    bw = new BufferWriter();","  }","  bw.write(this.header.toBuffer());","  bw.writeUInt32LE(this.numTransactions);","  bw.writeVarintNum(this.hashes.length);","  for (var i = 0; i < this.hashes.length; i++) {","    bw.write(new Buffer(this.hashes[i], 'hex'));","  }","  bw.writeVarintNum(this.flags.length);","  for (i = 0; i < this.flags.length; i++) {","    bw.writeUInt8(this.flags[i]);","  }","  return bw;","};","","/**"," * @returns {Object} - A plain object with the MerkleBlock properties"," */","MerkleBlock.prototype.toObject = MerkleBlock.prototype.toJSON = function toObject() {","  return {","    header: this.header.toObject(),","    numTransactions: this.numTransactions,","    hashes: this.hashes,","    flags: this.flags","  };","};","","/**"," * Verify that the MerkleBlock is valid"," * @returns {Boolean} - True/False whether this MerkleBlock is Valid"," */","MerkleBlock.prototype.validMerkleTree = function validMerkleTree() {","  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array');","  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array');","","  // Can't have more hashes than numTransactions","  if(this.hashes.length > this.numTransactions) {","    return false;","  }","","  // Can't have more flag bits than num hashes","  if(this.flags.length * 8 < this.hashes.length) {","    return false;","  }","","  var height = this._calcTreeHeight();","  var opts = { hashesUsed: 0, flagBitsUsed: 0 };","  var root = this._traverseMerkleTree(height, 0, opts);","  if(opts.hashesUsed !== this.hashes.length) {","    return false;","  }","  return BufferUtil.equals(root, this.header.merkleRoot);","};","","/**"," * Traverse a the tree in this MerkleBlock, validating it along the way"," * Modeled after Bitcoin Core merkleblock.cpp TraverseAndExtract()"," * @param {Number} - depth - Current height"," * @param {Number} - pos - Current position in the tree"," * @param {Object} - opts - Object with values that need to be mutated throughout the traversal"," * @param {Number} - opts.flagBitsUsed - Number of flag bits used, should start at 0"," * @param {Number} - opts.hashesUsed - Number of hashes used, should start at 0"," * @param {Array} - opts.txs - Will finish populated by transactions found during traversal"," * @returns {Buffer|null} - Buffer containing the Merkle Hash for that height"," * @private"," */","MerkleBlock.prototype._traverseMerkleTree = function traverseMerkleTree(depth, pos, opts) {","  /* jshint maxcomplexity:  12*/","  /* jshint maxstatements: 20 */","","  opts = opts || {};","  opts.txs = opts.txs || [];","  opts.flagBitsUsed = opts.flagBitsUsed || 0;","  opts.hashesUsed = opts.hashesUsed || 0;","","  if(opts.flagBitsUsed > this.flags.length * 8) {","    return null;","  }","  var isParentOfMatch = (this.flags[opts.flagBitsUsed >> 3] >>> (opts.flagBitsUsed++ & 7)) & 1;","  if(depth === 0 || !isParentOfMatch) {","    if(opts.hashesUsed >= this.hashes.length) {","      return null;","    }","    var hash = this.hashes[opts.hashesUsed++];","    if(depth === 0 && isParentOfMatch) {","      opts.txs.push(hash);","    }","    return new Buffer(hash, 'hex');","  } else {","    var left = this._traverseMerkleTree(depth-1, pos*2, opts);","    var right = left;","    if(pos*2+1 < this._calcTreeWidth(depth-1)) {","      right = this._traverseMerkleTree(depth-1, pos*2+1, opts);","    }","    return Hash.sha256sha256(new Buffer.concat([left, right]));","  }","};","","/** Calculates the width of a merkle tree at a given height."," *  Modeled after Bitcoin Core merkleblock.h CalcTreeWidth()"," * @param {Number} - Height at which we want the tree width"," * @returns {Number} - Width of the tree at a given height"," * @private"," */","MerkleBlock.prototype._calcTreeWidth = function calcTreeWidth(height) {","  return (this.numTransactions + (1 << height) - 1) >> height;","};","","/** Calculates the height of the merkle tree in this MerkleBlock"," * @param {Number} - Height at which we want the tree width"," * @returns {Number} - Height of the merkle tree in this MerkleBlock"," * @private"," */","MerkleBlock.prototype._calcTreeHeight = function calcTreeHeight() {","  var height = 0;","  while (this._calcTreeWidth(height) > 1) {","    height++;","  }","  return height;","};","","/**"," * @param {Transaction|String} - Transaction or Transaction ID Hash"," * @returns {Boolean} - return true/false if this MerkleBlock has the TX or not"," * @private"," */","MerkleBlock.prototype.hasTransaction = function hasTransaction(tx) {","  $.checkArgument(!_.isUndefined(tx), 'tx cannot be undefined');","  $.checkArgument(tx instanceof Transaction || typeof tx === 'string',","      'Invalid tx given, tx must be a \"string\" or \"Transaction\"');","","  var hash = tx;","  if(tx instanceof Transaction) {","    // We need to reverse the id hash for the lookup","    hash = BufferUtil.reverse(new Buffer(tx.id, 'hex')).toString('hex');","  }","","  var txs = [];","  var height = this._calcTreeHeight();","  this._traverseMerkleTree(height, 0, { txs: txs });","  return txs.indexOf(hash) !== -1;","};","","/**"," * @param {Buffer} - MerkleBlock data"," * @returns {Object} - An Object representing merkleblock data"," * @private"," */","MerkleBlock._fromBufferReader = function _fromBufferReader(br) {","  $.checkState(!br.finished(), 'No merkleblock data received');","  var info = {};","  info.header = BlockHeader.fromBufferReader(br);","  info.numTransactions = br.readUInt32LE();","  var numHashes = br.readVarintNum();","  info.hashes = [];","  for (var i = 0; i < numHashes; i++) {","    info.hashes.push(br.read(32).toString('hex'));","  }","  var numFlags = br.readVarintNum();","  info.flags = [];","  for (i = 0; i < numFlags; i++) {","    info.flags.push(br.readUInt8());","  }","  return info;","};","","/**"," * @param {Object} - A plain JavaScript object"," * @returns {Block} - An instance of block"," */","MerkleBlock.fromObject = function fromObject(obj) {","  return new MerkleBlock(obj);","};","","module.exports = MerkleBlock;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"21":1,"24":0,"25":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"38":0,"61":0,"63":0,"64":0,"65":0,"66":0,"73":1,"74":0,"81":1,"82":0,"88":1,"89":0,"96":1,"97":0,"98":0,"100":0,"101":0,"102":0,"103":0,"104":0,"106":0,"107":0,"108":0,"110":0,"116":1,"117":0,"129":1,"130":0,"131":0,"134":0,"135":0,"139":0,"140":0,"143":0,"144":0,"145":0,"146":0,"147":0,"149":0,"164":1,"168":0,"169":0,"170":0,"171":0,"173":0,"174":0,"176":0,"177":0,"178":0,"179":0,"181":0,"182":0,"183":0,"185":0,"187":0,"188":0,"189":0,"190":0,"192":0,"202":1,"203":0,"211":1,"212":0,"213":0,"214":0,"216":0,"224":1,"225":0,"226":0,"229":0,"230":0,"232":0,"235":0,"236":0,"237":0,"238":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"256":0,"257":0,"258":0,"259":0,"261":0,"268":1,"269":0,"272":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/hdprivatekey.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/hdprivatekey.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":1,"130":0,"131":0,"132":1,"133":0,"134":1,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":1,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":1,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":1,"200":0,"201":1,"202":0,"203":1,"204":0,"205":1,"206":0,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"HDPrivateKey","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":27}}},"2":{"name":"(anonymous_2)","line":75,"loc":{"start":{"line":75,"column":27},"end":{"line":75,"column":51}}},"3":{"name":"(anonymous_3)","line":99,"loc":{"start":{"line":99,"column":37},"end":{"line":99,"column":52}}},"4":{"name":"(anonymous_4)","line":111,"loc":{"start":{"line":111,"column":35},"end":{"line":111,"column":50}}},"5":{"name":"(anonymous_5)","line":153,"loc":{"start":{"line":153,"column":32},"end":{"line":153,"column":56}}},"6":{"name":"(anonymous_6)","line":163,"loc":{"start":{"line":163,"column":43},"end":{"line":163,"column":69}}},"7":{"name":"(anonymous_7)","line":209,"loc":{"start":{"line":209,"column":43},"end":{"line":209,"column":58}}},"8":{"name":"(anonymous_8)","line":215,"loc":{"start":{"line":215,"column":31},"end":{"line":215,"column":53}}},"9":{"name":"(anonymous_9)","line":231,"loc":{"start":{"line":231,"column":33},"end":{"line":231,"column":57}}},"10":{"name":"(anonymous_10)","line":244,"loc":{"start":{"line":244,"column":34},"end":{"line":244,"column":58}}},"11":{"name":"(anonymous_11)","line":269,"loc":{"start":{"line":269,"column":32},"end":{"line":269,"column":59}}},"12":{"name":"(anonymous_12)","line":281,"loc":{"start":{"line":281,"column":26},"end":{"line":281,"column":40}}},"13":{"name":"(anonymous_13)","line":286,"loc":{"start":{"line":286,"column":26},"end":{"line":286,"column":40}}},"14":{"name":"(anonymous_14)","line":291,"loc":{"start":{"line":291,"column":40},"end":{"line":291,"column":54}}},"15":{"name":"(anonymous_15)","line":295,"loc":{"start":{"line":295,"column":42},"end":{"line":295,"column":56}}},"16":{"name":"(anonymous_16)","line":310,"loc":{"start":{"line":310,"column":46},"end":{"line":310,"column":60}}},"17":{"name":"(anonymous_17)","line":326,"loc":{"start":{"line":326,"column":43},"end":{"line":326,"column":61}}},"18":{"name":"(anonymous_18)","line":337,"loc":{"start":{"line":337,"column":24},"end":{"line":337,"column":48}}},"19":{"name":"(anonymous_19)","line":365,"loc":{"start":{"line":365,"column":42},"end":{"line":365,"column":53}}},"20":{"name":"(anonymous_20)","line":388,"loc":{"start":{"line":388,"column":43},"end":{"line":388,"column":57}}},"21":{"name":"(anonymous_21)","line":435,"loc":{"start":{"line":435,"column":9},"end":{"line":435,"column":20}}},"22":{"name":"(anonymous_22)","line":443,"loc":{"start":{"line":443,"column":9},"end":{"line":443,"column":20}}},"23":{"name":"(anonymous_23)","line":451,"loc":{"start":{"line":451,"column":40},"end":{"line":451,"column":54}}},"24":{"name":"(anonymous_24)","line":452,"loc":{"start":{"line":452,"column":20},"end":{"line":452,"column":41}}},"25":{"name":"(anonymous_25)","line":477,"loc":{"start":{"line":477,"column":34},"end":{"line":477,"column":45}}},"26":{"name":"(anonymous_26)","line":485,"loc":{"start":{"line":485,"column":33},"end":{"line":485,"column":44}}},"27":{"name":"toObject","line":508,"loc":{"start":{"line":508,"column":66},"end":{"line":508,"column":86}}},"28":{"name":"(anonymous_28)","line":528,"loc":{"start":{"line":528,"column":26},"end":{"line":528,"column":40}}},"29":{"name":"(anonymous_29)","line":537,"loc":{"start":{"line":537,"column":34},"end":{"line":537,"column":45}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":52}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":40}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":42}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"18":{"start":{"line":24,"column":0},"end":{"line":24,"column":31}},"19":{"start":{"line":25,"column":0},"end":{"line":25,"column":26}},"20":{"start":{"line":26,"column":0},"end":{"line":26,"column":31}},"21":{"start":{"line":37,"column":0},"end":{"line":66,"column":1}},"22":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"23":{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},"24":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"25":{"start":{"line":43,"column":4},"end":{"line":43,"column":33}},"26":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":36}},"28":{"start":{"line":49,"column":2},"end":{"line":65,"column":3}},"29":{"start":{"line":50,"column":4},"end":{"line":50,"column":39}},"30":{"start":{"line":51,"column":9},"end":{"line":65,"column":3}},"31":{"start":{"line":52,"column":4},"end":{"line":60,"column":5}},"32":{"start":{"line":53,"column":6},"end":{"line":53,"column":37}},"33":{"start":{"line":54,"column":11},"end":{"line":60,"column":5}},"34":{"start":{"line":55,"column":6},"end":{"line":55,"column":31}},"35":{"start":{"line":56,"column":11},"end":{"line":60,"column":5}},"36":{"start":{"line":57,"column":6},"end":{"line":57,"column":48}},"37":{"start":{"line":59,"column":6},"end":{"line":59,"column":49}},"38":{"start":{"line":61,"column":9},"end":{"line":65,"column":3}},"39":{"start":{"line":62,"column":4},"end":{"line":62,"column":31}},"40":{"start":{"line":64,"column":4},"end":{"line":64,"column":49}},"41":{"start":{"line":75,"column":0},"end":{"line":89,"column":2}},"42":{"start":{"line":76,"column":2},"end":{"line":79,"column":3}},"43":{"start":{"line":77,"column":4},"end":{"line":77,"column":58}},"44":{"start":{"line":78,"column":4},"end":{"line":78,"column":72}},"45":{"start":{"line":81,"column":2},"end":{"line":86,"column":3}},"46":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"47":{"start":{"line":83,"column":6},"end":{"line":83,"column":35}},"48":{"start":{"line":85,"column":4},"end":{"line":85,"column":51}},"49":{"start":{"line":88,"column":2},"end":{"line":88,"column":15}},"50":{"start":{"line":99,"column":0},"end":{"line":128,"column":2}},"51":{"start":{"line":100,"column":2},"end":{"line":100,"column":30}},"52":{"start":{"line":103,"column":2},"end":{"line":105,"column":3}},"53":{"start":{"line":104,"column":4},"end":{"line":104,"column":14}},"54":{"start":{"line":107,"column":2},"end":{"line":109,"column":3}},"55":{"start":{"line":108,"column":4},"end":{"line":108,"column":16}},"56":{"start":{"line":111,"column":2},"end":{"line":125,"column":5}},"57":{"start":{"line":112,"column":4},"end":{"line":112,"column":45}},"58":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"59":{"start":{"line":114,"column":6},"end":{"line":114,"column":31}},"60":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"61":{"start":{"line":117,"column":6},"end":{"line":117,"column":17}},"62":{"start":{"line":119,"column":4},"end":{"line":119,"column":22}},"63":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"64":{"start":{"line":121,"column":6},"end":{"line":121,"column":37}},"65":{"start":{"line":124,"column":4},"end":{"line":124,"column":17}},"66":{"start":{"line":127,"column":2},"end":{"line":127,"column":48}},"67":{"start":{"line":153,"column":0},"end":{"line":161,"column":2}},"68":{"start":{"line":154,"column":2},"end":{"line":160,"column":3}},"69":{"start":{"line":155,"column":4},"end":{"line":155,"column":49}},"70":{"start":{"line":156,"column":9},"end":{"line":160,"column":3}},"71":{"start":{"line":157,"column":4},"end":{"line":157,"column":39}},"72":{"start":{"line":159,"column":4},"end":{"line":159,"column":54}},"73":{"start":{"line":163,"column":0},"end":{"line":207,"column":2}},"74":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"75":{"start":{"line":167,"column":4},"end":{"line":167,"column":42}},"76":{"start":{"line":170,"column":2},"end":{"line":170,"column":62}},"77":{"start":{"line":171,"column":2},"end":{"line":173,"column":3}},"78":{"start":{"line":172,"column":4},"end":{"line":172,"column":35}},"79":{"start":{"line":175,"column":2},"end":{"line":175,"column":62}},"80":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"81":{"start":{"line":177,"column":4},"end":{"line":177,"column":18}},"82":{"start":{"line":180,"column":2},"end":{"line":180,"column":54}},"83":{"start":{"line":181,"column":2},"end":{"line":181,"column":11}},"84":{"start":{"line":182,"column":2},"end":{"line":186,"column":3}},"85":{"start":{"line":183,"column":4},"end":{"line":183,"column":96}},"86":{"start":{"line":185,"column":4},"end":{"line":185,"column":71}},"87":{"start":{"line":187,"column":2},"end":{"line":187,"column":60}},"88":{"start":{"line":188,"column":2},"end":{"line":190,"column":5}},"89":{"start":{"line":191,"column":2},"end":{"line":191,"column":37}},"90":{"start":{"line":193,"column":2},"end":{"line":195,"column":5}},"91":{"start":{"line":197,"column":2},"end":{"line":204,"column":5}},"92":{"start":{"line":205,"column":2},"end":{"line":205,"column":58}},"93":{"start":{"line":206,"column":2},"end":{"line":206,"column":17}},"94":{"start":{"line":209,"column":0},"end":{"line":220,"column":2}},"95":{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},"96":{"start":{"line":211,"column":4},"end":{"line":211,"column":41}},"97":{"start":{"line":214,"column":2},"end":{"line":214,"column":57}},"98":{"start":{"line":215,"column":2},"end":{"line":217,"column":11}},"99":{"start":{"line":216,"column":4},"end":{"line":216,"column":41}},"100":{"start":{"line":219,"column":2},"end":{"line":219,"column":17}},"101":{"start":{"line":231,"column":0},"end":{"line":233,"column":2}},"102":{"start":{"line":232,"column":2},"end":{"line":232,"column":57}},"103":{"start":{"line":244,"column":0},"end":{"line":267,"column":2}},"104":{"start":{"line":246,"column":2},"end":{"line":248,"column":3}},"105":{"start":{"line":247,"column":4},"end":{"line":247,"column":74}},"106":{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},"107":{"start":{"line":250,"column":4},"end":{"line":250,"column":56}},"108":{"start":{"line":252,"column":2},"end":{"line":256,"column":3}},"109":{"start":{"line":253,"column":4},"end":{"line":253,"column":36}},"110":{"start":{"line":255,"column":4},"end":{"line":255,"column":47}},"111":{"start":{"line":257,"column":2},"end":{"line":259,"column":3}},"112":{"start":{"line":258,"column":4},"end":{"line":258,"column":44}},"113":{"start":{"line":260,"column":2},"end":{"line":265,"column":3}},"114":{"start":{"line":261,"column":4},"end":{"line":261,"column":61}},"115":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"116":{"start":{"line":263,"column":6},"end":{"line":263,"column":19}},"117":{"start":{"line":266,"column":2},"end":{"line":266,"column":14}},"118":{"start":{"line":269,"column":0},"end":{"line":279,"column":2}},"119":{"start":{"line":270,"column":2},"end":{"line":270,"column":40}},"120":{"start":{"line":271,"column":2},"end":{"line":273,"column":3}},"121":{"start":{"line":272,"column":4},"end":{"line":272,"column":57}},"122":{"start":{"line":274,"column":2},"end":{"line":274,"column":33}},"123":{"start":{"line":275,"column":2},"end":{"line":277,"column":3}},"124":{"start":{"line":276,"column":4},"end":{"line":276,"column":46}},"125":{"start":{"line":278,"column":2},"end":{"line":278,"column":14}},"126":{"start":{"line":281,"column":0},"end":{"line":284,"column":2}},"127":{"start":{"line":282,"column":2},"end":{"line":282,"column":67}},"128":{"start":{"line":283,"column":2},"end":{"line":283,"column":31}},"129":{"start":{"line":286,"column":0},"end":{"line":289,"column":2}},"130":{"start":{"line":287,"column":2},"end":{"line":287,"column":69}},"131":{"start":{"line":288,"column":2},"end":{"line":288,"column":31}},"132":{"start":{"line":291,"column":0},"end":{"line":293,"column":2}},"133":{"start":{"line":292,"column":2},"end":{"line":292,"column":48}},"134":{"start":{"line":295,"column":0},"end":{"line":308,"column":2}},"135":{"start":{"line":298,"column":2},"end":{"line":306,"column":4}},"136":{"start":{"line":307,"column":2},"end":{"line":307,"column":41}},"137":{"start":{"line":310,"column":0},"end":{"line":324,"column":2}},"138":{"start":{"line":311,"column":2},"end":{"line":311,"column":40}},"139":{"start":{"line":312,"column":2},"end":{"line":322,"column":4}},"140":{"start":{"line":323,"column":2},"end":{"line":323,"column":41}},"141":{"start":{"line":326,"column":0},"end":{"line":328,"column":2}},"142":{"start":{"line":327,"column":2},"end":{"line":327,"column":68}},"143":{"start":{"line":337,"column":0},"end":{"line":361,"column":2}},"144":{"start":{"line":339,"column":2},"end":{"line":341,"column":3}},"145":{"start":{"line":340,"column":4},"end":{"line":340,"column":40}},"146":{"start":{"line":342,"column":2},"end":{"line":344,"column":3}},"147":{"start":{"line":343,"column":4},"end":{"line":343,"column":52}},"148":{"start":{"line":345,"column":2},"end":{"line":347,"column":3}},"149":{"start":{"line":346,"column":4},"end":{"line":346,"column":69}},"150":{"start":{"line":348,"column":2},"end":{"line":350,"column":3}},"151":{"start":{"line":349,"column":4},"end":{"line":349,"column":67}},"152":{"start":{"line":351,"column":2},"end":{"line":351,"column":70}},"153":{"start":{"line":353,"column":2},"end":{"line":360,"column":5}},"154":{"start":{"line":365,"column":0},"end":{"line":370,"column":2}},"155":{"start":{"line":366,"column":2},"end":{"line":369,"column":3}},"156":{"start":{"line":367,"column":4},"end":{"line":367,"column":47}},"157":{"start":{"line":368,"column":4},"end":{"line":368,"column":46}},"158":{"start":{"line":388,"column":0},"end":{"line":449,"column":2}},"159":{"start":{"line":392,"column":2},"end":{"line":392,"column":45}},"160":{"start":{"line":394,"column":2},"end":{"line":396,"column":5}},"161":{"start":{"line":398,"column":2},"end":{"line":401,"column":4}},"162":{"start":{"line":402,"column":2},"end":{"line":402,"column":46}},"163":{"start":{"line":403,"column":2},"end":{"line":409,"column":3}},"164":{"start":{"line":404,"column":4},"end":{"line":404,"column":48}},"165":{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},"166":{"start":{"line":407,"column":6},"end":{"line":407,"column":50}},"167":{"start":{"line":411,"column":2},"end":{"line":411,"column":71}},"168":{"start":{"line":412,"column":2},"end":{"line":412,"column":15}},"169":{"start":{"line":413,"column":2},"end":{"line":413,"column":64}},"170":{"start":{"line":414,"column":2},"end":{"line":414,"column":38}},"171":{"start":{"line":416,"column":2},"end":{"line":416,"column":74}},"172":{"start":{"line":417,"column":2},"end":{"line":417,"column":43}},"173":{"start":{"line":418,"column":2},"end":{"line":418,"column":48}},"174":{"start":{"line":419,"column":2},"end":{"line":419,"column":78}},"175":{"start":{"line":421,"column":2},"end":{"line":428,"column":5}},"176":{"start":{"line":430,"column":2},"end":{"line":430,"column":27}},"177":{"start":{"line":432,"column":2},"end":{"line":439,"column":5}},"178":{"start":{"line":436,"column":6},"end":{"line":436,"column":30}},"179":{"start":{"line":437,"column":6},"end":{"line":437,"column":31}},"180":{"start":{"line":440,"column":2},"end":{"line":447,"column":5}},"181":{"start":{"line":444,"column":6},"end":{"line":444,"column":30}},"182":{"start":{"line":445,"column":6},"end":{"line":445,"column":39}},"183":{"start":{"line":448,"column":2},"end":{"line":448,"column":14}},"184":{"start":{"line":451,"column":0},"end":{"line":469,"column":2}},"185":{"start":{"line":452,"column":2},"end":{"line":459,"column":4}},"186":{"start":{"line":453,"column":4},"end":{"line":453,"column":25}},"187":{"start":{"line":454,"column":4},"end":{"line":454,"column":74}},"188":{"start":{"line":455,"column":4},"end":{"line":458,"column":6}},"189":{"start":{"line":460,"column":2},"end":{"line":460,"column":51}},"190":{"start":{"line":461,"column":2},"end":{"line":461,"column":47}},"191":{"start":{"line":462,"column":2},"end":{"line":462,"column":71}},"192":{"start":{"line":463,"column":2},"end":{"line":463,"column":57}},"193":{"start":{"line":464,"column":2},"end":{"line":464,"column":55}},"194":{"start":{"line":465,"column":2},"end":{"line":465,"column":57}},"195":{"start":{"line":466,"column":2},"end":{"line":468,"column":3}},"196":{"start":{"line":467,"column":4},"end":{"line":467,"column":55}},"197":{"start":{"line":477,"column":0},"end":{"line":479,"column":2}},"198":{"start":{"line":478,"column":2},"end":{"line":478,"column":23}},"199":{"start":{"line":485,"column":0},"end":{"line":487,"column":2}},"200":{"start":{"line":486,"column":2},"end":{"line":486,"column":49}},"201":{"start":{"line":508,"column":0},"end":{"line":520,"column":2}},"202":{"start":{"line":509,"column":2},"end":{"line":519,"column":4}},"203":{"start":{"line":528,"column":0},"end":{"line":530,"column":2}},"204":{"start":{"line":529,"column":2},"end":{"line":529,"column":42}},"205":{"start":{"line":537,"column":0},"end":{"line":539,"column":2}},"206":{"start":{"line":538,"column":2},"end":{"line":538,"column":49}},"207":{"start":{"line":541,"column":0},"end":{"line":541,"column":30}},"208":{"start":{"line":542,"column":0},"end":{"line":542,"column":36}},"209":{"start":{"line":543,"column":0},"end":{"line":543,"column":35}},"210":{"start":{"line":544,"column":0},"end":{"line":544,"column":35}},"211":{"start":{"line":545,"column":0},"end":{"line":545,"column":50}},"212":{"start":{"line":547,"column":0},"end":{"line":547,"column":57}},"213":{"start":{"line":549,"column":0},"end":{"line":549,"column":29}},"214":{"start":{"line":550,"column":0},"end":{"line":550,"column":27}},"215":{"start":{"line":551,"column":0},"end":{"line":551,"column":39}},"216":{"start":{"line":552,"column":0},"end":{"line":552,"column":32}},"217":{"start":{"line":553,"column":0},"end":{"line":553,"column":32}},"218":{"start":{"line":554,"column":0},"end":{"line":554,"column":33}},"219":{"start":{"line":555,"column":0},"end":{"line":555,"column":30}},"220":{"start":{"line":557,"column":0},"end":{"line":557,"column":29}},"221":{"start":{"line":558,"column":0},"end":{"line":558,"column":37}},"222":{"start":{"line":560,"column":0},"end":{"line":560,"column":30}},"223":{"start":{"line":561,"column":0},"end":{"line":561,"column":79}},"224":{"start":{"line":562,"column":0},"end":{"line":562,"column":50}},"225":{"start":{"line":563,"column":0},"end":{"line":563,"column":73}},"226":{"start":{"line":564,"column":0},"end":{"line":564,"column":60}},"227":{"start":{"line":565,"column":0},"end":{"line":565,"column":109}},"228":{"start":{"line":566,"column":0},"end":{"line":566,"column":65}},"229":{"start":{"line":567,"column":0},"end":{"line":567,"column":88}},"230":{"start":{"line":568,"column":0},"end":{"line":568,"column":57}},"231":{"start":{"line":569,"column":0},"end":{"line":569,"column":85}},"232":{"start":{"line":570,"column":0},"end":{"line":570,"column":61}},"233":{"start":{"line":571,"column":0},"end":{"line":571,"column":88}},"234":{"start":{"line":572,"column":0},"end":{"line":572,"column":56}},"235":{"start":{"line":573,"column":0},"end":{"line":573,"column":82}},"236":{"start":{"line":575,"column":0},"end":{"line":575,"column":69}},"237":{"start":{"line":577,"column":0},"end":{"line":577,"column":30}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":9},"end":{"line":51,"column":9}},{"start":{"line":51,"column":9},"end":{"line":51,"column":9}}]},"6":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":13},"end":{"line":51,"column":28}},{"start":{"line":51,"column":32},"end":{"line":51,"column":56}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"8":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":11},"end":{"line":54,"column":11}},{"start":{"line":54,"column":11},"end":{"line":54,"column":11}}]},"9":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":11},"end":{"line":56,"column":11}},{"start":{"line":56,"column":11},"end":{"line":56,"column":11}}]},"10":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":15},"end":{"line":56,"column":39}},{"start":{"line":56,"column":43},"end":{"line":56,"column":89}}]},"11":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":9},"end":{"line":61,"column":9}},{"start":{"line":61,"column":9},"end":{"line":61,"column":9}}]},"12":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"13":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":11},"end":{"line":78,"column":27}},{"start":{"line":78,"column":31},"end":{"line":78,"column":71}}]},"14":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"15":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"16":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":35}},{"start":{"line":82,"column":39},"end":{"line":82,"column":56}}]},"17":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":11},"end":{"line":85,"column":19}},{"start":{"line":85,"column":23},"end":{"line":85,"column":50}}]},"18":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"19":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"20":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"21":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"22":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":13}},{"start":{"line":116,"column":17},"end":{"line":116,"column":32}}]},"23":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"24":{"line":127,"type":"cond-expr","locations":[{"start":{"line":127,"column":33},"end":{"line":127,"column":37}},{"start":{"line":127,"column":40},"end":{"line":127,"column":47}}]},"25":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"26":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":9},"end":{"line":156,"column":9}},{"start":{"line":156,"column":9},"end":{"line":156,"column":9}}]},"27":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"28":{"line":170,"type":"cond-expr","locations":[{"start":{"line":170,"column":46},"end":{"line":170,"column":50}},{"start":{"line":170,"column":53},"end":{"line":170,"column":61}}]},"29":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"30":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":35}},{"start":{"line":171,"column":39},"end":{"line":171,"column":56}}]},"31":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"32":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"33":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"34":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"35":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":8},"end":{"line":246,"column":24}},{"start":{"line":246,"column":28},"end":{"line":246,"column":53}}]},"36":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"37":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"38":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"39":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"40":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":2},"end":{"line":271,"column":2}},{"start":{"line":271,"column":2},"end":{"line":271,"column":2}}]},"41":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"42":{"line":299,"type":"cond-expr","locations":[{"start":{"line":299,"column":27},"end":{"line":299,"column":88}},{"start":{"line":299,"column":91},"end":{"line":299,"column":102}}]},"43":{"line":300,"type":"cond-expr","locations":[{"start":{"line":300,"column":35},"end":{"line":300,"column":82}},{"start":{"line":300,"column":85},"end":{"line":300,"column":94}}]},"44":{"line":301,"type":"cond-expr","locations":[{"start":{"line":301,"column":59},"end":{"line":301,"column":108}},{"start":{"line":301,"column":111},"end":{"line":301,"column":132}}]},"45":{"line":302,"type":"cond-expr","locations":[{"start":{"line":302,"column":45},"end":{"line":302,"column":87}},{"start":{"line":302,"column":90},"end":{"line":302,"column":104}}]},"46":{"line":303,"type":"cond-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":80}},{"start":{"line":303,"column":83},"end":{"line":303,"column":96}}]},"47":{"line":304,"type":"cond-expr","locations":[{"start":{"line":304,"column":80},"end":{"line":304,"column":118}},{"start":{"line":304,"column":121},"end":{"line":304,"column":135}}]},"48":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":17},"end":{"line":304,"column":43}},{"start":{"line":304,"column":47},"end":{"line":304,"column":76}}]},"49":{"line":305,"type":"cond-expr","locations":[{"start":{"line":305,"column":30},"end":{"line":305,"column":107}},{"start":{"line":305,"column":111},"end":{"line":305,"column":120}}]},"50":{"line":305,"type":"cond-expr","locations":[{"start":{"line":305,"column":52},"end":{"line":305,"column":64}},{"start":{"line":305,"column":67},"end":{"line":305,"column":107}}]},"51":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":2},"end":{"line":339,"column":2}},{"start":{"line":339,"column":2},"end":{"line":339,"column":2}}]},"52":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]},"53":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":2},"end":{"line":345,"column":2}},{"start":{"line":345,"column":2},"end":{"line":345,"column":2}}]},"54":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":2},"end":{"line":348,"column":2}},{"start":{"line":348,"column":2},"end":{"line":348,"column":2}}]},"55":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":13},"end":{"line":354,"column":33}},{"start":{"line":354,"column":37},"end":{"line":354,"column":59}}]},"56":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":2},"end":{"line":366,"column":2}},{"start":{"line":366,"column":2},"end":{"line":366,"column":2}}]},"57":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":403,"column":2}},{"start":{"line":403,"column":2},"end":{"line":403,"column":2}}]},"58":{"line":403,"type":"binary-expr","locations":[{"start":{"line":403,"column":6},"end":{"line":403,"column":19}},{"start":{"line":403,"column":23},"end":{"line":403,"column":43}}]},"59":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":4},"end":{"line":406,"column":4}},{"start":{"line":406,"column":4},"end":{"line":406,"column":4}}]},"60":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":2},"end":{"line":466,"column":2}},{"start":{"line":466,"column":2},"end":{"line":466,"column":2}}]},"61":{"line":466,"type":"binary-expr","locations":[{"start":{"line":466,"column":6},"end":{"line":466,"column":18}},{"start":{"line":466,"column":22},"end":{"line":466,"column":41}}]}},"code":["'use strict';","","","var assert = require('assert');","var buffer = require('buffer');","var _ = require('lodash');","var $ = require('./util/preconditions');","","var BN = require('./crypto/bn');","var Base58 = require('./encoding/base58');","var Base58Check = require('./encoding/base58check');","var Hash = require('./crypto/hash');","var Network = require('./networks');","var HDKeyCache = require('./hdkeycache');","var Point = require('./crypto/point');","var PrivateKey = require('./privatekey');","var Random = require('./crypto/random');","","var errors = require('./errors');","var hdErrors = errors.HDPrivateKey;","var BufferUtil = require('./util/buffer');","var JSUtil = require('./util/js');","","var MINIMUM_ENTROPY_BITS = 128;","var BITS_TO_BYTES = 1 / 8;","var MAXIMUM_ENTROPY_BITS = 512;","","","/**"," * Represents an instance of an hierarchically derived private key."," *"," * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"," *"," * @constructor"," * @param {string|Buffer|Object} arg"," */","function HDPrivateKey(arg) {","  /* jshint maxcomplexity: 10 */","  if (arg instanceof HDPrivateKey) {","    return arg;","  }","  if (!(this instanceof HDPrivateKey)) {","    return new HDPrivateKey(arg);","  }","  if (!arg) {","    return this._generateRandomly();","  }","","  if (Network.get(arg)) {","    return this._generateRandomly(arg);","  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {","    if (HDPrivateKey.isValidSerialized(arg)) {","      this._buildFromSerialized(arg);","    } else if (JSUtil.isValidJSON(arg)) {","      this._buildFromJSON(arg);","    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {","      this._buildFromSerialized(arg.toString());","    } else {","      throw HDPrivateKey.getSerializedError(arg);","    }","  } else if (_.isObject(arg)) {","    this._buildFromObject(arg);","  } else {","    throw new hdErrors.UnrecognizedArgument(arg);","  }","}","","/**"," * Verifies that a given path is valid."," *"," * @param {string|number} arg"," * @param {boolean?} hardened"," * @return {boolean}"," */","HDPrivateKey.isValidPath = function(arg, hardened) {","  if (_.isString(arg)) {","    var indexes = HDPrivateKey._getDerivationIndexes(arg);","    return indexes !== null && _.all(indexes, HDPrivateKey.isValidPath);","  }","","  if (_.isNumber(arg)) {","    if (arg < HDPrivateKey.Hardened && hardened === true) {","      arg += HDPrivateKey.Hardened;","    }","    return arg >= 0 && arg < HDPrivateKey.MaxIndex;","  }","","  return false;","};","","/**"," * Internal function that splits a string path into a derivation index array."," * It will return null if the string path is malformed."," * It does not validate if indexes are in bounds."," *"," * @param {string} path"," * @return {Array}"," */","HDPrivateKey._getDerivationIndexes = function(path) {","  var steps = path.split('/');","","  // Special cases:","  if (_.contains(HDPrivateKey.RootElementAlias, path)) {","    return [];","  }","","  if (!_.contains(HDPrivateKey.RootElementAlias, steps[0])) {","    return null;","  }","","  var indexes = steps.slice(1).map(function(step) {","    var isHardened = step.slice(-1) === '\\'';","    if (isHardened) {","      step = step.slice(0, -1);","    }","    if (!step || step[0] === '-') {","      return NaN;","    }","    var index = +step; // cast to number","    if (isHardened) {","      index += HDPrivateKey.Hardened;","    }","","    return index;","  });","","  return _.any(indexes, isNaN) ? null : indexes;","};","","/**"," * Get a derived child based on a string or number."," *"," * If the first argument is a string, it's parsed as the full path of"," * derivation. Valid values for this argument include \"m\" (which returns the"," * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened"," * derivation."," *"," * If the first argument is a number, the child with that index will be"," * derived. If the second argument is truthy, the hardened version will be"," * derived. See the example usage for clarification."," *"," * @example"," * ```javascript"," * var parent = new HDPrivateKey('xprv...');"," * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);"," * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");"," * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);"," * ```"," *"," * @param {string|number} arg"," * @param {boolean?} hardened"," */","HDPrivateKey.prototype.derive = function(arg, hardened) {","  if (_.isNumber(arg)) {","    return this._deriveWithNumber(arg, hardened);","  } else if (_.isString(arg)) {","    return this._deriveFromString(arg);","  } else {","    throw new hdErrors.InvalidDerivationArgument(arg);","  }","};","","HDPrivateKey.prototype._deriveWithNumber = function(index, hardened) {","  /* jshint maxstatements: 20 */","  /* jshint maxcomplexity: 10 */","  if (!HDPrivateKey.isValidPath(index, hardened)) {","    throw new hdErrors.InvalidPath(index);","  }","","  hardened = index >= HDPrivateKey.Hardened ? true : hardened;","  if (index < HDPrivateKey.Hardened && hardened === true) {","    index += HDPrivateKey.Hardened;","  }","","  var cached = HDKeyCache.get(this.xprivkey, index, hardened);","  if (cached) {","    return cached;","  }","","  var indexBuffer = BufferUtil.integerAsBuffer(index);","  var data;","  if (hardened) {","    data = BufferUtil.concat([new buffer.Buffer([0]), this.privateKey.toBuffer(), indexBuffer]);","  } else {","    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);","  }","  var hash = Hash.sha512hmac(data, this._buffers.chainCode);","  var leftPart = BN.fromBuffer(hash.slice(0, 32), {","    size: 32","  });","  var chainCode = hash.slice(32, 64);","","  var privateKey = leftPart.add(this.privateKey.toBigNumber()).mod(Point.getN()).toBuffer({","    size: 32","  });","","  var derived = new HDPrivateKey({","    network: this.network,","    depth: this.depth + 1,","    parentFingerPrint: this.fingerPrint,","    childIndex: index,","    chainCode: chainCode,","    privateKey: privateKey","  });","  HDKeyCache.set(this.xprivkey, index, hardened, derived);","  return derived;","};","","HDPrivateKey.prototype._deriveFromString = function(path) {","  if (!HDPrivateKey.isValidPath(path)) {","    throw new hdErrors.InvalidPath(path);","  }","","  var indexes = HDPrivateKey._getDerivationIndexes(path);","  var derived = indexes.reduce(function(prev, index) {","    return prev._deriveWithNumber(index);","  }, this);","","  return derived;","};","","/**"," * Verifies that a given serialized private key in base58 with checksum format"," * is valid."," *"," * @param {string|Buffer} data - the serialized private key"," * @param {string|Network=} network - optional, if present, checks that the"," *     network provided matches the network serialized."," * @return {boolean}"," */","HDPrivateKey.isValidSerialized = function(data, network) {","  return !HDPrivateKey.getSerializedError(data, network);","};","","/**"," * Checks what's the error that causes the validation of a serialized private key"," * in base58 with checksum to fail."," *"," * @param {string|Buffer} data - the serialized private key"," * @param {string|Network=} network - optional, if present, checks that the"," *     network provided matches the network serialized."," * @return {errors.InvalidArgument|null}"," */","HDPrivateKey.getSerializedError = function(data, network) {","  /* jshint maxcomplexity: 10 */","  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {","    return new hdErrors.UnrecognizedArgument('Expected string or buffer');","  }","  if (!Base58.validCharacters(data)) {","    return new errors.InvalidB58Char('(unknown)', data);","  }","  try {","    data = Base58Check.decode(data);","  } catch (e) {","    return new errors.InvalidB58Checksum(data);","  }","  if (data.length !== HDPrivateKey.DataLength) {","    return new hdErrors.InvalidLength(data);","  }","  if (!_.isUndefined(network)) {","    var error = HDPrivateKey._validateNetwork(data, network);","    if (error) {","      return error;","    }","  }","  return null;","};","","HDPrivateKey._validateNetwork = function(data, networkArg) {","  var network = Network.get(networkArg);","  if (!network) {","    return new errors.InvalidNetworkArgument(networkArg);","  }","  var version = data.slice(0, 4);","  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {","    return new errors.InvalidNetwork(version);","  }","  return null;","};","","HDPrivateKey.fromString = function(arg) {","  $.checkArgument(_.isString(arg), 'No valid string was provided');","  return new HDPrivateKey(arg);","};","","HDPrivateKey.fromObject = function(arg) {","  $.checkArgument(_.isObject(arg), 'No valid argument was provided');","  return new HDPrivateKey(arg);","};","","HDPrivateKey.prototype._buildFromJSON = function(arg) {","  return this._buildFromObject(JSON.parse(arg));","};","","HDPrivateKey.prototype._buildFromObject = function(arg) {","  /* jshint maxcomplexity: 12 */","  // TODO: Type validation","  var buffers = {","    version: arg.network ? BufferUtil.integerAsBuffer(Network.get(arg.network).xprivkey) : arg.version,","    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,","    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,","    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,","    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,","    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? BufferUtil.hexToBuffer(arg.privateKey) : arg.privateKey,","    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum)) : undefined","  };","  return this._buildFromBuffers(buffers);","};","","HDPrivateKey.prototype._buildFromSerialized = function(arg) {","  var decoded = Base58Check.decode(arg);","  var buffers = {","    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),","    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),","    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,","      HDPrivateKey.ParentFingerPrintEnd),","    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),","    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),","    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),","    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),","    xprivkey: arg","  };","  return this._buildFromBuffers(buffers);","};","","HDPrivateKey.prototype._generateRandomly = function(network) {","  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);","};","","/**"," * Generate a private key from a seed, as described in BIP32"," *"," * @param {string|Buffer} hexa"," * @param {*} network"," * @return HDPrivateKey"," */","HDPrivateKey.fromSeed = function(hexa, network) {","  /* jshint maxcomplexity: 8 */","  if (JSUtil.isHexaString(hexa)) {","    hexa = BufferUtil.hexToBuffer(hexa);","  }","  if (!Buffer.isBuffer(hexa)) {","    throw new hdErrors.InvalidEntropyArgument(hexa);","  }","  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {","    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);","  }","  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {","    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);","  }","  var hash = Hash.sha512hmac(hexa, new buffer.Buffer('Bitcoin seed'));","","  return new HDPrivateKey({","    network: Network.get(network) || Network.defaultNetwork,","    depth: 0,","    parentFingerPrint: 0,","    childIndex: 0,","    privateKey: hash.slice(0, 32),","    chainCode: hash.slice(32, 64)","  });","};","","","","HDPrivateKey.prototype._calcHDPublicKey = function() {","  if (!this._hdPublicKey) {","    var HDPublicKey = require('./hdpublickey');","    this._hdPublicKey = new HDPublicKey(this);","  }","};","","/**"," * Receives a object with buffers in all the properties and populates the"," * internal structure"," *"," * @param {Object} arg"," * @param {buffer.Buffer} arg.version"," * @param {buffer.Buffer} arg.depth"," * @param {buffer.Buffer} arg.parentFingerPrint"," * @param {buffer.Buffer} arg.childIndex"," * @param {buffer.Buffer} arg.chainCode"," * @param {buffer.Buffer} arg.privateKey"," * @param {buffer.Buffer} arg.checksum"," * @param {string=} arg.xprivkey - if set, don't recalculate the base58"," *      representation"," * @return {HDPrivateKey} this"," */","HDPrivateKey.prototype._buildFromBuffers = function(arg) {","  /* jshint maxcomplexity: 8 */","  /* jshint maxstatements: 20 */","","  HDPrivateKey._validateBufferArguments(arg);","","  JSUtil.defineImmutable(this, {","    _buffers: arg","  });","","  var sequence = [","    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,","    BufferUtil.emptyBuffer(1), arg.privateKey","  ];","  var concat = buffer.Buffer.concat(sequence);","  if (!arg.checksum || !arg.checksum.length) {","    arg.checksum = Base58Check.checksum(concat);","  } else {","    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {","      throw new errors.InvalidB58Checksum(concat);","    }","  }","","  var network = Network.get(BufferUtil.integerFromBuffer(arg.version));","  var xprivkey;","  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));","  arg.xprivkey = new Buffer(xprivkey);","","  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);","  var publicKey = privateKey.toPublicKey();","  var size = HDPrivateKey.ParentFingerPrintSize;","  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);","","  JSUtil.defineImmutable(this, {","    xprivkey: xprivkey,","    network: network,","    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),","    privateKey: privateKey,","    publicKey: publicKey,","    fingerPrint: fingerPrint","  });","","  this._hdPublicKey = null;","","  Object.defineProperty(this, 'hdPublicKey', {","    configurable: false,","    enumerable: true,","    get: function() {","      this._calcHDPublicKey();","      return this._hdPublicKey;","    }","  });","  Object.defineProperty(this, 'xpubkey', {","    configurable: false,","    enumerable: true,","    get: function() {","      this._calcHDPublicKey();","      return this._hdPublicKey.xpubkey;","    }","  });","  return this;","};","","HDPrivateKey._validateBufferArguments = function(arg) {","  var checkBuffer = function(name, size) {","    var buff = arg[name];","    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');","    assert(","      buff.length === size,","      name + ' has not the expected size: found ' + buff.length + ', expected ' + size","    );","  };","  checkBuffer('version', HDPrivateKey.VersionSize);","  checkBuffer('depth', HDPrivateKey.DepthSize);","  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);","  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);","  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);","  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);","  if (arg.checksum && arg.checksum.length) {","    checkBuffer('checksum', HDPrivateKey.CheckSumSize);","  }","};","","/**"," * Returns the string representation of this private key (a string starting"," * with \"xprv...\""," *"," * @return string"," */","HDPrivateKey.prototype.toString = function() {","  return this.xprivkey;","};","","/**"," * Returns the console representation of this extended private key."," * @return string"," */","HDPrivateKey.prototype.inspect = function() {","  return '<HDPrivateKey: ' + this.xprivkey + '>';","};","","/**"," * Returns a plain object with a representation of this private key."," *"," * Fields include:<ul>"," * <li> network: either 'livenet' or 'testnet'"," * <li> depth: a number ranging from 0 to 255"," * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the"," * <li>     associated public key"," * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash"," * <li>     of this parent's associated public key or zero."," * <li> childIndex: the index from which this child was derived (or zero)"," * <li> chainCode: an hexa string representing a number used in the derivation"," * <li> privateKey: the private key associated, in hexa representation"," * <li> xprivkey: the representation of this extended private key in checksum"," * <li>     base58 format"," * <li> checksum: the base58 checksum of xprivkey"," * </ul>"," *  @return {Object}"," */","HDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {","  return {","    network: Network.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,","    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),","    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),","    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),","    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),","    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),","    privateKey: this.privateKey.toBuffer().toString('hex'),","    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),","    xprivkey: this.xprivkey","  };","};","","/**"," * Build a HDPrivateKey from a buffer"," *"," * @param {Buffer} arg"," * @return {HDPrivateKey}"," */","HDPrivateKey.fromBuffer = function(arg) {","  return new HDPrivateKey(arg.toString());","};","","/**"," * Returns a buffer representation of the HDPrivateKey"," *"," * @return {string}"," */","HDPrivateKey.prototype.toBuffer = function() {","  return BufferUtil.copy(this._buffers.xprivkey);","};","","HDPrivateKey.DefaultDepth = 0;","HDPrivateKey.DefaultFingerprint = 0;","HDPrivateKey.DefaultChildIndex = 0;","HDPrivateKey.Hardened = 0x80000000;","HDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;","","HDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];","","HDPrivateKey.VersionSize = 4;","HDPrivateKey.DepthSize = 1;","HDPrivateKey.ParentFingerPrintSize = 4;","HDPrivateKey.ChildIndexSize = 4;","HDPrivateKey.ChainCodeSize = 32;","HDPrivateKey.PrivateKeySize = 32;","HDPrivateKey.CheckSumSize = 4;","","HDPrivateKey.DataLength = 78;","HDPrivateKey.SerializedByteSize = 82;","","HDPrivateKey.VersionStart = 0;","HDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;","HDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;","HDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;","HDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;","HDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;","HDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;","HDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;","HDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;","HDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;","HDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;","HDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;","HDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;","HDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;","","assert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);","","module.exports = HDPrivateKey;",""],"l":{"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"20":1,"21":1,"22":1,"24":1,"25":1,"26":1,"37":1,"39":0,"40":0,"42":0,"43":0,"45":0,"46":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"61":0,"62":0,"64":0,"75":1,"76":0,"77":0,"78":0,"81":0,"82":0,"83":0,"85":0,"88":0,"99":1,"100":0,"103":0,"104":0,"107":0,"108":0,"111":0,"112":0,"113":0,"114":0,"116":0,"117":0,"119":0,"120":0,"121":0,"124":0,"127":0,"153":1,"154":0,"155":0,"156":0,"157":0,"159":0,"163":1,"166":0,"167":0,"170":0,"171":0,"172":0,"175":0,"176":0,"177":0,"180":0,"181":0,"182":0,"183":0,"185":0,"187":0,"188":0,"191":0,"193":0,"197":0,"205":0,"206":0,"209":1,"210":0,"211":0,"214":0,"215":0,"216":0,"219":0,"231":1,"232":0,"244":1,"246":0,"247":0,"249":0,"250":0,"252":0,"253":0,"255":0,"257":0,"258":0,"260":0,"261":0,"262":0,"263":0,"266":0,"269":1,"270":0,"271":0,"272":0,"274":0,"275":0,"276":0,"278":0,"281":1,"282":0,"283":0,"286":1,"287":0,"288":0,"291":1,"292":0,"295":1,"298":0,"307":0,"310":1,"311":0,"312":0,"323":0,"326":1,"327":0,"337":1,"339":0,"340":0,"342":0,"343":0,"345":0,"346":0,"348":0,"349":0,"351":0,"353":0,"365":1,"366":0,"367":0,"368":0,"388":1,"392":0,"394":0,"398":0,"402":0,"403":0,"404":0,"406":0,"407":0,"411":0,"412":0,"413":0,"414":0,"416":0,"417":0,"418":0,"419":0,"421":0,"430":0,"432":0,"436":0,"437":0,"440":0,"444":0,"445":0,"448":0,"451":1,"452":0,"453":0,"454":0,"455":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"477":1,"478":0,"485":1,"486":0,"508":1,"509":0,"528":1,"529":0,"537":1,"538":0,"541":1,"542":1,"543":1,"544":1,"545":1,"547":1,"549":1,"550":1,"551":1,"552":1,"553":1,"554":1,"555":1,"557":1,"558":1,"560":1,"561":1,"562":1,"563":1,"564":1,"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"573":1,"575":1,"577":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/hdkeycache.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/hdkeycache.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":7},"end":{"line":11,"column":40}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":7},"end":{"line":19,"column":49}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":13},"end":{"line":25,"column":27}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":45,"column":2}},"2":{"start":{"line":12,"column":4},"end":{"line":12,"column":26}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":51}},"4":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":26}},"6":{"start":{"line":16,"column":6},"end":{"line":16,"column":30}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":26}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":51}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":31}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":24}},"11":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"12":{"start":{"line":27,"column":6},"end":{"line":27,"column":50}},"13":{"start":{"line":29,"column":4},"end":{"line":29,"column":38}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":39}},"15":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"16":{"start":{"line":32,"column":4},"end":{"line":32,"column":24}},"17":{"start":{"line":35,"column":4},"end":{"line":43,"column":5}},"18":{"start":{"line":36,"column":6},"end":{"line":40,"column":7}},"19":{"start":{"line":37,"column":8},"end":{"line":37,"column":57}},"20":{"start":{"line":38,"column":8},"end":{"line":38,"column":42}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":38}},"22":{"start":{"line":41,"column":6},"end":{"line":41,"column":46}},"23":{"start":{"line":42,"column":6},"end":{"line":42,"column":25}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]}},"code":["'use strict';","","module.exports = {","  _cache: {},","  _count: 0,","  _eraseIndex: 0,","  _usedList: {},","  _usedIndex: {},","  _CACHE_SIZE: 5000,","","  get: function(xkey, number, hardened) {","    hardened = !!hardened;","    var key = xkey + '/' + number + '/' + hardened;","    if (this._cache[key]) {","      this._cacheHit(key);","      return this._cache[key];","    }","  },","  set: function(xkey, number, hardened, derived) {","    hardened = !!hardened;","    var key = xkey + '/' + number + '/' + hardened;","    this._cache[key] = derived;","    this._cacheHit(key);","  },","  _cacheHit: function(key) {","    if (this._usedIndex[key]) {","      delete this._usedList[this._usedIndex[key]];","    }","    this._usedList[this._count] = key;","    this._usedIndex[key] = this._count;","    this._count++;","    this._cacheRemove();","  },","  _cacheRemove: function() {","    while (this._eraseIndex < this._count - this._CACHE_SIZE) {","      if (this._usedList[this._eraseIndex]) {","        var removeKey = this._usedList[this._eraseIndex];","        delete this._usedIndex[removeKey];","        delete this._cache[removeKey];","      }","      delete this._usedList[this._eraseIndex];","      this._eraseIndex++;","    }","  }","};",""],"l":{"3":1,"12":0,"13":0,"14":0,"15":0,"16":0,"20":0,"21":0,"22":0,"23":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/hdpublickey.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/hdpublickey.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":0,"156":0,"157":1,"158":0,"159":0,"160":1,"161":0,"162":1,"163":0,"164":1,"165":0,"166":1,"167":0,"168":1,"169":0,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"HDPublicKey","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":26}}},"2":{"name":"(anonymous_2)","line":76,"loc":{"start":{"line":76,"column":26},"end":{"line":76,"column":40}}},"3":{"name":"(anonymous_3)","line":111,"loc":{"start":{"line":111,"column":31},"end":{"line":111,"column":55}}},"4":{"name":"(anonymous_4)","line":121,"loc":{"start":{"line":121,"column":42},"end":{"line":121,"column":68}}},"5":{"name":"(anonymous_5)","line":153,"loc":{"start":{"line":153,"column":42},"end":{"line":153,"column":57}}},"6":{"name":"(anonymous_6)","line":162,"loc":{"start":{"line":162,"column":31},"end":{"line":162,"column":53}}},"7":{"name":"(anonymous_7)","line":178,"loc":{"start":{"line":178,"column":32},"end":{"line":178,"column":56}}},"8":{"name":"(anonymous_8)","line":191,"loc":{"start":{"line":191,"column":33},"end":{"line":191,"column":57}}},"9":{"name":"(anonymous_9)","line":221,"loc":{"start":{"line":221,"column":31},"end":{"line":221,"column":58}}},"10":{"name":"(anonymous_10)","line":233,"loc":{"start":{"line":233,"column":42},"end":{"line":233,"column":57}}},"11":{"name":"(anonymous_11)","line":244,"loc":{"start":{"line":244,"column":41},"end":{"line":244,"column":55}}},"12":{"name":"(anonymous_12)","line":260,"loc":{"start":{"line":260,"column":45},"end":{"line":260,"column":59}}},"13":{"name":"(anonymous_13)","line":292,"loc":{"start":{"line":292,"column":42},"end":{"line":292,"column":56}}},"14":{"name":"(anonymous_14)","line":336,"loc":{"start":{"line":336,"column":39},"end":{"line":336,"column":53}}},"15":{"name":"(anonymous_15)","line":337,"loc":{"start":{"line":337,"column":20},"end":{"line":337,"column":41}}},"16":{"name":"(anonymous_16)","line":356,"loc":{"start":{"line":356,"column":25},"end":{"line":356,"column":39}}},"17":{"name":"(anonymous_17)","line":361,"loc":{"start":{"line":361,"column":25},"end":{"line":361,"column":39}}},"18":{"name":"(anonymous_18)","line":370,"loc":{"start":{"line":370,"column":33},"end":{"line":370,"column":44}}},"19":{"name":"(anonymous_19)","line":378,"loc":{"start":{"line":378,"column":32},"end":{"line":378,"column":43}}},"20":{"name":"toObject","line":399,"loc":{"start":{"line":399,"column":64},"end":{"line":399,"column":84}}},"21":{"name":"(anonymous_21)","line":419,"loc":{"start":{"line":419,"column":25},"end":{"line":419,"column":39}}},"22":{"name":"(anonymous_22)","line":428,"loc":{"start":{"line":428,"column":33},"end":{"line":428,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}},"18":{"start":{"line":32,"column":0},"end":{"line":68,"column":1}},"19":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"20":{"start":{"line":36,"column":4},"end":{"line":36,"column":15}},"21":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"22":{"start":{"line":39,"column":4},"end":{"line":39,"column":32}},"23":{"start":{"line":41,"column":2},"end":{"line":67,"column":3}},"24":{"start":{"line":42,"column":4},"end":{"line":64,"column":5}},"25":{"start":{"line":43,"column":6},"end":{"line":43,"column":54}},"26":{"start":{"line":44,"column":6},"end":{"line":53,"column":7}},"27":{"start":{"line":45,"column":8},"end":{"line":45,"column":46}},"28":{"start":{"line":46,"column":13},"end":{"line":53,"column":7}},"29":{"start":{"line":47,"column":8},"end":{"line":47,"column":57}},"30":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"31":{"start":{"line":50,"column":10},"end":{"line":50,"column":51}},"32":{"start":{"line":52,"column":8},"end":{"line":52,"column":20}},"33":{"start":{"line":55,"column":6},"end":{"line":63,"column":7}},"34":{"start":{"line":56,"column":8},"end":{"line":60,"column":9}},"35":{"start":{"line":57,"column":10},"end":{"line":57,"column":45}},"36":{"start":{"line":59,"column":10},"end":{"line":59,"column":44}},"37":{"start":{"line":62,"column":8},"end":{"line":62,"column":53}},"38":{"start":{"line":66,"column":4},"end":{"line":66,"column":44}},"39":{"start":{"line":76,"column":0},"end":{"line":87,"column":2}},"40":{"start":{"line":77,"column":2},"end":{"line":80,"column":3}},"41":{"start":{"line":78,"column":4},"end":{"line":78,"column":58}},"42":{"start":{"line":79,"column":4},"end":{"line":79,"column":71}},"43":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"44":{"start":{"line":83,"column":4},"end":{"line":83,"column":50}},"45":{"start":{"line":86,"column":2},"end":{"line":86,"column":15}},"46":{"start":{"line":111,"column":0},"end":{"line":119,"column":2}},"47":{"start":{"line":112,"column":2},"end":{"line":118,"column":3}},"48":{"start":{"line":113,"column":4},"end":{"line":113,"column":49}},"49":{"start":{"line":114,"column":9},"end":{"line":118,"column":3}},"50":{"start":{"line":115,"column":4},"end":{"line":115,"column":39}},"51":{"start":{"line":117,"column":4},"end":{"line":117,"column":54}},"52":{"start":{"line":121,"column":0},"end":{"line":151,"column":2}},"53":{"start":{"line":122,"column":2},"end":{"line":124,"column":3}},"54":{"start":{"line":123,"column":4},"end":{"line":123,"column":56}},"55":{"start":{"line":125,"column":2},"end":{"line":127,"column":3}},"56":{"start":{"line":126,"column":4},"end":{"line":126,"column":42}},"57":{"start":{"line":128,"column":2},"end":{"line":128,"column":58}},"58":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"59":{"start":{"line":130,"column":4},"end":{"line":130,"column":18}},"60":{"start":{"line":133,"column":2},"end":{"line":133,"column":54}},"61":{"start":{"line":134,"column":2},"end":{"line":134,"column":73}},"62":{"start":{"line":135,"column":2},"end":{"line":135,"column":60}},"63":{"start":{"line":136,"column":2},"end":{"line":136,"column":62}},"64":{"start":{"line":137,"column":2},"end":{"line":137,"column":37}},"65":{"start":{"line":139,"column":2},"end":{"line":139,"column":92}},"66":{"start":{"line":141,"column":2},"end":{"line":148,"column":5}},"67":{"start":{"line":149,"column":2},"end":{"line":149,"column":54}},"68":{"start":{"line":150,"column":2},"end":{"line":150,"column":17}},"69":{"start":{"line":153,"column":0},"end":{"line":167,"column":2}},"70":{"start":{"line":155,"column":2},"end":{"line":159,"column":3}},"71":{"start":{"line":156,"column":4},"end":{"line":156,"column":56}},"72":{"start":{"line":157,"column":9},"end":{"line":159,"column":3}},"73":{"start":{"line":158,"column":4},"end":{"line":158,"column":41}},"74":{"start":{"line":161,"column":2},"end":{"line":161,"column":57}},"75":{"start":{"line":162,"column":2},"end":{"line":164,"column":11}},"76":{"start":{"line":163,"column":4},"end":{"line":163,"column":41}},"77":{"start":{"line":166,"column":2},"end":{"line":166,"column":17}},"78":{"start":{"line":178,"column":0},"end":{"line":180,"column":2}},"79":{"start":{"line":179,"column":2},"end":{"line":179,"column":65}},"80":{"start":{"line":191,"column":0},"end":{"line":219,"column":2}},"81":{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},"82":{"start":{"line":195,"column":4},"end":{"line":195,"column":74}},"83":{"start":{"line":197,"column":2},"end":{"line":199,"column":3}},"84":{"start":{"line":198,"column":4},"end":{"line":198,"column":56}},"85":{"start":{"line":200,"column":2},"end":{"line":204,"column":3}},"86":{"start":{"line":201,"column":4},"end":{"line":201,"column":36}},"87":{"start":{"line":203,"column":4},"end":{"line":203,"column":47}},"88":{"start":{"line":205,"column":2},"end":{"line":207,"column":3}},"89":{"start":{"line":206,"column":4},"end":{"line":206,"column":44}},"90":{"start":{"line":208,"column":2},"end":{"line":213,"column":3}},"91":{"start":{"line":209,"column":4},"end":{"line":209,"column":60}},"92":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"93":{"start":{"line":211,"column":6},"end":{"line":211,"column":19}},"94":{"start":{"line":214,"column":2},"end":{"line":214,"column":63}},"95":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"96":{"start":{"line":216,"column":4},"end":{"line":216,"column":52}},"97":{"start":{"line":218,"column":2},"end":{"line":218,"column":14}},"98":{"start":{"line":221,"column":0},"end":{"line":231,"column":2}},"99":{"start":{"line":222,"column":2},"end":{"line":222,"column":40}},"100":{"start":{"line":223,"column":2},"end":{"line":225,"column":3}},"101":{"start":{"line":224,"column":4},"end":{"line":224,"column":57}},"102":{"start":{"line":226,"column":2},"end":{"line":226,"column":77}},"103":{"start":{"line":227,"column":2},"end":{"line":229,"column":3}},"104":{"start":{"line":228,"column":4},"end":{"line":228,"column":46}},"105":{"start":{"line":230,"column":2},"end":{"line":230,"column":14}},"106":{"start":{"line":233,"column":0},"end":{"line":242,"column":2}},"107":{"start":{"line":234,"column":2},"end":{"line":234,"column":35}},"108":{"start":{"line":235,"column":2},"end":{"line":235,"column":63}},"109":{"start":{"line":236,"column":2},"end":{"line":236,"column":50}},"110":{"start":{"line":237,"column":2},"end":{"line":237,"column":109}},"111":{"start":{"line":238,"column":2},"end":{"line":238,"column":30}},"112":{"start":{"line":239,"column":2},"end":{"line":239,"column":28}},"113":{"start":{"line":240,"column":2},"end":{"line":240,"column":28}},"114":{"start":{"line":241,"column":2},"end":{"line":241,"column":38}},"115":{"start":{"line":244,"column":0},"end":{"line":258,"column":2}},"116":{"start":{"line":247,"column":2},"end":{"line":256,"column":4}},"117":{"start":{"line":257,"column":2},"end":{"line":257,"column":41}},"118":{"start":{"line":260,"column":0},"end":{"line":274,"column":2}},"119":{"start":{"line":261,"column":2},"end":{"line":261,"column":40}},"120":{"start":{"line":262,"column":2},"end":{"line":272,"column":4}},"121":{"start":{"line":273,"column":2},"end":{"line":273,"column":41}},"122":{"start":{"line":292,"column":0},"end":{"line":334,"column":2}},"123":{"start":{"line":296,"column":2},"end":{"line":296,"column":44}},"124":{"start":{"line":298,"column":2},"end":{"line":300,"column":5}},"125":{"start":{"line":302,"column":2},"end":{"line":305,"column":4}},"126":{"start":{"line":306,"column":2},"end":{"line":306,"column":43}},"127":{"start":{"line":307,"column":2},"end":{"line":307,"column":46}},"128":{"start":{"line":308,"column":2},"end":{"line":314,"column":3}},"129":{"start":{"line":309,"column":4},"end":{"line":309,"column":28}},"130":{"start":{"line":311,"column":4},"end":{"line":313,"column":5}},"131":{"start":{"line":312,"column":6},"end":{"line":312,"column":60}},"132":{"start":{"line":315,"column":2},"end":{"line":315,"column":71}},"133":{"start":{"line":317,"column":2},"end":{"line":317,"column":14}},"134":{"start":{"line":318,"column":2},"end":{"line":318,"column":60}},"135":{"start":{"line":319,"column":2},"end":{"line":319,"column":36}},"136":{"start":{"line":321,"column":2},"end":{"line":321,"column":67}},"137":{"start":{"line":322,"column":2},"end":{"line":322,"column":47}},"138":{"start":{"line":323,"column":2},"end":{"line":323,"column":78}},"139":{"start":{"line":325,"column":2},"end":{"line":331,"column":5}},"140":{"start":{"line":333,"column":2},"end":{"line":333,"column":14}},"141":{"start":{"line":336,"column":0},"end":{"line":354,"column":2}},"142":{"start":{"line":337,"column":2},"end":{"line":344,"column":4}},"143":{"start":{"line":338,"column":4},"end":{"line":338,"column":25}},"144":{"start":{"line":339,"column":4},"end":{"line":339,"column":96}},"145":{"start":{"line":340,"column":4},"end":{"line":343,"column":6}},"146":{"start":{"line":345,"column":2},"end":{"line":345,"column":50}},"147":{"start":{"line":346,"column":2},"end":{"line":346,"column":46}},"148":{"start":{"line":347,"column":2},"end":{"line":347,"column":70}},"149":{"start":{"line":348,"column":2},"end":{"line":348,"column":56}},"150":{"start":{"line":349,"column":2},"end":{"line":349,"column":54}},"151":{"start":{"line":350,"column":2},"end":{"line":350,"column":54}},"152":{"start":{"line":351,"column":2},"end":{"line":353,"column":3}},"153":{"start":{"line":352,"column":4},"end":{"line":352,"column":54}},"154":{"start":{"line":356,"column":0},"end":{"line":359,"column":2}},"155":{"start":{"line":357,"column":2},"end":{"line":357,"column":67}},"156":{"start":{"line":358,"column":2},"end":{"line":358,"column":30}},"157":{"start":{"line":361,"column":0},"end":{"line":364,"column":2}},"158":{"start":{"line":362,"column":2},"end":{"line":362,"column":69}},"159":{"start":{"line":363,"column":2},"end":{"line":363,"column":30}},"160":{"start":{"line":370,"column":0},"end":{"line":372,"column":2}},"161":{"start":{"line":371,"column":2},"end":{"line":371,"column":22}},"162":{"start":{"line":378,"column":0},"end":{"line":380,"column":2}},"163":{"start":{"line":379,"column":2},"end":{"line":379,"column":47}},"164":{"start":{"line":399,"column":0},"end":{"line":411,"column":2}},"165":{"start":{"line":400,"column":2},"end":{"line":410,"column":4}},"166":{"start":{"line":419,"column":0},"end":{"line":421,"column":2}},"167":{"start":{"line":420,"column":2},"end":{"line":420,"column":30}},"168":{"start":{"line":428,"column":0},"end":{"line":430,"column":2}},"169":{"start":{"line":429,"column":2},"end":{"line":429,"column":48}},"170":{"start":{"line":432,"column":0},"end":{"line":432,"column":34}},"171":{"start":{"line":433,"column":0},"end":{"line":433,"column":42}},"172":{"start":{"line":435,"column":0},"end":{"line":435,"column":28}},"173":{"start":{"line":436,"column":0},"end":{"line":436,"column":26}},"174":{"start":{"line":437,"column":0},"end":{"line":437,"column":38}},"175":{"start":{"line":438,"column":0},"end":{"line":438,"column":31}},"176":{"start":{"line":439,"column":0},"end":{"line":439,"column":31}},"177":{"start":{"line":440,"column":0},"end":{"line":440,"column":31}},"178":{"start":{"line":441,"column":0},"end":{"line":441,"column":29}},"179":{"start":{"line":443,"column":0},"end":{"line":443,"column":26}},"180":{"start":{"line":444,"column":0},"end":{"line":444,"column":36}},"181":{"start":{"line":446,"column":0},"end":{"line":446,"column":39}},"182":{"start":{"line":447,"column":0},"end":{"line":447,"column":88}},"183":{"start":{"line":448,"column":0},"end":{"line":448,"column":60}},"184":{"start":{"line":449,"column":0},"end":{"line":449,"column":84}},"185":{"start":{"line":450,"column":0},"end":{"line":450,"column":58}},"186":{"start":{"line":451,"column":0},"end":{"line":451,"column":108}},"187":{"start":{"line":452,"column":0},"end":{"line":452,"column":70}},"188":{"start":{"line":453,"column":0},"end":{"line":453,"column":94}},"189":{"start":{"line":454,"column":0},"end":{"line":454,"column":63}},"190":{"start":{"line":455,"column":0},"end":{"line":455,"column":92}},"191":{"start":{"line":456,"column":0},"end":{"line":456,"column":62}},"192":{"start":{"line":457,"column":0},"end":{"line":457,"column":92}},"193":{"start":{"line":458,"column":0},"end":{"line":458,"column":62}},"194":{"start":{"line":459,"column":0},"end":{"line":459,"column":90}},"195":{"start":{"line":461,"column":0},"end":{"line":461,"column":58}},"196":{"start":{"line":462,"column":0},"end":{"line":462,"column":67}},"197":{"start":{"line":464,"column":0},"end":{"line":464,"column":29}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"5":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":23}},{"start":{"line":42,"column":27},"end":{"line":42,"column":51}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":13},"end":{"line":46,"column":13}},{"start":{"line":46,"column":13},"end":{"line":46,"column":13}}]},"8":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":17},"end":{"line":46,"column":41}},{"start":{"line":46,"column":45},"end":{"line":46,"column":92}}]},"9":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"10":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"11":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]},"12":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"13":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":11},"end":{"line":79,"column":27}},{"start":{"line":79,"column":31},"end":{"line":79,"column":70}}]},"14":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"15":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":11},"end":{"line":83,"column":19}},{"start":{"line":83,"column":23},"end":{"line":83,"column":49}}]},"16":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"17":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":9},"end":{"line":114,"column":9}},{"start":{"line":114,"column":9},"end":{"line":114,"column":9}}]},"18":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":2},"end":{"line":122,"column":2}},{"start":{"line":122,"column":2},"end":{"line":122,"column":2}}]},"19":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":6},"end":{"line":122,"column":35}},{"start":{"line":122,"column":39},"end":{"line":122,"column":47}}]},"20":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]},"21":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"22":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"23":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":9},"end":{"line":157,"column":9}},{"start":{"line":157,"column":9},"end":{"line":157,"column":9}}]},"24":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"25":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":8},"end":{"line":194,"column":24}},{"start":{"line":194,"column":28},"end":{"line":194,"column":53}}]},"26":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":197,"column":2}},{"start":{"line":197,"column":2},"end":{"line":197,"column":2}}]},"27":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"28":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"29":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"30":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"31":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":42}},{"start":{"line":215,"column":46},"end":{"line":215,"column":82}}]},"32":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":2}},{"start":{"line":223,"column":2},"end":{"line":223,"column":2}}]},"33":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":2},"end":{"line":227,"column":2}},{"start":{"line":227,"column":2},"end":{"line":227,"column":2}}]},"34":{"line":248,"type":"cond-expr","locations":[{"start":{"line":248,"column":27},"end":{"line":248,"column":87}},{"start":{"line":248,"column":90},"end":{"line":248,"column":101}}]},"35":{"line":249,"type":"cond-expr","locations":[{"start":{"line":249,"column":35},"end":{"line":249,"column":82}},{"start":{"line":249,"column":85},"end":{"line":249,"column":94}}]},"36":{"line":250,"type":"cond-expr","locations":[{"start":{"line":250,"column":59},"end":{"line":250,"column":108}},{"start":{"line":250,"column":111},"end":{"line":250,"column":132}}]},"37":{"line":251,"type":"cond-expr","locations":[{"start":{"line":251,"column":45},"end":{"line":251,"column":87}},{"start":{"line":251,"column":90},"end":{"line":251,"column":104}}]},"38":{"line":252,"type":"cond-expr","locations":[{"start":{"line":252,"column":43},"end":{"line":252,"column":80}},{"start":{"line":252,"column":83},"end":{"line":252,"column":96}}]},"39":{"line":253,"type":"cond-expr","locations":[{"start":{"line":253,"column":43},"end":{"line":253,"column":80}},{"start":{"line":254,"column":6},"end":{"line":254,"column":83}}]},"40":{"line":254,"type":"cond-expr","locations":[{"start":{"line":254,"column":43},"end":{"line":254,"column":56}},{"start":{"line":254,"column":59},"end":{"line":254,"column":83}}]},"41":{"line":255,"type":"cond-expr","locations":[{"start":{"line":255,"column":41},"end":{"line":255,"column":81}},{"start":{"line":255,"column":84},"end":{"line":255,"column":96}}]},"42":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":308,"column":2}},{"start":{"line":308,"column":2},"end":{"line":308,"column":2}}]},"43":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":6},"end":{"line":308,"column":19}},{"start":{"line":308,"column":23},"end":{"line":308,"column":43}}]},"44":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]},"45":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":2},"end":{"line":351,"column":2}},{"start":{"line":351,"column":2},"end":{"line":351,"column":2}}]},"46":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":6},"end":{"line":351,"column":18}},{"start":{"line":351,"column":22},"end":{"line":351,"column":41}}]}},"code":["'use strict';","","var _ = require('lodash');","var $ = require('./util/preconditions');","","var BN = require('./crypto/bn');","var Base58 = require('./encoding/base58');","var Base58Check = require('./encoding/base58check');","var Hash = require('./crypto/hash');","var HDPrivateKey = require('./hdprivatekey');","var HDKeyCache = require('./hdkeycache');","var Network = require('./networks');","var Point = require('./crypto/point');","var PublicKey = require('./publickey');","","var bitcoreErrors = require('./errors');","var errors = bitcoreErrors;","var hdErrors = bitcoreErrors.HDPublicKey;","var assert = require('assert');","","var JSUtil = require('./util/js');","var BufferUtil = require('./util/buffer');","","/**"," * The representation of an hierarchically derived public key."," *"," * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"," *"," * @constructor"," * @param {Object|string|Buffer} arg"," */","function HDPublicKey(arg) {","  /* jshint maxcomplexity: 12 */","  /* jshint maxstatements: 20 */","  if (arg instanceof HDPublicKey) {","    return arg;","  }","  if (!(this instanceof HDPublicKey)) {","    return new HDPublicKey(arg);","  }","  if (arg) {","    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {","      var error = HDPublicKey.getSerializedError(arg);","      if (!error) {","        return this._buildFromSerialized(arg);","      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {","        return this._buildFromSerialized(arg.toString());","      } else {","        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {","          return new HDPrivateKey(arg).hdPublicKey;","        }","        throw error;","      }","    } else {","      if (_.isObject(arg)) {","        if (arg instanceof HDPrivateKey) {","          return this._buildFromPrivate(arg);","        } else {","          return this._buildFromObject(arg);","        }","      } else {","        throw new hdErrors.UnrecognizedArgument(arg);","      }","    }","  } else {","    throw new hdErrors.MustSupplyArgument();","  }","}","","/**"," * Verifies that a given path is valid."," *"," * @param {string|number} arg"," * @return {boolean}"," */","HDPublicKey.isValidPath = function(arg) {","  if (_.isString(arg)) {","    var indexes = HDPrivateKey._getDerivationIndexes(arg);","    return indexes !== null && _.all(indexes, HDPublicKey.isValidPath);","  }","","  if (_.isNumber(arg)) {","    return arg >= 0 && arg < HDPublicKey.Hardened;","  }","","  return false;","};","","/**"," * Get a derivated child based on a string or number."," *"," * If the first argument is a string, it's parsed as the full path of"," * derivation. Valid values for this argument include \"m\" (which returns the"," * same public key), \"m/0/1/40/2/1000\"."," *"," * Note that hardened keys can't be derived from a public extended key."," *"," * If the first argument is a number, the child with that index will be"," * derived. See the example usage for clarification."," *"," * @example"," * ```javascript"," * var parent = new HDPublicKey('xpub...');"," * var child_0_1_2 = parent.derive(0).derive(1).derive(2);"," * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");"," * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);"," * ```"," *"," * @param {string|number} arg"," */","HDPublicKey.prototype.derive = function(arg, hardened) {","  if (_.isNumber(arg)) {","    return this._deriveWithNumber(arg, hardened);","  } else if (_.isString(arg)) {","    return this._deriveFromString(arg);","  } else {","    throw new hdErrors.InvalidDerivationArgument(arg);","  }","};","","HDPublicKey.prototype._deriveWithNumber = function(index, hardened) {","  if (index >= HDPublicKey.Hardened || hardened) {","    throw new hdErrors.InvalidIndexCantDeriveHardened();","  }","  if (index < 0) {","    throw new hdErrors.InvalidPath(index);","  }","  var cached = HDKeyCache.get(this.xpubkey, index, false);","  if (cached) {","    return cached;","  }","","  var indexBuffer = BufferUtil.integerAsBuffer(index);","  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);","  var hash = Hash.sha512hmac(data, this._buffers.chainCode);","  var leftPart = BN.fromBuffer(hash.slice(0, 32), {size: 32});","  var chainCode = hash.slice(32, 64);","","  var publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));","","  var derived = new HDPublicKey({","    network: this.network,","    depth: this.depth + 1,","    parentFingerPrint: this.fingerPrint,","    childIndex: index,","    chainCode: chainCode,","    publicKey: publicKey","  });","  HDKeyCache.set(this.xpubkey, index, false, derived);","  return derived;","};","","HDPublicKey.prototype._deriveFromString = function(path) {","  /* jshint maxcomplexity: 8 */","  if (_.contains(path, \"'\")) {","    throw new hdErrors.InvalidIndexCantDeriveHardened();","  } else if (!HDPublicKey.isValidPath(path)) {","    throw new hdErrors.InvalidPath(path);","  }","","  var indexes = HDPrivateKey._getDerivationIndexes(path);","  var derived = indexes.reduce(function(prev, index) {","    return prev._deriveWithNumber(index);","  }, this);","","  return derived;","};","","/**"," * Verifies that a given serialized public key in base58 with checksum format"," * is valid."," *"," * @param {string|Buffer} data - the serialized public key"," * @param {string|Network=} network - optional, if present, checks that the"," *     network provided matches the network serialized."," * @return {boolean}"," */","HDPublicKey.isValidSerialized = function(data, network) {","  return _.isNull(HDPublicKey.getSerializedError(data, network));","};","","/**"," * Checks what's the error that causes the validation of a serialized public key"," * in base58 with checksum to fail."," *"," * @param {string|Buffer} data - the serialized public key"," * @param {string|Network=} network - optional, if present, checks that the"," *     network provided matches the network serialized."," * @return {errors|null}"," */","HDPublicKey.getSerializedError = function(data, network) {","  /* jshint maxcomplexity: 10 */","  /* jshint maxstatements: 20 */","  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {","    return new hdErrors.UnrecognizedArgument('expected buffer or string');","  }","  if (!Base58.validCharacters(data)) {","    return new errors.InvalidB58Char('(unknown)', data);","  }","  try {","    data = Base58Check.decode(data);","  } catch (e) {","    return new errors.InvalidB58Checksum(data);","  }","  if (data.length !== HDPublicKey.DataSize) {","    return new hdErrors.InvalidLength(data);","  }","  if (!_.isUndefined(network)) {","    var error = HDPublicKey._validateNetwork(data, network);","    if (error) {","      return error;","    }","  }","  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));","  if (version === Network.livenet.xprivkey || version === Network.testnet.xprivkey ) {","    return new hdErrors.ArgumentIsPrivateExtended();","  }","  return null;","};","","HDPublicKey._validateNetwork = function(data, networkArg) {","  var network = Network.get(networkArg);","  if (!network) {","    return new errors.InvalidNetworkArgument(networkArg);","  }","  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);","  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {","    return new errors.InvalidNetwork(version);","  }","  return null;","};","","HDPublicKey.prototype._buildFromPrivate = function (arg) {","  var args = _.clone(arg._buffers);","  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));","  args.publicKey = Point.pointToCompressed(point);","  args.version = BufferUtil.integerAsBuffer(Network.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);","  args.privateKey = undefined;","  args.checksum = undefined;","  args.xprivkey = undefined;","  return this._buildFromBuffers(args);","};","","HDPublicKey.prototype._buildFromObject = function(arg) {","  /* jshint maxcomplexity: 10 */","  // TODO: Type validation","  var buffers = {","    version: arg.network ? BufferUtil.integerAsBuffer(Network.get(arg.network).xpubkey) : arg.version,","    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,","    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,","    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,","    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,","    publicKey: _.isString(arg.publicKey) ? BufferUtil.hexToBuffer(arg.publicKey) :","      BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),","    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum","  };","  return this._buildFromBuffers(buffers);","};","","HDPublicKey.prototype._buildFromSerialized = function(arg) {","  var decoded = Base58Check.decode(arg);","  var buffers = {","    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),","    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),","    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,","                                     HDPublicKey.ParentFingerPrintEnd),","    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),","    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),","    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),","    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),","    xpubkey: arg","  };","  return this._buildFromBuffers(buffers);","};","","/**"," * Receives a object with buffers in all the properties and populates the"," * internal structure"," *"," * @param {Object} arg"," * @param {buffer.Buffer} arg.version"," * @param {buffer.Buffer} arg.depth"," * @param {buffer.Buffer} arg.parentFingerPrint"," * @param {buffer.Buffer} arg.childIndex"," * @param {buffer.Buffer} arg.chainCode"," * @param {buffer.Buffer} arg.publicKey"," * @param {buffer.Buffer} arg.checksum"," * @param {string=} arg.xpubkey - if set, don't recalculate the base58"," *      representation"," * @return {HDPublicKey} this"," */","HDPublicKey.prototype._buildFromBuffers = function(arg) {","  /* jshint maxcomplexity: 8 */","  /* jshint maxstatements: 20 */","","  HDPublicKey._validateBufferArguments(arg);","","  JSUtil.defineImmutable(this, {","    _buffers: arg","  });","","  var sequence = [","    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,","    arg.publicKey","  ];","  var concat = BufferUtil.concat(sequence);","  var checksum = Base58Check.checksum(concat);","  if (!arg.checksum || !arg.checksum.length) {","    arg.checksum = checksum;","  } else {","    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {","      throw new errors.InvalidB58Checksum(concat, checksum);","    }","  }","  var network = Network.get(BufferUtil.integerFromBuffer(arg.version));","","  var xpubkey;","  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));","  arg.xpubkey = new Buffer(xpubkey);","","  var publicKey = new PublicKey(arg.publicKey, {network: network});","  var size = HDPublicKey.ParentFingerPrintSize;","  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);","","  JSUtil.defineImmutable(this, {","    xpubkey: xpubkey,","    network: network,","    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),","    publicKey: publicKey,","    fingerPrint: fingerPrint","  });","","  return this;","};","","HDPublicKey._validateBufferArguments = function(arg) {","  var checkBuffer = function(name, size) {","    var buff = arg[name];","    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);","    assert(","      buff.length === size,","      name + ' has not the expected size: found ' + buff.length + ', expected ' + size","    );","  };","  checkBuffer('version', HDPublicKey.VersionSize);","  checkBuffer('depth', HDPublicKey.DepthSize);","  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);","  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);","  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);","  checkBuffer('publicKey', HDPublicKey.PublicKeySize);","  if (arg.checksum && arg.checksum.length) {","    checkBuffer('checksum', HDPublicKey.CheckSumSize);","  }","};","","HDPublicKey.fromString = function(arg) {","  $.checkArgument(_.isString(arg), 'No valid string was provided');","  return new HDPublicKey(arg);","};","","HDPublicKey.fromObject = function(arg) {","  $.checkArgument(_.isObject(arg), 'No valid argument was provided');","  return new HDPublicKey(arg);","};","","/**"," * Returns the base58 checked representation of the public key"," * @return {string} a string starting with \"xpub...\" in livenet"," */","HDPublicKey.prototype.toString = function() {","  return this.xpubkey;","};","","/**"," * Returns the console representation of this extended public key."," * @return string"," */","HDPublicKey.prototype.inspect = function() {","  return '<HDPublicKey: ' + this.xpubkey + '>';","};","","/**"," * Returns a plain JavaScript object with information to reconstruct a key."," *"," * Fields are: <ul>"," *  <li> network: 'livenet' or 'testnet'"," *  <li> depth: a number from 0 to 255, the depth to the master extended key"," *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key"," *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's"," *  <li>     parent's public key"," *  <li> childIndex: index with which this key was derived"," *  <li> chainCode: string in hexa encoding used for derivation"," *  <li> publicKey: string, hexa encoded, in compressed key format"," *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),"," *  <li> xpubkey: the string with the base58 representation of this extended key"," *  <li> checksum: the base58 checksum of xpubkey"," * </ul>"," */","HDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {","  return {","    network: Network.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,","    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),","    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),","    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),","    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),","    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),","    publicKey: this.publicKey.toString(),","    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),","    xpubkey: this.xpubkey","  };","};","","/**"," * Create a HDPublicKey from a buffer argument"," *"," * @param {Buffer} arg"," * @return {HDPublicKey}"," */","HDPublicKey.fromBuffer = function(arg) {","  return new HDPublicKey(arg);","};","","/**"," * Return a buffer representation of the xpubkey"," *"," * @return {Buffer}"," */","HDPublicKey.prototype.toBuffer = function() {","  return BufferUtil.copy(this._buffers.xpubkey);","};","","HDPublicKey.Hardened = 0x80000000;","HDPublicKey.RootElementAlias = ['m', 'M'];","","HDPublicKey.VersionSize = 4;","HDPublicKey.DepthSize = 1;","HDPublicKey.ParentFingerPrintSize = 4;","HDPublicKey.ChildIndexSize = 4;","HDPublicKey.ChainCodeSize = 32;","HDPublicKey.PublicKeySize = 33;","HDPublicKey.CheckSumSize = 4;","","HDPublicKey.DataSize = 78;","HDPublicKey.SerializedByteSize = 82;","","HDPublicKey.VersionStart           = 0;","HDPublicKey.VersionEnd             = HDPublicKey.VersionStart + HDPublicKey.VersionSize;","HDPublicKey.DepthStart             = HDPublicKey.VersionEnd;","HDPublicKey.DepthEnd               = HDPublicKey.DepthStart + HDPublicKey.DepthSize;","HDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;","HDPublicKey.ParentFingerPrintEnd   = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;","HDPublicKey.ChildIndexStart        = HDPublicKey.ParentFingerPrintEnd;","HDPublicKey.ChildIndexEnd          = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;","HDPublicKey.ChainCodeStart         = HDPublicKey.ChildIndexEnd;","HDPublicKey.ChainCodeEnd           = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;","HDPublicKey.PublicKeyStart         = HDPublicKey.ChainCodeEnd;","HDPublicKey.PublicKeyEnd           = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;","HDPublicKey.ChecksumStart          = HDPublicKey.PublicKeyEnd;","HDPublicKey.ChecksumEnd            = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;","","assert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);","assert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);","","module.exports = HDPublicKey;",""],"l":{"3":1,"4":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":1,"17":1,"18":1,"19":1,"21":1,"22":1,"32":1,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"50":0,"52":0,"55":0,"56":0,"57":0,"59":0,"62":0,"66":0,"76":1,"77":0,"78":0,"79":0,"82":0,"83":0,"86":0,"111":1,"112":0,"113":0,"114":0,"115":0,"117":0,"121":1,"122":0,"123":0,"125":0,"126":0,"128":0,"129":0,"130":0,"133":0,"134":0,"135":0,"136":0,"137":0,"139":0,"141":0,"149":0,"150":0,"153":1,"155":0,"156":0,"157":0,"158":0,"161":0,"162":0,"163":0,"166":0,"178":1,"179":0,"191":1,"194":0,"195":0,"197":0,"198":0,"200":0,"201":0,"203":0,"205":0,"206":0,"208":0,"209":0,"210":0,"211":0,"214":0,"215":0,"216":0,"218":0,"221":1,"222":0,"223":0,"224":0,"226":0,"227":0,"228":0,"230":0,"233":1,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"244":1,"247":0,"257":0,"260":1,"261":0,"262":0,"273":0,"292":1,"296":0,"298":0,"302":0,"306":0,"307":0,"308":0,"309":0,"311":0,"312":0,"315":0,"317":0,"318":0,"319":0,"321":0,"322":0,"323":0,"325":0,"333":0,"336":1,"337":0,"338":0,"339":0,"340":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"356":1,"357":0,"358":0,"361":1,"362":0,"363":0,"370":1,"371":0,"378":1,"379":0,"399":1,"400":0,"419":1,"420":0,"428":1,"429":0,"432":1,"433":1,"435":1,"436":1,"437":1,"438":1,"439":1,"440":1,"441":1,"443":1,"444":1,"446":1,"447":1,"448":1,"449":1,"450":1,"451":1,"452":1,"453":1,"454":1,"455":1,"456":1,"457":1,"458":1,"459":1,"461":1,"462":1,"464":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/uri.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore-lib/lib/uri.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":35,"loc":{"start":{"line":35,"column":10},"end":{"line":35,"column":38}}},"2":{"name":"fromString","line":63,"loc":{"start":{"line":63,"column":17},"end":{"line":63,"column":42}}},"3":{"name":"fromObject","line":76,"loc":{"start":{"line":76,"column":17},"end":{"line":76,"column":43}}},"4":{"name":"(anonymous_4)","line":94,"loc":{"start":{"line":94,"column":14},"end":{"line":94,"column":41}}},"5":{"name":"(anonymous_5)","line":110,"loc":{"start":{"line":110,"column":12},"end":{"line":110,"column":26}}},"6":{"name":"(anonymous_6)","line":134,"loc":{"start":{"line":134,"column":28},"end":{"line":134,"column":42}}},"7":{"name":"(anonymous_7)","line":166,"loc":{"start":{"line":166,"column":29},"end":{"line":166,"column":46}}},"8":{"name":"toObject","line":174,"loc":{"start":{"line":174,"column":48},"end":{"line":174,"column":68}}},"9":{"name":"(anonymous_9)","line":191,"loc":{"start":{"line":191,"column":25},"end":{"line":191,"column":36}}},"10":{"name":"(anonymous_10)","line":219,"loc":{"start":{"line":219,"column":24},"end":{"line":219,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"5":{"start":{"line":35,"column":0},"end":{"line":55,"column":2}},"6":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":38}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":19}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":39}},"10":{"start":{"line":42,"column":2},"end":{"line":42,"column":66}},"11":{"start":{"line":44,"column":2},"end":{"line":54,"column":3}},"12":{"start":{"line":45,"column":4},"end":{"line":45,"column":33}},"13":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"14":{"start":{"line":47,"column":6},"end":{"line":47,"column":55}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":29}},"16":{"start":{"line":50,"column":9},"end":{"line":54,"column":3}},"17":{"start":{"line":51,"column":4},"end":{"line":51,"column":27}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":53}},"19":{"start":{"line":63,"column":0},"end":{"line":68,"column":2}},"20":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"21":{"start":{"line":65,"column":4},"end":{"line":65,"column":45}},"22":{"start":{"line":67,"column":2},"end":{"line":67,"column":22}},"23":{"start":{"line":76,"column":0},"end":{"line":78,"column":2}},"24":{"start":{"line":77,"column":2},"end":{"line":77,"column":23}},"25":{"start":{"line":94,"column":0},"end":{"line":101,"column":2}},"26":{"start":{"line":95,"column":2},"end":{"line":99,"column":3}},"27":{"start":{"line":96,"column":4},"end":{"line":96,"column":30}},"28":{"start":{"line":98,"column":4},"end":{"line":98,"column":17}},"29":{"start":{"line":100,"column":2},"end":{"line":100,"column":14}},"30":{"start":{"line":110,"column":0},"end":{"line":122,"column":2}},"31":{"start":{"line":111,"column":2},"end":{"line":111,"column":34}},"32":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"33":{"start":{"line":114,"column":4},"end":{"line":114,"column":47}},"34":{"start":{"line":118,"column":2},"end":{"line":118,"column":46}},"35":{"start":{"line":119,"column":2},"end":{"line":119,"column":54}},"36":{"start":{"line":121,"column":2},"end":{"line":121,"column":20}},"37":{"start":{"line":124,"column":0},"end":{"line":124,"column":61}},"38":{"start":{"line":134,"column":0},"end":{"line":157,"column":2}},"39":{"start":{"line":137,"column":2},"end":{"line":139,"column":3}},"40":{"start":{"line":138,"column":4},"end":{"line":138,"column":51}},"41":{"start":{"line":141,"column":2},"end":{"line":141,"column":42}},"42":{"start":{"line":142,"column":2},"end":{"line":142,"column":38}},"43":{"start":{"line":143,"column":2},"end":{"line":143,"column":27}},"44":{"start":{"line":145,"column":2},"end":{"line":156,"column":3}},"45":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"46":{"start":{"line":147,"column":6},"end":{"line":147,"column":15}},"47":{"start":{"line":150,"column":4},"end":{"line":152,"column":5}},"48":{"start":{"line":151,"column":6},"end":{"line":151,"column":54}},"49":{"start":{"line":154,"column":4},"end":{"line":154,"column":73}},"50":{"start":{"line":155,"column":4},"end":{"line":155,"column":32}},"51":{"start":{"line":166,"column":0},"end":{"line":172,"column":2}},"52":{"start":{"line":167,"column":2},"end":{"line":167,"column":26}},"53":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"54":{"start":{"line":169,"column":4},"end":{"line":169,"column":42}},"55":{"start":{"line":171,"column":2},"end":{"line":171,"column":43}},"56":{"start":{"line":174,"column":0},"end":{"line":184,"column":2}},"57":{"start":{"line":175,"column":2},"end":{"line":175,"column":16}},"58":{"start":{"line":176,"column":2},"end":{"line":181,"column":3}},"59":{"start":{"line":177,"column":4},"end":{"line":177,"column":27}},"60":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"61":{"start":{"line":179,"column":6},"end":{"line":179,"column":35}},"62":{"start":{"line":182,"column":2},"end":{"line":182,"column":30}},"63":{"start":{"line":183,"column":2},"end":{"line":183,"column":14}},"64":{"start":{"line":191,"column":0},"end":{"line":212,"column":2}},"65":{"start":{"line":192,"column":2},"end":{"line":192,"column":17}},"66":{"start":{"line":193,"column":2},"end":{"line":195,"column":3}},"67":{"start":{"line":194,"column":4},"end":{"line":194,"column":58}},"68":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"69":{"start":{"line":197,"column":4},"end":{"line":197,"column":33}},"70":{"start":{"line":199,"column":2},"end":{"line":201,"column":3}},"71":{"start":{"line":200,"column":4},"end":{"line":200,"column":29}},"72":{"start":{"line":202,"column":2},"end":{"line":204,"column":3}},"73":{"start":{"line":203,"column":4},"end":{"line":203,"column":21}},"74":{"start":{"line":205,"column":2},"end":{"line":205,"column":31}},"75":{"start":{"line":207,"column":2},"end":{"line":211,"column":5}},"76":{"start":{"line":219,"column":0},"end":{"line":221,"column":2}},"77":{"start":{"line":220,"column":2},"end":{"line":220,"column":42}},"78":{"start":{"line":223,"column":0},"end":{"line":223,"column":21}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":21},"end":{"line":41,"column":32}},{"start":{"line":41,"column":36},"end":{"line":41,"column":38}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":9},"end":{"line":50,"column":9}},{"start":{"line":50,"column":9},"end":{"line":50,"column":9}}]},"6":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"7":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"8":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":23},"end":{"line":119,"column":28}},{"start":{"line":119,"column":32},"end":{"line":119,"column":40}},{"start":{"line":119,"column":44},"end":{"line":119,"column":53}}]},"9":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"10":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"11":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":25}},{"start":{"line":146,"column":29},"end":{"line":146,"column":45}}]},"12":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"13":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":25}},{"start":{"line":150,"column":29},"end":{"line":150,"column":65}}]},"14":{"line":154,"type":"cond-expr","locations":[{"start":{"line":154,"column":54},"end":{"line":154,"column":58}},{"start":{"line":154,"column":61},"end":{"line":154,"column":72}}]},"15":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"16":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]},"17":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":30}},{"start":{"line":178,"column":34},"end":{"line":178,"column":65}}]},"18":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"19":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"20":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"21":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":202,"column":2}},{"start":{"line":202,"column":2},"end":{"line":202,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","var URL = require('url');","","var Address = require('./address');","var Unit = require('./unit');","","/**"," * Bitcore URI"," *"," * Instantiate an URI from a bitcoin URI String or an Object. An URI instance"," * can be created with a bitcoin uri string or an object. All instances of"," * URI are valid, the static method isValid allows checking before instantiation."," *"," * All standard parameters can be found as members of the class, the address"," * is represented using an {Address} instance and the amount is represented in"," * satoshis. Any other non-standard parameters can be found under the extra member."," *"," * @example"," * ```javascript"," *"," * var uri = new URI('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');"," * console.log(uri.address, uri.amount);"," * ```"," *"," * @param {string|Object} data - A bitcoin URI string or an Object"," * @param {Array.<string>=} knownParams - Required non-standard params"," * @throws {TypeError} Invalid bitcoin address"," * @throws {TypeError} Invalid amount"," * @throws {Error} Unknown required argument"," * @returns {URI} A new valid and frozen instance of URI"," * @constructor"," */","var URI = function(data, knownParams) {","  if (!(this instanceof URI)) {","    return new URI(data, knownParams);","  }","","  this.extras = {};","  this.knownParams = knownParams || [];","  this.address = this.network = this.amount = this.message = null;","","  if (typeof(data) === 'string') {","    var params = URI.parse(data);","    if (params.amount) {","      params.amount = this._parseAmount(params.amount);","    }","    this._fromObject(params);","  } else if (typeof(data) === 'object') {","    this._fromObject(data);","  } else {","    throw new TypeError('Unrecognized data format.');","  }","};","","/**"," * Instantiate a URI from a String"," *"," * @param {string} str - JSON string or object of the URI"," * @returns {URI} A new instance of a URI"," */","URI.fromString = function fromString(str) {","  if (typeof(str) !== 'string') {","    throw new TypeError('Expected a string');","  }","  return new URI(str);","};","","/**"," * Instantiate a URI from an Object"," *"," * @param {Object} data - object of the URI"," * @returns {URI} A new instance of a URI"," */","URI.fromObject = function fromObject(json) {","  return new URI(json);","};","","/**"," * Check if an bitcoin URI string is valid"," *"," * @example"," * ```javascript"," *"," * var valid = URI.isValid('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');"," * // true"," * ```"," *"," * @param {string|Object} data - A bitcoin URI string or an Object"," * @param {Array.<string>=} knownParams - Required non-standard params"," * @returns {boolean} Result of uri validation"," */","URI.isValid = function(arg, knownParams) {","  try {","    new URI(arg, knownParams);","  } catch (err) {","    return false;","  }","  return true;","};","","/**"," * Convert a bitcoin URI string into a simple object."," *"," * @param {string} uri - A bitcoin URI string"," * @throws {TypeError} Invalid bitcoin URI"," * @returns {Object} An object with the parsed params"," */","URI.parse = function(uri) {","  var info = URL.parse(uri, true);","","  if (info.protocol !== 'bitcoin:') {","    throw new TypeError('Invalid bitcoin URI');","  }","","  // workaround to host insensitiveness","  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);","  info.query.address = group && group[1] || undefined;","","  return info.query;","};","","URI.Members = ['address', 'amount', 'message', 'label', 'r'];","","/**"," * Internal function to load the URI instance with an object."," *"," * @param {Object} obj - Object with the information"," * @throws {TypeError} Invalid bitcoin address"," * @throws {TypeError} Invalid amount"," * @throws {Error} Unknown required argument"," */","URI.prototype._fromObject = function(obj) {","  /* jshint maxcomplexity: 10 */","","  if (!Address.isValid(obj.address)) {","    throw new TypeError('Invalid bitcoin address');","  }","","  this.address = new Address(obj.address);","  this.network = this.address.network;","  this.amount = obj.amount;","","  for (var key in obj) {","    if (key === 'address' || key === 'amount') {","      continue;","    }","","    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {","      throw Error('Unknown required argument ' + key);","    }","","    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;","    destination[key] = obj[key];","  }","};","","/**"," * Internal function to transform a BTC string amount into satoshis"," *"," * @param {string} amount - Amount BTC string"," * @throws {TypeError} Invalid amount"," * @returns {Object} Amount represented in satoshis"," */","URI.prototype._parseAmount = function(amount) {","  amount = Number(amount);","  if (isNaN(amount)) {","    throw new TypeError('Invalid amount');","  }","  return Unit.fromBTC(amount).toSatoshis();","};","","URI.prototype.toObject = URI.prototype.toJSON = function toObject() {","  var json = {};","  for (var i = 0; i < URI.Members.length; i++) {","    var m = URI.Members[i];","    if (this.hasOwnProperty(m) && typeof(this[m]) !== 'undefined') {","      json[m] = this[m].toString();","    }","  }","  _.extend(json, this.extras);","  return json;","};","","/**"," * Will return a the string representation of the URI"," *"," * @returns {string} Bitcoin URI string"," */","URI.prototype.toString = function() {","  var query = {};","  if (this.amount) {","    query.amount = Unit.fromSatoshis(this.amount).toBTC();","  }","  if (this.message) {","    query.message = this.message;","  }","  if (this.label) {","    query.label = this.label;","  }","  if (this.r) {","    query.r = this.r;","  }","  _.extend(query, this.extras);","","  return URL.format({","    protocol: 'bitcoin:',","    host: this.address,","    query: query","  });","};","","/**"," * Will return a string formatted for the console"," *"," * @returns {string} Bitcoin URI"," */","URI.prototype.inspect = function() {","  return '<URI: ' + this.toString() + '>';","};","","module.exports = URI;",""],"l":{"3":1,"4":1,"6":1,"7":1,"35":1,"36":0,"37":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"47":0,"49":0,"50":0,"51":0,"53":0,"63":1,"64":0,"65":0,"67":0,"76":1,"77":0,"94":1,"95":0,"96":0,"98":0,"100":0,"110":1,"111":0,"113":0,"114":0,"118":0,"119":0,"121":0,"124":1,"134":1,"137":0,"138":0,"141":0,"142":0,"143":0,"145":0,"146":0,"147":0,"150":0,"151":0,"154":0,"155":0,"166":1,"167":0,"168":0,"169":0,"171":0,"174":1,"175":0,"176":0,"177":0,"178":0,"179":0,"182":0,"183":0,"191":1,"192":0,"193":0,"194":0,"196":0,"197":0,"199":0,"200":0,"202":0,"203":0,"205":0,"207":0,"219":1,"220":0,"223":1}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore/gulpfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore/gulpfile.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":15}}},"branchMap":{},"code":["","","var bitcoreTasks = require('bitcore-build');","","bitcoreTasks();",""],"l":{"3":2,"5":0}},"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore/karma.conf.js":{"path":"/home/travis/build/npmtest/node-npmtest-bitcore/node_modules/bitcore/karma.conf.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":21},"end":{"line":12,"column":48}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":36,"column":2}},"2":{"start":{"line":6,"column":2},"end":{"line":34,"column":5}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":48}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":26}},"5":{"start":{"line":16,"column":8},"end":{"line":20,"column":9}},"6":{"start":{"line":17,"column":10},"end":{"line":19,"column":11}},"7":{"start":{"line":18,"column":12},"end":{"line":18,"column":42}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":24}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":10},"end":{"line":17,"column":10}},{"start":{"line":17,"column":10},"end":{"line":17,"column":10}}]}},"code":["'use strict';","","// karma.conf.js","module.exports = function(config) {","","  config.set({","    browsers: ['Firefox'],","    frameworks: ['mocha', 'detectBrowsers'],","    detectBrowsers: {","      enabled: true,","      usePhantomJS: false,","      postDetection: function(availableBrowser) {","        // modify to enable additional browsers if available","        var runBrowsers = ['Firefox', 'Chrome'];","        var browsers = [];","        for(var i = 0; i < runBrowsers.length; i++) {","          if(~availableBrowser.indexOf(runBrowsers[i])) {","            browsers.push(runBrowsers[i]);","          }","        }","        return browsers;","      }","    },","    singleRun: true,","    files: [","      'tests.js'","    ],","    plugins: [","      'karma-mocha',","      'karma-chrome-launcher',","      'karma-firefox-launcher',","      'karma-detect-browsers'","    ]","  });","","};",""],"l":{"4":1,"6":0,"14":0,"15":0,"16":0,"17":0,"18":0,"21":0}}}